{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/slider.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","languages.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Partials/Room/RoomItem.js","Redux/actions/rooms.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Partials/Language/LanguageItem.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Redux/actions/users.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Redux/actions/call.js","Pages/User/Dialog.js","Pages/User/Payment.js","Router/config.js","Pages/NoMatch.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Partials/Chat/Slider.js","Modals/investmentsPartials/Images.js","Modals/investmentsPartials/Sounds.js","Modals/investmentsPartials/Files.js","Modals/Investments.js","Modals/Settings.js","Modals/Profile.js","Modals/Language.js","Modals/Mute.js","Modals/Unmute.js","Modals/Banroom.js","Modals/Unbanroom.js","Modals/SendWaning.js","Modals/Warning.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","avatar","alt","name","src","min","avatarStyle","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","warning","user","state","action","type","payload","roomLang","first","firstName","last","lastName","city","lang","isFetching","getted","activeRoom","isError","rooms","canLoad","length","map","room","_id","title","isPrivate","filter","typers","isLoading","remoteStream","muted","error","users","roomId","userId","dialog","messages","message","_newId","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","images","index","combineReducers","slider","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","timeStamps","time","label","socket","activeLang","unmuteTimer","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","getState","setTimeout","WebRtcController","otherId","id","read","clearTimeout","numDate","date","ban","msg","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogsLoad","lastDialogId","firstDialogId","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","files","sounds","append","file","push","localMessage","text","recentMessages","now","m","socketId","messageRes","errors","toast","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","ru","settings","change_profile","language","logout","back","save","next","last_name_not_empty","first_name_not_empty","title_not_empty","create_room","something_goes_wrong","chats","contacts","inbox","outbox","you_dont_have_friends","search","accept","decline","not_indicated","plus_friend","remove","english","russian","you","write_message","show_investments","you_sure","delete","delete_room","invite_friends","edit_room","investments","photos","missed_call","outcoming_call","incoming_call","canceled_call","select_language","users_not_found","user_not_found","reply","forward","new_room","invite","private_room","start","select_users","new_chat","invited_you_to_the_room","accept_your_friend_request","send_you_friend_request","january","february","march","april","may","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","in","yerstaday","today","just_now","here_wiil_placed_your_notifications","create_your_first_room","you_dont_have_chats","write_your_first_message","attachment_messages","en","getHM","hours","getHours","minutes","getMinutes","toString","LastMessageDate","timeR","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","arr","languages","OnlineDate","diff","getTime","getDay","month_diff","isNaN","ceil","ActionMenu","active","left","top","element","getElementById","from","stopPropagation","rect","getBoundingClientRect","bottom","clientHeight","right","clientWidth","setState","event","addEventListener","toggleActive","bind","removeEventListener","transform","actions","Button","key","onClick","DialogItem","randomId","textDecoration","history","location","pathname","preventDefault","to","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","myUser","langProps","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","withLang","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","getScrollHeight","getClientHeight","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","contextType","RoomItem","roomsGet","roomsAdd","roomsLoad","lastRoomId","firstRoomId","data","param","Rooms","isOpenCreateRoom","roomsActions","roomsBlock","CircularProgress","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","uploadAvatar","target","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","LanguageItem","UserSidebar","activeTab","substring","show","Login","email","password","cookies","set","token","onSubmit","value","onChange","placeholder","withCookies","Register","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","volume","onpause","parentElement","onplay","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","pause","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","selected","unSelect","onSelect","isRecent","cursor","padding","lineHeight","canSelect","replace","marginRight","countRecent","image","isBlur","draggable","sound","open","toFixed","openSlider","sliderImages","PureComponent","usersActions","waitActiveUser","zIndex","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","PlaceHolder","InputMessage","inputMessageHeight","items","clipboardData","originalEvent","kind","getAsFile","addFile","test","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","newText","prevText","customStylesModal","overlay","content","borderRadius","boxShadow","textAlign","RoomJoinError","isOpen","contentLabel","marginBottom","toLocaleString","CustomFab2","Members","srcObject","autoPlay","controls","Room","waitSocket","match","params","ownerId","Main","order","clear","CallFab","innerWidth","callActions","Payment","tariffs","redirect","tariffId","tariff","price","buy","routes","exact","NoMatch","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","waitSearch","Contacts","q","searchResult","onSearch","selectUsers","customStylesModalCreate","customStylesModalInvite","justifyContent","CreateRoom","step","onRequestClose","maxLength","FormControlLabel","control","Friends","transition","OtherUser","role","MyUser","minHeight","User","Inbox","Outbox","CreateDialog","DeleteRoom","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","justifyItems","alignContent","fullScreen","overlayClassName","Slider","opacity","Images","Sounds","Files","Settings","reload","goBack","setLang","CustomRadio","Radio","selectRoom","selectRoomId","success","limits","Warning","MainModal","act","qs","ignoreQueryPrefix","modal","mute","unmute","banroom","unbanroom","sendwarning","listen","Mute","Unmute","Banroom","Unbanroom","SendWaning","Profile","Invite","EditRoom","Forward","Investments","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc35dada.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img alt={this.props.name} src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR,\r\n    USER_EDIT,\r\n    USER_SET_LANG,\r\n    USER_SET_WARNING\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false,\r\n    warning: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false, warning: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        case USER_EDIT:\r\n            return { ...state, name: {first: action.payload.firstName, last: action.payload.lastName}, city: action.payload.city }\r\n        case USER_SET_LANG:\r\n            return { ...state, lang: action.payload }\r\n        case USER_SET_WARNING:\r\n            return { ...state, warning: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\nexport const USER_EDIT = 'USER_EDIT'\r\nexport const USER_SET_LANG = 'USER_SET_LANG'\r\nexport const USER_SET_WARNING = 'USER_SET_WARNING'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\nexport const ROOMS_PRELOAD = 'ROOMS_PRELOAD'\r\nexport const ROOMS_SET_MUTED = 'ROOMS_SET_MUTED'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\nexport const DIALOGS_PRELOAD = 'DIALOGS_PRELOAD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'\r\n\r\n// Slider\r\nexport const SLIDER_SET = 'SLIDER_SET'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: [],\r\n    canLoad: false\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true, canLoad: action.payload.length === 20 }\r\n        }\r\n        case ROOMS_PRELOAD:\r\n            return { ...state, rooms: [ ...state.rooms, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false, muted: action.payload.muted} }\r\n        case ROOMS_SET_MUTED:\r\n            return { ...state, activeRoom: {...state.activeRoom, muted: action.payload} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: [],\r\n    canLoad: false\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount, canLoad: action.payload.dialogs.length === 20 }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_PRELOAD:\r\n            return { ...state, dialogs: [ ...state.dialogs, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio'\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { \r\n    SLIDER_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    images: [],\r\n    index: 0\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SLIDER_SET: {\r\n            return { ...state, images: action.payload.images, index: action.payload.index }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\nimport slider from './slider'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call,\r\n    slider\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","export function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\n// const RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        try {\r\n            let answer = new RTCSessionDescription({\r\n                type: 'answer',\r\n                sdp: sdpAnswer\r\n            })\r\n            \r\n            WebRtcPeerConnection.setRemoteDescription(answer);\r\n    \r\n            let stream = new MediaStream();\r\n    \r\n            for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                stream.addTrack(sender.track);\r\n            }\r\n    \r\n            remoteStream = stream\r\n    \r\n            store.dispatch({\r\n                type: ROOMS_SET_REMOTE_STREAM,\r\n                payload: stream\r\n            })\r\n    \r\n            speechEvents = hark(localStream, {});\r\n     \r\n            speechEvents.on('speaking', function() {\r\n                SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n            });\r\n        \r\n            speechEvents.on('stopped_speaking', function() {\r\n                SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'\r\nexport const timeStamps = [\r\n    {\r\n        time: 60,\r\n        label: '1 minute'\r\n    },\r\n    {\r\n        time: 1800,\r\n        label: '30 minute'\r\n    },\r\n    {\r\n        time: 3600,\r\n        label: '1 hour'\r\n    },\r\n    {\r\n        time: 86400,\r\n        label: '24 hour'\r\n    },\r\n    {\r\n        time: 604800,\r\n        label: '7 days'\r\n    },\r\n    {\r\n        time: 2419200,\r\n        label: '1 month'\r\n    },\r\n    {\r\n        time: 999999999,\r\n        label: 'Forever'\r\n    },\r\n]","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_LEAVE_ROOM,\r\n    USER_SET_WARNING\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = null\r\nlet activeLang = false\r\nlet unmuteTimer = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('muteRoom', ({roomId, muted}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: muted\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if((muted.numDate*1000) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === roomId && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                    }, muted.numDate*1000);\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('unmuteRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: false\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('banRoom', ({roomId, ban}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                WebRtcController.leaveRoom({roomId, lang: store.getState().rooms.activeRoom.lang})\r\n                store.dispatch({\r\n                    type: ROOMS_LEAVE_ROOM\r\n                })\r\n                store.dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {msg: 'you_banned_in_this_room', ban: ban}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendWarning', warning => {\r\n            store.dispatch({\r\n                type: USER_SET_WARNING,\r\n                payload: warning\r\n            })\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogsLoad = (apiToken) => (dispatch) => {\r\n    if(store.getState().dialogs.canLoad) {\r\n        dispatch({\r\n            type: DIALOGS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/dialog/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastDialogId: store.getState().dialogs.dialogs[store.getState().dialogs.dialogs.length-1]._id,\r\n                firstDialogId: store.getState().dialogs.dialogs[0]._id\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dialogs) => {\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n                \r\n                if(existDialog) {\r\n                    dialogs[i] = existDialog\r\n                } else {\r\n                    dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n    \r\n                    if(!dialogs[i].user)\r\n                        dialogs[i].user = dialogs[i].users[0]\r\n    \r\n                    dialogs[i].typers = []\r\n                }\r\n            }\r\n            \r\n            dispatch({\r\n                type: DIALOGS_PRELOAD,\r\n                payload: dialogs\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 1)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","export default {\r\n    ru: {\r\n        settings: 'Настройки',\r\n        change_profile: 'Изменить профиль',\r\n        language: 'Язык',\r\n        logout: 'Выйти',\r\n        back: 'Назад',\r\n        save: 'Сохранить',\r\n        next: 'Продолжить',\r\n        firstName: 'Имя',\r\n        lastName: 'Фамилия',\r\n        city: 'Город',\r\n        last_name_not_empty: 'Фамилия не может быть пустой',\r\n        first_name_not_empty: 'Имя не может быть пустым',\r\n        title_not_empty: 'Заголовок не может быть пустым',\r\n        rooms: 'Комнаты',\r\n        create_room: 'Создать комнату',\r\n        something_goes_wrong: 'Что-то пошло не так...',\r\n        chats: 'Чаты',\r\n        notifications: 'Уведомления',\r\n        contacts: 'Контакты',\r\n        friends: 'Друзья',\r\n        inbox: 'Входящие',\r\n        outbox: 'Исходящие',\r\n        you_dont_have_friends: 'У вас нет друзей, давайте добавим их',\r\n        search: 'Поиск',\r\n        message: 'Сообщение',\r\n        call: 'Позвонить',\r\n        accept: 'Принять',\r\n        decline: 'Отклонить',\r\n        not_indicated: 'Не указано',\r\n        plus_friend: '+ Друг',\r\n        remove: \"Удалить\",\r\n        english: 'Английский',\r\n        russian: 'Русский',\r\n        you: 'Вы',\r\n        write_message: 'Напишите сообщение...',\r\n        show_investments: 'Показать вложения',\r\n        you_sure: 'Вы уверены?',\r\n        delete: 'Удалить',\r\n        delete_room: 'Удалить комнату',\r\n        invite_friends: 'Пригласить друзей',\r\n        edit_room: 'Изменить комнату',\r\n        investments: 'Вложения',\r\n        photos: 'Фотографии',\r\n        sounds: 'Аудио',\r\n        files: 'Файлы',\r\n        online: 'онлайн',\r\n        missed_call: 'Пропущенный звонок',\r\n        outcoming_call: 'Исходящий звонок',\r\n        incoming_call: 'Входящий звонок',\r\n        canceled_call: 'Отменённый звонок',\r\n        select_language: 'Выберите язык',\r\n        users_not_found: 'Пользователи не найдены',\r\n        user_not_found: 'Пользователь не найден',\r\n        reply: 'Ответить',\r\n        forward: 'Переслать',\r\n        title: 'Название',\r\n        new_room: 'Новая комната',\r\n        invite: 'Пригласить',\r\n        private_room: 'Приватная комната',\r\n        start: 'Начать',\r\n        select_users: 'Выберите пользователей',\r\n        new_chat: 'Новый чат',\r\n        invited_you_to_the_room: 'Пригласил(а) вас в комнату',\r\n        accept_your_friend_request: 'Принял(а) ваш запрос в друзья',\r\n        send_you_friend_request: 'Отправил(а) вам запрос в друзья',\r\n        january: 'Январь',\r\n        february: 'Февраль',\r\n        march: 'Март',\r\n        april: 'Апрель',\r\n        may: 'Май',\r\n        june: 'Июнь',\r\n        july: 'Июль',\r\n        august: 'Август',\r\n        september: 'Сентябрь',\r\n        october: 'Октябрь',\r\n        november: 'Ноябрь',\r\n        december: 'Декабрь',\r\n        jan: 'Янв',\r\n        feb: 'Фев',\r\n        mar: 'Мар',\r\n        apr: 'Апр',\r\n        jun: 'Июн',\r\n        jul: 'Июл',\r\n        aug: 'Авг',\r\n        sep: 'Сен',\r\n        oct: 'Окт',\r\n        nov: 'Ноя',\r\n        dec: 'Дек',\r\n        in: 'в',\r\n        yerstaday: 'вчера',\r\n        today: 'сегодня',\r\n        just_now: 'только что',\r\n        here_wiil_placed_your_notifications: 'Здесь будут находиться ваши уведомления',\r\n        create_your_first_room: 'Создайте свою первую комнату в этом языке',\r\n        you_dont_have_chats: 'У вас нет чатов, давайте создадим его',\r\n        write_your_first_message: 'Напишите свое первое сообщение для',\r\n        typing: 'печатает',\r\n        attachment_messages: 'Прикрепленные сообщения',\r\n        messages: 'Сообщения'\r\n    },\r\n    en: {\r\n        settings: 'Settings',\r\n        change_profile: 'Change profile',\r\n        language: 'Language',\r\n        logout: 'Logout',\r\n        back: 'Back',\r\n        save: 'Save',\r\n        next: 'Next',\r\n        firstName: 'First name',\r\n        lastName: 'Last name',\r\n        city: 'City',\r\n        last_name_not_empty: 'First name cannot be empty',\r\n        first_name_not_empty: 'Last name cannot be empty',\r\n        title_not_empty: 'Title cannot be empty',\r\n        rooms: 'Rooms',\r\n        create_room: 'Create room',\r\n        something_goes_wrong: 'Something goes wrong...',\r\n        chats: 'Chats',\r\n        notifications: 'Notifications',\r\n        contacts: 'Contacts',\r\n        friends: 'Friends',\r\n        inbox: 'Inbox',\r\n        outbox: 'Outbox',\r\n        you_dont_have_friends: 'You dont have friends, lets add him',\r\n        search: 'Search',\r\n        message: 'Message',\r\n        call: 'Call',\r\n        accept: 'Accept',\r\n        decline: 'Decline',\r\n        not_indicated: 'Not indicated',\r\n        plus_friend: '+ Friend',\r\n        remove: \"Remove\",\r\n        english: 'English',\r\n        russian: 'Russian',\r\n        you: 'You',\r\n        write_message: 'Write message...',\r\n        show_investments: 'Show investments',\r\n        outcoming_call: 'Outcoming call',\r\n        incoming_call: 'Incoming call',\r\n        online: 'online',\r\n        invite: 'Invite',\r\n        delete_room: 'Delete room',\r\n        invite_friends: 'Invite friends',\r\n        edit_room: 'Edit room',\r\n        you_sure: 'You sure?',\r\n        delete: 'Delete',\r\n        investments: 'Investments',\r\n        photos: 'Photos',\r\n        sounds: 'Sounds',\r\n        files: 'Files',\r\n        missed_call: 'Missed call',\r\n        canceled_call: 'Canceled call',\r\n        select_language: 'Select language',\r\n        users_not_found: 'Users not found',\r\n        user_not_found: 'User not found',\r\n        reply: 'Reply',\r\n        forward: 'Forward',\r\n        title: 'Title',\r\n        new_room: 'New room',\r\n        private_room: 'Private room',\r\n        start: 'Start',\r\n        select_users: 'Select users',\r\n        new_chat: 'New chat',\r\n        invited_you_to_the_room: 'Invited you to the room',\r\n        accept_your_friend_request: 'Accept your friend request',\r\n        send_you_friend_request: 'Send you friend request',\r\n        january: 'January',\r\n        february: 'February',\r\n        march: 'March',\r\n        april: 'April',\r\n        may: 'May',\r\n        june: 'June',\r\n        july: 'July',\r\n        august: 'August',\r\n        september: 'September',\r\n        october: 'October',\r\n        november: 'November',\r\n        december: 'December',\r\n        jan: 'Jan',\r\n        feb: 'Feb',\r\n        mar: 'Mar',\r\n        apr: 'Apr',\r\n        jun: 'Jun',\r\n        jul: 'Jul',\r\n        aug: 'Aug',\r\n        sep: 'Sep',\r\n        oct: 'Oct',\r\n        nov: 'Nov',\r\n        dec: 'Dec',\r\n        in: 'in',\r\n        yerstaday: 'yerstaday',\r\n        today: 'Today',\r\n        just_now: 'just now',\r\n        here_wiil_placed_your_notifications: 'Here will placed your notifications',\r\n        create_your_first_room: 'Create your first room in this language',\r\n        you_dont_have_chats: 'You dont have chats, lets create new',\r\n        write_your_first_message: 'Write your first message to',\r\n        typing: 'typing',\r\n        attachment_messages: 'Attachment messages',\r\n        messages: 'Messages'\r\n    }\r\n}","import languages from \"../languages\";\r\nimport store from \"../Redux/store\";\r\n\r\nexport function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].january,\r\n        languages[lang].february,\r\n        languages[lang].march,\r\n        languages[lang].april,\r\n        languages[lang].may,\r\n        languages[lang].june,\r\n        languages[lang].july,\r\n        languages[lang].august,\r\n        languages[lang].september,\r\n        languages[lang].october,\r\n        languages[lang].november,\r\n        languages[lang].december\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && languages[lang].today\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].jan,\r\n        languages[lang].feb,\r\n        languages[lang].mar,\r\n        languages[lang].apr,\r\n        languages[lang].may,\r\n        languages[lang].jun,\r\n        languages[lang].jul,\r\n        languages[lang].aug,\r\n        languages[lang].sep,\r\n        languages[lang].oct,\r\n        languages[lang].nov,\r\n        languages[lang].dec,\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() + ' in ' + hours + ':' +  minutes : day.toString() + ' in ' + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (\r\n                (diff < 60 && languages[lang].just_now)\r\n                || (diff < 120 && '1 minute ago')\r\n                || (diff < 3600 && Math.floor(diff / 60) + 'minutes ago')\r\n                || (diff < 7200 && '1 hour ago')\r\n                || (diff < 86400 && Math.floor(diff / 3600) + 'hours ago')\r\n            )\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday + languages[lang].in + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + 'days ago' + languages[lang].in + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + 'weeks ago' + languages[lang].in + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive(e) {\r\n        let element = document.getElementById(this.props.from)\r\n        if(element) {\r\n            let find = false\r\n            if(e.path.find(x => x.id === this.props.from)) {\r\n                e.stopPropagation()\r\n                find = true\r\n            }\r\n            \r\n            let rect = element.getBoundingClientRect()\r\n\r\n            let top\r\n            let left\r\n            if(this.props.bottom) {\r\n                top = rect.y + element.clientHeight\r\n                left = rect.x\r\n                if(this.props.right)\r\n                    left = rect.x+element.clientWidth\r\n            }\r\n            else {\r\n                top = rect.y\r\n                left = rect.x+element.clientWidth\r\n            }\r\n            \r\n            this.setState({left, top})\r\n            if((this.props.event === 'click' && (this.state.active || find)) || this.props.event === 'hover')\r\n                this.setState({active: !this.state.active})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).addEventListener('click', this.toggleActive.bind(this))\r\n            document.body.addEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).removeEventListener('click', this.toggleActive.bind(this))\r\n            document.body.removeEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? this.props.right ? 'translateX(-100%)' : 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>{this.props.langProps.you}:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\">{this.props.lastMessage.type === 'call' ? this.props.langProps[this.props.lastMessage.text] : this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.images[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.photos} [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.sounds[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.sounds} [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.files[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.files} [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.messagesBlock.getScrollHeight() - (this.messagesBlock.getClientHeight() + this.messagesBlock.getScrollTop())) === 0) {\r\n            this.props.dialogsActions.dialogsLoad(this.props.user.apiToken)\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.chats}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.you_dont_have_chats}</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages)))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nlet unmuteTimer = false\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const roomsLoad = (apiToken, lang) => (dispatch) => {\r\n    if(store.getState().rooms.canLoad) {\r\n        dispatch({\r\n            type: ROOMS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/room/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastRoomId: store.getState().rooms.rooms[store.getState().rooms.rooms.length-1]._id,\r\n                firstRoomId: store.getState().rooms.rooms[0]._id,\r\n                lang\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((rooms) => {\r\n            dispatch({\r\n                type: ROOMS_PRELOAD,\r\n                payload: rooms\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: data.errors[0]\r\n                })\r\n                \r\n                return\r\n            } else {\r\n                let room = data.room\r\n                let muted = data.muted\r\n\r\n                room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n                room.users.map(x => {\r\n                    x.speaking = false\r\n                    return 1\r\n                })\r\n\r\n                setForceTitle(room.title)\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ROOM,\r\n                    payload: {room, canLoad: room.dialog.messages.length === 50, muted}\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if(muted && (new Date(muted.date).getTime() - new Date().getTime()) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === room._id && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                        // console.log(unmuteTimer)\r\n                    }, (new Date(muted.date).getTime() - new Date().getTime()) );\r\n                }\r\n                \r\n                SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n                try {\r\n                    WebRtcController.connectRoom(room._id)\r\n                } catch (err) {\r\n                    SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                    dispatch({\r\n                        type: ROOMS_JOIN_ERROR,\r\n                        payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.roomsBlock.getScrollHeight() - (this.roomsBlock.getClientHeight() + this.roomsBlock.getScrollTop())) === 0) {\r\n            this.props.roomsActions.roomsLoad(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.rooms}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.create_your_first_room}</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.something_goes_wrong}</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title={this.props.langProps.create_room} className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms)))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.accept_your_friend_request}</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.send_you_friend_request}</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.notifications}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.here_wiil_placed_your_notifications}</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications)))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <span style={{textDecoration: 'none'}} onClick={() => {this.props.onClick()}}>\r\n                <Button className=\"room-item\">\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600}} name={this.props.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p><span>{this.props.title}</span></p>\r\n                    </div>\r\n                </Button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport LanguageItem from '../Partials/Language/LanguageItem'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../languages'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        this.props.onClick()\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.language}</h2>\r\n\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }} title={this.props.langProps.english} />\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }} title={this.props.langProps.russian} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages)))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: this.props.history.location.pathname.substring(1,5) === 'chat' ? 'messages' : this.props.user.roomLang ? 'rooms' : 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.notifications.noRead && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages onClick={() => {this.setState({activeTab: 'rooms'})}} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onpause = () => {\r\n            audio.parentElement.className = 'message-sound'\r\n        }\r\n\r\n        audio.onplay = () => {\r\n            audio.parentElement.className = 'message-sound active'\r\n        }\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(document.getElementsByName(this.props.src)) {\r\n            document.getElementsByName(this.props.src).className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) {\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\n// import ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n// import urlMetadata from 'url-metadata'\r\n\r\n// let ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n    // urlMetadata(href).then((metadata) => {\r\n    //     console.log(metadata)\r\n    // })\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {this.props.message.user._id !== this.props.user._id && <>{`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}\r\n                            {this.props.message.user._id === this.props.user._id && <>{`${this.props.user.name.first} ${this.props.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}                            \r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.langProps[this.props.message.text]}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.history.push({\r\n                                            search: `?modal=slider`\r\n                                        })\r\n                                        store.dispatch({\r\n                                            type: SLIDER_SET,\r\n                                            payload: {\r\n                                                images,\r\n                                                index: 0\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.history.push({\r\n                                        search: `?modal=slider`\r\n                                    })\r\n                                    store.dispatch({\r\n                                        type: SLIDER_SET,\r\n                                        payload: {\r\n                                            images,\r\n                                            index\r\n                                        }\r\n                                    })\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Message)))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight() + 100 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} {this.props.langProps.typing}</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} {this.props.langProps.typing}</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.write_your_first_message} {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(Dialog))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `${this.props.langProps.investments} [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{this.props.langProps.attachment_messages}</h3>\r\n                        <p className=\"message-text\">{`${this.props.langProps.messages} [${this.props.recentMessages.length}]`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(Attachment)","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst PlaceHolder = withLang(languages)((props) => {\r\n    return <div className=\"placeholder\">{props.langProps.write_message}</div>\r\n})\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <PlaceHolder />}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB', transform: 'scaleX(-1)'}} />\r\n                </Button>\r\n\r\n                <div className=\"col\"></div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >  \r\n            {this.props.rooms.activeRoom.error.msg === 'dont_have_payment' && <Redirect to=\"/payment\" />}\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\" style={{marginBottom: !!this.props.rooms.activeRoom.error.ban ? 0 : ''}}>{this.props.rooms.activeRoom.error.msg}</p>\r\n            {!!this.props.rooms.activeRoom.error.ban && <p className=\"modal-text\">to <span style={{color: '#008FF7'}}>{new Date(this.props.rooms.activeRoom.error.ban.date).toLocaleString()}</span></p>}\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab2 = withStyles(fabStylesCustom)(Fab);\r\n\r\nconst Members = withRouter((props) => {\r\n    return <Scrollbars\r\n        renderTrackVertical={() => <div className=\"track-vertical\"/>}\r\n        renderThumbVertical={() => <div className=\"thumb-vertical\"/>}\r\n        className=\"theme-members scroll\"\r\n        autoHide\r\n    >\r\n        {props.users.map((user, index) => \r\n            <div key={index} style={{cursor: 'pointer'}} className=\"member\" onClick={() => {\r\n                props.history.push({\r\n                    search: `?user=${user._id}`\r\n                })\r\n            }}>\r\n                <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                {user.speaking && <span className=\"speaking\"></span>}\r\n                <span className=\"user-name\">{user.name.first} {user.name.last}</span>\r\n            </div>\r\n        )}\r\n    </Scrollbars>\r\n})\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6\">\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} {this.props.langProps.online}</h3>\r\n                        </div>\r\n\r\n                        <CustomFab2 id={'dialog-more-actions-'+this.props.rooms.activeRoom._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab2>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={\r\n                        this.props.rooms.activeRoom.ownerId === this.props.user._id ? [\r\n                            {text: this.props.langProps.invite_friends, action: () => {\r\n                                this.props.history.push({\r\n                                    search: '?act=invite'\r\n                                })\r\n                            }},\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: this.props.langProps.edit_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=editRoom'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {\r\n                                text: this.props.langProps.delete_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=deleteRoom'\r\n                                    })\r\n                                }\r\n                            }\r\n                        ] : [\r\n                            {\r\n                                text: this.props.langProps.invite_friends, action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=invite'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }}\r\n                        ]} from={'dialog-more-actions-'+this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat \r\n                        messages={this.props.rooms.activeRoom.dialog.messages} \r\n                        type=\"room\" \r\n                        to={this.props.rooms.activeRoom.title} \r\n                        dialogId={this.props.rooms.activeRoom.dialog._id} \r\n                        roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6 theme-screen\">\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        {!!this.props.rooms.activeRoom.muted && <Tooltip title={`Blocked to ${new Date(this.props.rooms.activeRoom.muted.date).toLocaleString()}`} placement=\"top\"><CustomFab className={`media-option reject`}>\r\n                            <MicOffIcon style={{color: '#fff'}} />\r\n                        </CustomFab></Tooltip>}\r\n                        {!this.props.rooms.activeRoom.muted && <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>}\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Room)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","import { CALL_SET_USER, CALL_SET_STATUS } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user, status: 'outcoming'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/call`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id: user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((call) => {\r\n        if(call.error) {\r\n            dispatch({\r\n                type: CALL_SET_STATUS,\r\n                payload: call.error\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_STATUS,\r\n        payload: 'active'\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/accept`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: store.getState().call.user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((call) => {\r\n        if(call.error) {\r\n            dispatch({\r\n                type: CALL_SET_STATUS,\r\n                payload: call.error\r\n            })\r\n        } else {\r\n            WebRtcController.call(store.getState().call.user._id)\r\n        }\r\n    })\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ActionMenu from '../../Partials/ActionMenu'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabStyles)(Fab);\r\nconst CustomFab = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 36, \r\n                        height: 36, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>{this.props.langProps.online}</p>}\r\n                    </div></>\r\n\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                            this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                        }}>\r\n                            <CallIcon style={{color: '#fff'}} />\r\n                        </CallFab>}\r\n                        \r\n                        <CustomFab id={'dialog-more-actions-'+dialog._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={[\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                        ]} from={'dialog-more-actions-'+dialog._id} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>{this.props.langProps.user_not_found}</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog)))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Payment.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        fetch(`${urlApi}/api/payment/get-all`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((tariffs) => {\r\n            this.setState({isFetching: false, tariffs})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    buy(tariffId) {\r\n        this.setState({isFetching: true})\r\n        fetch(`${urlApi}/api/payment/buy`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                tariffId\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((answer) => {\r\n            if(!answer.error) {\r\n                this.setState({isFetching: false})\r\n                this.props.history.push('/')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"payment-page\">\r\n                    <h2 className=\"payment-title\">Hi {this.props.user.name.first}</h2>\r\n                    <p className=\"payment-subtitle\">Pick a plan to continue</p>\r\n\r\n                    <div className=\"payment-tariffs\">\r\n                        {this.state.isFetching && <CircularProgress style={{\r\n                            color: '#fff',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n\r\n                        {!this.state.isFetching && <div className=\"row\">\r\n                            {this.state.tariffs.map(tariff => {\r\n                                return <div className=\"col-12 col-md-6 col-lg-3 col-xl-2 payment-tariff-container\">\r\n                                    <div className=\"payment-tariff\">\r\n                                        <p className=\"payment-tariff-title\">{tariff.title}</p>\r\n                                        <p className=\"payment-tariff-price\">{tariff.price === 0 ? \"Free\" : tariff.price}</p>\r\n\r\n                                        <button className=\"button-gray\" onClick={() => {\r\n                                            this.buy(tariff._id)\r\n                                        }} style={{width: '80%', margin: '0 10% 0 10%'}}>Buy</button>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                        </div>}\r\n                    </div>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Payment))\r\n","import React from 'react'\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Room from '../Pages/User/Room';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport Payment from '../Pages/User/Payment';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n    {\r\n        path: '/payment',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Payment />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\n// import {\r\n//     BrowserRouter as Router,\r\n// } from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.you_dont_have_friends}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.users_not_found}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create'})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n                this.props.history.push(`/rooms/${room._id}`)\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">{this.props.langProps.new_room}</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder={this.props.langProps.title}\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label={this.props.langProps.private_room}\r\n                    />\r\n\r\n                    <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.next}</button>\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.start}</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <span style={{cursor: 'pointer'}} onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=slider`\r\n                    })\r\n                    store.dispatch({\r\n                        type: SLIDER_SET,\r\n                        payload: {\r\n                            images: [{path: this.props.user.avatar.original}],\r\n                            index: 0\r\n                        }\r\n                    })\r\n                }}><Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                /></span>\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.message}</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.call}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.plus_friend}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.accept}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.decline}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.remove}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?mute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicOffIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Mute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unmute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unmute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?banroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unbanroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOpenIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?sendwarning=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <WarningIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Send warning</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=settings`\r\n                    })\r\n                }}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.settings}</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.contacts}</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px',\r\n        minHeight: 100\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {!user && this.props.user._id !== this.props.userId && <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />}\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Incoming requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Outgoing requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.contacts}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>{this.props.langProps.friends}</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>{this.props.langProps.inbox}</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>{this.props.langProps.outbox}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n            {this.state.activeTab === 'outbox' && <Outbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.new_chat}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.invite}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.edit_room}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder={this.props.langProps.title}\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label={this.props.langProps.private_room}\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.save}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.delete}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.forward}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.outcoming_call}</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.incoming_call}</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <Avatar \r\n                        style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`}} \r\n                        name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                        avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                    />\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">{this.props.call.user.city ? this.props.call.user.city : this.props.langProps.not_indicated}</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    The user is busy... <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} canceled your call <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'dont_have_payment' && <>\r\n                {this.props.callActions.clear()}\r\n                <Redirect to=\"/payment\" />\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                \r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>Error</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>have_active_call</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: this.props.index\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        images: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                if(!images.error) {\r\n                    images = images.map(x => x.data)\r\n                    \r\n                    this.setState({images, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.images.map((image, index) => {\r\n                return (\r\n                    <div className=\"investment-image\">\r\n                        <img key={index} alt={image.name} style={{cursor: 'pointer'}} onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?modal=slider`\r\n                            })\r\n                            this.props.dispatch({\r\n                                type: SLIDER_SET,\r\n                                payload: {\r\n                                    images: this.state.images,\r\n                                    index\r\n                                }\r\n                            })\r\n                        }} src={image.path} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.images.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <PhotoLibraryIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed images from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport Audio from '../../Partials/Chat/Audio';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        sounds: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(sounds => {\r\n                if(!sounds.error) {\r\n                    sounds = sounds.map(x => x.data)\r\n                    \r\n                    this.setState({sounds, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.sounds.map((sound, index) => {\r\n                return (\r\n                    <Audio\r\n                        key={index}\r\n                        fileName={sound.name}\r\n                        src={sound.path}\r\n                    />\r\n                )\r\n            })}\r\n            {(!this.state.sounds.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <AudiotrackIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed sounds from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        files: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(files => {\r\n                if(!files.error) {\r\n                    files = files.map(x => x.data)\r\n                    \r\n                    this.setState({files, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340, marginLeft: 15}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)',\r\n                }} />}\r\n            {this.state.files.map((file, index) => {\r\n                return (\r\n                    <div className=\"message-file\" style={{cursor: 'pointer'}} key={index} onClick={(e) => {\r\n                        window.open(file.path, '_self');\r\n                    }}>\r\n                        <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                        <div className=\"message-file-info\">\r\n                            <p className=\"message-file-name\">{file.name}</p>\r\n                            <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                        </div>\r\n                        <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.files.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <FileCopyIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed files from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Images from './investmentsPartials/Images';\r\nimport Sounds from './investmentsPartials/Sounds';\r\nimport Files from './investmentsPartials/Files';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'images'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.investments}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'images' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'images'})}}>{this.props.langProps.photos}</span>\r\n                <span className={this.state.activeTab === 'sounds' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'sounds'})}}>{this.props.langProps.sounds}</span>\r\n                <span className={this.state.activeTab === 'files' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'files'})}}>{this.props.langProps.files}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'images' && <Images />}\r\n            {this.state.activeTab === 'sounds' && <Sounds />}\r\n            {this.state.activeTab === 'files' && <Files />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Settings\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.settings}</h2>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=profile'\r\n                })\r\n            }}>{this.props.langProps.change_profile}</p>\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=language'\r\n                })\r\n            }}>{this.props.langProps.language}</p>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                const { cookies } = this.props;\r\n                cookies.remove(\"apiToken\", { path: \"/\" });\r\n                window.location.reload()\r\n            }}>{this.props.langProps.logout}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport store from '../Redux/store';\r\nimport { USER_EDIT } from '../Redux/constants';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        firstName: this.props.user.name.first,\r\n        lastName: this.props.user.name.last,\r\n        city: this.props.user.city,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/user/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((user) => {\r\n            if(user.error) {\r\n                this.setState({error: true, errors: user.errors})\r\n            } else {\r\n                store.dispatch({\r\n                    type: USER_EDIT,\r\n                    payload: {\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        city: this.state.city\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.change_profile}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.firstName} \r\n                    onChange={(e) => {this.setState({firstName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.firstName}\r\n                    style={{marginTop: 0}} \r\n                />\r\n                {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.lastName} \r\n                    onChange={(e) => {this.setState({lastName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 0}} \r\n                    placeholder={this.props.langProps.lastName}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.city} \r\n                    onChange={(e) => {this.setState({city: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.city}\r\n                />\r\n\r\n                {(this.state.firstName !== this.props.user.name.first || this.state.lastName !== this.props.user.name.last || this.state.city !== this.props.user.city) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.save}</button>}\r\n                {(this.state.firstName === this.props.user.name.first && this.state.lastName === this.props.user.name.last && this.state.city === this.props.user.city) && <button className=\"button-gray\" onClick={() => {\r\n                        this.props.history.goBack()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_LANG } from '../Redux/constants';\r\nimport { urlApi } from '../config';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    setLang(lang) {\r\n        store.dispatch({\r\n            type: USER_SET_LANG,\r\n            payload: lang\r\n        })\r\n\r\n        fetch(`${urlApi}/api/user/set-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_language}</h2>\r\n\r\n            <p className={`settings-item ${this.props.user.lang === 'en' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'en')\r\n                this.setLang('en')\r\n            }}>{this.props.langProps.english}</p>\r\n            <p className={`settings-item ${this.props.user.lang === 'ru' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'ru')\r\n                this.setLang('ru')\r\n            }}>{this.props.langProps.russian}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Mute</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Mute</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unmute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unmute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unmute</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have mutes rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unmute</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Ban room</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-roomban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            \r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unban room sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unban room</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have ban rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unban</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        warning: ''\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/send-warning`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                warning: this.state.warning,\r\n                userId: this.props.userId,\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Warning sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Send warning</h2>\r\n\r\n            <textarea \r\n                className=\"input-field\"\r\n                onChange={(e) => {\r\n                    this.setState({warning: e.target.value})\r\n                }}\r\n                value={this.state.warning}\r\n            ></textarea>\r\n\r\n            {!!this.state.warning && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Send</button>}\r\n            {!this.state.warning && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_WARNING } from '../Redux/constants';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 999\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass Warning extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Warning\"\r\n        >\r\n            <ReportProblemOutlinedIcon style={{color: '#FF3333', fontSize: 60}} />\r\n\r\n            <h2 className=\"modal-title\">Warning</h2>\r\n\r\n            <p className=\"modal-text\">{this.props.user.warning}</p>\r\n            \r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                store.dispatch({\r\n                    type: USER_SET_WARNING,\r\n                    payload: false\r\n                })\r\n            }}>Close</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Warning))","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD, SLIDER_SET } from '../Redux/constants';\r\nimport Call from './Call';\r\nimport Slider from '../Partials/Chat/Slider';\r\nimport Investments from './Investments';\r\nimport Settings from './Settings';\r\nimport Profile from './Profile';\r\nimport Language from './Language';\r\nimport Mute from './Mute';\r\nimport Unmute from './Unmute';\r\nimport Banroom from './Banroom';\r\nimport Unbanroom from './Unbanroom';\r\nimport SendWaning from './SendWaning';\r\nimport Warning from './Warning';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n        mute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).mute,\r\n        unmute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unmute,\r\n        banroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).banroom,\r\n        unbanroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n        sendwarning: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n                mute: qs.parse(location.search, { ignoreQueryPrefix: true }).mute,\r\n                unmute: qs.parse(location.search, { ignoreQueryPrefix: true }).unmute,\r\n                banroom: qs.parse(location.search, { ignoreQueryPrefix: true }).banroom,\r\n                unbanroom: qs.parse(location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n                sendwarning: qs.parse(location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {!!this.props.user.warning && <Warning isOpen={!!this.props.user.warning} />}\r\n\r\n            {this.state.mute && this.props.user.role !== 'user' && <Mute userId={this.state.mute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unmute && this.props.user.role !== 'user' && <Unmute userId={this.state.unmute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.banroom && this.props.user.role !== 'user' && <Banroom userId={this.state.banroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unbanroom && this.props.user.role !== 'user' && <Unbanroom userId={this.state.unbanroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.sendwarning && this.props.user.role !== 'user' && <SendWaning userId={this.state.sendwarning} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Settings isOpen={this.state.modal === 'settings'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n            \r\n            {this.state.modal === 'profile' && <Profile isOpen={this.state.modal === 'profile'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.modal === 'language' && <Language isOpen={this.state.modal === 'language'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n            {this.state.modal === 'slider' && !!this.props.slider.images.length && <Slider index={this.props.slider.index} images={this.props.slider.images} close={() => {\r\n                this.props.dispatch({\r\n                    type: SLIDER_SET,\r\n                    payload: {\r\n                        images: [],\r\n                        index: 0\r\n                    }\r\n                })\r\n                this.props.history.goBack()\r\n            }} />}\r\n            \r\n            {this.props.match.params.id && this.state.modal === 'investments' && <Investments \r\n                isOpen={this.props.match.params.id && this.state.modal === 'investments'} \r\n                dialogId={this.props.match.params.id} \r\n                close={() => {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                }}\r\n            />}\r\n\r\n            {this.props.call.user && <Call isOpen={true} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call,\r\n        slider: state.slider\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications}) => {\r\n          SocketController.init(apiToken)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          localStorage.setItem('drafts', JSON.stringify([]));\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      localStorage.setItem('drafts', JSON.stringify([]));\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MultiLang } from \"react-multi-language\";\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                        <MultiLang lang={this.props.user.isAuth ? this.props.user.lang : 'en'}/>\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}