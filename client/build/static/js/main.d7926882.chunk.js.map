{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/slider.js","Redux/reducers/ban.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","languages.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Partials/Room/RoomItem.js","Redux/actions/rooms.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Partials/Language/LanguageItem.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Redux/actions/users.js","Redux/actions/call.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Pages/User/Dialog.js","Pages/User/Payment.js","Pages/User/Ban.js","Pages/Auth/AuthSocial.js","Router/config.js","Pages/NoMatch.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Partials/Chat/Slider.js","Modals/investmentsPartials/Images.js","Modals/investmentsPartials/Sounds.js","Modals/investmentsPartials/Files.js","Modals/Investments.js","Modals/Settings.js","Modals/Profile.js","Modals/Language.js","Modals/Mute.js","Modals/Unmute.js","Modals/Banroom.js","Modals/Unbanroom.js","Modals/SendWaning.js","Modals/Warning.js","Modals/ForceAcceptCall.js","Modals/ForcePlaceCall.js","Modals/ForceJoinRoom.js","Modals/Ban.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","avatar","alt","name","src","min","avatarStyle","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","warning","user","state","action","type","payload","roomLang","first","firstName","last","lastName","city","lang","isFetching","getted","activeRoom","isError","rooms","canLoad","force","length","map","room","_id","title","isPrivate","filter","typers","isLoading","remoteStream","muted","error","users","roomId","userId","dialog","messages","message","_newId","files","item","file","sounds","images","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","index","ban","date","numDate","combineReducers","slider","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","getState","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","timeStamps","time","label","CTX","socket","activeLang","unmuteTimer","newMessageSound","Audio","resume","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","setTimeout","WebRtcController","otherId","currentTime","promise","play","undefined","_","id","read","clearTimeout","msg","location","reload","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogsLoad","lastDialogId","firstDialogId","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","append","push","localMessage","text","recentMessages","now","m","socketId","messageRes","errors","toast","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","ru","settings","change_profile","language","logout","back","save","next","last_name_not_empty","first_name_not_empty","title_not_empty","create_room","something_goes_wrong","chats","contacts","inbox","outbox","you_dont_have_friends","search","accept","decline","not_indicated","plus_friend","remove","english","russian","you","write_message","show_investments","you_sure","delete","delete_room","invite_friends","edit_room","investments","photos","missed_call","outcoming_call","incoming_call","canceled_call","select_language","users_not_found","user_not_found","reply","forward","new_room","invite","private_room","start","select_users","new_chat","invited_you_to_the_room","accept_your_friend_request","send_you_friend_request","you_are_not_invited","january","february","march","april","may","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","in","yerstaday","today","just_now","here_wiil_placed_your_notifications","create_your_first_room","you_dont_have_chats","write_your_first_message","attachment_messages","have_max_rooms","room_exist","have_active_call","force_accept_text","force_join_text","force_place_text","delete_room_text","user_busy","cancel_your_call","empty_inv_files","empty_inv_sounds","empty_inv_images","you_banned_in_this_room","to","incoming_request_empty","outgoing_request_empty","day_1","day_2","day_5","minute_1","minute_2","minute_5","hour_1","hour_2","hour_5","week_1","week_2","week_5","ago","en","getHM","hours","getHours","minutes","getMinutes","toString","LastMessageDate","timeR","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","arr","languages","OnlineDate","diff","getTime","month_diff","isNaN","declension","ceil","n","text_forms","n1","abs","ActionMenu","active","left","top","element","getElementById","from","composedPath","stopPropagation","rect","getBoundingClientRect","bottom","clientHeight","right","clientWidth","setState","event","addEventListener","toggleActive","bind","removeEventListener","transform","actions","Button","key","onClick","DialogItem","randomId","textDecoration","history","pathname","preventDefault","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","myUser","langProps","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","withLang","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","getScrollHeight","getClientHeight","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","contextType","RoomItem","roomsGet","roomsAdd","roomsLoad","lastRoomId","firstRoomId","data","param","Rooms","isOpenCreateRoom","roomsActions","roomsBlock","CircularProgress","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","uploadAvatar","target","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","LanguageItem","UserSidebar","activeTab","substring","show","Vkontakte","aria-aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","class","Login","email","password","toLowerCase","replace","token","cookies","set","onSubmit","href","marginRight","Facebook","value","onChange","placeholder","withCookies","Register","audioDurationInterval","duration","thisAudio","getElementsByName","volume","onpause","parentElement","onplay","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","pause","otherAudio","getElementsByClassName","startTimer","nativeEvent","layerX","rangeBlock","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","clear","componentDecorator","rel","Message","isHistoryDate","moreHour","date1","date2","isFirst","timeAt","selected","unSelect","onSelect","isRecent","cursor","padding","lineHeight","canSelect","callActions","countRecent","image","isBlur","draggable","sound","open","toFixed","openSlider","sliderImages","PureComponent","usersActions","waitActiveUser","zIndex","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","PlaceHolder","InputMessage","inputMessageHeight","items","clipboardData","originalEvent","kind","getAsFile","addFile","test","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","newText","prevText","customStylesModal","overlay","content","borderRadius","boxShadow","textAlign","RoomJoinError","isOpen","contentLabel","marginBottom","toLocaleString","CustomFab2","Members","srcObject","autoPlay","controls","Room","act","qs","ignoreQueryPrefix","waitSocket","match","params","listen","ownerId","Main","order","CallFab","innerWidth","Payment","tariffs","redirect","tariffId","tariff","price","buy","AuthSocial","routes","exact","NoMatch","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","waitSearch","Contacts","q","searchResult","onSearch","selectUsers","customStylesModalCreate","customStylesModalInvite","minHeight","justifyContent","CreateRoom","step","onRequestClose","maxLength","FormControlLabel","control","Friends","transition","OtherUser","MyUser","User","Inbox","Outbox","CreateDialog","DeleteRoom","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","justifyItems","alignContent","fullScreen","overlayClassName","Slider","opacity","Images","Sounds","Files","Settings","goBack","setLang","CustomRadio","Radio","selectRoom","selectRoomId","success","limits","Warning","MainModal","modal","mute","unmute","banroom","unbanroom","sendwarning","Mute","Unmute","Banroom","Unbanroom","SendWaning","Profile","Invite","EditRoom","Forward","Investments","ForceJoinRoom","ForceAcceptCall","ForcePlaceCall","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7926882.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img alt={this.props.name} src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR,\r\n    USER_EDIT,\r\n    USER_SET_LANG,\r\n    USER_SET_WARNING\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false,\r\n    warning: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false, warning: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        case USER_EDIT:\r\n            return { ...state, name: {first: action.payload.firstName, last: action.payload.lastName}, city: action.payload.city }\r\n        case USER_SET_LANG:\r\n            return { ...state, lang: action.payload }\r\n        case USER_SET_WARNING:\r\n            return { ...state, warning: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\nexport const USER_EDIT = 'USER_EDIT'\r\nexport const USER_SET_LANG = 'USER_SET_LANG'\r\nexport const USER_SET_WARNING = 'USER_SET_WARNING'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\nexport const ROOMS_PRELOAD = 'ROOMS_PRELOAD'\r\nexport const ROOMS_SET_MUTED = 'ROOMS_SET_MUTED'\r\nexport const ROOMS_SET_FORCE = 'ROOMS_SET_FORCE'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\nexport const DIALOGS_PRELOAD = 'DIALOGS_PRELOAD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'\r\nexport const CALL_SET_FORCE = 'CALL_SET_FORCE'\r\n\r\n// Slider\r\nexport const SLIDER_SET = 'SLIDER_SET'\r\n\r\n// Ban\r\nexport const BAN_SET = 'BAN_SET'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: [],\r\n    canLoad: false,\r\n    force: false\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true, canLoad: action.payload.length === 20 }\r\n        }\r\n        case ROOMS_PRELOAD:\r\n            return { ...state, rooms: [ ...state.rooms, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false, muted: action.payload.muted} }\r\n        case ROOMS_SET_MUTED:\r\n            return { ...state, activeRoom: {...state.activeRoom, muted: action.payload} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_SET_FORCE:\r\n            return { ...state, force: action.payload }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId,\r\n                    files: message.files.map(item => {return { ...item, file: false}}),\r\n                    sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                    images: message.images.map(item => {return { ...item, file: false}})\r\n                } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: [],\r\n    canLoad: false\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount, canLoad: action.payload.dialogs.length === 20 }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_PRELOAD:\r\n            return { ...state, dialogs: [ ...state.dialogs, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId, \r\n                            files: message.files.map(item => {return { ...item, file: false}}),\r\n                            sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                            images: message.images.map(item => {return { ...item, file: false}})\r\n                         } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA,\r\n    CALL_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio',\r\n    force: {user: false, status: false}\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        case CALL_SET_FORCE:\r\n            return { ...state, force: {user: action.payload.user, status: action.payload.status} }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { \r\n    SLIDER_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    images: [],\r\n    index: 0\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SLIDER_SET: {\r\n            return { ...state, images: action.payload.images, index: action.payload.index }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { \r\n    BAN_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    ban: false,\r\n    date: '',\r\n    numDate: 0\r\n}\r\n\r\nconst ban = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case BAN_SET:\r\n            return { ...state, ban: true, date: action.payload.date, numDate: action.payload.numDate }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default ban","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\nimport slider from './slider'\r\nimport ban from './ban'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call,\r\n    slider,\r\n    ban\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","export function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\n// const RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        if(localStream) {\r\n            localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: localStream.getAudioTracks()[0].enabled\r\n            })\r\n        }\r\n    },\r\n    toggleMusic() {\r\n        if(remoteStream) {\r\n            remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MUSIC,\r\n                payload: remoteStream.getAudioTracks()[0].enabled\r\n            })\r\n        }\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(!!store.getState().call.status === 'active')\r\n            return \r\n            \r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        try {\r\n            let answer = new RTCSessionDescription({\r\n                type: 'answer',\r\n                sdp: sdpAnswer\r\n            })\r\n            \r\n            WebRtcPeerConnection.setRemoteDescription(answer);\r\n    \r\n            let stream = new MediaStream();\r\n    \r\n            for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                stream.addTrack(sender.track);\r\n            }\r\n    \r\n            remoteStream = stream\r\n    \r\n            store.dispatch({\r\n                type: ROOMS_SET_REMOTE_STREAM,\r\n                payload: stream\r\n            })\r\n    \r\n            speechEvents = hark(localStream, {});\r\n     \r\n            speechEvents.on('speaking', function() {\r\n                SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n            });\r\n        \r\n            speechEvents.on('stopped_speaking', function() {\r\n                SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'\r\nexport const timeStamps = [\r\n    {\r\n        time: 60,\r\n        label: '1 minute'\r\n    },\r\n    {\r\n        time: 1800,\r\n        label: '30 minute'\r\n    },\r\n    {\r\n        time: 3600,\r\n        label: '1 hour'\r\n    },\r\n    {\r\n        time: 86400,\r\n        label: '24 hour'\r\n    },\r\n    {\r\n        time: 604800,\r\n        label: '7 days'\r\n    },\r\n    {\r\n        time: 2419200,\r\n        label: '1 month'\r\n    },\r\n    {\r\n        time: 999999999,\r\n        label: 'Forever'\r\n    },\r\n]","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_LEAVE_ROOM,\r\n    USER_SET_WARNING\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nconst CTX = new (window.AudioContext || window.webkitAudioContext)()\r\n\r\nlet socket = false\r\nlet activeLang = false\r\nlet unmuteTimer = false\r\n\r\nlet newMessageSound = new Audio(`${urlApi}/sounds/NewMessage.mp3`)\r\n\r\nsetInterval(() => {\r\n    CTX.resume().then(() => {})\r\n}, 3000)\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        if(socket) \r\n            return\r\n\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n\r\n            if(message.user._id !== store.getState().user._id) {\r\n                newMessageSound.currentTime = 0\r\n                let promise = newMessageSound.play()\r\n\r\n                if (promise !== undefined) {\r\n                    promise.then(_ => {}).catch(error => {console.log(error)})\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n\r\n            newMessageSound.currentTime = 0\r\n            let promise = newMessageSound.play()\r\n\r\n            if (promise !== undefined) {\r\n                promise.then(_ => {}).catch(error => {console.log(error)})\r\n            }\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('muteRoom', ({roomId, muted}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: muted\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if((muted.numDate*1000) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === roomId && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                    }, muted.numDate*1000);\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('unmuteRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: false\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('banRoom', ({roomId, ban}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                WebRtcController.leaveRoom({roomId, lang: store.getState().rooms.activeRoom.lang})\r\n                store.dispatch({\r\n                    type: ROOMS_LEAVE_ROOM\r\n                })\r\n                store.dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {msg: 'you_banned_in_this_room', ban: ban}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendWarning', warning => {\r\n            store.dispatch({\r\n                type: USER_SET_WARNING,\r\n                payload: warning\r\n            })\r\n        })\r\n\r\n        socket.on('ban', async () => {\r\n            window.location.reload()\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogsLoad = (apiToken) => (dispatch) => {\r\n    if(store.getState().dialogs.canLoad) {\r\n        dispatch({\r\n            type: DIALOGS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/dialog/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastDialogId: store.getState().dialogs.dialogs[store.getState().dialogs.dialogs.length-1]._id,\r\n                firstDialogId: store.getState().dialogs.dialogs[0]._id\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dialogs) => {\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n                \r\n                if(existDialog) {\r\n                    dialogs[i] = existDialog\r\n                } else {\r\n                    dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n    \r\n                    if(!dialogs[i].user)\r\n                        dialogs[i].user = dialogs[i].users[0]\r\n    \r\n                    dialogs[i].typers = []\r\n                }\r\n            }\r\n            \r\n            dispatch({\r\n                type: DIALOGS_PRELOAD,\r\n                payload: dialogs\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 1)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","export default {\r\n    ru: {\r\n        settings: 'Настройки',\r\n        change_profile: 'Изменить профиль',\r\n        language: 'Язык',\r\n        logout: 'Выйти',\r\n        back: 'Назад',\r\n        save: 'Сохранить',\r\n        next: 'Продолжить',\r\n        firstName: 'Имя',\r\n        lastName: 'Фамилия',\r\n        city: 'Город',\r\n        last_name_not_empty: 'Фамилия не может быть пустой',\r\n        first_name_not_empty: 'Имя не может быть пустым',\r\n        title_not_empty: 'Заголовок не может быть пустым',\r\n        rooms: 'Комнаты',\r\n        create_room: 'Создать комнату',\r\n        something_goes_wrong: 'Что-то пошло не так...',\r\n        chats: 'Чаты',\r\n        notifications: 'Уведомления',\r\n        contacts: 'Контакты',\r\n        friends: 'Друзья',\r\n        inbox: 'Входящие',\r\n        outbox: 'Исходящие',\r\n        you_dont_have_friends: 'У вас нет друзей, давайте добавим их',\r\n        search: 'Поиск',\r\n        message: 'Сообщение',\r\n        call: 'Позвонить',\r\n        accept: 'Принять',\r\n        decline: 'Отклонить',\r\n        not_indicated: 'Не указано',\r\n        plus_friend: '+ Друг',\r\n        remove: \"Удалить\",\r\n        english: 'Английский',\r\n        russian: 'Русский',\r\n        you: 'Вы',\r\n        write_message: 'Напишите сообщение...',\r\n        show_investments: 'Показать вложения',\r\n        you_sure: 'Вы уверены?',\r\n        delete: 'Удалить',\r\n        delete_room: 'Удалить комнату',\r\n        invite_friends: 'Пригласить друзей',\r\n        edit_room: 'Изменить комнату',\r\n        investments: 'Вложения',\r\n        photos: 'Фотографии',\r\n        sounds: 'Аудио',\r\n        files: 'Файлы',\r\n        online: 'онлайн',\r\n        missed_call: 'Пропущенный звонок',\r\n        outcoming_call: 'Исходящий звонок',\r\n        incoming_call: 'Входящий звонок',\r\n        canceled_call: 'Отменённый звонок',\r\n        select_language: 'Выберите язык',\r\n        users_not_found: 'Пользователи не найдены',\r\n        user_not_found: 'Пользователь не найден',\r\n        reply: 'Ответить',\r\n        forward: 'Переслать',\r\n        title: 'Название',\r\n        new_room: 'Новая комната',\r\n        invite: 'Пригласить',\r\n        private_room: 'Приватная комната',\r\n        start: 'Начать',\r\n        select_users: 'Выберите пользователей',\r\n        new_chat: 'Новый чат',\r\n        invited_you_to_the_room: 'Пригласил(а) вас в комнату',\r\n        accept_your_friend_request: 'Принял(а) ваш запрос в друзья',\r\n        send_you_friend_request: 'Отправил(а) вам запрос в друзья',\r\n        you_are_not_invited: 'Вы не были приглашенны в эту комнату',\r\n        january: 'Январь',\r\n        february: 'Февраль',\r\n        march: 'Март',\r\n        april: 'Апрель',\r\n        may: 'Май',\r\n        june: 'Июнь',\r\n        july: 'Июль',\r\n        august: 'Август',\r\n        september: 'Сентябрь',\r\n        october: 'Октябрь',\r\n        november: 'Ноябрь',\r\n        december: 'Декабрь',\r\n        jan: 'Янв',\r\n        feb: 'Фев',\r\n        mar: 'Мар',\r\n        apr: 'Апр',\r\n        jun: 'Июн',\r\n        jul: 'Июл',\r\n        aug: 'Авг',\r\n        sep: 'Сен',\r\n        oct: 'Окт',\r\n        nov: 'Ноя',\r\n        dec: 'Дек',\r\n        in: 'в',\r\n        yerstaday: 'вчера',\r\n        today: 'сегодня',\r\n        just_now: 'только что',\r\n        here_wiil_placed_your_notifications: 'Здесь будут находиться ваши уведомления',\r\n        create_your_first_room: 'Создайте свою первую комнату в этом языке',\r\n        you_dont_have_chats: 'У вас нет чатов, давайте создадим его',\r\n        write_your_first_message: 'Напишите свое первое сообщение для',\r\n        typing: 'печатает',\r\n        attachment_messages: 'Прикрепленные сообщения',\r\n        messages: 'Сообщения',\r\n        have_max_rooms: 'Создано максимальное кол-во комнат',\r\n        room_exist: 'Комната с таким именем существует',\r\n        have_active_call: 'Имеется активный звонок',\r\n        error: 'Ошибка',\r\n        force_accept_text: 'Если вы примите личный звонок, то ваш звонок в комнате завершится.',\r\n        force_join_text: 'Если вы перейдете в комнату, текущий личный звонок завершится.',\r\n        force_place_text: 'Если вы совершите личный звонок, то ваш звонок в комнате завершится.',\r\n        delete_room_text: 'После удаления вы и присутсвующие в комнате останутся в ней, но больше никто не сможет зайти.',\r\n        close: 'Закрыть',\r\n        user_busy: 'Пользователь занят...',\r\n        cancel_your_call: 'отклонил ваш звонок',\r\n        empty_inv_files: 'Здесь будут находиться файды из этого диалога',\r\n        empty_inv_sounds: 'Здесь будет находиться аудио из этого диалога',\r\n        empty_inv_images: 'Здесь будут находиться изображения из этого диалога',\r\n        you_banned_in_this_room: 'Вы заблокированны в этой комнате',\r\n        to: 'до',\r\n        incoming_request_empty: 'Здесь будут отображаться входящие запросы',\r\n        outgoing_request_empty: 'Здесь будут отображаться исходящие запросы',\r\n        day_1: 'день',\r\n        day_2: 'дня',\r\n        day_5: 'дней',\r\n        minute_1: 'минуту',\r\n        minute_2: 'минуты',\r\n        minute_5: 'минут',\r\n        hour_1: 'час',\r\n        hour_2: 'часа',\r\n        hour_5: 'часов',\r\n        week_1: 'неделю',\r\n        week_2: 'недели',\r\n        week_5: 'недель',\r\n        ago: 'назад',\r\n        first_name_not_empty: 'Имя не должно быть пустым',\r\n        first_name_is_string: 'Имя должно быть строкой',\r\n        first_name_is_min: 'Имя должно содержать минимум 2 символа',\r\n        last_name_not_empty: 'Фамилия не должна быть пустой',\r\n        last_name_is_string: 'Фамилия должно быть строкой',\r\n        last_name_is_min: 'Фамилия должно содержать минимум 2 символа',\r\n        email_is_invalid: 'Email неверный',\r\n        email_not_empty: 'Email не может быть пустым',\r\n        password_is_min: 'Пароль должен содержать минимум 8 символов',\r\n        email_or_password_wrong: 'Email или пароль неверный',\r\n        email_already: 'Email уже занят'   \r\n    },\r\n    en: {\r\n        settings: 'Settings',\r\n        change_profile: 'Change profile',\r\n        language: 'Language',\r\n        logout: 'Logout',\r\n        back: 'Back',\r\n        save: 'Save',\r\n        next: 'Next',\r\n        firstName: 'First name',\r\n        lastName: 'Last name',\r\n        city: 'City',\r\n        last_name_not_empty: 'First name cannot be empty',\r\n        first_name_not_empty: 'Last name cannot be empty',\r\n        title_not_empty: 'Title cannot be empty',\r\n        rooms: 'Rooms',\r\n        create_room: 'Create room',\r\n        something_goes_wrong: 'Something goes wrong...',\r\n        chats: 'Chats',\r\n        notifications: 'Notifications',\r\n        contacts: 'Contacts',\r\n        friends: 'Friends',\r\n        inbox: 'Inbox',\r\n        outbox: 'Outbox',\r\n        you_dont_have_friends: 'You dont have friends, lets add him',\r\n        search: 'Search',\r\n        message: 'Message',\r\n        call: 'Call',\r\n        accept: 'Accept',\r\n        decline: 'Decline',\r\n        not_indicated: 'Not indicated',\r\n        plus_friend: '+ Friend',\r\n        remove: \"Remove\",\r\n        english: 'English',\r\n        russian: 'Russian',\r\n        you: 'You',\r\n        write_message: 'Write message...',\r\n        show_investments: 'Show investments',\r\n        outcoming_call: 'Outcoming call',\r\n        incoming_call: 'Incoming call',\r\n        online: 'online',\r\n        invite: 'Invite',\r\n        delete_room: 'Delete room',\r\n        invite_friends: 'Invite friends',\r\n        edit_room: 'Edit room',\r\n        you_sure: 'You sure?',\r\n        delete: 'Delete',\r\n        investments: 'Investments',\r\n        photos: 'Photos',\r\n        sounds: 'Sounds',\r\n        files: 'Files',\r\n        missed_call: 'Missed call',\r\n        canceled_call: 'Canceled call',\r\n        select_language: 'Select language',\r\n        users_not_found: 'Users not found',\r\n        user_not_found: 'User not found',\r\n        reply: 'Reply',\r\n        forward: 'Forward',\r\n        title: 'Title',\r\n        new_room: 'New room',\r\n        private_room: 'Private room',\r\n        start: 'Start',\r\n        select_users: 'Select users',\r\n        new_chat: 'New chat',\r\n        invited_you_to_the_room: 'Invited you to the room',\r\n        accept_your_friend_request: 'Accept your friend request',\r\n        send_you_friend_request: 'Send you friend request',\r\n        you_are_not_invited: 'You dont have invited in this room',\r\n        january: 'January',\r\n        february: 'February',\r\n        march: 'March',\r\n        april: 'April',\r\n        may: 'May',\r\n        june: 'June',\r\n        july: 'July',\r\n        august: 'August',\r\n        september: 'September',\r\n        october: 'October',\r\n        november: 'November',\r\n        december: 'December',\r\n        jan: 'Jan',\r\n        feb: 'Feb',\r\n        mar: 'Mar',\r\n        apr: 'Apr',\r\n        jun: 'Jun',\r\n        jul: 'Jul',\r\n        aug: 'Aug',\r\n        sep: 'Sep',\r\n        oct: 'Oct',\r\n        nov: 'Nov',\r\n        dec: 'Dec',\r\n        in: 'in',\r\n        yerstaday: 'yerstaday',\r\n        today: 'Today',\r\n        just_now: 'just now',\r\n        here_wiil_placed_your_notifications: 'Here will placed your notifications',\r\n        create_your_first_room: 'Create your first room in this language',\r\n        you_dont_have_chats: 'You dont have chats, lets create new',\r\n        write_your_first_message: 'Write your first message to',\r\n        typing: 'typing',\r\n        attachment_messages: 'Attachment messages',\r\n        messages: 'Messages',\r\n        have_max_rooms: 'Create max limit rooms',\r\n        room_exist: 'A room with that name exists',\r\n        have_active_call: 'Have active call',\r\n        error: 'Error',\r\n        force_accept_text: 'If you accept a personal call, your room call will end.',\r\n        force_join_text: 'If you move to a room, the current personal call ends.',\r\n        force_place_text: 'If you make a personal call, then your call in the room will end.',\r\n        delete_room_text: 'After deleting, you and those present in the room will remain in it, but no one else will be able to enter.',\r\n        close: 'Close',\r\n        user_busy: 'The user is busy...',\r\n        cancel_your_call: 'canceled your call',\r\n        empty_inv_files: 'Here will placed files from this dialog',\r\n        empty_inv_sounds: 'Here will placed sounds from this dialog',\r\n        empty_inv_images: 'Here will placed images from this dialog',\r\n        you_banned_in_this_room: 'You blocked in this room',\r\n        to: 'to',\r\n        incoming_request_empty: 'Incoming requests will be displayed here',\r\n        outgoing_request_empty: 'Outgoing requests will be displayed here',\r\n        day_1: 'day',\r\n        day_2: 'days',\r\n        day_5: 'days',\r\n        minute_1: 'minute',\r\n        minute_2: 'minutes',\r\n        minute_5: 'minutes',\r\n        hour_1: 'hour',\r\n        hour_2: 'hours',\r\n        hour_5: 'hours',\r\n        week_1: 'week',\r\n        week_2: 'weeks',\r\n        week_5: 'weeks',\r\n        ago: 'ago',\r\n        first_name_not_empty: 'First name must not be empty',\r\n        first_name_is_string: 'First name must be a string',\r\n        first_name_is_min: 'First name contain at least 2 characters',\r\n        last_name_not_empty: 'Last name must not be empty',\r\n        last_name_is_string: 'Last name must be a string',\r\n        last_name_is_min: 'Last name contain at least 2 characters',\r\n        email_is_invalid: 'Email is invalid',\r\n        email_not_empty: 'Email must not be empty',\r\n        password_is_min: 'Password must contain at least 8 characters ',\r\n        email_or_password_wrong: 'Email or password wrong',\r\n        email_already: 'Email already uses'   \r\n    }\r\n}","import languages from \"../languages\";\r\nimport store from \"../Redux/store\";\r\n\r\nexport function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].january,\r\n        languages[lang].february,\r\n        languages[lang].march,\r\n        languages[lang].april,\r\n        languages[lang].may,\r\n        languages[lang].june,\r\n        languages[lang].july,\r\n        languages[lang].august,\r\n        languages[lang].september,\r\n        languages[lang].october,\r\n        languages[lang].november,\r\n        languages[lang].december\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && languages[lang].today\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].jan,\r\n        languages[lang].feb,\r\n        languages[lang].mar,\r\n        languages[lang].apr,\r\n        languages[lang].may,\r\n        languages[lang].jun,\r\n        languages[lang].jul,\r\n        languages[lang].aug,\r\n        languages[lang].sep,\r\n        languages[lang].oct,\r\n        languages[lang].nov,\r\n        languages[lang].dec,\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate();\r\n    var month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() + ' in ' + hours + ':' +  minutes : day.toString() + ' in ' + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (\r\n                (diff < 60 && languages[lang].just_now)\r\n                || (diff < 120 && '1 ' + languages[lang].minute_1 + ' ' + languages[lang].ago)\r\n                || (diff < 3600 && Math.floor(diff / 60) + ' ' + declension(Math.ceil(diff / 60), [languages[lang].minute_1, languages[lang].minute_2, languages[lang].minute_5]) + ' ' + languages[lang].ago)\r\n                || (diff < 7200 && '1 ' + languages[lang].hour_1 + ' ' + languages[lang].ago)\r\n                || (diff < 86400 && Math.floor(diff / 3600) + ' ' + declension(Math.ceil(diff / 3600), [languages[lang].hour_1, languages[lang].hour_2, languages[lang].hour_5]) + ' ' + languages[lang].ago)\r\n            )\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + ' ' + declension(Math.ceil(day_diff), [languages[lang].day_1, languages[lang].day_2, languages[lang].day_5]) + ' ' + languages[lang].ago + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + ' ' + declension(Math.ceil(day_diff / 7), [languages[lang].week_1, languages[lang].week_2, languages[lang].week_5]) + ' ' + languages[lang].ago + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}\r\n\r\nfunction declension(n, text_forms) {  \r\n    n = Math.abs(n) % 100; var n1 = n % 10;\r\n    if (n > 10 && n < 20) { return text_forms[2]; }\r\n    if (n1 > 1 && n1 < 5) { return text_forms[1]; }\r\n    if (n1 == 1) { return text_forms[0]; }\r\n    return text_forms[2];\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive(e) {\r\n        let element = document.getElementById(this.props.from)\r\n        if(element) {\r\n            let find = false\r\n            let path = e.path || (e.composedPath && e.composedPath());\r\n            if(path.find(x => x.id === this.props.from)) {\r\n                e.stopPropagation()\r\n                find = true\r\n            }\r\n            \r\n            let rect = element.getBoundingClientRect()\r\n\r\n            let top\r\n            let left\r\n            if(this.props.bottom) {\r\n                top = rect.y + element.clientHeight\r\n                left = rect.x\r\n                if(this.props.right)\r\n                    left = rect.x+element.clientWidth\r\n            }\r\n            else {\r\n                top = rect.y\r\n                left = rect.x+element.clientWidth\r\n            }\r\n            \r\n            this.setState({left, top})\r\n            if((this.props.event === 'click' && (this.state.active || find)) || this.props.event === 'hover')\r\n                this.setState({active: !this.state.active})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).addEventListener('click', this.toggleActive.bind(this))\r\n            document.body.addEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).removeEventListener('click', this.toggleActive.bind(this))\r\n            document.body.removeEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? this.props.right ? 'translateX(-100%)' : 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>{this.props.langProps.you}:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\" style={{color: this.props.lastMessage.type === 'call' ? '#008FF7' : null}}>{this.props.lastMessage.type === 'call' ? this.props.langProps[this.props.lastMessage.text] : this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Photo</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.photos} [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Sound</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.sounds} [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>File</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.files} [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.messagesBlock.getScrollHeight() - (this.messagesBlock.getClientHeight() + this.messagesBlock.getScrollTop())) === 0) {\r\n            this.props.dialogsActions.dialogsLoad(this.props.user.apiToken)\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.chats}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.you_dont_have_chats}</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages)))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../../Redux/constants';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(this.props.call.user) {\r\n                    e.preventDefault()\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_FORCE,\r\n                        payload: this.props.room._id\r\n                    })\r\n                }\r\n            }} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RoomItem)","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nlet unmuteTimer = false\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const roomsLoad = (apiToken, lang) => (dispatch) => {\r\n    if(store.getState().rooms.canLoad) {\r\n        dispatch({\r\n            type: ROOMS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/room/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastRoomId: store.getState().rooms.rooms[store.getState().rooms.rooms.length-1]._id,\r\n                firstRoomId: store.getState().rooms.rooms[0]._id,\r\n                lang\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((rooms) => {\r\n            dispatch({\r\n                type: ROOMS_PRELOAD,\r\n                payload: rooms\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: data.errors[0]\r\n                })\r\n                \r\n                return\r\n            } else {\r\n                let room = data.room\r\n                let muted = data.muted\r\n\r\n                room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n                room.users.map(x => {\r\n                    x.speaking = false\r\n                    return 1\r\n                })\r\n\r\n                setForceTitle(room.title)\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ROOM,\r\n                    payload: {room, canLoad: room.dialog.messages.length === 50, muted}\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if(muted && (new Date(muted.date).getTime() - new Date().getTime()) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === room._id && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                        // console.log(unmuteTimer)\r\n                    }, (new Date(muted.date).getTime() - new Date().getTime()) );\r\n                }\r\n                \r\n                SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n                try {\r\n                    WebRtcController.connectRoom(room._id)\r\n                } catch (err) {\r\n                    SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                    dispatch({\r\n                        type: ROOMS_JOIN_ERROR,\r\n                        payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.roomsBlock.getScrollHeight() - (this.roomsBlock.getClientHeight() + this.roomsBlock.getScrollTop())) === 0) {\r\n            this.props.roomsActions.roomsLoad(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.rooms}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.create_your_first_room}</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.something_goes_wrong}</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title={this.props.langProps.create_room} className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms)))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport store from '../../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../../Redux/constants';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite') {\r\n                    if(this.props.call.user) {\r\n                        store.dispatch({\r\n                            type: ROOMS_SET_FORCE,\r\n                            payload: this.props.notification.room._id\r\n                        })\r\n                    } else {\r\n                        this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                    }\r\n                }\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.accept_your_friend_request}</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.send_you_friend_request}</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        call: state.call,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.notifications}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.here_wiil_placed_your_notifications}</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications)))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <span style={{textDecoration: 'none'}} onClick={() => {this.props.onClick()}}>\r\n                <Button className=\"room-item\">\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600}} name={this.props.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p><span>{this.props.title}</span></p>\r\n                    </div>\r\n                </Button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport LanguageItem from '../Partials/Language/LanguageItem'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../languages'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        this.props.onClick()\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.language}</h2>\r\n\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }} title={this.props.langProps.english} />\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }} title={this.props.langProps.russian} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages)))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: this.props.history.location.pathname.substring(1,5) === 'chat' ? 'messages' : this.props.user.roomLang ? 'rooms' : 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {this.props.dialogs.noReadCount > 0 && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {this.props.notifications.noRead > 0 && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages onClick={() => {this.setState({activeTab: 'rooms'})}} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport store from '../../Redux/store'\r\nimport { BAN_SET } from '../../Redux/constants'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\nimport {Facebook} from '@material-ui/icons';\r\n\r\nconst Vkontakte = ({style}) => {\r\n    return <svg \r\n        style={style}\r\n        aria-aria-hidden=\"true\" \r\n        focusable=\"false\" \r\n        data-prefix=\"fab\" \r\n        data-icon=\"vk\" \r\n        role=\"img\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        viewBox=\"0 0 576 512\"\r\n        className=\"svg-inline--fa fa-vk fa-w-18 fa-2x\">\r\n        <path \r\n            fill=\"currentColor\" \r\n            d=\"M545 117.7c3.7-12.5 0-21.7-17.8-21.7h-58.9c-15 0-21.9 7.9-25.6 16.7 0 0-30 73.1-72.4 120.5-13.7 13.7-20 18.1-27.5 18.1-3.7 0-9.4-4.4-9.4-16.9V117.7c0-15-4.2-21.7-16.6-21.7h-92.6c-9.4 0-15 7-15 13.5 0 14.2 21.2 17.5 23.4 57.5v86.8c0 19-3.4 22.5-10.9 22.5-20 0-68.6-73.4-97.4-157.4-5.8-16.3-11.5-22.9-26.6-22.9H38.8c-16.8 0-20.2 7.9-20.2 16.7 0 15.6 20 93.1 93.1 195.5C160.4 378.1 229 416 291.4 416c37.5 0 42.1-8.4 42.1-22.9 0-66.8-3.4-73.1 15.4-73.1 8.7 0 23.7 4.4 58.7 38.1 40 40 46.6 57.9 69 57.9h58.9c16.8 0 25.3-8.4 20.4-25-11.2-34.9-86.9-106.7-90.3-111.5-8.7-11.2-6.2-16.2 0-26.2.1-.1 72-101.3 79.4-135.6z\" class=\"\" />\r\n    </svg>\r\n}\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true, error: false, errors: []})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email.toLowerCase().replace(/\\s+/g, ''),\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    if(data.ban) {\r\n                        store.dispatch({\r\n                            type: BAN_SET,\r\n                            payload: {numDate: data.numDate, date: data.date}\r\n                        })\r\n                    } else {\r\n                        this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                        SocketController.init(data.token)\r\n                    }\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isFetching)\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n            \r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <a className=\"social-auth\" href={`${urlApi}/auth/login_vk?uuid=${randomInteger(0, 9999999)}`}>\r\n                        <Vkontakte style={{width: 24, height: 24, marginLeft: 20, marginRight: 15, color: '#5181b8'}} />\r\n                        Вход через VK\r\n                    </a>\r\n                    <a className=\"social-auth\" href={`${urlApi}/auth/login_fb?uuid=${randomInteger(0, 9999999)}`}>\r\n                        <Facebook style={{marginLeft: 20, marginRight: 15, color: '#4267b2'}} />\r\n                        Вход через FaceBook\r\n                    </a>\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'email').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'password').msg]} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'all').msg]} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Log in</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nfunction randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withCookies(Login)))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true, error: false, errors: []})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email.toLowerCase().replace(/\\s+/g, ''),\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isFetching)\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'email').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'password').msg]} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'all').msg]} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Sign up</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withCookies(Register)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onpause = () => {\r\n            audio.parentElement.className = 'message-sound'\r\n        }\r\n\r\n        audio.onplay = () => {\r\n            audio.parentElement.className = 'message-sound active'\r\n        }\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(document.getElementsByName(this.props.src)) {\r\n            document.getElementsByName(this.props.src).className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) {\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","import { CALL_SET_USER, CALL_SET_STATUS, CALL_SET_FORCE } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    if(store.getState().rooms.activeRoom) {\r\n        dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user, status: 'force-call'}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: CALL_SET_USER,\r\n            payload: {user, status: 'outcoming'}\r\n        })\r\n\r\n        fetch(`${urlApi}/api/call/call`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: user._id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((call) => {\r\n            if(call.error) {\r\n                dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: call.error\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    if(store.getState().rooms.activeRoom) {\r\n        dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: store.getState().call.user, status: 'force-accept'}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: CALL_SET_STATUS,\r\n            payload: 'active'\r\n        })\r\n\r\n        fetch(`${urlApi}/api/call/accept`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: store.getState().call.user._id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((call) => {\r\n            if(call.error) {\r\n                dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: call.error\r\n                })\r\n                WebRtcController.stopCall()\r\n\r\n                fetch(`${urlApi}/api/call/stop`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        socketId: SocketController.getSocketId()\r\n                    })\r\n                })\r\n            } else {\r\n                WebRtcController.call(store.getState().call.user._id)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\n// import ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n// import urlMetadata from 'url-metadata'\r\n\r\n// let ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n    // urlMetadata(href).then((metadata) => {\r\n    //     console.log(metadata)\r\n    // })\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {this.props.message.user._id !== this.props.user._id && <>{`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}\r\n                            {this.props.message.user._id === this.props.user._id && <>{`${this.props.user.name.first} ${this.props.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}                            \r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\" onClick={(e) => {\r\n                        if(this.props.message.type === 'call' && this.props.message.user._id !== this.props.user._id) {\r\n                            e.stopPropagation()\r\n                            this.props.callActions.call(this.props.message.user, this.props.user.apiToken)\r\n                        }\r\n                    }}>\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.langProps[this.props.message.text]}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.history.push({\r\n                                            search: `?modal=slider`\r\n                                        })\r\n                                        store.dispatch({\r\n                                            type: SLIDER_SET,\r\n                                            payload: {\r\n                                                images,\r\n                                                index: 0\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.history.push({\r\n                                        search: `?modal=slider`\r\n                                    })\r\n                                    store.dispatch({\r\n                                        type: SLIDER_SET,\r\n                                        payload: {\r\n                                            images,\r\n                                            index\r\n                                        }\r\n                                    })\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Message)))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight() + 100 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} {this.props.langProps.typing}</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} {this.props.langProps.typing}</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.write_your_first_message} {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(Dialog))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `${this.props.langProps.investments} [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{this.props.langProps.attachment_messages}</h3>\r\n                        <p className=\"message-text\">{`${this.props.langProps.messages} [${this.props.recentMessages.length}]`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(Attachment)","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst PlaceHolder = withLang(languages)((props) => {\r\n    return <div className=\"placeholder\">{props.langProps.write_message}</div>\r\n})\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <PlaceHolder />}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n\r\n                {!this.props.recentMessages.find(message => message.type === 'call') && <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB', transform: 'scaleX(-1)'}} />\r\n                </Button>}\r\n\r\n                <div className=\"col\"></div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type.toLowerCase() === 'png' || file.type.toLowerCase() === 'jpg' || file.type.toLowerCase() === 'jpeg' || file.type.toLowerCase() === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type.toLowerCase() === 'txt' || file.type.toLowerCase() === 'pdf' || file.type.toLowerCase() === 'docx' || file.type.toLowerCase() === 'zip' || file.type.toLowerCase() === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type.toLowerCase() === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >  \r\n            {this.props.rooms.activeRoom.error.msg === 'dont_have_payment' && <Redirect to=\"/payment\" />}\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">{this.props.langProps.error}</h2>\r\n            <p className=\"modal-text\" style={{marginBottom: !!this.props.rooms.activeRoom.error.ban ? 0 : ''}}>{this.props.langProps[this.props.rooms.activeRoom.error.msg]}</p>\r\n            {!!this.props.rooms.activeRoom.error.ban && <p className=\"modal-text\">{this.props.langProps.to} <span style={{color: '#008FF7'}}>{new Date(this.props.rooms.activeRoom.error.ban.date).toLocaleString()}</span></p>}\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>{this.props.langProps.back}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(RoomJoinError)))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport qs from 'qs'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        minWidth: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab2 = withStyles(fabStylesCustom)(Fab);\r\n\r\nconst Members = withRouter((props) => {\r\n    return <Scrollbars\r\n        renderTrackVertical={() => <div className=\"track-vertical\"/>}\r\n        renderThumbVertical={() => <div className=\"thumb-vertical\"/>}\r\n        className=\"theme-members scroll\"\r\n        autoHide\r\n    >\r\n        {props.users.map((user, index) => \r\n            <div key={index} style={{cursor: 'pointer'}} className=\"member col-6 col-sm-6 col-md-6 col-lg-4 col-xl-3\" onClick={() => {\r\n                props.history.push({\r\n                    search: `?user=${user._id}`\r\n                })\r\n            }}>\r\n                <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                {user.speaking && <span className=\"speaking\"></span>}\r\n                <span className=\"user-name\">{user.name.first} {user.name.last}</span>\r\n            </div>\r\n        )}\r\n    </Scrollbars>\r\n})\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(!!this.props.rooms.activeRoom)\r\n            this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.rooms.activeRoom) {\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className={`col-xl-3 col-lg-6 col-md-6 theme-first-block ${this.state.act === 'chat' ? 'active' : 'hide'}`}>\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            if(this.state.act === 'chat') {\r\n                                this.props.history.push({\r\n                                    search: ``\r\n                                })\r\n                            } else {\r\n                                this.props.history.push('/')\r\n                            }                           \r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} {this.props.langProps.online}</h3>\r\n                        </div>\r\n\r\n                        <CustomFab2 id={'dialog-more-actions-'+this.props.rooms.activeRoom._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab2>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={\r\n                        this.props.rooms.activeRoom.ownerId === this.props.user._id || this.props.user.role === 'admin' || this.props.user.role === 'moder' ? [\r\n                            {text: this.props.langProps.invite_friends, action: () => {\r\n                                this.props.history.push({\r\n                                    search: '?act=invite'\r\n                                })\r\n                            }},\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: this.props.langProps.edit_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=editRoom'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {\r\n                                text: this.props.langProps.delete_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=deleteRoom'\r\n                                    })\r\n                                }\r\n                            }\r\n                        ] : [\r\n                            {\r\n                                text: this.props.langProps.invite_friends, action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=invite'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }}\r\n                        ]} from={'dialog-more-actions-'+this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat \r\n                        messages={this.props.rooms.activeRoom.dialog.messages} \r\n                        type=\"room\" \r\n                        to={this.props.rooms.activeRoom.title} \r\n                        dialogId={this.props.rooms.activeRoom.dialog._id} \r\n                        roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className={`col-xl-9 col-lg-6 col-md-6 theme-screen ${this.state.act === 'chat' ? 'hide' : 'active'}`}>\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option mobile-option`} onClick={() => {this.props.history.push({\r\n                            search: `?act=chat`\r\n                        })}}>\r\n                            {!!this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length && <span style={{right: 0}} className=\"unread-messages-count\">{this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length}</span>}\r\n                            <ChatBubbleOutlineIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        {!!this.props.rooms.activeRoom.muted && <Tooltip title={`Blocked to ${new Date(this.props.rooms.activeRoom.muted.date).toLocaleString()}`} placement=\"top\"><CustomFab className={`media-option reject`}>\r\n                            <MicOffIcon style={{color: '#fff'}} />\r\n                        </CustomFab></Tooltip>}\r\n                        {!this.props.rooms.activeRoom.muted && <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>}\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Room)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ActionMenu from '../../Partials/ActionMenu'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabStyles)(Fab);\r\nconst CustomFab = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 36, \r\n                        height: 36, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info col\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>{this.props.langProps.online}</p>}\r\n                    </div></>\r\n\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                            this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                        }}>\r\n                            <CallIcon style={{color: '#fff'}} />\r\n                        </CallFab>}\r\n                        \r\n                        <CustomFab id={'dialog-more-actions-'+dialog._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={[\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                        ]} from={'dialog-more-actions-'+dialog._id} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>{this.props.langProps.user_not_found}</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog)))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Payment.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        fetch(`${urlApi}/api/payment/get-all`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((tariffs) => {\r\n            this.setState({isFetching: false, tariffs})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    buy(tariffId) {\r\n        this.setState({isFetching: true})\r\n        fetch(`${urlApi}/api/payment/buy`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                tariffId\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((answer) => {\r\n            if(!answer.error) {\r\n                this.setState({isFetching: false})\r\n                this.props.history.push('/')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"payment-page\">\r\n                    <h2 className=\"payment-title\">Hi {this.props.user.name.first}</h2>\r\n                    <p className=\"payment-subtitle\">Pick a plan to continue</p>\r\n\r\n                    <div className=\"payment-tariffs\">\r\n                        {this.state.isFetching && <CircularProgress style={{\r\n                            color: '#fff',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n\r\n                        {!this.state.isFetching && <div className=\"row\">\r\n                            {this.state.tariffs.map(tariff => {\r\n                                return <div className=\"col-12 col-md-6 col-lg-3 col-xl-2 payment-tariff-container\">\r\n                                    <div className=\"payment-tariff\">\r\n                                        <p className=\"payment-tariff-title\">{tariff.title}</p>\r\n                                        <p className=\"payment-tariff-price\">{tariff.price === 0 ? \"Free\" : tariff.price}</p>\r\n\r\n                                        <button className=\"button-gray\" onClick={() => {\r\n                                            this.buy(tariff._id)\r\n                                        }} style={{width: '80%', margin: '0 10% 0 10%'}}>Buy</button>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                        </div>}\r\n                    </div>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Payment))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Ban.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"ban-page\">\r\n                    <p className=\"ban-title\">Ooops...</p>\r\n\r\n                    <p className=\"ban-subtitle\">You have ban to <span style={{color: '#008FF7'}}>{new Date(this.props.ban.date).toLocaleString()}</span></p>\r\n\r\n                    <button className=\"button-blue\" onClick={() => {\r\n                        const { cookies } = this.props;\r\n                        cookies.remove(\"apiToken\", { path: \"/\" });\r\n                        window.location.reload()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>Logout</button>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ban: state.ban,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(withCookies(Payment)))\r\n","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport qs from 'qs'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass AuthSocial extends React.Component {\r\n    state = {\r\n        token: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).token,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.token) {\r\n            const { cookies } = this.props\r\n            cookies.set('apiToken', this.state.token, { path: '/' })\r\n\r\n            window.location.replace('/')\r\n        } else {\r\n            window.location.replace('/')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <CircularProgress style={{\r\n            color: '#008FF7',\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            margin: 'auto',\r\n            top: 'calc(50% - 20px)'\r\n        }} />\r\n    }\r\n}\r\n\r\n\r\nexport default withCookies(withRouter(AuthSocial))","import React from 'react'\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Room from '../Pages/User/Room';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport Payment from '../Pages/User/Payment';\r\nimport Ban from '../Pages/User/Ban';\r\nimport AuthSocial from '../Pages/Auth/AuthSocial';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/auth_social',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Loading...',\r\n        component: () => <AuthSocial />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n    {\r\n        path: '/payment',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Payment />\r\n    },\r\n    {\r\n        path: '/ban',\r\n        exact: true,\r\n        type: 'ban',\r\n        title: '',\r\n        component: () => <Ban />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\n// import {\r\n//     BrowserRouter as Router,\r\n// } from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.you_dont_have_friends}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.users_not_found}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../Redux/constants';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        minHeight             : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: [], isFetching: true})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create', isFetching: false})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n\r\n                if(this.props.call.user) {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_FORCE,\r\n                        payload: room._id\r\n                    })\r\n                } else {\r\n                    this.props.history.push(`/rooms/${room._id}`)\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isFetching) {\r\n            return <Modal\r\n                isOpen={this.props.isOpen}\r\n                onRequestClose={() => {this.props.close()}}\r\n                style={customStylesModalInvite}\r\n                contentLabel=\"Create room\"\r\n            >\r\n                <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />\r\n            </Modal>\r\n        }\r\n\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">{this.props.langProps.new_room}</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder={this.props.langProps.title}\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label={this.props.langProps.private_room}\r\n                    />\r\n                    \r\n                    {!this.state.title.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                    {!!this.state.title.length && <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.next}</button>}\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.start}</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <span style={{cursor: 'pointer', borderRadius: 50}} onClick={() => {\r\n                    if(this.props.user.avatar) {\r\n                        this.props.history.push({\r\n                            search: `?modal=slider`\r\n                        })\r\n                        store.dispatch({\r\n                            type: SLIDER_SET,\r\n                            payload: {\r\n                                images: [{path: this.props.user.avatar.original}],\r\n                                index: 0\r\n                            }\r\n                        })\r\n                    }\r\n                }}><Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                /></span>\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.message}</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            e.preventDefault()\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.call}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.plus_friend}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.accept}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.decline}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.remove}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?mute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicOffIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Mute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unmute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unmute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?banroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unbanroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOpenIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?sendwarning=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <WarningIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Send warning</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?ban=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <BlockIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=settings`\r\n                    })\r\n                }}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.settings}</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.contacts}</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px',\r\n        minHeight: 100\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {!user && this.props.user._id !== this.props.userId && <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />}\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.incoming_request_empty}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n                \r\n                <p>{this.props.langProps.outgoing_request_empty}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.contacts}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>{this.props.langProps.friends}</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>{this.props.langProps.inbox}</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>{this.props.langProps.outbox}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n            {this.state.activeTab === 'outbox' && <Outbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.new_chat}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.invite}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        minHeight              : '245px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        isFetching: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: [], isFetching: true})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, isFetching: false})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isFetching) {\r\n            return <Modal\r\n                isOpen={this.props.isOpen}\r\n                onRequestClose={() => {this.props.close()}}\r\n                style={customStylesModalCreate}\r\n                contentLabel=\"Edit room\"\r\n            >\r\n                <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />\r\n            </Modal>\r\n        }\r\n\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.edit_room}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder={this.props.langProps.title}\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label={this.props.langProps.private_room}\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.save}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.delete_room_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.delete}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.forward}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.outcoming_call}</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.incoming_call}</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <div className={this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && this.props.call.status !== 'active' ? 'pulse-avatar' : ''}>\r\n                        <Avatar \r\n                            style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`, zIndex: 3}} \r\n                            name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                            avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                        />\r\n                    </div>\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">{this.props.call.user.city ? this.props.call.user.city : this.props.langProps.not_indicated}</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.langProps.user_busy} <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>{this.props.langProps.close}</a>\r\n                </div>}\r\n                \r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} {this.props.langProps.cancel_your_call} <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>{this.props.langProps.close}</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'dont_have_payment' && <>\r\n                {this.props.callActions.clear()}\r\n                <Redirect to=\"/payment\" />\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                \r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.error}</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>{this.props.langProps.have_active_call}</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: this.props.index\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        images: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                if(!images.error) {\r\n                    images = images.map(x => x.data)\r\n                    \r\n                    this.setState({images, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.images.map((image, index) => {\r\n                return (\r\n                    <div className=\"investment-image\">\r\n                        <img key={index} alt={image.name} style={{cursor: 'pointer'}} onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?modal=slider`\r\n                            })\r\n                            this.props.dispatch({\r\n                                type: SLIDER_SET,\r\n                                payload: {\r\n                                    images: this.state.images,\r\n                                    index\r\n                                }\r\n                            })\r\n                        }} src={image.path} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.images.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <PhotoLibraryIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_images}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport Audio from '../../Partials/Chat/Audio';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        sounds: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(sounds => {\r\n                if(!sounds.error) {\r\n                    sounds = sounds.map(x => x.data)\r\n                    \r\n                    this.setState({sounds, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.sounds.map((sound, index) => {\r\n                return (\r\n                    <Audio\r\n                        key={index}\r\n                        fileName={sound.name}\r\n                        src={sound.path}\r\n                    />\r\n                )\r\n            })}\r\n            {(!this.state.sounds.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <AudiotrackIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_sounds}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        files: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(files => {\r\n                if(!files.error) {\r\n                    files = files.map(x => x.data)\r\n                    \r\n                    this.setState({files, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340, marginLeft: 15}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)',\r\n                }} />}\r\n            {this.state.files.map((file, index) => {\r\n                return (\r\n                    <div className=\"message-file\" style={{cursor: 'pointer'}} key={index} onClick={(e) => {\r\n                        window.open(file.path, '_self');\r\n                    }}>\r\n                        <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                        <div className=\"message-file-info\">\r\n                            <p className=\"message-file-name\">{file.name}</p>\r\n                            <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                        </div>\r\n                        <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.files.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <FileCopyIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_files}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Images from './investmentsPartials/Images';\r\nimport Sounds from './investmentsPartials/Sounds';\r\nimport Files from './investmentsPartials/Files';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'images'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.investments}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'images' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'images'})}}>{this.props.langProps.photos}</span>\r\n                <span className={this.state.activeTab === 'sounds' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'sounds'})}}>{this.props.langProps.sounds}</span>\r\n                <span className={this.state.activeTab === 'files' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'files'})}}>{this.props.langProps.files}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'images' && <Images />}\r\n            {this.state.activeTab === 'sounds' && <Sounds />}\r\n            {this.state.activeTab === 'files' && <Files />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Settings\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.settings}</h2>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=profile'\r\n                })\r\n            }}>{this.props.langProps.change_profile}</p>\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=language'\r\n                })\r\n            }}>{this.props.langProps.language}</p>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                const { cookies } = this.props;\r\n                cookies.remove(\"apiToken\", { path: \"/\" });\r\n                window.location.reload()\r\n            }}>{this.props.langProps.logout}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport store from '../Redux/store';\r\nimport { USER_EDIT } from '../Redux/constants';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        firstName: this.props.user.name.first,\r\n        lastName: this.props.user.name.last,\r\n        city: this.props.user.city,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/user/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                city: this.state.city\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((user) => {\r\n            if(user.error) {\r\n                this.setState({error: true, errors: user.errors})\r\n            } else {\r\n                store.dispatch({\r\n                    type: USER_EDIT,\r\n                    payload: {\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        city: this.state.city\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.change_profile}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.firstName} \r\n                    onChange={(e) => {this.setState({firstName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.firstName}\r\n                    style={{marginTop: 0}} \r\n                />\r\n                {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.lastName} \r\n                    onChange={(e) => {this.setState({lastName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 0}} \r\n                    placeholder={this.props.langProps.lastName}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.city} \r\n                    onChange={(e) => {this.setState({city: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.city}\r\n                />\r\n\r\n                {(this.state.firstName !== this.props.user.name.first || this.state.lastName !== this.props.user.name.last || this.state.city !== this.props.user.city) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.save}</button>}\r\n                {(this.state.firstName === this.props.user.name.first && this.state.lastName === this.props.user.name.last && this.state.city === this.props.user.city) && <button className=\"button-gray\" onClick={() => {\r\n                        this.props.history.goBack()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_LANG } from '../Redux/constants';\r\nimport { urlApi } from '../config';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    setLang(lang) {\r\n        store.dispatch({\r\n            type: USER_SET_LANG,\r\n            payload: lang\r\n        })\r\n\r\n        fetch(`${urlApi}/api/user/set-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_language}</h2>\r\n\r\n            <p className={`settings-item ${this.props.user.lang === 'en' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'en')\r\n                this.setLang('en')\r\n            }}>{this.props.langProps.english}</p>\r\n            <p className={`settings-item ${this.props.user.lang === 'ru' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'ru')\r\n                this.setLang('ru')\r\n            }}>{this.props.langProps.russian}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Mute</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Mute</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unmute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unmute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unmute</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have mutes rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unmute</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Ban room</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-roomban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            \r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unban room sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unban room</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have ban rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unban</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        warning: ''\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/send-warning`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                warning: this.state.warning,\r\n                userId: this.props.userId,\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Warning sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Send warning</h2>\r\n\r\n            <textarea \r\n                className=\"input-field\"\r\n                onChange={(e) => {\r\n                    this.setState({warning: e.target.value})\r\n                }}\r\n                value={this.state.warning}\r\n            ></textarea>\r\n\r\n            {!!this.state.warning && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Send</button>}\r\n            {!this.state.warning && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_WARNING } from '../Redux/constants';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 999\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass Warning extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Warning\"\r\n        >\r\n            <ReportProblemOutlinedIcon style={{color: '#FF3333', fontSize: 60}} />\r\n\r\n            <h2 className=\"modal-title\">Warning</h2>\r\n\r\n            <p className=\"modal-text\">{this.props.user.warning}</p>\r\n            \r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                store.dispatch({\r\n                    type: USER_SET_WARNING,\r\n                    payload: false\r\n                })\r\n            }}>Close</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Warning))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n        \r\n        this.props.history.push(`/chats/${this.props.call.force.user._id}`)\r\n\r\n        setTimeout(() => {\r\n            this.props.callActions.accept(this.props.user.apiToken)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_accept_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.accept}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        this.props.history.push(`/chats/${this.props.call.force.user._id}`)\r\n        \r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.props.callActions.call(this.props.call.force.user, this.props.user.apiToken)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_place_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.call}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n        let roomId = this.props.rooms.force\r\n        store.dispatch({\r\n            type: ROOMS_SET_FORCE,\r\n            payload: false\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.props.history.push(`/rooms/${roomId}`)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: ROOMS_SET_FORCE,\r\n            payload: false\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_join_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.accept}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Button, Radio, withStyles } from '@material-ui/core'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        time: 0,\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Ban sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Ban</h2>\r\n\r\n            {timeStamps.map((time, index) => \r\n                    <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                        this.setState({time: time.time})\r\n                    }}>\r\n                        <div style={{\r\n                            flexGrow: 1,\r\n                            minWidth: 0,\r\n                            maxWidth: '100%',\r\n                            paddingRight: 10\r\n                        }}>\r\n                            <p><span>{time.label}</span></p>\r\n                        </div>\r\n                        <CustomRadio\r\n                            checked={this.state.time === time.time}\r\n                        />\r\n                    </Button>\r\n            )}\r\n            {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n            {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: `?user=${this.props.userId}`\r\n                })\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD, SLIDER_SET } from '../Redux/constants';\r\nimport Call from './Call';\r\nimport Slider from '../Partials/Chat/Slider';\r\nimport Investments from './Investments';\r\nimport Settings from './Settings';\r\nimport Profile from './Profile';\r\nimport Language from './Language';\r\nimport Mute from './Mute';\r\nimport Unmute from './Unmute';\r\nimport Banroom from './Banroom';\r\nimport Unbanroom from './Unbanroom';\r\nimport SendWaning from './SendWaning';\r\nimport Warning from './Warning';\r\nimport ForceAcceptCall from './ForceAcceptCall';\r\nimport ForcePlaceCall from './ForcePlaceCall';\r\nimport ForceJoinRoom from './ForceJoinRoom';\r\nimport Ban from './Ban';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n        mute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).mute,\r\n        unmute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unmute,\r\n        banroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).banroom,\r\n        unbanroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n        sendwarning: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n        ban: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).ban,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n                mute: qs.parse(location.search, { ignoreQueryPrefix: true }).mute,\r\n                unmute: qs.parse(location.search, { ignoreQueryPrefix: true }).unmute,\r\n                banroom: qs.parse(location.search, { ignoreQueryPrefix: true }).banroom,\r\n                unbanroom: qs.parse(location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n                sendwarning: qs.parse(location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n                ban: qs.parse(location.search, { ignoreQueryPrefix: true }).ban,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {!!this.props.user.warning && <Warning isOpen={!!this.props.user.warning} />}\r\n\r\n            {this.state.mute && this.props.user.role !== 'user' && <Mute userId={this.state.mute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unmute && this.props.user.role !== 'user' && <Unmute userId={this.state.unmute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.banroom && this.props.user.role !== 'user' && <Banroom userId={this.state.banroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.ban && this.props.user.role !== 'user' && <Ban userId={this.state.ban} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unbanroom && this.props.user.role !== 'user' && <Unbanroom userId={this.state.unbanroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.sendwarning && this.props.user.role !== 'user' && <SendWaning userId={this.state.sendwarning} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Settings isOpen={this.state.modal === 'settings'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n            \r\n            {this.state.modal === 'profile' && <Profile isOpen={this.state.modal === 'profile'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.modal === 'language' && <Language isOpen={this.state.modal === 'language'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId  || this.props.user.role === 'admin' || this.props.user.role === 'moder') && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId || this.props.user.role === 'admin' || this.props.user.role === 'moder') && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n            {this.state.modal === 'slider' && !!this.props.slider.images.length && <Slider index={this.props.slider.index} images={this.props.slider.images} close={() => {\r\n                this.props.dispatch({\r\n                    type: SLIDER_SET,\r\n                    payload: {\r\n                        images: [],\r\n                        index: 0\r\n                    }\r\n                })\r\n                this.props.history.goBack()\r\n            }} />}\r\n            \r\n            {this.props.match.params.id && this.state.modal === 'investments' && <Investments \r\n                isOpen={this.props.match.params.id && this.state.modal === 'investments'} \r\n                dialogId={this.props.match.params.id} \r\n                close={() => {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                }}\r\n            />}\r\n\r\n            {!!this.props.rooms.force && <ForceJoinRoom isOpen={true} />}\r\n\r\n            {this.props.call.user && this.props.call.force.status === 'force-accept' && <ForceAcceptCall isOpen={true} />}\r\n            {this.props.call.force.status === 'force-call' && <ForcePlaceCall isOpen={true} />}\r\n\r\n            {this.props.call.user && !this.props.call.force.status && <Call isOpen={true} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call,\r\n        slider: state.slider\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nimport store from \"../Redux/store\";\r\nimport { BAN_SET } from \"../Redux/constants\";\r\nimport Ban from \"../Pages/User/Ban\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications, ban, numDate, date}) => {\r\n          if(ban) {\r\n            store.dispatch({\r\n              type: BAN_SET,\r\n              payload: {numDate, date}\r\n            })\r\n          } else {\r\n            SocketController.init(apiToken)\r\n            this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          }\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          localStorage.setItem('drafts', JSON.stringify([]));\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      localStorage.setItem('drafts', JSON.stringify([]));\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n                  case 'ban':\r\n                    return this.props.ban.ban ? <Ban /> : <Redirect\r\n                    to={{\r\n                      pathname: \"/\",\r\n                    }}\r\n                  /> \r\n\r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? this.props.ban.ban ? <Redirect\r\n          to={{\r\n            pathname: \"/ban\",\r\n          }}\r\n        /> : (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ?  this.props.ban.ban ? <Redirect\r\n          to={{\r\n            pathname: \"/ban\",\r\n          }}\r\n        /> : (\r\n            children\r\n          )  : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    ban: state.ban\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MultiLang } from \"react-multi-language\";\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                        <MultiLang lang={this.props.user.isAuth ? this.props.user.lang : 'en'}/>\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}