{"version":3,"sources":["Pages/PageSettings.js","languages.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/slider.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","Partials/Room/RoomItem.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Redux/actions/rooms.js","Redux/actions/users.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Partials/Language/LanguageItem.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Redux/actions/call.js","Pages/User/Dialog.js","Router/config.js","Pages/NoMatch.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Partials/Chat/Slider.js","Modals/investmentsPartials/Images.js","Modals/investmentsPartials/Sounds.js","Modals/investmentsPartials/Files.js","Modals/Investments.js","Modals/Settings.js","Modals/Profile.js","Modals/Language.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","ru","settings","change_profile","language","logout","back","save","next","firstName","lastName","city","last_name_not_empty","first_name_not_empty","title_not_empty","rooms","create_room","something_goes_wrong","chats","notifications","contacts","friends","inbox","outbox","you_dont_have_friends","search","message","call","accept","decline","not_indicated","plus_friend","remove","english","russian","you","write_message","show_investments","you_sure","delete","delete_room","invite_friends","edit_room","investments","photos","sounds","files","online","missed_call","outcoming_call","incoming_call","canceled_call","select_language","users_not_found","user_not_found","reply","forward","title","new_room","invite","private_room","start","select_users","new_chat","invited_you_to_the_room","accept_your_friend_request","send_you_friend_request","january","february","march","april","may","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","in","yerstaday","today","just_now","en","Avatar","className","style","this","props","avatar","src","min","avatarStyle","name","toUpperCase","status","color","fontSize","Component","INITIAL_STATE","isAuth","user","state","action","type","payload","roomLang","first","last","lang","isFetching","getted","activeRoom","isError","map","room","_id","isPrivate","filter","typers","canLoad","isLoading","remoteStream","error","users","roomId","userId","dialog","messages","_newId","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","requested","pending","friendStatus","notification","images","index","combineReducers","slider","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","length","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","mozRTCIceCandidate","RTCIceCandidate","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","socket","activeLang","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","getState","setTimeout","WebRtcController","otherId","id","read","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","append","file","push","localMessage","text","recentMessages","now","m","socketId","messageRes","errors","msg","toast","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","RoomItem","textDecoration","to","Button","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","overflow","key","getHM","date","time","hours","getHours","minutes","getMinutes","toString","LastMessageDate","getTime","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","arr","languages","OnlineDate","diff","getDay","month_diff","isNaN","ceil","ActionMenu","active","left","top","element","getElementById","from","stopPropagation","rect","getBoundingClientRect","bottom","clientHeight","right","clientWidth","setState","event","addEventListener","toggleActive","bind","removeEventListener","transform","actions","onClick","DialogItem","randomId","history","location","pathname","preventDefault","myUser","langProps","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","withLang","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","nextProps","nextState","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","contextType","roomsGet","roomsAdd","param","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","selected","waitSearch","Contacts","q","searchResult","usersActions","target","value","clearTimeout","test","onChange","onSearch","placeholder","roomsBlock","CircularProgress","selectUsers","customStylesModalCreate","overlay","zIndex","content","marginRight","borderRadius","boxShadow","customStylesModalInvite","justifyContent","padding","CreateRoom","step","roomsActions","isOpen","onRequestClose","contentLabel","onSubmit","marginBottom","maxLength","FormControlLabel","control","label","Friends","Rooms","isOpenCreateRoom","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","uploadAvatar","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","LanguageItem","UserSidebar","activeTab","substring","show","Login","email","password","data","cookies","set","token","withCookies","Register","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","volume","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","parentElement","pause","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","unSelect","onSelect","isRecent","cursor","lineHeight","canSelect","replace","countRecent","image","isBlur","draggable","alt","sound","open","toFixed","openSlider","sliderImages","PureComponent","waitActiveUser","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","getClientHeight","getScrollHeight","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","PlaceHolder","InputMessage","inputMessageHeight","items","clipboardData","originalEvent","kind","getAsFile","addFile","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","newText","prevText","customStylesModal","textAlign","RoomJoinError","CustomFab2","Members","srcObject","autoPlay","controls","Room","waitSocket","match","params","ownerId","Main","order","clear","CallFab","innerWidth","callActions","routes","exact","NoMatch","transition","OtherUser","MyUser","minHeight","User","Inbox","Outbox","CreateDialog","DeleteRoom","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","muted","fullScreen","overlayClassName","Slider","opacity","Images","Sounds","Files","Settings","reload","goBack","setLang","MainModal","act","qs","ignoreQueryPrefix","modal","listen","Profile","Invite","EditRoom","Forward","Investments","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad36960c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","export default {\r\n    ru: {\r\n        settings: 'Настройки',\r\n        change_profile: 'Изменить профиль',\r\n        language: 'Язык',\r\n        logout: 'Выйти',\r\n        back: 'Назад',\r\n        save: 'Сохранить',\r\n        next: 'Продолжить',\r\n        firstName: 'Имя',\r\n        lastName: 'Фамилия',\r\n        city: 'Город',\r\n        last_name_not_empty: 'Фамилия не может быть пустой',\r\n        first_name_not_empty: 'Имя не может быть пустым',\r\n        title_not_empty: 'Заголовок не может быть пустым',\r\n        rooms: 'Комнаты',\r\n        create_room: 'Создать комнату',\r\n        something_goes_wrong: 'Что-то пошло не так...',\r\n        chats: 'Чаты',\r\n        notifications: 'Уведомления',\r\n        contacts: 'Контакты',\r\n        friends: 'Друзья',\r\n        inbox: 'Входящие',\r\n        outbox: 'Исходящие',\r\n        you_dont_have_friends: 'У вас нет друзей, давайте добавим их',\r\n        search: 'Поиск',\r\n        message: 'Сообщение',\r\n        call: 'Позвонить',\r\n        accept: 'Принять',\r\n        decline: 'Отклонить',\r\n        not_indicated: 'Не указано',\r\n        plus_friend: '+ Друг',\r\n        remove: \"Удалить\",\r\n        english: 'Английский',\r\n        russian: 'Русский',\r\n        you: 'Вы',\r\n        write_message: 'Напишите сообщение...',\r\n        show_investments: 'Показать вложения',\r\n        you_sure: 'Вы уверены?',\r\n        delete: 'Удалить',\r\n        delete_room: 'Удалить комнату',\r\n        invite_friends: 'Пригласить друзей',\r\n        edit_room: 'Изменить комнату',\r\n        investments: 'Вложения',\r\n        photos: 'Фотографии',\r\n        sounds: 'Аудио',\r\n        files: 'Файлы',\r\n        online: 'онлайн',\r\n        missed_call: 'Пропущенный звонок',\r\n        outcoming_call: 'Исходящий звонок',\r\n        incoming_call: 'Входящий звонок',\r\n        canceled_call: 'Отменённый звонок',\r\n        select_language: 'Выберите язык',\r\n        users_not_found: 'Пользователи не найдены',\r\n        user_not_found: 'Пользователь не найден',\r\n        reply: 'Ответить',\r\n        forward: 'Переслать',\r\n        title: 'Название',\r\n        new_room: 'Новая комната',\r\n        invite: 'Пригласить',\r\n        private_room: 'Приватная комната',\r\n        start: 'Начать',\r\n        select_users: 'Выберите пользователей',\r\n        new_chat: 'Новый чат',\r\n        invited_you_to_the_room: 'Пригласил(а) вас в комнату',\r\n        accept_your_friend_request: 'Принял(а) ваш запрос в друзья',\r\n        send_you_friend_request: 'Отправил(а) вам запрос в друзья',\r\n        january: 'Январь',\r\n        february: 'Февраль',\r\n        march: 'Март',\r\n        april: 'Апрель',\r\n        may: 'Май',\r\n        june: 'Июнь',\r\n        july: 'Июль',\r\n        august: 'Август',\r\n        september: 'Сентябрь',\r\n        october: 'Октябрь',\r\n        november: 'Ноябрь',\r\n        december: 'Декабрь',\r\n        jan: 'Янв',\r\n        feb: 'Фев',\r\n        mar: 'Мар',\r\n        apr: 'Апр',\r\n        jun: 'Июн',\r\n        jul: 'Июл',\r\n        aug: 'Авг',\r\n        sep: 'Сен',\r\n        oct: 'Окт',\r\n        nov: 'Ноя',\r\n        dec: 'Дек',\r\n        in: 'в',\r\n        yerstaday: 'вчера',\r\n        today: 'сегодня',\r\n        just_now: 'только что'\r\n    },\r\n    en: {\r\n        settings: 'Settings',\r\n        change_profile: 'Change profile',\r\n        language: 'Language',\r\n        logout: 'Logout',\r\n        back: 'Back',\r\n        save: 'Save',\r\n        next: 'Next',\r\n        firstName: 'First name',\r\n        lastName: 'Last name',\r\n        city: 'City',\r\n        last_name_not_empty: 'First name cannot be empty',\r\n        first_name_not_empty: 'Last name cannot be empty',\r\n        title_not_empty: 'Title cannot be empty',\r\n        rooms: 'Rooms',\r\n        create_room: 'Create room',\r\n        something_goes_wrong: 'Something goes wrong...',\r\n        chats: 'Chats',\r\n        notifications: 'Notifications',\r\n        contacts: 'Contacts',\r\n        friends: 'Friends',\r\n        inbox: 'Inbox',\r\n        outbox: 'Outbox',\r\n        you_dont_have_friends: 'You dont have friends, lets add him',\r\n        search: 'Search',\r\n        message: 'Message',\r\n        call: 'Call',\r\n        accept: 'Accept',\r\n        decline: 'Decline',\r\n        not_indicated: 'Not indicated',\r\n        plus_friend: '+ Friend',\r\n        remove: \"Remove\",\r\n        english: 'English',\r\n        russian: 'Russian',\r\n        you: 'You',\r\n        write_message: 'Write message...',\r\n        show_investments: 'Show investments',\r\n        outcoming_call: 'Outcoming call',\r\n        incoming_call: 'Incoming call',\r\n        online: 'online',\r\n        invite: 'Invite',\r\n        delete_room: 'Delete room',\r\n        invite_friends: 'Invite friends',\r\n        edit_room: 'Edit room',\r\n        you_sure: 'You sure?',\r\n        delete: 'Delete',\r\n        investments: 'Investments',\r\n        photos: 'Photos',\r\n        sounds: 'Sounds',\r\n        files: 'Files',\r\n        missed_call: 'Missed call',\r\n        canceled_call: 'Canceled call',\r\n        select_language: 'Select language',\r\n        users_not_found: 'Users not found',\r\n        user_not_found: 'User not found',\r\n        reply: 'Reply',\r\n        forward: 'Forward',\r\n        title: 'Title',\r\n        new_room: 'New room',\r\n        private_room: 'Private room',\r\n        start: 'Start',\r\n        select_users: 'Select users',\r\n        new_chat: 'New chat',\r\n        invited_you_to_the_room: 'Invited you to the room',\r\n        accept_your_friend_request: 'Accept your friend request',\r\n        send_you_friend_request: 'Send you friend request',\r\n        january: 'January',\r\n        february: 'February',\r\n        march: 'March',\r\n        april: 'April',\r\n        may: 'May',\r\n        june: 'June',\r\n        july: 'July',\r\n        august: 'August',\r\n        september: 'September',\r\n        october: 'October',\r\n        november: 'November',\r\n        december: 'December',\r\n        jan: 'Jan',\r\n        feb: 'Feb',\r\n        mar: 'Mar',\r\n        apr: 'Apr',\r\n        jun: 'Jun',\r\n        jul: 'Jul',\r\n        aug: 'Aug',\r\n        sep: 'Sep',\r\n        oct: 'Oct',\r\n        nov: 'Nov',\r\n        dec: 'Dec',\r\n        in: 'in',\r\n        yerstaday: 'yerstaday',\r\n        today: 'Today',\r\n        just_now: 'just now'\r\n    }\r\n}","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR,\r\n    USER_EDIT,\r\n    USER_SET_LANG\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        case USER_EDIT:\r\n            return { ...state, name: {first: action.payload.firstName, last: action.payload.lastName}, city: action.payload.city }\r\n        case USER_SET_LANG:\r\n            return { ...state, lang: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\nexport const USER_EDIT = 'USER_EDIT'\r\nexport const USER_SET_LANG = 'USER_SET_LANG'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'\r\n\r\n// Slider\r\nexport const SLIDER_SET = 'SLIDER_SET'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_DELETE,\r\n    ROOMS_EDIT,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: []\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: []\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_GET,\r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio'\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { \r\n    SLIDER_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    images: [],\r\n    index: 0\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SLIDER_SET: {\r\n            return { ...state, images: action.payload.images, index: action.payload.index }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\nimport slider from './slider'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call,\r\n    slider\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","import { push } from 'react-router-redux';\r\n\r\nexport function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import adapter from 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\nconst RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n\r\n    function onerror(e) {\r\n        console.log(JSON.stringify(e, null, '\\t'));\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        try {\r\n            let answer = new RTCSessionDescription({\r\n                type: 'answer',\r\n                sdp: sdpAnswer\r\n            })\r\n            \r\n            WebRtcPeerConnection.setRemoteDescription(answer);\r\n    \r\n            let stream = new MediaStream();\r\n    \r\n            for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                stream.addTrack(sender.track);\r\n            }\r\n    \r\n            remoteStream = stream\r\n    \r\n            store.dispatch({\r\n                type: ROOMS_SET_REMOTE_STREAM,\r\n                payload: stream\r\n            })\r\n    \r\n            speechEvents = hark(localStream, {});\r\n     \r\n            speechEvents.on('speaking', function() {\r\n                SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n            });\r\n        \r\n            speechEvents.on('stopped_speaking', function() {\r\n                SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = null\r\nlet activeLang = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 1)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","import languages from \"../languages\";\r\nimport store from \"../Redux/store\";\r\n\r\nexport function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].january,\r\n        languages[lang].february,\r\n        languages[lang].march,\r\n        languages[lang].april,\r\n        languages[lang].may,\r\n        languages[lang].june,\r\n        languages[lang].july,\r\n        languages[lang].august,\r\n        languages[lang].september,\r\n        languages[lang].october,\r\n        languages[lang].november,\r\n        languages[lang].december\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && languages[lang].today\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(time) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].jan,\r\n        languages[lang].feb,\r\n        languages[lang].mar,\r\n        languages[lang].apr,\r\n        languages[lang].may,\r\n        languages[lang].jun,\r\n        languages[lang].jul,\r\n        languages[lang].aug,\r\n        languages[lang].sep,\r\n        languages[lang].oct,\r\n        languages[lang].nov,\r\n        languages[lang].dec,\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(time) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes : day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (\r\n                (diff < 60 && languages[lang].just_now)\r\n                || (diff < 120 && \"1 \" + 'minute' + \" \" + 'ago' + \"\")\r\n                || (diff < 3600 && Math.floor(diff / 60) + \" \" + 'minutes' + \" \" + 'ago' + \"\")\r\n                || (diff < 7200 && \"1 \" + 'hour' + \" \" + 'ago' + \"\")\r\n                || (diff < 86400 && Math.floor(diff / 3600) + \" \" + 'hours' + \" \" + 'ago')\r\n            )\r\n        )\r\n        || (day_diff == 1 && languages[lang].yerstaday + \" \" + languages[lang].in + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + \" \" + 'days' + \" \" + 'ago' + \" \" + languages[lang].in + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + \" \" + 'weeks' + \" \" + 'ago' + \" \" + languages[lang].in + \" \" + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive(e) {\r\n        let element = document.getElementById(this.props.from)\r\n        if(element) {\r\n            let find = false\r\n            if(e.path.find(x => x.id === this.props.from)) {\r\n                e.stopPropagation()\r\n                find = true\r\n            }\r\n            \r\n            let rect = element.getBoundingClientRect()\r\n\r\n            let top\r\n            let left\r\n            if(this.props.bottom) {\r\n                top = rect.y + element.clientHeight\r\n                left = rect.x\r\n                if(this.props.right)\r\n                    left = rect.x+element.clientWidth\r\n            }\r\n            else {\r\n                top = rect.y\r\n                left = rect.x+element.clientWidth\r\n            }\r\n            \r\n            this.setState({left, top})\r\n            if((this.props.event === 'click' && (this.state.active || find)) || this.props.event === 'hover')\r\n                this.setState({active: !this.state.active})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).addEventListener('click', this.toggleActive.bind(this))\r\n            document.body.addEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).removeEventListener('click', this.toggleActive.bind(this))\r\n            document.body.removeEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? this.props.right ? 'translateX(-100%)' : 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>{this.props.langProps.you}:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\">{this.props.lastMessage.type === 'call' ? this.props.langProps[this.props.lastMessage.text] : this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.images[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.photos} [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.sounds[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.sounds} [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.files[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.files} [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.chats}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>You dont have chats, lets create new</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages)))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(room => {\r\n            if(room.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: room.errors[0]\r\n                })\r\n                \r\n                return\r\n            }\r\n\r\n            room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n            room.users.map(x => {\r\n                x.speaking = false\r\n            })\r\n\r\n            setForceTitle(room.title)\r\n\r\n            dispatch({\r\n                type: ROOMS_JOIN_ROOM,\r\n                payload: {room, canLoad: room.dialog.messages.length === 50}\r\n            })\r\n            \r\n            SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n            try {\r\n                WebRtcController.connectRoom(room._id)\r\n            } catch (err) {\r\n                SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                })\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","import { \r\n    USERS_ADD,\r\n    USERS_GET,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.you_dont_have_friends}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.users_not_found}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create'})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n                this.props.history.push(`/rooms/${room._id}`)\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">{this.props.langProps.new_room}</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder={this.props.langProps.title}\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label={this.props.langProps.private_room}\r\n                    />\r\n\r\n                    <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.next}</button>\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.start}</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Modal\r\nimport ModalCreateRoom from '../Modals/CreateRoom'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.rooms}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Create your first room in this language</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.something_goes_wrong}</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title={this.props.langProps.create_room} className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms)))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.accept_your_friend_request}</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.send_you_friend_request}</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.notifications}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Here will placed your notifications</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications)))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <span style={{textDecoration: 'none'}} onClick={() => {this.props.onClick()}}>\r\n                <Button className=\"room-item\">\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600}} name={this.props.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p><span>{this.props.title}</span></p>\r\n                    </div>\r\n                </Button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport LanguageItem from '../Partials/Language/LanguageItem'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../languages'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.language}</h2>\r\n\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }} title={this.props.langProps.english} />\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }} title={this.props.langProps.russian} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages)))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: this.props.history.location.pathname.substring(1,5) === 'chat' ? 'messages' : this.props.user.roomLang ? 'rooms' : 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.notifications.noRead && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(this.state.audio) {\r\n            this.state.audio.parentElement.className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) { \r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound active'\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\nimport ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nlet ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {this.props.message.user._id !== this.props.user._id && <>{`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}\r\n                            {this.props.message.user._id === this.props.user._id && <>{`${this.props.user.name.first} ${this.props.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}                            \r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.langProps[this.props.message.text]}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.history.push({\r\n                                            search: `?modal=slider`\r\n                                        })\r\n                                        store.dispatch({\r\n                                            type: SLIDER_SET,\r\n                                            payload: {\r\n                                                images,\r\n                                                index: 0\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.history.push({\r\n                                        search: `?modal=slider`\r\n                                    })\r\n                                    store.dispatch({\r\n                                        type: SLIDER_SET,\r\n                                        payload: {\r\n                                            images,\r\n                                            index\r\n                                        }\r\n                                    })\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Message)))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, LinearProgress, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight() + 100 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} typing</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} typing</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Write your first message to {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialog)","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `Вложения [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">Attachment messages</h3>\r\n                        <p className=\"message-text\">{`${this.props.recentMessages.length} messages`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attachment","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst PlaceHolder = withLang(languages)((props) => {\r\n    return <div className=\"placeholder\">{props.langProps.write_message}</div>\r\n})\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <PlaceHolder />}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    <ArrowForwardIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\">{this.props.rooms.activeRoom.error.msg}</p>\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab2 = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Members extends React.Component {\r\n    render() {\r\n        return <Scrollbars\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"theme-members scroll\"\r\n            autoHide\r\n        >\r\n            {this.props.users.map((user, index) => \r\n                <div key={index} className=\"member\">\r\n                    <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                    {user.speaking && <span className=\"speaking\"></span>}\r\n                </div>\r\n            )}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6\">\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} {this.props.langProps.online}</h3>\r\n                        </div>\r\n\r\n                        <CustomFab2 id={'dialog-more-actions-'+this.props.rooms.activeRoom._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab2>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={\r\n                        this.props.rooms.activeRoom.ownerId === this.props.user._id ? [\r\n                            {text: this.props.langProps.invite_friends, action: () => {\r\n                                this.props.history.push({\r\n                                    search: '?act=invite'\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: this.props.langProps.edit_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=editRoom'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: this.props.langProps.delete_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=deleteRoom'\r\n                                    })\r\n                                }\r\n                            }\r\n                        ] : [\r\n                            {\r\n                                text: this.props.langProps.invite_friends, action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=invite'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }}\r\n                        ]} from={'dialog-more-actions-'+this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat \r\n                        messages={this.props.rooms.activeRoom.dialog.messages} \r\n                        type=\"room\" \r\n                        to={this.props.rooms.activeRoom.title} \r\n                        dialogId={this.props.rooms.activeRoom.dialog._id} \r\n                        roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6 theme-screen\">\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Room)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../../Partials/Loading'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","import { CALL_SET_USER, CALL_SET_STATUS } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user, status: 'outcoming'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/call`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id: user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((call) => {\r\n        if(call.error) {\r\n            dispatch({\r\n                type: CALL_SET_STATUS,\r\n                payload: call.error\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_STATUS,\r\n        payload: 'active'\r\n    })\r\n    WebRtcController.call(store.getState().call.user._id)\r\n\r\n    fetch(`${urlApi}/api/call/accept`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: store.getState().call.user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ActionMenu from '../../Partials/ActionMenu'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabStyles)(Fab);\r\nconst CustomFab = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 36, \r\n                        height: 36, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>{this.props.langProps.online}</p>}\r\n                    </div></>\r\n\r\n                    {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <CustomFab id={'dialog-more-actions-'+dialog._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                        <MoreVertIcon style={{color: '#008FF7'}} />\r\n                    </CustomFab>\r\n                    <ActionMenu event=\"click\" bottom={true} right={true} actions={[\r\n                        {text: this.props.langProps.show_investments, action: () => {\r\n                            this.props.history.push({\r\n                                search: `?modal=investments`\r\n                             })\r\n                        }},\r\n                    ]} from={'dialog-more-actions-'+dialog._id} />\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>{this.props.langProps.user_not_found}</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog)))\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Room from '../Pages/User/Room';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport { randomInteger } from '../Controllers/FunctionsController';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport CallIcon from '@material-ui/icons/Call';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <span style={{cursor: 'pointer'}} onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=slider`\r\n                    })\r\n                    store.dispatch({\r\n                        type: SLIDER_SET,\r\n                        payload: {\r\n                            images: [{path: this.props.user.avatar.original}],\r\n                            index: 0\r\n                        }\r\n                    })\r\n                }}><Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                /></span>\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.message}</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.call}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.plus_friend}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.accept}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.decline}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.remove}</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PermMediaOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=settings`\r\n                    })\r\n                }}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.settings}</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.contacts}</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px',\r\n        minHeight: 100\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {!user && this.props.user._id !== this.props.userId && <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />}\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Incoming requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Outgoing requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.contacts}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>{this.props.langProps.friends}</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>{this.props.langProps.inbox}</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>{this.props.langProps.outbox}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n            {this.state.activeTab === 'outbox' && <Outbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.new_chat}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.invite}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.edit_room}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder={this.props.langProps.title}\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label={this.props.langProps.private_room}\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.save}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.delete}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.forward}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.outcoming_call}</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.incoming_call}</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <Avatar \r\n                        style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`}} \r\n                        name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                        avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                    />\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">{this.props.call.user.city ? this.props.call.user.city : this.props.langProps.not_indicated}</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    The line is busy... <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} canceled your call <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>Error</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>have_active_call</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: this.props.index\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        images: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                if(!images.error) {\r\n                    images = images.map(x => x.data)\r\n                    \r\n                    this.setState({images, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.images.map((image, index) => {\r\n                return (\r\n                    <div className=\"investment-image\">\r\n                        <img key={index} style={{cursor: 'pointer'}} onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?modal=slider`\r\n                            })\r\n                            this.props.dispatch({\r\n                                type: SLIDER_SET,\r\n                                payload: {\r\n                                    images: this.state.images,\r\n                                    index\r\n                                }\r\n                            })\r\n                        }} src={image.path} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.images.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <PhotoLibraryIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed images from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport Audio from '../../Partials/Chat/Audio';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        sounds: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(sounds => {\r\n                if(!sounds.error) {\r\n                    sounds = sounds.map(x => x.data)\r\n                    \r\n                    this.setState({sounds, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.sounds.map((sound, index) => {\r\n                return (\r\n                    <Audio\r\n                        key={index}\r\n                        fileName={sound.name}\r\n                        src={sound.path}\r\n                    />\r\n                )\r\n            })}\r\n            {(!this.state.sounds.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <AudiotrackIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed sounds from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport Audio from '../../Partials/Chat/Audio';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        files: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(files => {\r\n                if(!files.error) {\r\n                    files = files.map(x => x.data)\r\n                    \r\n                    this.setState({files, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340, marginLeft: 15}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)',\r\n                }} />}\r\n            {this.state.files.map((file, index) => {\r\n                return (\r\n                    <div className=\"message-file\" style={{cursor: 'pointer'}} key={index} onClick={(e) => {\r\n                        window.open(file.path, '_self');\r\n                    }}>\r\n                        <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                        <div className=\"message-file-info\">\r\n                            <p className=\"message-file-name\">{file.name}</p>\r\n                            <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                        </div>\r\n                        <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.files.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <FileCopyIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed files from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport Images from './investmentsPartials/Images';\r\nimport Sounds from './investmentsPartials/Sounds';\r\nimport Files from './investmentsPartials/Files';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'images'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.investments}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'images' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'images'})}}>{this.props.langProps.photos}</span>\r\n                <span className={this.state.activeTab === 'sounds' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'sounds'})}}>{this.props.langProps.sounds}</span>\r\n                <span className={this.state.activeTab === 'files' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'files'})}}>{this.props.langProps.files}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'images' && <Images />}\r\n            {this.state.activeTab === 'sounds' && <Sounds />}\r\n            {this.state.activeTab === 'files' && <Files />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport ActionMenu from '../Partials/ActionMenu';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Settings\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.settings}</h2>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=profile'\r\n                })\r\n            }}>{this.props.langProps.change_profile}</p>\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=language'\r\n                })\r\n            }}>{this.props.langProps.language}</p>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                const { cookies } = this.props;\r\n                cookies.remove(\"apiToken\", { path: \"/\" });\r\n                window.location.reload()\r\n            }}>{this.props.langProps.logout}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport store from '../Redux/store';\r\nimport { USER_EDIT } from '../Redux/constants';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        firstName: this.props.user.name.first,\r\n        lastName: this.props.user.name.last,\r\n        city: this.props.user.city,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/user/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((user) => {\r\n            if(user.error) {\r\n                this.setState({error: true, errors: user.errors})\r\n            } else {\r\n                store.dispatch({\r\n                    type: USER_EDIT,\r\n                    payload: {\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        city: this.state.city\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.change_profile}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.firstName} \r\n                    onChange={(e) => {this.setState({firstName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.firstName}\r\n                    style={{marginTop: 0}} \r\n                />\r\n                {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.lastName} \r\n                    onChange={(e) => {this.setState({lastName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 0}} \r\n                    placeholder={this.props.langProps.lastName}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.city} \r\n                    onChange={(e) => {this.setState({city: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.city}\r\n                />\r\n\r\n                {(this.state.firstName !== this.props.user.name.first || this.state.lastName !== this.props.user.name.last || this.state.city !== this.props.user.city) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.save}</button>}\r\n                {(this.state.firstName === this.props.user.name.first && this.state.lastName === this.props.user.name.last && this.state.city === this.props.user.city) && <button className=\"button-gray\" onClick={() => {\r\n                        this.props.history.goBack()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport ActionMenu from '../Partials/ActionMenu';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_LANG } from '../Redux/constants';\r\nimport { urlApi } from '../config';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    setLang(lang) {\r\n        store.dispatch({\r\n            type: USER_SET_LANG,\r\n            payload: lang\r\n        })\r\n\r\n        fetch(`${urlApi}/api/user/set-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_language}</h2>\r\n\r\n            <p className={`settings-item ${this.props.user.lang === 'en' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'en')\r\n                this.setLang('en')\r\n            }}>{this.props.langProps.english}</p>\r\n            <p className={`settings-item ${this.props.user.lang === 'ru' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'ru')\r\n                this.setLang('ru')\r\n            }}>{this.props.langProps.russian}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD, SLIDER_SET } from '../Redux/constants';\r\nimport Call from './Call';\r\nimport Slider from '../Partials/Chat/Slider';\r\nimport Investments from './Investments';\r\nimport Settings from './Settings';\r\nimport Profile from './Profile';\r\nimport Language from './Language';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Settings isOpen={this.state.modal === 'settings'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n            \r\n            {this.state.modal === 'profile' && <Profile isOpen={this.state.modal === 'profile'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.modal === 'language' && <Language isOpen={this.state.modal === 'language'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n            {this.state.modal === 'slider' && !!this.props.slider.images.length && <Slider index={this.props.slider.index} images={this.props.slider.images} close={() => {\r\n                this.props.dispatch({\r\n                    type: SLIDER_SET,\r\n                    payload: {\r\n                        images: [],\r\n                        index: 0\r\n                    }\r\n                })\r\n                this.props.history.goBack()\r\n            }} />}\r\n            \r\n            {this.props.match.params.id && this.state.modal === 'investments' && <Investments \r\n                isOpen={this.props.match.params.id && this.state.modal === 'investments'} \r\n                dialogId={this.props.match.params.id} \r\n                close={() => {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                }}\r\n            />}\r\n\r\n            {this.props.call.user && <Call isOpen={true} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call,\r\n        slider: state.slider\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications}) => {\r\n          SocketController.init(apiToken)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          localStorage.setItem('drafts', JSON.stringify([]));\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      localStorage.setItem('drafts', JSON.stringify([]));\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MultiLang, withLang } from \"react-multi-language\";\nimport Languages from './languages'\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                        <MultiLang lang={this.props.user.isAuth ? this.props.user.lang : 'en'}/>\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}