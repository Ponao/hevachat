{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","Partials/Room/RoomItem.js","Partials/Loading.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Redux/actions/rooms.js","Modals/CreateRoom.js","Sidebar/Rooms.js","Sidebar/Notifications.js","Redux/actions/user.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/Slider.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Pages/User/Dialog.js","Router/config.js","Pages/NoMatch.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","name","toUpperCase","Component","INITIAL_STATE","isAuth","user","state","action","type","payload","roomLang","isFetching","getted","activeRoom","isError","rooms","room","typers","canLoad","isLoading","remoteStream","error","users","filter","_id","map","roomId","userId","dialog","messages","message","_newId","isEdit","find","x","isRead","speaking","micOn","musicOn","dialogs","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","editLast","messageIds","typing","combineReducers","media","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","min","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","length","title","document","setForceTitle","WebRtcPeerConnection","activeRoomId","localStream","speechEvents","RTCPeerConnection","window","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","getAudioTracks","enabled","store","dispatch","lang","close","SocketController","leaveRoom","stop","e","candidate","addIceCandidate","sdpAnswer","answer","sdp","setRemoteDescription","stream","MediaStream","getReceivers","forEach","sender","addTrack","track","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","urlApi","socket","activeLang","init","apiToken","io","transports","emit","getState","setTimeout","answerSdp","WebRtcController","otherId","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","last","console","log","getSocketId","id","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","sendRoomIceCandidate","sendRoomOfferSdp","offerSdp","typingDialog","dialogsGet","existDialog","dialogGet","isNotFound","reverse","dialogLoad","sendMessage","formData","FormData","images","files","sounds","append","file","push","localMessage","text","recentMessages","now","m","socketId","messageRes","catch","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","RoomItem","textDecoration","to","Button","width","height","fontSize","fontWeight","backgroundColor","color","charAt","isPrivate","index","key","first","showLoading","element","getHM","date","time","hours","getHours","minutes","getMinutes","toString","ActionMenu","active","left","top","getElementById","from","rect","getBoundingClientRect","setState","clientWidth","addEventListener","toggleActive","bind","removeEventListener","actions","onClick","DialogItem","randomId","history","location","pathname","preventDefault","myUser","getTime","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","LastMessageDate","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","position","bottom","right","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","contextType","roomsGet","err","roomsAdd","errors","param","msg","customStylesModal","overlay","zIndex","content","minWidth","marginRight","transform","borderRadius","boxShadow","CustomCheckbox","border","checked","Checkbox","CreateRoom","roomsActions","isOpen","onRequestClose","contentLabel","onSubmit","value","onChange","target","marginBottom","placeholder","FormControlLabel","control","label","Rooms","isOpenCreateRoom","roomsBlock","Notifications","loginUser","logoutUser","updateRoomLang","Languages","userActions","UserSidebar","activeTab","Login","email","password","data","cookies","set","token","withCookies","Register","firstName","lastName","audioDurationInterval","Audio","duration","audio","thisAudio","getElementsByName","src","volume","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","parentElement","pause","stopPropagation","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","setInterval","clearInterval","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","selected","unSelect","onSelect","background","isRecent","cursor","padding","lineHeight","canSelect","replace","countRecent","image","isBlur","openSlider","draggable","alt","sound","open","toFixed","ceil","sliderImages","PureComponent","isIE","documentMode","isEdge","StyleMedia","waitActiveUser","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","getClientHeight","getScrollHeight","unRead","clearTimeout","prevProps","scrollToBottom","LinearProgress","viewTypers","userName","loading","CircularProgress","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","Slider","opacity","InputMessage","inputMessageHeight","event","items","clipboardData","originalEvent","kind","getAsFile","addFile","test","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","accept","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","waitDraft","Chat","isOpenSlider","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","toast","POSITION","TOP_CENTER","URL","webkitURL","createObjectURL","Blob","split","newText","prevText","textAlign","RoomJoinError","Members","srcObject","autoPlay","Room","waitSocket","match","params","Main","order","innerWidth","routes","exact","NoMatch","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","listen","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f30540c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_DELETE,\r\n    ROOMS_EDIT,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: []\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: []\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","export function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import adapter from 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\nconst RTCPeerConnection = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\nconst RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraints = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst options = {\r\n    iceServers: [\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\n// const getMedia = navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n\r\nfunction getUserMedia(callback) {    \r\n    // getMedia({\r\n    //     audio: true,\r\n    //     video: false\r\n    // }).then(callback);\r\n\r\n    function onerror(e) {\r\n        console.log(JSON.stringify(e, null, '\\t'));\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia((stream) => {\r\n            localStream = stream\r\n            let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n            let dest = audioCtx.createMediaStreamDestination ();\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPeerConnection(options)\r\n            \r\n            WebRtcPeerConnection.addStream(stream)\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraints).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer);\r\n                \r\n                onRoomOffer(null, offer)\r\n            });\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getAudioTracks()[0].stop()\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getAudioTracks()[0].stop()\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        let candidate = new RTCIceCandidate(e)\r\n        WebRtcPeerConnection.addIceCandidate(candidate)\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        let answer = new RTCSessionDescription({\r\n            type: 'answer',\r\n            sdp: sdpAnswer\r\n        })\r\n        \r\n        WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n        let stream = new MediaStream();\r\n\r\n        WebRtcPeerConnection.getReceivers().forEach(function (sender) {\r\n            stream.addTrack(sender.track);\r\n        });\r\n\r\n        remoteStream = stream\r\n\r\n        store.dispatch({\r\n            type: ROOMS_SET_REMOTE_STREAM,\r\n            payload: stream\r\n        })\r\n\r\n        speechEvents = hark(localStream, {});\r\n \r\n        speechEvents.on('speaking', function() {\r\n            SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n        });\r\n    \r\n        speechEvents.on('stopped_speaking', function() {\r\n            SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n        });\r\n    }\r\n}","export const urlApi = 'http://151.248.123.145:8000'","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = null\r\nlet activeLang = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then((user) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n        // console.log(123)\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_LOAD_MESSAGES,\r\n        payload: {dialogId,  messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}{this.props.room.title}</p>\r\n                        <div className=\"users\">\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} style={{width: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","export function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && 'Today'\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive() {\r\n        let element = document.getElementById(this.props.from)\r\n        let rect = element.getBoundingClientRect()\r\n        \r\n        this.setState({left: rect.x+element.clientWidth, top: rect.y})\r\n        this.setState({active: !this.state.active})\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n                    <div>\r\n                        <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>You:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <>{this.props.lastMessage.text}</>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.images[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span style={{color: '#008FF7'}}>Фотографии [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.sounds[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span style={{color: '#008FF7'}}>Аудио [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.files[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span style={{color: '#008FF7'}}>Файлы [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">{this.props.user.name.first} typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Chats</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>You dont have chats, lets create new</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages))\r\n","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(room => {\r\n            if(room.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: room.errors[0]\r\n                })\r\n                \r\n                return\r\n            }\r\n\r\n            room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n            room.users.map(x => {\r\n                x.speaking = false\r\n            })\r\n\r\n            setForceTitle(room.title)\r\n\r\n            dispatch({\r\n                type: ROOMS_JOIN_ROOM,\r\n                payload: {room, canLoad: room.dialog.messages.length === 50}\r\n            })\r\n            \r\n            SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n            WebRtcController.connectRoom(room._id)\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            this.props.roomsActions.roomsAdd(room)\r\n            SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">New room</h2>\r\n\r\n            <form onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder=\"Title\" \r\n                />\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label=\"Private theme\"\r\n                />\r\n\r\n                <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}}>Next</button>\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateRoom)","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Modal\r\nimport ModalCreateRoom from '../Modals/CreateRoom'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ModalCreateRoom isOpen={this.state.isOpenCreateRoom} close={() => {this.setState({isOpenCreateRoom: false})}} />\r\n\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Rooms</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Create your first room in this language</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Что то пошло не так...</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create room\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.setState({isOpenCreateRoom: true})}}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Rooms)","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Notifications</h2>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notifications\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET\r\n} from '../constants'\r\nimport store from '../store'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.history.push('/')\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Language</h2>\r\n\r\n                    <span style={{color: this.props.user.roomLang === 'eng' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }}>English</span>\r\n                    <span style={{color: this.props.user.roomLang === 'rus' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }}>Russian</span>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: 'languages'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li><Avatar style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}><NotificationsNoneIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserSidebar)","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(this.state.audio) {\r\n            this.state.audio.parentElement.className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) { \r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound active'\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\nimport ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\n\r\nlet ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <Avatar style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} />\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>{`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                .replace(/&amp;/g, '&')\r\n                                .replace(/&gt;/g, '>')\r\n                                .replace(/&lt;/g, '<')\r\n                                // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                            }\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.openSlider(images)\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.openSlider(images)\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Message)","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, LinearProgress, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getClientHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight()/3 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop - 4)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.canLoad)) && <div className=\"dialog-loading\">\r\n                        <LinearProgress style={{backgroundColor: '#EFF4F8'}} />\r\n                    </div>}\r\n                    <div className=\"offset-top\"></div>\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} typing</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} typing</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Write your first message to {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialog)","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `Вложения [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">Attachment messages</h3>\r\n                        <p className=\"message-text\">{`${this.props.recentMessages.length} messages`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attachment","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: 0\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <div className=\"placeholder\">Write message...</div>}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    Reply\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\">\r\n                    Forward\r\n                </Button>\r\n\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n\r\n                {(!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport Slider from './Slider'\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\nlet waitDraft = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: [],\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isOpenSlider: false,\r\n        sliderImages: [],\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = ''\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(waitDraft)\r\n            clearTimeout(waitDraft)\r\n\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            waitDraft = setTimeout(() => {\r\n                let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n                drafts['draft-'+this.props.dialogId] = newText\r\n                if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                    delete drafts['draft-'+this.props.dialogId]\r\n                localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            }, 500);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.isOpenSlider && <Slider images={this.state.sliderImages} close={() => {this.setState({isOpenSlider: false, sliderImages: []})}} />}\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    openSlider={(sliderImages) => {this.setState({sliderImages, isOpenSlider: true})}}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\">{this.props.rooms.activeRoom.error.msg}</p>\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport Avatar from '../../Partials/User/Avatar';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Members extends React.Component {\r\n    render() {\r\n        return <Scrollbars\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"theme-members scroll\"\r\n            autoHide\r\n        >\r\n            {this.props.users.map((user, index) => \r\n                <div key={index} className=\"member\">\r\n                    <Avatar name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                    {user.speaking && <span className=\"speaking\"></span>}\r\n                </div>\r\n            )}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6\">\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} online</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat messages={this.props.rooms.activeRoom.dialog.messages} type=\"room\" to={this.props.rooms.activeRoom.title} dialogId={this.props.rooms.activeRoom.dialog._id} roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6 theme-screen\">\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Room))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../../Partials/Loading'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../../Partials/Room/RoomItem'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles } from '@material-ui/core'\r\nimport showLoading from '../../Partials/Loading'\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><Avatar style={{\r\n                        width: 32, \r\n                        height: 32, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} />\r\n                    <div className=\"user-info\">\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        <p className=\"last-message\">Last message</p>\r\n                    </div></>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>User not found</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog))\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Room from '../Pages/User/Room';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport { randomInteger } from '../Controllers/FunctionsController';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={randomInteger(0, 1000)} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount}) => {\r\n          SocketController.init(apiToken)\r\n          // SocketController.joinLang(user.roomLang)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.state.userHeader && <UserSidebar />}\n                        <AppRouter />\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}