{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/slider.js","Redux/reducers/ban.js","Redux/reducers/toasts.js","Redux/reducers/app.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SoundController.js","Controllers/SocketController.js","Redux/actions/dialogs.js","languages.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Partials/Room/RoomItem.js","Redux/actions/rooms.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Partials/Language/LanguageItem.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Redux/actions/users.js","Redux/actions/call.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Pages/User/Dialog.js","Pages/User/Payment.js","Pages/User/Ban.js","Pages/Auth/AuthSocial.js","Router/config.js","Pages/NoMatch.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Partials/Chat/Slider.js","Modals/investmentsPartials/Images.js","Modals/investmentsPartials/Sounds.js","Modals/investmentsPartials/Files.js","Modals/Investments.js","Modals/Settings.js","Modals/Profile.js","Modals/Language.js","Modals/Mute.js","Modals/Unmute.js","Modals/Banroom.js","Modals/Unbanroom.js","Modals/SendWaning.js","Modals/Warning.js","Modals/ForceAcceptCall.js","Modals/ForcePlaceCall.js","Modals/ForceJoinRoom.js","Modals/Ban.js","Modals/Toast.js","Modals/Toasts.js","Modals/ForceToast.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","avatar","alt","name","src","min","avatarStyle","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","warning","user","state","action","type","payload","roomLang","first","firstName","last","lastName","city","lang","isFetching","getted","activeRoom","isError","rooms","canLoad","force","length","map","room","_id","title","isPrivate","filter","typers","isLoading","remoteStream","muted","error","users","roomId","userId","dialog","messages","message","_newId","files","item","file","sounds","images","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","index","ban","date","numDate","toasts","id","toast","toastType","connecting","app","combineReducers","slider","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","getState","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","timeStamps","time","label","CTX","newMessageSound","Audio","beep","rington","resume","addEventListener","currentTime","promise","play","undefined","_","playNewMessage","stopBeep","pause","stopRington","socket","activeLang","unmuteTimer","counterConnect","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","noReadNotifications","location","pathname","slice","reverse","localStorage","setItem","WebRtcController","socketId","data","errors","clearTimeout","getTime","setTimeout","param","msg","otherId","now","read","playRington","reload","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogsLoad","lastDialogId","firstDialogId","dialogGet","isNotFound","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","append","push","localMessage","text","recentMessages","m","messageRes","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","ru","settings","change_profile","language","logout","back","save","next","last_name_not_empty","first_name_not_empty","title_not_empty","create_room","something_goes_wrong","chats","contacts","inbox","outbox","you_dont_have_friends","search","accept","decline","not_indicated","plus_friend","remove","english","russian","you","write_message","show_investments","you_sure","delete","delete_room","invite_friends","edit_room","investments","photos","missed_call","outcoming_call","incoming_call","canceled_call","select_language","users_not_found","user_not_found","reply","forward","new_room","invite","private_room","start","select_users","new_chat","invited_you_to_the_room","accept_your_friend_request","send_you_friend_request","you_are_not_invited","january","february","march","april","may","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","in","yerstaday","today","just_now","here_wiil_placed_your_notifications","create_your_first_room","you_dont_have_chats","write_your_first_message","attachment_messages","have_max_rooms","room_exist","have_active_call","force_accept_text","force_join_text","force_place_text","delete_room_text","user_busy","cancel_your_call","empty_inv_files","empty_inv_sounds","empty_inv_images","you_banned_in_this_room","to","incoming_request_empty","outgoing_request_empty","day_1","day_2","day_5","minute_1","minute_2","minute_5","hour_1","hour_2","hour_5","week_1","week_2","week_5","ago","en","getHM","hours","getHours","minutes","getMinutes","toString","LastMessageDate","timeR","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","arr","languages","OnlineDate","diff","month_diff","isNaN","declension","ceil","n","text_forms","n1","abs","ActionMenu","active","left","top","element","getElementById","from","composedPath","stopPropagation","rect","getBoundingClientRect","bottom","clientHeight","right","clientWidth","setState","event","toggleActive","bind","removeEventListener","transform","actions","Button","key","onClick","DialogItem","randomId","textDecoration","history","preventDefault","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","myUser","langProps","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","withLang","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","getScrollHeight","getClientHeight","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","contextType","RoomItem","roomsGet","roomsAdd","roomsLoad","lastRoomId","firstRoomId","Rooms","isOpenCreateRoom","roomsActions","roomsBlock","CircularProgress","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","userN","logoutUser","updateRoomLang","uploadAvatar","target","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","LanguageItem","UserSidebar","activeTab","substring","show","Vkontakte","aria-aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","class","Login","email","password","toLowerCase","replace","token","cookies","set","onSubmit","href","marginRight","Facebook","value","onChange","placeholder","withCookies","Register","audioDurationInterval","duration","thisAudio","getElementsByName","volume","onpause","parentElement","onplay","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","otherAudio","getElementsByClassName","startTimer","nativeEvent","offsetX","rangeBlock","thisRange","layerX","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","playBeep","clear","componentDecorator","rel","Message","isHistoryDate","moreHour","date1","date2","isFirst","timeAt","selected","unSelect","onSelect","isRecent","cursor","padding","lineHeight","canSelect","callActions","countRecent","image","isBlur","draggable","sound","open","toFixed","openSlider","sliderImages","PureComponent","usersActions","waitActiveUser","zIndex","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","PlaceHolder","InputMessage","inputMessageHeight","items","clipboardData","originalEvent","kind","getAsFile","addFile","test","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","getItem","setText","lastMyMessage","paste","counter","newText","prevText","customStylesModal","overlay","content","borderRadius","boxShadow","textAlign","RoomJoinError","isOpen","contentLabel","marginBottom","toLocaleString","CustomFab2","Members","srcObject","autoPlay","controls","Room","act","qs","ignoreQueryPrefix","waitSocket","match","params","listen","ownerId","Main","order","CallFab","innerWidth","Payment","tariffs","redirect","tariffId","tariff","price","buy","AuthSocial","routes","exact","NoMatch","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","waitSearch","Contacts","q","searchResult","onSearch","selectUsers","customStylesModalCreate","customStylesModalInvite","minHeight","justifyContent","CreateRoom","step","onRequestClose","maxLength","FormControlLabel","control","Friends","transition","OtherUser","success","unban","MyUser","User","goBack","Inbox","Outbox","CreateDialog","invited_sents","you_have_invite_users","DeleteRoom","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","justifyItems","alignContent","fullScreen","overlayClassName","Slider","opacity","Images","Sounds","Files","Settings","setLang","CustomRadio","Radio","selectRoom","selectRoomId","limits","Warning","Toast","Toasts","force_toast_text","MainModal","modal","mute","unmute","banroom","unbanroom","sendwarning","Mute","Unmute","Banroom","Unbanroom","SendWaning","Profile","Invite","EditRoom","Forward","Investments","ForceJoinRoom","ForceAcceptCall","ForcePlaceCall","ForceToast","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"o+EAEaA,G,OAAeC,IAAMC,iB,uECqBnBC,E,uKAhBP,OACI,yBAAKC,UAAU,cAAcC,MAAOC,KAAKC,MAAMF,OAC1CC,KAAKC,MAAMC,QAAU,yBAAKC,IAAKH,KAAKC,MAAMG,KAAMC,IAAKL,KAAKC,MAAMC,OAAOI,IAAKP,MAAOC,KAAKC,MAAMM,YAAaT,UAAU,sBACtH,8BAAOE,KAAKC,MAAMG,KAAKI,eACtBR,KAAKC,MAAMQ,QAAU,0BAAMX,UAAU,kBAErCE,KAAKC,MAAMS,QAAU,oCACK,WAAtBV,KAAKC,MAAMS,QAAuB,0BAAMZ,UAAU,uBAAsB,kBAAC,IAAD,CAAeC,MAAO,CAACY,MAAO,OAAQC,SAAU,OAClG,WAAtBZ,KAAKC,MAAMS,QAAuB,0BAAMZ,UAAU,uBAAsB,kBAAC,IAAD,CAAcC,MAAO,CAACY,MAAO,OAAQC,SAAU,OACjG,YAAtBZ,KAAKC,MAAMS,QAAwB,0BAAMZ,UAAU,uBAAsB,kBAAC,IAAD,CAASC,MAAO,CAACY,MAAO,OAAQC,SAAU,a,GAXnHjB,IAAMkB,W,8GCKrBC,EAAgB,CAClBC,QAAQ,EACRC,SAAS,GAyBEC,EAtBF,WAAoC,IAAnCC,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAC5C,OAAOA,EAAOC,MACV,IChBkB,aDiBd,OAAO,uCAAKF,GAAUC,EAAOE,SAA7B,IAAsCN,QAAQ,IAElD,IClBmB,cDmBf,MAAO,CAAEA,QAAQ,EAAOC,SAAS,GACrC,ICnB6B,wBDoBzB,OAAO,2BAAKE,GAAZ,IAAmBI,SAAUH,EAAOE,UACxC,ICpBuB,kBDqBnB,OAAO,2BAAKH,GAAZ,IAAmBhB,OAAQiB,EAAOE,UACtC,ICrBiB,YDsBb,OAAO,2BAAKH,GAAZ,IAAmBd,KAAM,CAACmB,MAAOJ,EAAOE,QAAQG,UAAWC,KAAMN,EAAOE,QAAQK,UAAWC,KAAMR,EAAOE,QAAQM,OACpH,ICtBqB,gBDuBjB,OAAO,2BAAKT,GAAZ,IAAmBU,KAAMT,EAAOE,UACpC,ICvBwB,mBDwBpB,OAAO,2BAAKH,GAAZ,IAAmBF,QAASG,EAAOE,UACvC,QACI,OAAOH,I,QEAbJ,EAAgB,CAClBe,YAAY,EACZC,QAAQ,EACRC,YAAY,EACZC,SAAS,EACTC,MAAO,GACPC,SAAS,EACTC,OAAO,GA+HIF,EA5HD,WAAoC,IAAnCf,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IDnCiB,YCoCb,OAAO,2BAAKF,GAAZ,IAAmBe,MAAOd,EAAOE,QAASQ,YAAY,EAAOC,QAAQ,EAAMI,QAAmC,KAA1Bf,EAAOE,QAAQe,SAEvG,IDTqB,gBCUjB,OAAO,2BAAKlB,GAAZ,IAAmBe,MAAM,GAAD,mBAAOf,EAAMe,OAAb,YAAuBd,EAAOE,UAAWa,QAAmC,KAA1Bf,EAAOE,QAAQe,SAC7F,IDfqB,gBCgBjB,OAAO,2BAAKlB,GAAZ,IAAmBW,YAAY,EAAMC,QAAQ,EAAOE,SAAS,IAEjE,IDnBuB,kBCoBnB,OAAO,2BAAKd,GAAZ,IAAmBW,YAAY,EAAOC,QAAQ,EAAME,SAAS,IAEjE,ID7CiB,YC8Cb,OAAO,2BAAKd,GAAZ,IAAmBe,MAAM,CAAGd,EAAOE,SAAX,mBAAuBH,EAAMe,UACzD,IDtBuB,kBCuBnB,OAAO,2BAAKf,GAAZ,IAAmBe,MAAOf,EAAMe,MAAMI,KAAI,SAAAC,GAAI,OAC1CnB,EAAOE,QAAQkB,MAAQD,EAAKC,IAA5B,2BAAuCD,GAAvC,IAA6CE,MAAOrB,EAAOE,QAAQmB,MAAOC,UAAWtB,EAAOE,QAAQoB,YAAaH,OAEzH,IDxByB,oBCyBrB,OAAO,2BAAKpB,GAAZ,IAAmBe,MAAM,YAAKf,EAAMe,MAAMS,QAAO,SAAAJ,GAAI,OAAIA,EAAKC,MAAQpB,EAAOE,cACjF,IDlDuB,kBCmDnB,OAAO,2BAAKH,GAAZ,IAAmBa,WAAW,2BAAKZ,EAAOE,QAAQiB,MAArB,IAA2BK,OAAQ,GAAIT,QAASf,EAAOE,QAAQa,QAASU,WAAW,EAAOC,cAAc,EAAOC,MAAO3B,EAAOE,QAAQyB,UACtK,ID1BuB,kBC2BnB,OAAO,2BAAK5B,GAAZ,IAAmBa,WAAW,2BAAKb,EAAMa,YAAZ,IAAwBe,MAAO3B,EAAOE,YACvE,ID7CwB,mBC8CpB,OAAO,2BAAKH,GAAZ,IAAmBa,WAAY,CAAEgB,MAAO5B,EAAOE,WACnD,IDrCgC,2BCsC5B,OAAO,2BAAKH,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBiB,MAAM,YACrD9B,EAAMa,WAAWiB,MAAMN,QAAO,SAAAzB,GAC7B,OAAOA,EAAKsB,MAAQpB,EAAOE,gBAGvC,IDnCuB,kBCoCnB,OAAO,2BAAKH,GAAZ,IAAmBiB,MAAOhB,EAAOE,UACrC,ID9C+B,0BC+C3B,OAAO,2BAAKH,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBiB,MAAM,GAAD,mBAAO9B,EAAMa,WAAWiB,OAAxB,CAA+B7B,EAAOE,cACrG,ID3C0B,qBC4CtB,OAAO,2BAAKH,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBS,MAAOrB,EAAOE,QAAQmB,MAAOC,UAAWtB,EAAOE,QAAQoB,cACjH,IDnEwB,mBCoEpB,OAAO,2BAAKvB,GAAZ,IAAmBa,YAAY,IACnC,IDpE4B,uBCqExB,OAAO,2BAAKb,GAAZ,IAAmBe,MAAOf,EAAMe,MAAMI,KAAI,SAAAC,GAAI,OAC1CnB,EAAOE,QAAQ4B,SAAWX,EAAKC,IAA/B,2BACKD,GADL,IACWU,MAAM,CAAG7B,EAAOE,QAAQJ,MAAnB,mBAA4BqB,EAAKU,UACjDV,OAER,IDzE6B,wBC0EzB,OAAO,2BAAKpB,GAAZ,IAAmBe,MAAOf,EAAMe,MAAMI,KAAI,SAAAC,GAAI,OAC1CnB,EAAOE,QAAQ4B,SAAWX,EAAKC,IAA/B,2BACKD,GADL,IACWU,MAAM,YACNV,EAAKU,MAAMN,QAAO,SAAAzB,GACjB,OAAOA,EAAKsB,MAAQpB,EAAOE,QAAQ6B,aAI/CZ,OAER,IDnFyB,oBCoFrB,OAAO,2BAAKpB,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBoB,OAAO,2BAAMjC,EAAMa,WAAWoB,QAAxB,IAAgCC,SAAS,GAAD,mBAAOlC,EAAMa,WAAWoB,OAAOC,UAA/B,CAAyCjC,EAAOE,gBACxJ,IDpF6B,wBCqFzB,OAAO,2BAAKH,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBoB,OAAO,2BAAMjC,EAAMa,WAAWoB,QAAxB,IAAgCC,SAAUlC,EAAMa,WAAWoB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IlC,EAAOE,QAAQkB,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcT,WAAW,EAAOL,IAAKpB,EAAOE,QAAQiC,OAChDC,MAAOF,EAAQE,MAAMlB,KAAI,SAAAmB,GAAS,OAAO,2BAAKA,GAAZ,IAAkBC,MAAM,OAC1DC,OAAQL,EAAQK,OAAOrB,KAAI,SAAAmB,GAAS,OAAO,2BAAKA,GAAZ,IAAkBC,MAAM,OAC5DE,OAAQN,EAAQM,OAAOtB,KAAI,SAAAmB,GAAS,OAAO,2BAAKA,GAAZ,IAAkBC,MAAM,SAEhEJ,WAER,ID7F2B,sBC8FvB,OAAO,2BAAKnC,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBoB,OAAO,2BAAMjC,EAAMa,WAAWoB,QAAxB,IAAgCC,SAAUlC,EAAMa,WAAWoB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IlC,EAAOE,UAAYgC,EAAQd,IAA3B,2BACKc,GADL,IACcT,WAAW,EAAOZ,SAAS,IACzCqB,WAER,IDlG0B,qBCmGtB,OAAO,2BAAKnC,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBoB,OAAO,2BAAMjC,EAAMa,WAAWoB,QAAxB,IAAgCC,SAAUlC,EAAMa,WAAWoB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IlC,EAAOE,QAAQkB,MAAQc,EAAQd,IAA/B,uCACKc,GAAYlC,EAAOE,SADxB,IACiCuC,QAAQ,IACzCP,WAER,IDrG4B,uBCsGxB,OAAO,2BAAKnC,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBoB,OAAO,2BAAMjC,EAAMa,WAAWoB,QAAxB,IAAgCC,SAAS,YAC9FlC,EAAMa,WAAWoB,OAAOC,SAASV,QAAO,SAAAW,GACvC,OAAQlC,EAAOE,QAAQwC,MAAK,SAAAC,GAAC,OAAIA,IAAMT,EAAQd,iBAI3D,ID9G0B,qBC+GtB,OAAO,2BAAKrB,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBoB,OAAO,2BAAMjC,EAAMa,WAAWoB,QAAxB,IAAgCC,SAAUlC,EAAMa,WAAWoB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC7IA,EAAQU,QAAUV,EAAQpC,KAAKsB,MAAQpB,EAAOE,QAE/CgC,EAFA,2BACKA,GADL,IACcU,QAAQ,aAG9B,IDjH2B,sBCkHvB,OAAO,2BAAK7C,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBoB,OAAO,2BAAMjC,EAAMa,WAAWoB,QAAxB,IAAgCC,SAAUlC,EAAMa,WAAWoB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC7IA,EAAQU,QAAUV,EAAQpC,KAAKsB,MAAQpB,EAAOE,QAE/CgC,EAFA,2BACKA,GADL,IACcU,QAAQ,aAG9B,IDlH+B,0BCmH3B,OAAO,2BAAK7C,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBc,aAAc1B,EAAOE,YAC/E,IDrHyB,oBCsHrB,OAAO,2BAAKH,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBG,SAAS,EAAOU,WAAW,MACrF,IDxH2B,sBCyHvB,OAAO,2BAAK1B,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBa,WAAW,EAAOV,QAASf,EAAOE,QAAQa,QAASiB,OAAO,2BAAMjC,EAAMa,WAAWoB,QAAxB,IAAgCC,SAAS,GAAD,mBAAMjC,EAAOE,QAAQ+B,UAArB,YAAkClC,EAAMa,WAAWoB,OAAOC,iBACrN,ID5HuB,kBC6HnB,OAAO,2BAAKlC,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBY,OAAO,CAAGxB,EAAOE,SAAX,mBAAuBH,EAAMa,WAAWY,aACxG,ID7H0B,qBC8HtB,OAAO,2BAAKzB,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBY,OAAO,YAAMzB,EAAMa,WAAWY,OAAOD,QAAO,SAAAzB,GAC9F,OAAOA,EAAKsB,MAAQpB,EAAOE,gBAEnC,ID7HiC,4BC8H7B,OAAO,2BAAKH,GAAZ,IAAmBa,WAAW,2BAAMb,EAAMa,YAAb,IAAyBiB,MAAO9B,EAAMa,WAAWiB,MAAMX,KAAI,SAAApB,GAAI,OACxFA,EAAKsB,MAAQpB,EAAOE,QAAQ6B,OAA5B,2BACKjC,GADL,IACW+C,SAAU7C,EAAOE,QAAQ2C,WACpC/C,SAER,QACI,OAAOC,IC7JbJ,EAAgB,CAClBmD,OAAO,EACPC,SAAS,EACTC,UAAU,GAmBCC,EAhBD,WAAoC,IAAnClD,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IFsE+B,0BErE3B,OAAO,2BAAKF,GAAZ,IAAmB+C,MAAO9C,EAAOE,UAErC,IFoE0B,qBEnEtB,OAAO,2BAAKH,GAAZ,IAAmBgD,QAAS/C,EAAOE,UAEvC,IFkE2B,sBEjEvB,OAAO,2BAAKH,GAAZ,IAAmBiD,SAAUhD,EAAOE,UAExC,QACI,OAAOH,ICNbJ,EAAgB,CAClBe,YAAY,EACZwC,QAAS,GACTC,gBAAiB,GACjBpC,SAAS,GA+IEmC,EA5IC,WAAoC,IAAnCnD,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAC/C,OAAOA,EAAOC,MACV,IHiBmB,cGhBf,OAAO,2BAAKF,GAAZ,IAAmBmD,QAASlD,EAAOE,QAAQgD,QAASxC,YAAY,EAAO0C,YAAapD,EAAOE,QAAQkD,YAAarC,QAA2C,KAAlCf,EAAOE,QAAQgD,QAAQjC,SAEpJ,IHemB,cGdf,OAAO,2BAAKlB,GAAZ,IAAmBmD,QAAQ,CAAGlD,EAAOE,SAAX,mBAAuBH,EAAMmD,YAC3D,IH0BuB,kBGzBnB,OAAO,2BAAKnD,GAAZ,IAAmBmD,QAAQ,GAAD,mBAAOnD,EAAMmD,SAAb,YAAyBlD,EAAOE,UAAWa,QAAmC,KAA1Bf,EAAOE,QAAQe,SACjG,IHgBoB,eGfhB,OAAO,2BAAKlB,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQmD,WAAarB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUjC,EAAOE,QAAQ+B,SAAUtB,QAAQ,EAAMI,QAASf,EAAOE,QAAQa,UACtFiB,OAER,IHM2B,sBGLvB,OAAO,2BAAKjC,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQmD,WAAarB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAS,GAAD,mBACVD,EAAOC,UADG,CAEbjC,EAAOE,QAAQgC,UAEnBoB,YAAatD,EAAOE,QAAQgC,QAC5BqB,OAAQvD,EAAOE,QAAQqD,OAASvB,EAAOuB,OAAS,EAAIvB,EAAOuB,SAE/DvB,KACFwB,MAAK,SAACC,EAAGC,GACP,OAAKD,EAAEH,aAAeI,EAAEJ,aAGxBG,EAAI,IAAIE,KAAKF,EAAEH,YAAYM,aAC3BF,EAAI,IAAIC,KAAKD,EAAEJ,YAAYM,aAEb,EAAIH,EAAEC,EAAI,EAAI,EALjB,KAMXN,YAAapD,EAAOE,QAAQkD,YAAcrD,EAAMqD,YAAY,EAAIrD,EAAMqD,cAC9E,IHb+B,0BGc3B,OAAO,2BAAKrD,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQmD,WAAarB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC1ClC,EAAOE,QAAQkB,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcT,WAAW,EAAOL,IAAKpB,EAAOE,QAAQiC,OAChDC,MAAOF,EAAQE,MAAMlB,KAAI,SAAAmB,GAAS,OAAO,2BAAKA,GAAZ,IAAkBC,MAAM,OAC1DC,OAAQL,EAAQK,OAAOrB,KAAI,SAAAmB,GAAS,OAAO,2BAAKA,GAAZ,IAAkBC,MAAM,OAC5DE,OAAQN,EAAQM,OAAOtB,KAAI,SAAAmB,GAAS,OAAO,2BAAKA,GAAZ,IAAkBC,MAAM,SAEhEJ,KAEJoB,YAAY,2BAAMtB,EAAOsB,aAAd,IAA2B7B,WAAW,MAErDO,OAER,IH5B6B,wBG6BzB,OAAO,2BAAKjC,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQmD,WAAarB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC1ClC,EAAOE,QAAQkB,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcT,WAAW,EAAOZ,SAAS,IACzCqB,KAEJoB,YAAY,2BAAMtB,EAAOsB,aAAd,IAA2B7B,WAAW,EAAOZ,SAAS,MAErEmB,OAER,IHhC6B,wBGiCzB,OAAO,2BAAKjC,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQ6B,SAAWC,EAAOlC,KAAKsB,IAAtC,2BACKY,GADL,IACalC,KAAK,2BAAMkC,EAAOlC,MAAd,IAAoBR,OAAQU,EAAOE,QAAQZ,OAAQuE,SAAU7D,EAAOE,QAAQ2D,aAC7F7B,OAER,IH7C6B,wBG8CzB,OAAO,2BAAKjC,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQmD,WAAarB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OACzCA,EAAQU,QAAUV,EAAQpC,KAAKsB,MAAQpB,EAAOE,QAAQ6B,OAEvDG,EAFA,2BACKA,GADL,IACcU,QAAQ,OAG1BW,OAAQvD,EAAOE,QAAQqD,OAAS,EAAIvB,EAAOuB,OAC3CD,YAAY,2BAAMtB,EAAOsB,aAAd,IAA2BV,QAAQ,MAElDZ,KACDoB,YAAapD,EAAOE,QAAQkD,YAAcrD,EAAMqD,YAAY,EAAIrD,EAAMqD,cAC7E,IHvD4B,uBGwDxB,OAAO,2BAAKrD,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQmD,WAAarB,EAAOZ,IAAnC,2BACSY,GADT,IACiBC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9ClC,EAAOE,QAAQgC,QAAQd,MAAQc,EAAQd,IAAvC,uCACKc,GAAYlC,EAAOE,QAAQgC,SADhC,IACyCO,QAAQ,IACjDP,KAEJoB,YAAatD,EAAOE,QAAQ4D,SAAf,2BAA+B9B,EAAOsB,aAAgBtD,EAAOE,QAAQgC,SAAYF,EAAOsB,cAEzGtB,OAER,IHlE8B,yBGmE1B,OAAO,2BAAKjC,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQmD,WAAarB,EAAOZ,IAAnC,2BACSY,GADT,IACiBC,SAAS,YAAMD,EAAOC,SAASV,QAAO,SAAAW,GAC/C,OAAQlC,EAAOE,QAAQ6D,WAAWrB,MAAK,SAAAC,GAAC,OAAIA,IAAMT,EAAQd,WAE9DkC,YAAatD,EAAOE,QAAQoD,YAC5BC,OAAQvD,EAAOE,QAAQqD,QAAoC,IAA1BvD,EAAOE,QAAQqD,OAAevD,EAAOE,QAAQqD,OAASvB,EAAOuB,SAElGvB,KACFwB,MAAK,SAACC,EAAGC,GACP,OAAKD,EAAEH,aAAeI,EAAEJ,aAGxBG,EAAI,IAAIE,KAAKF,EAAEH,YAAYM,aAC3BF,EAAI,IAAIC,KAAKD,EAAEJ,YAAYM,aAEb,EAAIH,EAAEC,EAAI,EAAI,EALjB,KAMXN,YAAapD,EAAOE,QAAQkD,aAA8C,IAA/BpD,EAAOE,QAAQkD,YAAoBpD,EAAOE,QAAQkD,YAAcrD,EAAMqD,cACzH,IHpF2B,sBGqFvB,OAAO,2BAAKrD,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,UAAY8B,EAAOZ,IAA1B,2BACSY,GADT,IACiBjB,SAAS,EAAOU,WAAW,IAC5CO,OAGR,IH1F6B,wBG2FzB,OAAO,2BAAKjC,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQmD,WAAarB,EAAOZ,IAAnC,2BACSY,GADT,IACkBP,WAAW,EAAOV,QAASf,EAAOE,QAAQa,QAASkB,SAAS,GAAD,mBAAMjC,EAAOE,QAAQ+B,UAArB,YAAkCD,EAAOC,aACtHD,OAGR,IHrGyB,oBGsGrB,OAAO,2BAAKjC,GAAZ,IAAmBmD,QAASnD,EAAMmD,QAAQhC,KAAI,SAAAc,GAAM,OAChDhC,EAAOE,QAAQ6B,SAAWC,EAAOlC,KAAKsB,IAAtC,2BACKY,GADL,IACagC,OAAQhE,EAAOE,QAAQ8D,SACpChC,OAER,IHrG2B,sBGsGvB,OAAO,2BAAKjC,GAAZ,IAAmBoD,gBAAiBnD,EAAOE,UAC/C,QACI,OAAOH,ICjJbJ,EAAgB,CAClBe,YAAY,EACZC,QAAQ,EACRsD,cAAc,EACdpD,SAAS,EACTE,SAAS,EACTc,MAAO,GACPqC,QAAS,CACLrC,MAAO,GACPlB,QAAQ,EACRI,SAAS,EACTL,YAAY,GAEhByD,UAAW,CACPtC,MAAO,GACPlB,QAAQ,EACRI,SAAS,EACTL,YAAY,GAEhB0D,QAAS,CACLvC,MAAO,GACPlB,QAAQ,EACRI,SAAS,EACTL,YAAY,IAiDLI,EA7CD,WAAoC,IAAnCf,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IJoBiB,YInBb,OAAO,2BAAKF,GAAZ,IAAmB8B,MAAO7B,EAAOE,QAAQgE,QAASnD,QAASf,EAAOE,QAAQa,QAASL,YAAY,EAAOC,QAAQ,IAElH,IJciB,YIbb,OAAO,2BAAKZ,GAAZ,IAAmB8B,MAAM,CAAG7B,EAAOE,SAAX,mBAAuBH,EAAM8B,UACzD,IJagC,2BIZ5B,OAAO,2BAAI9B,GAAX,IAAkBkE,aAAcjE,EAAOE,UAC3C,IJY+B,0BIX3B,OAAO,2BAAKH,GAAZ,IAAmB8B,MAAO9B,EAAM8B,MAAMX,KAAI,SAAApB,GAAI,OAC1CE,EAAOE,QAAQ6B,SAAWjC,EAAKsB,IAA/B,2BACKtB,GADL,IACWuE,aAAcrE,EAAOE,QAAQmE,eAExCvE,OAER,IJOyB,oBINrB,OAAO,2BAAKC,GAAZ,IAAmBmE,QAAQ,2BAAMnE,EAAMmE,SAAb,IAAsBrC,MAAO7B,EAAOE,QAAQ2B,MAAOd,QAASf,EAAOE,QAAQa,QAASL,YAAY,EAAOC,QAAQ,MAC7I,IJM2B,sBILvB,OAAO,2BAAKZ,GAAZ,IAAmBoE,UAAU,2BAAMpE,EAAMoE,WAAb,IAAwBtC,MAAO7B,EAAOE,QAAQ2B,MAAOd,QAASf,EAAOE,QAAQa,QAASL,YAAY,EAAOC,QAAQ,MACjJ,IJKyB,oBIJrB,OAAO,2BAAKZ,GAAZ,IAAmBqE,QAAQ,2BAAMrE,EAAMqE,SAAb,IAAsBvC,MAAO7B,EAAOE,QAAQ2B,MAAOd,QAASf,EAAOE,QAAQa,QAASL,YAAY,EAAOC,QAAQ,MAC7I,IJI4B,uBIHxB,OAAO,2BAAKZ,GAAZ,IAAmBmE,QAAQ,2BAAMnE,EAAMmE,SAAb,IAAsBrC,MAAM,YAAM9B,EAAMmE,QAAQrC,MAAMN,QAAO,SAAAzB,GACnF,OAAOE,EAAOE,QAAQ6B,SAAWjC,EAAKsB,YAE9C,IJC8B,yBIA1B,OAAO,2BAAKrB,GAAZ,IAAmBoE,UAAU,2BAAMpE,EAAMoE,WAAb,IAAwBtC,MAAM,YAAM9B,EAAMoE,UAAUtC,MAAMN,QAAO,SAAAzB,GACzF,OAAOE,EAAOE,QAAQ6B,SAAWjC,EAAKsB,YAE9C,IJF4B,uBIGxB,OAAO,2BAAKrB,GAAZ,IAAmBqE,QAAQ,2BAAMrE,EAAMqE,SAAb,IAAsBvC,MAAM,YAAM9B,EAAMqE,QAAQvC,MAAMN,QAAO,SAAAzB,GACnF,OAAOE,EAAOE,QAAQ6B,SAAWjC,EAAKsB,YAE9C,IJLyB,oBIMrB,OAAO,2BAAKrB,GAAZ,IAAmBmE,QAAQ,2BAAMnE,EAAMmE,SAAb,IAAsBrC,MAAM,CAAG7B,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMmE,QAAQrC,YACnG,IJN2B,sBIOvB,OAAO,2BAAK9B,GAAZ,IAAmBoE,UAAU,2BAAMpE,EAAMoE,WAAb,IAAwBtC,MAAM,CAAG7B,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMoE,UAAUtC,YACzG,IJPyB,oBIQrB,OAAO,2BAAK9B,GAAZ,IAAmBqE,QAAQ,2BAAMrE,EAAMqE,SAAb,IAAsBvC,MAAM,CAAG7B,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMqE,QAAQvC,YACnG,QACI,OAAO9B,IC5EbJ,EAAgB,CAClBe,YAAY,EACZC,QAAQ,EACRC,YAAY,EACZC,SAAS,EACTyD,cAAe,GACff,OAAQ,GAyBGzC,EAtBD,WAAoC,IAAnCf,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IL0DyB,oBKzDrB,OAAO,2BAAKF,GAAZ,IAAmBuE,cAAetE,EAAOE,QAASQ,YAAY,EAAOC,QAAQ,IAEjF,ILwDyB,oBKvDrB,OAAO,2BAAKZ,GAAZ,IAAmBuE,cAAc,CAAGtE,EAAOE,SAAX,mBAAuBH,EAAMuE,gBAAiBf,OAAQxD,EAAMwD,OAAO,IACvG,ILuD0B,qBKtDtB,OAAO,2BAAKxD,GAAZ,IAAmBuE,cAAevE,EAAMuE,cAAcpD,KAAI,SAAAqD,GAAY,OAClEvE,EAAOE,UAAYqE,EAAanD,IAAhC,2BACKmD,GADL,IACmB3B,QAAQ,IAC3B2B,KACDhB,OAAQxD,EAAMwD,OAAS,IAC9B,ILkDiC,4BKjD7B,OAAO,2BAAKxD,GAAZ,IAAmBwD,OAAQvD,EAAOE,UACtC,ILiD4B,uBKhDxB,OAAO,2BAAKH,GAAZ,IAAmBuE,cAAc,YAAKvE,EAAMuE,cAAc/C,QAAO,SAAAgD,GAAY,OAAIA,EAAanD,MAAQpB,EAAOE,cACjH,QACI,OAAOH,IC3BbJ,EAAgB,CAClBG,MAAM,EACNP,OAAQ,OACRmC,cAAc,EACduB,MAAO,QACPjC,MAAO,CAAClB,MAAM,EAAOP,QAAQ,IAoBlBiF,EAjBF,WAAoC,IAAnCzE,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAC5C,OAAOA,EAAOC,MACV,INuEqB,gBMtEjB,OAAO,2BAAKF,GAAZ,IAAmBD,KAAME,EAAOE,QAAQJ,KAAMP,OAAQS,EAAOE,QAAQX,SACzE,INsEuB,kBMrEnB,OAAO,2BAAKQ,GAAZ,IAAmBR,OAAQS,EAAOE,UACtC,INqE8B,yBMpE1B,OAAO,2BAAKH,GAAZ,IAAmB2B,aAAc1B,EAAOE,UAC5C,INoEsB,iBMnElB,OAAO,2BAAKH,GAAZ,IAAmBkD,MAAOjD,EAAOE,UACrC,INmEsB,iBMlElB,OAAO,2BAAKH,GAAZ,IAAmBiB,MAAO,CAAClB,KAAME,EAAOE,QAAQJ,KAAMP,OAAQS,EAAOE,QAAQX,UACjF,QACI,OAAOQ,ICzBbJ,EAAgB,CAClB6C,OAAQ,GACRiC,MAAO,GAaI3E,GAVF,WAAoC,IAAnCC,EAAkC,uDAA1BJ,EAAeK,EAAW,uCAC5C,OAAOA,EAAOC,MACV,IPqFkB,aOpFd,OAAO,2BAAKF,GAAZ,IAAmByC,OAAQxC,EAAOE,QAAQsC,OAAQiC,MAAOzE,EAAOE,QAAQuE,QAE5E,QACI,OAAO1E,ICXbJ,GAAgB,CAClB+E,KAAK,EACLC,KAAM,GACNC,QAAS,GAYEF,GATH,WAAoC,IAAnC3E,EAAkC,uDAA1BJ,GAAeK,EAAW,uCAC3C,OAAOA,EAAOC,MACV,IRuFe,UQtFX,OAAO,2BAAKF,GAAZ,IAAmB2E,KAAK,EAAMC,KAAM3E,EAAOE,QAAQyE,KAAMC,QAAS5E,EAAOE,QAAQ0E,UACrF,QACI,OAAO7E,ICTbJ,GAAgB,CAClBkF,OAAQ,GACR7D,MAAO,CAAC8D,IAAI,EAAO7E,MAAM,IAgBd4E,GAbA,WAAoC,IAAnC9E,EAAkC,uDAA1BJ,GAAeK,EAAW,uCAC9C,OAAOA,EAAOC,MACV,ITyFkB,aSxFd,OAAO,2BAAKF,GAAZ,IAAmB8E,OAAO,CAAD,2BAAQ7E,EAAOE,QAAQ6E,OAAvB,IAA8BC,UAAWhF,EAAOE,QAAQ8E,aAAxD,mBAAuEjF,EAAM8E,WAC1G,ITwFqB,gBSvFjB,OAAO,2BAAK9E,GAAZ,IAAmB8E,OAAO,YAAK9E,EAAM8E,OAAOtD,QAAO,SAAAwD,GAAK,OAAIA,EAAM3D,MAAQpB,EAAOE,cACrF,ITuFuB,kBStFnB,OAAO,2BAAKH,GAAZ,IAAmBiB,MAAO,CAAC8D,GAAI9E,EAAOE,QAAQ4E,GAAI7E,KAAMD,EAAOE,QAAQD,QAC3E,QACI,OAAOF,IChBbJ,GAAgB,CAClBsF,YAAY,GAYDC,GATH,WAAoC,IAAnCnF,EAAkC,uDAA1BJ,GAAeK,EAAW,uCAC3C,OAAOA,EAAOC,MACV,IViG8B,yBUhG1B,OAAO,2BAAKF,GAAZ,IAAmBkF,WAAYjF,EAAOE,UAC1C,QACI,OAAOH,ICCJoF,eAAgB,CAC3BrF,OACAgB,QACAmC,QACAC,UACArB,QACAyC,gBACAE,OACAY,UACAV,OACAG,UACAK,S,UCpBWG,eAAYC,GAAaC,YAAgBC,OCLjD,SAASC,GAActG,EAAKuG,GAC/B,IAAIC,EAAOxG,EAAMyG,KAAKC,UAAYH,EAAM,EAAIvG,GAC5C,OAAOyG,KAAKE,MAAMH,GAGf,SAASI,GAASC,EAAMC,GAE9B,IADA,IAAIC,EACKC,EAAE,EAAGA,EAAIF,EAAWhF,OAAQkF,IAChCF,EAAWE,GAAGH,OAASA,IAC1BE,EAAY,cAAgBD,EAAWE,GAAG9E,OAG5C+E,SAAS/E,MAAS6E,GAAyB,WAGrC,SAASG,GAAchF,GAC7B+E,SAAS/E,MAAQ,cAAgBA,E,+FCV9BiF,IAAuB,EACvBC,IAAe,EACfC,IAAe,EACfC,IAAc,EACd/E,IAAe,EACfgF,IAAe,EAGbC,KAA8BP,SAASQ,aAGvCC,IAAUF,MAAUG,OAAOC,WAE3BC,GAAQC,mBAAqBH,OAAOG,mBAAqBH,OAAOI,sBAAwBJ,OAAOK,wBAC/FC,GAAwBN,OAAOM,uBAAyBN,OAAOO,0BAA4BP,OAAOM,sBAGlGE,GAAuB,CACzBC,qBAAqB,EACrBC,qBAAqB,GAEnBC,GAAuB,CACzBF,qBAAqB,EACrBC,qBAAqB,GAGnBE,GAAc,CAChB,WAAc,CACV,CAACC,KAAM,6BACP,CACEA,KAAM,2BACNC,WAAY,kCACZC,SAAU,cAKdC,GAAc,CAChB,WAAc,CACV,CAACH,KAAM,4BACP,CAACA,KAAM,uBACP,CAACA,KAAM,wBACP,CAACA,KAAM,yBACP,CAACA,KAAM,uBACP,CAACA,KAAM,2BACP,CAACA,KAAM,wBACP,CAACA,KAAM,gCACP,CAACA,KAAM,iCACP,CAACA,KAAM,iCACP,CAACA,KAAM,iCACP,CAACA,KAAM,iCACP,CAACA,KAAM,uBACP,CAACA,KAAM,0BACP,CAACA,KAAM,4BACP,CAACA,KAAM,4BACP,CAACA,KAAM,2BACP,CAACA,KAAM,2BACP,CAACA,KAAM,sBACP,CACEA,KAAM,2BACNC,WAAY,kCACZC,SAAU,cAKpB,SAASE,GAAkBC,GAGvB,OAAOA,GAFQ,IAAKlB,OAAOmB,cAAgBnB,OAAOoB,qBAC9BC,+BACCC,QAGzB,IAAMC,GAAWC,UAAUC,cAAgBD,UAAUE,oBAAsBF,UAAUG,iBAAmBH,UAAUI,eAElH,SAASH,GAAatF,EAAO+E,GACtBrB,IAAQE,GACPyB,UAAUK,aAAaJ,aAAatF,GAAO2F,MAAK,SAAAR,GAC5CJ,EAASI,MAEZS,OAAM,SAACC,GACJf,GAAkBC,MAGtBK,GACIpF,EACA+E,GACA,WACO/E,EAAM8F,MACLV,GACI,CAACW,OAAO,EAAMD,OAAO,GACrBf,GACA,WACID,GAAkBC,MAI1BD,GAAkBC,MAYtC,SAASiB,GAAmBC,GACrBA,EAAEC,WACDC,GAAiBC,qBAAqB,CAACvH,OAAQyE,GAAc4C,UAAWD,EAAEC,YAIlF,SAASG,GAAY1H,EAAO2H,EAAOtG,GAC/B,GAAGrB,EAAO,OAAO4H,QAAQC,IAAI7H,GAE7BwH,GAAiBM,iBAAiB,CAAC3H,OAAQyE,GAAcmD,SAAUJ,EAAOtG,UAG9E,SAAS2G,GAAmBV,GACrBA,EAAEC,WACDC,GAAiBS,qBAAqB,CAAC9H,OAAQyE,GAAc2C,UAAWD,EAAEC,YAInE,kBAGJ1C,KACCA,GAAYqD,iBAAiB,GAAGC,SAAWtD,GAAYqD,iBAAiB,GAAGC,QAC3EC,GAAMC,SAAS,CACXhK,KdtDuB,0BcuDvBC,QAASuG,GAAYqD,iBAAiB,GAAGC,YAP1C,cAYJrI,KACCA,GAAaoI,iBAAiB,GAAGC,SAAWrI,GAAaoI,iBAAiB,GAAGC,QAE7EC,GAAMC,SAAS,CACXhK,Kd/DkB,qBcgElBC,QAASwB,GAAaoI,iBAAiB,GAAGC,YAjB3C,GAuBE,SAACjI,GACVyE,GAAezE,EAEfyG,GAAa,CAACS,OAAO,EAAMD,OAAO,IAAQ,SAACX,IACvC3B,GAAc2B,GAEF0B,iBAAiB,GAAGC,SAAU,EAE1CzD,GAAuB,IAAIU,GAAMU,IALiB,qBAO9BU,EAAO8B,aAPuB,IAOlD,2BAAwC,CAAC,IAA9BC,EAA6B,QACpC7D,GAAqB8D,SAASD,EAAO/B,IARS,8BAWlD9B,GAAqB+D,eAAiBpB,GAEtC3C,GAAqBgE,YAAY7C,IAAsBmB,MAAK,SAACW,GACzDjD,GAAqBiE,oBAAoBhB,GAhEzD,SAAqB3H,EAAO2H,GACxB,GAAG3H,EAAO,OAAO4H,QAAQC,IAAI7H,GAE7BwH,GAAiBoB,iBAAiB,CAAC1I,OAAQyE,GAAcoD,SAAUJ,EAAMkB,MA+D7DC,CAAY,KAAMnB,UA1CnB,eA8CgB,IAAhBzH,EAAe,EAAfA,OAAQrB,EAAO,EAAPA,KACuB,aAAjCuJ,GAAMW,WAAWnG,KAAKjF,SAGxB+G,KACCA,GAAqBsE,QACrBtE,IAAuB,GAGxBC,KACC6C,GAAiByB,UAAU,CAAC/I,SAAQrB,SACpC8F,IAAe,GAGhBE,KACCA,GAAYyD,YAAYY,SAAQ,SAASX,GACrCA,EAAMY,UAEVtE,IAAc,GAGf/E,KACCA,GAAawI,YAAYY,SAAQ,SAASX,GACtCA,EAAMY,UAEVrJ,IAAe,GAGhBgF,KACCA,GAAaqE,OACbrE,IAAe,GAGnBsD,GAAMC,SAAS,CACXhK,KdhI2B,0BciI3BC,SAAS,IAGb8J,GAAMC,SAAS,CACXhK,KdpIsB,qBcqItBC,SAAS,MAtFN,GAyFS,SAACgJ,GACjB,GAAGA,EAAEC,UACD,IAAI6B,EAAOC,aAAY,WAChB3E,KACC4E,cAAcF,GACd1E,GAAqB6E,gBAAgBjC,MAE1C,MAhGA,GAmGM,SAACkC,GACd,IACI,IAAIC,EAAS,IAAIjE,GAAsB,CACnCnH,KAAM,SACNwK,IAAKW,IAGT9E,GAAqBgF,qBAAqBD,GAE1C,IARA,EAQIjD,EAAS,IAAImD,YARjB,eAUqBjF,GAAqBkF,gBAV1C,IAUA,2BAA0D,CAAC,IAAhDC,EAA+C,QACtDrD,EAAOgC,SAASqB,EAAOtB,QAX3B,8BAcAzI,GAAe0G,EAEf4B,GAAMC,SAAS,CACXhK,Kd3NuB,0Bc4NvBC,QAASkI,KAGb1B,GAAegF,KAAKjF,GAAa,KAEpBkF,GAAG,YAAY,WACxBvC,GAAiBwC,iBAAiB,CAAC9J,OAAQyE,QAG/CG,GAAaiF,GAAG,oBAAoB,WAChCvC,GAAiByC,qBAAqB,CAAC/J,OAAQyE,QAErD,MAAO3E,MAlIF,GAuIL,SAACG,GAA4B,IAApB+J,EAAmB,wDAC9BtF,GAAezE,EAEfwG,GAAa,CAACS,OAAO,EAAMD,OAAO,IAAO,SAACX,IACtC3B,GAAc2B,GAEC2D,iBAAiB,KAC5BtF,GAAYsF,iBAAiB,GAAGhC,SAAU,GAE9CzD,GAAuB,IAAIU,GAAMc,IANgB,qBAQ7BM,EAAO8B,aARsB,IAQjD,2BAAwC,CAAC,IAA9BC,EAA6B,QACpC7D,GAAqB8D,SAASD,EAAO/B,IATQ,8BAYjD9B,GAAqB+D,eAAiBT,GAEnCkC,GACCxF,GAAqBgE,YAAYhD,IAAsBsB,MAAK,SAACW,GACzDjD,GAAqBiE,oBAAoBhB,GACzCD,GAAY,KAAMC,EAAO,YAGjCS,GAAMC,SAAS,CACXhK,Kd/MuB,0BcgNvBC,SAAS,QAhKV,GAqKD,WAUN,GATGoG,KACCA,GAAqBsE,QACrBtE,IAAuB,GAGxBE,KACCA,IAAe,GAGhBC,GAAa,CAAC,IAAD,iBACQA,GAAYyD,aADpB,IACZ,2BAA6C,SACnCa,QAFE,8BAKZtE,IAAc,EAGlB,GAAG/E,GAAc,CAAC,IAAD,iBACOA,GAAawI,aADpB,IACb,2BAA8C,SACpCa,QAFG,8BAIbrJ,IAAe,EACfsI,GAAMC,SAAS,CACXhK,KdtOsB,yBcuOtBC,SAAS,IAIjB8J,GAAMC,SAAS,CACXhK,Kd5O0B,yBc6O1BC,SAAS,IAGb8J,GAAMC,SAAS,CACXhK,KdxP2B,0BcyP3BC,SAAS,IAGb8J,GAAMC,SAAS,CACXhK,Kd5PsB,qBc6PtBC,SAAS,IAGb8J,GAAMC,SAAS,CACXhK,KdhQuB,sBciQvBC,SAAS,IAGb8J,GAAMC,SAAS,CACXhK,Kd/PkB,iBcgQlBC,QAAS,WAxNN,GA4NO,WACXuG,IACIA,GAAYsF,iBAAiB,KAC5BtF,GAAYsF,iBAAiB,GAAGhC,SAAWtD,GAAYsF,iBAAiB,GAAGhC,QAC3EC,GAAMC,SAAS,CACXhK,Kd/Qe,sBcgRfC,QAASuG,GAAYsF,iBAAiB,GAAGhC,UAG7CX,GAAiB4C,iBAAiBxF,GAAcC,GAAYsF,iBAAiB,GAAGhC,QAAU,QAAU,WArOrG,GA0OK,YAAwB,IAAtBJ,EAAqB,EAArBA,SAAU1G,EAAW,EAAXA,MACpB+H,EAAOC,aAAY,WAChB3E,KACC4E,cAAcF,GACd1E,GAAqBgF,qBAAqB3B,GAE1CrD,GAAqB2F,aAAa3E,IAAsBsB,MAAK,SAACyC,GAC1D/E,GAAqBiE,oBAAoBc,GACzCjC,GAAiB8C,kBAAkB,CAACnK,OAAQyE,GAAc2F,UAAWd,IAErE,IAAIjD,EAAS,IAAImD,YAEjB,GAAG7J,GAAc,CAAC,IAAD,iBACOA,GAAawI,aADpB,IACb,2BAA8C,SACpCa,QAFG,8BAIbrJ,IAAe,EAVkD,qBAahD4E,GAAqBkF,gBAb2B,IAarE,2BAA0D,CAAC,IAAhDC,EAA+C,QACtDrD,EAAOgC,SAASqB,EAAOtB,QAd0C,8BAiBrEzI,GAAe0G,EAEf4B,GAAMC,SAAS,CACXhK,Kd7Sc,yBc8SdC,QAASkI,IAEb4B,GAAMC,SAAS,CACXhK,KdhTM,iBciTNC,QAAS+C,UAItB,MA7QI,GAgRM,SAACoI,GACd,IAAIL,EAAOC,aAAY,WACnB,GAAG3E,GAAsB,CACrB4E,cAAcF,GACd1E,GAAqBgF,qBAAqBD,GAE1C,IAAIjD,EAAS,IAAImD,YAEjB,GAAG7J,GAAc,CAAC,IAAD,iBACOA,GAAawI,aADpB,IACb,2BAA8C,SACpCa,QAFG,8BAIbrJ,IAAe,EAVE,qBAaA4E,GAAqBkF,gBAbrB,IAarB,2BAA0D,CAAC,IAAhDC,EAA+C,QACtDrD,EAAOgC,SAASqB,EAAOtB,QAdN,8BAiBrBzI,GAAe0G,EAEf4B,GAAMC,SAAS,CACXhK,Kd/UkB,yBcgVlBC,QAASwB,QAGlB,MA1SI,GA6SS,SAACyH,GACjB,GAAGA,EACC,IAAI6B,EAAOC,aAAY,WAChB3E,KACC4E,cAAcF,GACd1E,GAAqB6E,gBAAgBhC,MAE1C,MCxbFiD,GAAS,8BACTC,GAAa,CACtB,CACIC,KAAM,GACNC,MAAO,YAEX,CACID,KAAM,KACNC,MAAO,aAEX,CACID,KAAM,KACNC,MAAO,UAEX,CACID,KAAM,MACNC,MAAO,WAEX,CACID,KAAM,OACNC,MAAO,UAEX,CACID,KAAM,QACNC,MAAO,WAEX,CACID,KAAM,UACNC,MAAO,YC1BTC,GAAM,IAAK1F,OAAOmB,cAAgBnB,OAAOoB,oBAE3CuE,GAAkB,IAAIC,MAAJ,UAAaN,GAAb,2BAClBO,GAAO,IAAID,MAAJ,UAAaN,GAAb,qBACPQ,GAAU,IAAIF,MAAJ,UAAaN,GAAb,wBAEdnB,aAAY,WACRuB,GAAIK,SAASjE,MAAK,iBACnB,KAEH+D,GAAKG,iBAAiB,SAAS,WAC3BH,GAAKI,YAAc,EACnB,IAAIC,EAAUL,GAAKM,YAEHC,IAAZF,GACAA,EAAQpE,MAAK,SAAAuE,OAAStE,OAAM,SAAAjH,GAAU4H,QAAQC,IAAI7H,SAI1DgL,GAAQE,iBAAiB,SAAS,WAC9BF,GAAQG,YAAc,EACtB,IAAIC,EAAUJ,GAAQK,YAENC,IAAZF,GACAA,EAAQpE,MAAK,SAAAuE,OAAStE,OAAM,SAAAjH,GAAU4H,QAAQC,IAAI7H,SAInD,IAAMwL,GAAiB,WAC1BX,GAAgBM,YAAc,EAC9B,IAAIC,EAAUP,GAAgBQ,YAEdC,IAAZF,GACAA,EAAQpE,MAAK,SAAAuE,OAAStE,OAAM,SAAAjH,GAAU4H,QAAQC,IAAI7H,OAc7CyL,GAAW,WACpBV,GAAKI,YAAc,EACnBJ,GAAKW,SAaIC,GAAc,WACvBX,GAAQG,YAAc,EACtBH,GAAQU,SCHRE,IAAS,EACTC,IAAa,EACbC,IAAc,EACdC,GAAiB,EAEN,IACXC,KAAM,SAACC,GACAL,MAGHA,GAASM,KAAG1B,GAAQ,CAAC2B,WAAY,CAAC,YAAa,UAAW,kBAEnDpC,GAAG,cAAc,WACpB3B,GAAMC,SAAS,CACXhK,KjB8BsB,yBiB7BtBC,SAAS,OAIjBsN,GAAO7B,GAAG,WAAW,WAmCjB,GAlCA6B,GAAOQ,KAAK,OAAQH,GAEpBI,MAAM,GAAD,OAAI7B,GAAJ,mBAA6B,CAC9B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhCjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAAmB,IAAjB4F,EAAgB,EAAhBA,KAAMhK,EAAU,EAAVA,KACPgK,GACCP,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQyC,EAAKoK,SAASxN,QAG7BwH,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAwB,EAAlBuE,aACV2F,GAAMC,SAAS,CACXhK,KjBrBC,gBiBsBDC,QAAS,CAACJ,OAAMP,OAAQ,oBAMrCoO,GAAiB,EAAG,CACnBM,MAAM,GAAD,OAAI7B,GAAJ,gBAA0B,CAC3B8B,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA4E,IAA1E9I,EAAyE,EAAzEA,KAAMoD,EAAmE,EAAnEA,QAASE,EAA0D,EAA1DA,YAAayL,EAA6C,EAA7CA,oBAAqBnK,EAAwB,EAAxBA,IAAKE,EAAmB,EAAnBA,QAASD,EAAU,EAAVA,KACrE,GAAGD,EACDsF,GAAMC,SAAS,CACbhK,KjB/BH,UiBgCGC,QAAS,CAAC0E,UAASD,cAEhB,CAEL7E,EAAK+N,SAAWA,EAEhB7D,GAAMC,SAAS,CACXhK,KjBzIF,aiB0IEC,QAASJ,IAGb,IAAK,IAAIqG,EAAI,EAAGA,EAAIjD,EAAQjC,OAAQkF,IAChCjD,EAAQiD,GAAGrG,KAAOoD,EAAQiD,GAAGtE,MAAMa,MAAK,SAAA5C,GAAI,OAAIA,EAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,OAE/E8B,EAAQiD,GAAGrG,OACXoD,EAAQiD,GAAGrG,KAAOoD,EAAQiD,GAAGtE,MAAM,IAEvCqB,EAAQiD,GAAGnC,QAAS,EACpBd,EAAQiD,GAAGxF,QAAS,EACpBuC,EAAQiD,GAAG1E,WAAY,EAEpByB,EAAQiD,GAAG7C,cACVJ,EAAQiD,GAAG7C,YAAY7B,WAAY,EACnCyB,EAAQiD,GAAG7C,YAAYzC,SAAU,GAGlCqC,EAAQiD,GAAG7C,aAAeJ,EAAQiD,GAAG7C,YAAYxD,KAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,MACnF8B,EAAQiD,GAAG5C,OAAS,GAa5B,GAVAyG,GAAMC,SAAS,CACXhK,KjBtHD,ciBuHCC,QAAS,CAACgD,UAASE,iBAGvB4G,GAAMC,SAAS,CACXhK,KjBvFa,4BiBwFbC,QAAS2O,IAG+B,UAAzC/H,OAAOgI,SAASC,SAASC,MAAM,EAAG,GAAgB,CACjD,IAAIjN,EAAS+E,OAAOgI,SAASC,SAASC,MAAM,EAAG,IAE/Cf,MAAM,GAAD,OAAI7B,GAAJ,mBAA6B,CAC9B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,aAGP6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAAyB,IAAvB5G,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACZD,EAAOC,SAAWA,EAASgN,UAE3BjF,GAAMC,SAAS,CACXhK,KjB5IR,eiB6IQC,QAAS,CAACmD,SAAUrB,EAAOZ,IAAKa,SAAUD,EAAOC,SAAUlB,QAA6B,KAApBkB,EAAShB,kBAM5F4H,OAAM,WACHqG,aAAaC,QAAQ,SAAUT,KAAKC,UAAU,KAE9C3E,GAAMC,SAAS,CACXhK,KjBvMD,mBiB2MR+J,GAAMW,WAAWrG,cAAc3D,QAC9BsN,MAAM,GAAD,OAAI7B,GAAJ,6BAAuC,CACxC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhCjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACtE,GACH0F,GAAMC,SAAS,CACXhK,KjB5IK,oBiB6ILC,QAASoE,OAKlB0F,GAAMW,WAAW7J,MAAMH,SACtBqJ,GAAMC,SAAS,CACXhK,KjB9LK,kBiBiMTgO,MAAM,GAAD,OAAI7B,GAAJ,qBAA+B,CAChC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBlO,KAAMuJ,GAAMW,WAAW7K,KAAKK,aAGnCyI,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC9H,GACHkJ,GAAMC,SAAS,CACXhK,KjBxOH,YiByOGC,QAASY,OAGhB+H,OAAM,SAACC,GACJkB,GAAMC,SAAS,CACXhK,KjBtNG,wBiB2NZwN,IACCD,GAAOQ,KAAK,YAAaP,IAE7BD,GAAOQ,KAAK,WAAYhE,GAAMW,WAAW7K,KAAKK,UAC9CsN,GAAazD,GAAMW,WAAW7K,KAAKK,SAEnC,IAAIS,EAAaoJ,GAAMW,WAAW7J,MAAMF,WAEnCA,IACDwO,GAA2B,CAACtN,OAAQlB,EAAWQ,IAAKX,KAAMG,EAAWH,OACrEuJ,GAAMC,SAAS,CACXhK,KjBzPQ,qBiB4PZgO,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB7J,GAAIlE,EAAWQ,IACfiO,SAAU7B,GAAO1I,OAGxB8D,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAC0G,GACH,GAAGA,EAAK1N,MAQJ,OAPAyE,GAAc,cAEd2D,GAAMC,SAAS,CACXhK,KjBtQA,mBiBuQAC,QAASoP,EAAKC,OAAO,KAKzB,IAAIpO,EAAOmO,EAAKnO,KACZQ,EAAQ2N,EAAK3N,MAEjBR,EAAKa,OAAOC,SAAWd,EAAKa,OAAOC,SAASgN,UAE5C9N,EAAKU,MAAMX,KAAI,SAAAyB,GAEX,OADAA,EAAEE,UAAW,EACN,KAGXwD,GAAclF,EAAKE,OAEnB2I,GAAMC,SAAS,CACXhK,KjBlSD,kBiBmSCC,QAAS,CAACiB,OAAMJ,QAAyC,KAAhCI,EAAKa,OAAOC,SAAShB,OAAeU,WAG9D+L,IACC8B,aAAa9B,IAGd/L,GAAU,IAAIgC,KAAKhC,EAAMgD,MAAM8K,WAAY,IAAI9L,MAAO8L,WAAc,QACnE/B,GAAcgC,YAAW,WAClB1F,GAAMW,WAAW7J,MAAMF,YAC1BoJ,GAAMW,WAAW7J,MAAMF,WAAWQ,MAAQD,EAAKC,KAC7C4I,GAAMW,WAAW7J,MAAMF,WAAWe,OACpCqI,GAAMW,WAAW7J,MAAMF,WAAWe,MAAMgD,OAAShD,EAAMgD,MACnDqF,GAAMC,SAAS,CACXhK,KjBvRb,kBiBwRaC,SAAS,MAIjB,IAAIyD,KAAKhC,EAAMgD,MAAM8K,WAAY,IAAI9L,MAAO8L,YAGpDjC,GAAOQ,KAAK,WAAY,CAAClM,OAAQX,EAAKC,IAAKX,KAAMU,EAAKV,KAAMsB,OAAQiI,GAAMW,WAAW7K,KAAKsB,MAE1F,IACIgO,GAA6BjO,EAAKC,KACpC,MAAO0H,GACL0E,GAAOQ,KAAK,YAAa,CAAClM,OAAQX,EAAKC,IAAKX,KAAMU,EAAKV,OACvDuJ,GAAMC,SAAS,CACXhK,KjBvTJ,mBiBwTIC,QAAS,CAACyP,MAAO,MAAOC,IAAK,8BAK5C/G,OAAM,SAACC,GACJkB,GAAMC,SAAS,CACXhK,KjB/TI,mBiBgUJC,QAAS,CAACyP,MAAO,MAAOC,IAAK,8BAKzC5F,GAAMC,SAAS,CACXhK,KjBlPkB,yBiBmPlBC,SAAS,IAIjByN,QAGJH,GAAO7B,GAAG,cAAc,SAAAxK,GACpB6I,GAAMC,SAAS,CACXhK,KjB5VS,YiB6VTC,QAASiB,OAIjBqM,GAAO7B,GAAG,YAAY,SAAAxK,GAClB6I,GAAMC,SAAS,CACXhK,KjB1Ue,kBiB2UfC,QAASiB,OAIjBqM,GAAO7B,GAAG,cAAc,SAAAxK,GACpB6I,GAAMC,SAAS,CACXhK,KjBhVkB,qBiBiVlBC,QAASiB,OAIjBqM,GAAO7B,GAAG,cAAc,SAAA7J,GACpBkI,GAAMC,SAAS,CACXhK,KjBtViB,oBiBuVjBC,QAAS4B,OAIjB0L,GAAO7B,GAAG,YAAY,YAAqB,IAAnB7J,EAAkB,EAAlBA,OAAQhC,EAAU,EAAVA,KAC5BkK,GAAMC,SAAS,CACXhK,KjBnXoB,uBiBoXpBC,QAAS,CAAC4B,SAAQhC,aAI1B0N,GAAO7B,GAAG,cAAc,SAAC7L,GACrBkK,GAAMC,SAAS,CACXhK,KjB1WuB,0BiB2WvBC,QAASJ,OAIjB0N,GAAO7B,GAAG,aAAa,YAAuB,IAArB7J,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC7BiI,GAAMC,SAAS,CACXhK,KjBhYqB,wBiBiYrBC,QAAS,CAAC4B,SAAQC,eAI1ByL,GAAO7B,GAAG,eAAe,SAAC5J,GACtBiI,GAAMC,SAAS,CACXhK,KjBvXwB,2BiBwXxBC,QAAS6B,OAIjByL,GAAO7B,GAAG,mBAAmB,SAACzJ,GAC1B8H,GAAMC,SAAS,CACXhK,KjB7YiB,oBiB8YjBC,QAASgC,IAGV8H,GAAMW,WAAW7J,MAAMF,WAAWY,OAAOkB,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQc,EAAQpC,KAAKsB,QACzE4I,GAAMC,SAAS,CACXhK,KjB1Yc,qBiB2YdC,QAASgC,EAAQpC,KAAKsB,SAKlCoM,GAAO7B,GAAG,qBAAqB,SAAC5H,GAC5BiG,GAAMC,SAAS,CACXhK,KjBrZoB,uBiBsZpBC,QAAS6D,OAIjByJ,GAAO7B,GAAG,oBAAoB,SAAA7J,GACvBkI,GAAMW,WAAW7J,MAAMF,YAAcoJ,GAAMW,WAAW7J,MAAMF,WAAWQ,MAAQU,GAC9EkI,GAAMC,SAAS,CACXhK,KjB/Zc,qBiBgadC,QAAS8J,GAAMW,WAAW7K,KAAKsB,SAI3CoM,GAAO7B,GAAG,mBAAmB,SAAAzJ,GACzB8H,GAAMC,SAAS,CACXhK,KjBvakB,qBiBwalBC,QAASgC,OAIjBsL,GAAO7B,GAAG,cAAc,SAAA7L,GAChBkK,GAAMW,WAAW7J,MAAMF,WAAWY,OAAOkB,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQtB,EAAKsB,SAClE4I,GAAMC,SAAS,CACXhK,KjB1aW,kBiB2aXC,QAASJ,IAGb4P,YAAW,WACP1F,GAAMC,SAAS,CACXhK,KjB/aU,qBiBgbVC,QAASJ,EAAKsB,QAEnB,UAIXoM,GAAO7B,GAAG,iBAAiB,SAAAQ,GACvBiD,GAAiCjD,MAGrCqB,GAAO7B,GAAG,sBAAsB,SAAAxC,GAC5BiG,GAAoCjG,MAGxCqE,GAAO7B,GAAG,gBAAgB,SAAA5J,GACtBiI,GAAMC,SAAS,CACXhK,KjB5byB,4BiB6bzBC,QAAS,CAAC6B,SAAQc,UAAU,QAIpC2K,GAAO7B,GAAG,oBAAoB,SAAA5J,GAC1BiI,GAAMC,SAAS,CACXhK,KjBncyB,4BiBoczBC,QAAS,CAAC6B,SAAQc,UAAU,QAIpC2K,GAAO7B,GAAG,qBAAqB,YAAyB,IAAvBzJ,EAAsB,EAAtBA,QAAS2N,EAAa,EAAbA,QAQtC,GAPG7F,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAE7C,KAAKsB,MAAQc,EAAQpC,KAAKsB,QAAQ4I,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAE7C,KAAKsB,MAAQc,EAAQpC,KAAKsB,OAAK4C,QAC1JgG,GAAMC,SAAS,CACXhK,KjBvba,oBiBwbbC,QAAS,CAAC6B,OAAQG,EAAQpC,KAAKsB,IAAK4C,QAAQ,KAIjDgG,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQc,EAAQmB,YAAW,CACvE,IAAID,GAAc,EAGdlB,EAAQpC,KAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,KAC1C4I,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQc,EAAQmB,YAAUE,SAExEH,GAAc,GAGlB4G,GAAMC,SAAS,CACXhK,KjB5ce,sBiB6cfC,QAAS,CAACgC,UAASmB,SAAUnB,EAAQmB,SAAUE,OAAQrB,EAAQpC,KAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,IAAKgC,sBAG3G6K,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQ8N,MAGfjH,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KACAkC,GADwB,EAAlBqC,aACG,CACTf,YAAapB,EACbd,IAAKc,EAAQmB,SACbxB,MAAO,CAACmI,GAAMW,WAAW7K,KAAMA,GAC/BA,KAAMA,EACNa,QAAQ,EACRqD,QAAQ,EACRT,OAAQ,EACRtB,SAAU,KAEd+H,GAAMC,SAAS,CACXhK,KjBzeG,ciB0eHC,QAAS8B,OAKlBE,EAAQpC,KAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,KAAO,iBAAUc,EAAQpC,KAAKsB,OAAU0F,OAAOgI,SAASC,WAClG3B,KAEApD,GAAMC,SAAS,CACXhK,KjB1bM,aiB2bNC,QAAS,CAAC6E,MAAO7C,EAAS8C,UAAW,aAGzC0K,YAAW,WACP1F,GAAMC,SAAS,CACXhK,KjB/bK,gBiBgcLC,QAASgC,EAAQd,QAEtB,MAGJc,EAAQpC,KAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,KAC1C4I,GAAMC,SAAS,CACXhK,KjBtfiB,wBiBufjBC,QAAS,CAAC6B,OAAQG,EAAQpC,KAAKsB,IAAK9B,QAAQ,EAAMuE,SAAUF,KAAKmM,YAI7EtC,GAAO7B,GAAG,oBAAoB,SAAApH,GACvByF,GAAMW,WAAWrG,cAAc3D,OAC9BqJ,GAAMC,SAAS,CACXhK,KjBxea,oBiByebC,QAASqE,IAGbyF,GAAMC,SAAS,CACXhK,KjB3eqB,4BiB4erBC,QAAS8J,GAAMW,WAAWrG,cAAcf,OAAO,IAGvDyG,GAAMC,SAAS,CACXhK,KjB1dU,aiB2dVC,QAAS,CAAC6E,MAAOR,EAAcS,UAAW,kBAG9C0K,YAAW,WACP1F,GAAMC,SAAS,CACXhK,KjB/dS,gBiBgeTC,QAASqE,EAAanD,QAE3B,KAEHgM,QAGJI,GAAO7B,GAAG,oBAAoB,SAAA7G,GAC1BkF,GAAMC,SAAS,CACXhK,KjBjgBkB,qBiBkgBlBC,QAAS4E,OAIjB0I,GAAO7B,GAAG,sBAAsB,YAAiB,IAAf7G,EAAc,EAAdA,GAAIiL,EAAU,EAAVA,KAC9BxM,EAASyG,GAAMW,WAAWrG,cAAcf,OAExCwM,GACAxM,IAEJyG,GAAMC,SAAS,CACXhK,KjB5gByB,4BiB6gBzBC,QAASqD,IAGbyG,GAAMC,SAAS,CACXhK,KjBhhBoB,uBiBihBpBC,QAAS4E,IAGbkF,GAAMC,SAAS,CACXhK,KjB/fa,gBiBggBbC,QAAS4E,OAIjB0I,GAAO7B,GAAG,sBAAsB,YAAyB,IAAvBtI,EAAsB,EAAtBA,SAAUtB,EAAY,EAAZA,OACxCiI,GAAMC,SAAS,CACXhK,KjB5jBqB,wBiB6jBrBC,QAAS,CAACmD,WAAUtB,SAAQwB,OAAQxB,IAAWiI,GAAMW,WAAW7K,KAAKsB,IAAKgC,YAAarB,IAAWiI,GAAMW,WAAW7K,KAAKsB,OAG5H,IAAIY,EAASgI,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,KAC/DtB,IAAWiI,GAAMW,WAAW7K,KAAKsB,KAASY,GACzCgI,GAAMC,SAAS,CACXhK,KjB5jBiB,wBiB6jBjBC,QAAS,CAAC6B,OAAQC,EAAOlC,KAAKsB,IAAK9B,QAAQ,EAAMuE,SAAUF,KAAKmM,YAI5EtC,GAAO7B,GAAG,qBAAqB,YAA0B,IAGjD7H,EAHyB5B,EAAuB,EAAvBA,QAASmB,EAAc,EAAdA,SAClC/C,EAAO0J,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,KAAUC,YAItEQ,IADDxD,GACY4B,EAAQd,MAAQd,EAAKc,IAIpC4I,GAAMC,SAAS,CACXhK,KjB/kBoB,uBiBglBpBC,QAAS,CAACgC,UAASmB,WAAUS,iBAIrC0J,GAAO7B,GAAG,uBAAuB,YAA+D,IAA7D5H,EAA4D,EAA5DA,WAAYV,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,OAAQH,EAAiB,EAAjBA,YAC1E4G,GAAMC,SAAS,CACXhK,KjBrlBsB,yBiBslBtBC,QAAS,CAACmD,WAAUU,aAAYT,cAAaC,SAAQH,oBAI7DoK,GAAO7B,GAAG,gBAAgB,SAAA5J,GACnBiI,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAE7C,KAAKsB,MAAQW,OACzDiI,GAAMC,SAAS,CACXhK,KjB/lBa,oBiBgmBbC,QAAS,CAAC6B,SAAQiC,QAAQ,KAG9B0L,YAAW,WACP1F,GAAMC,SAAS,CACXhK,KjBrmBS,oBiBsmBTC,QAAS,CAAC6B,SAAQiC,QAAQ,OAE/B,MAEAjC,IAAWiI,GAAMW,WAAW7K,KAAKsB,KAChC4I,GAAMC,SAAS,CACXhK,KjBvmBa,wBiBwmBbC,QAAS,CAAC6B,OAAQA,EAAQzC,QAAQ,EAAMuE,SAAUF,KAAKmM,aAKvEtC,GAAO7B,GAAG,qBAAqB,YAA6B,IAA3B5J,EAA0B,EAA1BA,OAAQsC,EAAkB,EAAlBA,aACrC2F,GAAMC,SAAS,CACXhK,KjBvmBuB,0BiBwmBvBC,QAAS,CAAC6B,SAAQsC,kBAGnB2F,GAAMW,WAAW9I,MAAMuC,QAAQzD,QAC9BqJ,GAAMC,SAAS,CACXhK,KjBtmBgB,uBiBumBhBC,QAAS,CAAC6B,YAIfiI,GAAMW,WAAW9I,MAAMsC,UAAUxD,SAC7BqJ,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,KAChDiI,GAAMC,SAAS,CACXhK,KjB5mBW,sBiB6mBXC,QAAS,CAACJ,KAAMkK,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,QAGrEkM,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQA,MAGf6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,aACVvE,EAAKuE,aAAeA,EACpB2F,GAAMC,SAAS,CACXhK,KjB1oBH,YiB2oBGC,QAASJ,IAEbkK,GAAMC,SAAS,CACXhK,KjBnoBO,sBiBooBPC,QAAS,CAACJ,iBAO9B0N,GAAO7B,GAAG,oBAAoB,YAA6B,IAA3B5J,EAA0B,EAA1BA,OAAQsC,EAAkB,EAAlBA,aACpC2F,GAAMC,SAAS,CACXhK,KjBtpBuB,0BiBupBvBC,QAAS,CAAC6B,SAAQsC,kBAGnB2F,GAAMW,WAAW9I,MAAMuC,QAAQzD,QAC9BqJ,GAAMC,SAAS,CACXhK,KjBrpBgB,uBiBspBhBC,QAAS,CAAC6B,YAIfiI,GAAMW,WAAW9I,MAAMqC,QAAQvD,SAC3BqJ,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,KAChDiI,GAAMC,SAAS,CACXhK,KjB5pBS,oBiB6pBTC,QAAS,CAACJ,KAAMkK,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,QAGrEkM,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQA,MAGf6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,aACVvE,EAAKuE,aAAeA,EACpB2F,GAAMC,SAAS,CACXhK,KjBzrBH,YiB0rBGC,QAASJ,IAEbkK,GAAMC,SAAS,CACXhK,KjBnrBK,oBiBorBLC,QAAS,CAACJ,iBAO9B0N,GAAO7B,GAAG,oBAAoB,YAA6B,IAA3B5J,EAA0B,EAA1BA,OAAQsC,EAAkB,EAAlBA,aACpC2F,GAAMC,SAAS,CACXhK,KjBrsBuB,0BiBssBvBC,QAAS,CAAC6B,SAAQsC,kBAGnB2F,GAAMW,WAAW9I,MAAMqC,QAAQvD,QACV,IAAjB0D,IACC2F,GAAMC,SAAS,CACXhK,KjBvsBY,uBiBwsBZC,QAAS,CAAC6B,YAGXiI,GAAMW,WAAW9I,MAAMsC,UAAUxD,SAC7BqJ,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,KAChDiI,GAAMC,SAAS,CACXhK,KjBzsBC,oBiB0sBDC,QAAS,CAACJ,KAAMkK,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,QAGrEkM,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQA,MAGf6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,aACVvE,EAAKuE,aAAeA,EACpB2F,GAAMC,SAAS,CACXhK,KjBxuBX,YiByuBWC,QAASJ,IAEbkK,GAAMC,SAAS,CACXhK,KjBhuBH,oBiBiuBGC,QAAS,CAACJ,eAQ/BkK,GAAMW,WAAW9I,MAAMuC,QAAQzD,QAA2B,IAAjB0D,GACxC2F,GAAMC,SAAS,CACXhK,KjB9uBgB,uBiB+uBhBC,QAAS,CAAC6B,YAIfiI,GAAMW,WAAW9I,MAAMsC,UAAUxD,QAA2B,IAAjB0D,GAC1C2F,GAAMC,SAAS,CACXhK,KjBtvBkB,yBiBuvBlBC,QAAS,CAAC6B,eAKtByL,GAAO7B,GAAG,gBAAgB,SAAA5J,GACtBkM,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQA,MAGf6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAwB,EAAlBuE,cDzxBC,WACvBuI,GAAQG,YAAc,EAEtB,IAAIC,EAAUJ,GAAQK,YAENC,IAAZF,GACAA,EAAQpE,MAAK,SAAAuE,OAAStE,OAAM,SAAAjH,GAAU4H,QAAQC,IAAI7H,MCoxB1CoO,GACAhG,GAAMC,SAAS,CACXhK,KjBzvBS,gBiB0vBTC,QAAS,CAACJ,OAAMP,OAAQ,oBAKpCiO,GAAO7B,GAAG,sBAAsB,SAAA5J,GACzBiI,GAAMW,WAAWnG,KAAK1E,MAAQkK,GAAMW,WAAWnG,KAAK1E,KAAKsB,MAAQW,IAChEiI,GAAMC,SAAS,CACXhK,KjBjwBW,kBiBkwBXC,QAAS,WAEbkP,GAAsBrN,GAAQ,GAC9BsL,SAIRG,GAAO7B,GAAG,sBAAsB,SAAAxC,GACzBa,GAAMW,WAAWnG,KAAK1E,MACrBsP,GAAoCjG,MAI5CqE,GAAO7B,GAAG,gBAAgB,SAAA5J,GACnBiI,GAAMW,WAAWnG,KAAK1E,MAAQkK,GAAMW,WAAWnG,KAAK1E,KAAKsB,MAAQW,IAChEsL,KACAE,KACoC,cAAjCvD,GAAMW,WAAWnG,KAAKjF,QACrByK,GAAMC,SAAS,CACXhK,KjBrxBO,kBiBsxBPC,QAAS,aAGmB,aAAjC8J,GAAMW,WAAWnG,KAAKjF,QACrByK,GAAMC,SAAS,CACXhK,KjB5xBK,gBiB6xBLC,QAAS,CAACJ,MAAM,EAAOP,OAAQ,UAGH,WAAjCyK,GAAMW,WAAWnG,KAAKjF,SACrByK,GAAMC,SAAS,CACXhK,KjBlyBK,gBiBmyBLC,QAAS,CAACJ,MAAM,EAAOP,OAAQ,UAGnC6P,UAKZ5B,GAAO7B,GAAG,gBAAgB,YAAwB,IAAtBhC,EAAqB,EAArBA,SAAU1G,EAAW,EAAXA,MAC/B+G,GAAMW,WAAWnG,KAAK1E,MACrBsP,GAAgC,CAACzF,WAAU1G,aAInDuK,GAAO7B,GAAG,iBAAiB,SAAAlB,GACpBT,GAAMW,WAAWnG,KAAK1E,MACrBsP,GAAiC3E,MAIzC+C,GAAO7B,GAAG,oBAAoB,YAAsB,IAApB5J,EAAmB,EAAnBA,OAAQkB,EAAW,EAAXA,MACjC+G,GAAMW,WAAWnG,KAAK1E,MAAQkK,GAAMW,WAAWnG,KAAK1E,KAAKsB,MAAQW,GAChEiI,GAAMC,SAAS,CACXhK,KjBvzBU,iBiBwzBVC,QAAS+C,OAKrBuK,GAAO7B,GAAG,YAAY,YAAsB,IAApB7J,EAAmB,EAAnBA,OAAQH,EAAW,EAAXA,MACzBqI,GAAMW,WAAW7J,MAAMF,YAAcoJ,GAAMW,WAAW7J,MAAMF,WAAWQ,MAAQU,IAC9EkI,GAAMC,SAAS,CACXhK,KjBp3BW,kBiBq3BXC,QAASyB,IAGV+L,IACC8B,aAAa9B,IAGC,IAAd/L,EAAMiD,SAAiB,QACvB8I,GAAcgC,YAAW,WAClB1F,GAAMW,WAAW7J,MAAMF,YAC1BoJ,GAAMW,WAAW7J,MAAMF,WAAWQ,MAAQU,GACxCkI,GAAMW,WAAW7J,MAAMF,WAAWe,OACpCqI,GAAMW,WAAW7J,MAAMF,WAAWe,MAAMgD,OAAShD,EAAMgD,MACnDqF,GAAMC,SAAS,CACXhK,KjBn4BD,kBiBo4BCC,SAAS,MAGJ,IAAdyB,EAAMiD,cAKrB4I,GAAO7B,GAAG,cAAc,SAAA7J,GACjBkI,GAAMW,WAAW7J,MAAMF,YAAcoJ,GAAMW,WAAW7J,MAAMF,WAAWQ,MAAQU,IAC9EkI,GAAMC,SAAS,CACXhK,KjB/4BW,kBiBg5BXC,SAAS,IAGVwN,IACC8B,aAAa9B,QAKzBF,GAAO7B,GAAG,WAAW,YAAoB,IAAlB7J,EAAiB,EAAjBA,OAAQ4C,EAAS,EAATA,IACxBsF,GAAMW,WAAW7J,MAAMF,YAAcoJ,GAAMW,WAAW7J,MAAMF,WAAWQ,MAAQU,IAC9EsN,GAA2B,CAACtN,SAAQrB,KAAMuJ,GAAMW,WAAW7J,MAAMF,WAAWH,OAC5EuJ,GAAMC,SAAS,CACXhK,KjBt7BY,qBiBw7BhB+J,GAAMC,SAAS,CACXhK,KjBj7BY,mBiBk7BZC,QAAS,CAAC0P,IAAK,0BAA2BlL,IAAKA,SAK3D8I,GAAO7B,GAAG,eAAe,SAAA9L,GACrBmK,GAAMC,SAAS,CACXhK,KjBz8BgB,mBiB08BhBC,QAASL,OAIjB2N,GAAO7B,GAAG,MAAV,wBAAiB,uBAAAlI,EAAA,sDACbqD,OAAOgI,SAASmB,SADH,8CAIrBC,YAAa,WACT,OAAO1C,GAAO1I,IAElBqL,SAAU,SAAA1P,GACHgN,IACCD,GAAOQ,KAAK,YAAaP,IAE7BD,GAAOQ,KAAK,WAAYvN,GACxBgN,GAAahN,GAEjB2P,WAAY,YAAmB,IAAjBjP,EAAgB,EAAhBA,KAAMV,EAAU,EAAVA,KAChB+M,GAAOQ,KAAK,aAAc,CAAC7M,OAAMV,UAErC4P,SAAU,YAAqB,IAAnBvO,EAAkB,EAAlBA,OAAQrB,EAAU,EAAVA,KAChB+M,GAAOQ,KAAK,WAAY,CAAClM,SAAQrB,OAAMsB,OAAQiI,GAAMW,WAAW7K,KAAKsB,OAEzEyJ,UAAW,YAAqB,IAAnB/I,EAAkB,EAAlBA,OAAQrB,EAAU,EAAVA,KACjB+M,GAAOQ,KAAK,YAAa,CAAClM,SAAQrB,UAEtC6P,gBAAiB,YAAwB,IAAtBxO,EAAqB,EAArBA,OAAQI,EAAa,EAAbA,QACvBsL,GAAOQ,KAAK,kBAAmB,CAAClM,SAAQI,aAE5CqO,WAAY,SAACzO,GACT0L,GAAOQ,KAAK,aAAclM,IAI9BuH,qBAAsB,YAA0B,IAAxBvH,EAAuB,EAAvBA,OAAQqH,EAAe,EAAfA,UAC5BqE,GAAOQ,KAAK,mBAAoB,CAAClM,SAAQqH,eAE7CqB,iBAAkB,YAAyB,IAAvB1I,EAAsB,EAAtBA,OAAQ6H,EAAc,EAAdA,SACxB6D,GAAOQ,KAAK,eAAgB,CAAClM,SAAQ6H,cAEzCiC,iBAAkB,YAAe,IAAb9J,EAAY,EAAZA,OAChB0L,GAAOQ,KAAK,eAAgBlM,IAEhC+J,qBAAsB,YAAe,IAAb/J,EAAY,EAAZA,OACpB0L,GAAOQ,KAAK,mBAAoBlM,IAEpC0O,aAAc,SAACX,EAAS9N,GACpByL,GAAOQ,KAAK,eAAgB,CAAC6B,UAAS9N,YAI1C2H,iBAAkB,YAAgC,IAA9B3H,EAA6B,EAA7BA,OAAQ4H,EAAqB,EAArBA,SAAU1G,EAAW,EAAXA,MAClCuK,GAAOQ,KAAK,eAAgB,CAACjM,SAAQ4H,WAAU1G,WAEnDiJ,kBAAmB,YAA0B,IAAxBnK,EAAuB,EAAvBA,OAAQoK,EAAe,EAAfA,UACzBqB,GAAOQ,KAAK,gBAAiB,CAACjM,SAAQoK,eAE1CtC,qBAAsB,YAA0B,IAAxB9H,EAAuB,EAAvBA,OAAQoH,EAAe,EAAfA,UAC5BqE,GAAOQ,KAAK,mBAAoB,CAACjM,SAAQoH,eAE7C6C,iBAAkB,SAACjK,EAAQkB,GACvBuK,GAAOQ,KAAK,mBAAoB,CAACjM,SAAQkB,Y,SCz/BpCwN,GAAa,SAAC5C,GAAD,OAAc,SAAC5D,GACrCgE,MAAM,GAAD,OAAI7B,GAAJ,uBAAiC,CAClC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhCjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC1F,GACH,IADgB,IAAD,WACNiD,GACL,IAAIuK,EAAc1G,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQ8B,EAAQiD,GAAG/E,OAE/EsP,EACCxN,EAAQiD,GAAKuK,GAEbxN,EAAQiD,GAAGrG,KAAOoD,EAAQiD,GAAGtE,MAAMa,MAAK,SAAA5C,GAAI,OAAIA,EAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,OAE/E8B,EAAQiD,GAAGrG,OACXoD,EAAQiD,GAAGrG,KAAOoD,EAAQiD,GAAGtE,MAAM,IAEvCqB,EAAQiD,GAAG3E,OAAS,KAXnB2E,EAAI,EAAGA,EAAIjD,EAAQjC,OAAQkF,IAAM,EAAjCA,GAeT8D,EAAS,CACLhK,KlBLe,ckBMfC,QAASgD,SAKRyN,GAAc,SAAC9C,GAAD,OAAc,SAAC5D,GACnCD,GAAMW,WAAWzH,QAAQnC,UACxBkJ,EAAS,CACLhK,KlBAmB,kBkBCnBC,QAAS,KAGb+N,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBiC,aAAc5G,GAAMW,WAAWzH,QAAQA,QAAQ8G,GAAMW,WAAWzH,QAAQA,QAAQjC,OAAO,GAAGG,IAC1FyP,cAAe7G,GAAMW,WAAWzH,QAAQA,QAAQ,GAAG9B,QAG1DwH,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC1F,GACH,IADgB,IAAD,WACNiD,GACL,IAAIuK,EAAc1G,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQ8B,EAAQiD,GAAG/E,OAE/EsP,EACCxN,EAAQiD,GAAKuK,GAEbxN,EAAQiD,GAAGrG,KAAOoD,EAAQiD,GAAGtE,MAAMa,MAAK,SAAA5C,GAAI,OAAIA,EAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,OAE/E8B,EAAQiD,GAAGrG,OACXoD,EAAQiD,GAAGrG,KAAOoD,EAAQiD,GAAGtE,MAAM,IAEvCqB,EAAQiD,GAAG3E,OAAS,KAXnB2E,EAAI,EAAGA,EAAIjD,EAAQjC,OAAQkF,IAAM,EAAjCA,GAeT8D,EAAS,CACLhK,KlBlCe,kBkBmCfC,QAASgD,UAMZ4N,GAAY,SAAC/O,EAAQ8L,GAAT,OAAsB,SAAC5D,GAC5CgE,MAAM,GAAD,OAAI7B,GAAJ,mBAA6B,CAC9B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,aAGP6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAAyB,IAAvB5G,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACRD,EAAOJ,MA0BPqI,EAAS,CACLhK,KlB/FW,ckBgGXC,QARS,CACTS,QAAQ,EACRoQ,YAAY,EACZjR,KAAM,CAACsB,IAAKW,OAtBhBC,EAAOlC,KAAOkC,EAAOH,MAAMa,MAAK,SAAA5C,GAAI,OAAIA,EAAKsB,MAAQ4I,GAAMW,WAAW7K,KAAKsB,OAEvEY,EAAOlC,OACPkC,EAAOlC,KAAOkC,EAAOH,MAAM,IAE/BG,EAAOgC,QAAS,EAEhBhC,EAAOrB,QAAS,EAEhBqB,EAAOC,SAAWA,EAASgN,UAC3BjN,EAAOsB,aAAc,EACrBtB,EAAOjB,QAA8B,KAApBkB,EAAShB,OAC1Be,EAAOP,WAAY,EAEnBwI,EAAS,CACLhK,KlBpFW,ckBqFXC,QAAS8B,UAiBZgP,GAAa,SAACjP,EAAQ8L,GAAT,OAAsB,SAAC5D,GAC7CgE,MAAM,GAAD,OAAI7B,GAAJ,mBAA6B,CAC9B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,aAGP6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAAyB,IAAvB5G,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACZD,EAAOC,SAAWA,EAASgN,UAE3BhF,EAAS,CACLhK,KlBlHgB,ekBmHhBC,QAAS,CAACmD,SAAUrB,EAAOZ,IAAKa,SAAUD,EAAOC,SAAUlB,QAA6B,KAApBkB,EAAShB,eAK5EgQ,GAAe,SAAClP,EAAQ8L,GAAT,OAAsB,SAAC5D,GAC/CgE,MAAM,GAAD,OAAI7B,GAAJ,wBAAkC,CACnC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,aAGP6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAAyB,IAAvBtJ,EAAsB,EAAtBA,OAAQuE,EAAc,EAAdA,SACZoG,EAAS,CACLhK,KlBjIyB,wBkBkIzBC,QAAS,CAAC6B,SAAQzC,SAAQuE,mBAKzBqN,GAAa,SAACjP,GAAD,OAAc,SAACgI,GACrCA,EAAS,CACLhK,KlBxI2B,sBkByI3BC,QAAS+B,MAIJkP,GAAc,SAACjP,EAAS2L,GAAV,OAAuB,SAAC5D,GAO/C,IANA,IAAImH,EAAW,IAAIC,SACfjQ,EAAMqE,GAAc,EAAG,KACvBjD,EAAS,GACTJ,EAAQ,GACRG,EAAS,GAEJ4D,EAAI,EAAGA,EAAIjE,EAAQM,OAAOvB,OAAQkF,IACvCiL,EAASE,OAAO,SAASnL,EAAGjE,EAAQM,OAAO2D,GAAG7D,MAC9CE,EAAO+O,KAAKrP,EAAQM,OAAO2D,IAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAIjE,EAAQE,MAAMnB,OAAQkF,IACtCiL,EAASE,OAAO,QAAQnL,EAAGjE,EAAQE,MAAM+D,GAAG7D,MAC5CF,EAAMmP,KAAKrP,EAAQE,MAAM+D,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAIjE,EAAQK,OAAOtB,OAAQkF,IACvCiL,EAASE,OAAO,SAASnL,EAAGjE,EAAQK,OAAO4D,GAAG7D,MAC9CC,EAAOgP,KAAKrP,EAAQK,OAAO4D,IAG/B,IAAIqL,EAAe,CACfpQ,MACAtB,KAAMkK,GAAMW,WAAW7K,KACvB2R,KAAMvP,EAAQuP,KACdjP,SACAD,SACAH,QACAX,WAAW,EACXZ,SAAS,EACT+B,QAAQ,EACR8O,eAAgBxP,EAAQwP,eACxB9N,UAAWD,KAAKmM,MAChB7P,KAAM,WAGVgK,EAAS,CACLhK,KlB9L2B,sBkB+L3BC,QAAS,CAACgC,QAASsP,EAAcnO,SAAUnB,EAAQmB,YAGvD,IAAIqO,EAAiB,GAErBxP,EAAQwP,eAAexQ,KAAI,SAAAyQ,GAEvB,OADAD,EAAeH,KAAKI,EAAEvQ,KACf,KAGXc,EAAQwP,eAAiBA,EACzBxP,EAAQmN,SAAWjG,GAAiB8G,cAEpCkB,EAASE,OAAO,OAAQpP,EAAQuP,MAChCL,EAASE,OAAO,iBAAkBpP,EAAQwP,gBAC1CN,EAASE,OAAO,WAAYpP,EAAQmB,UACpC+N,EAASE,OAAO,SAAUpP,EAAQH,QAClCqP,EAASE,OAAO,WAAYlI,GAAiB8G,eAE7CjC,MAAM,GAAD,OAAI7B,GAAJ,4BAAsC,CACnC8B,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2C,IAETxI,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAgJ,GACF,GAAGA,EAAWhQ,MAOV,MANgC,aAA7BgQ,EAAWrC,OAAO,GAAGK,KACpB7K,KAAMnD,MAAM,8BAA+B,CACvCiQ,SAAU9M,KAAM+M,SAASC,aAI1B9H,EAAS,CACZhK,KlBnOiB,wBkBoOjBC,QAAS,CAACkB,MAAKiC,SAAUnB,EAAQmB,YAGzC4G,EAAS,CACLhK,KlBzOuB,0BkB0OvBC,QAAS,CAACkB,MAAKe,OAAQyP,EAAWxQ,IAAKiC,SAAUnB,EAAQmB,eAGhEwF,OAAM,WACHoB,EAAS,CACLhK,KlB9OqB,wBkB+OrBC,QAAS,CAACkB,MAAKiC,SAAUnB,EAAQmB,iBAKpC2O,GAAc,SAAC9P,EAAS2L,GAAV,OAAuB,SAAC5D,GAW/C,IAVA,IAAImH,EAAW,IAAIC,SAEf7O,EAAS,GACTJ,EAAQ,GACRG,EAAS,GAET0P,EAAY,GACZC,EAAW,GACXC,EAAY,GAEPhM,EAAI,EAAGA,EAAIjE,EAAQM,OAAOvB,OAAQkF,IACpCjE,EAAQM,OAAO2D,GAAG7D,MACjB8O,EAASE,OAAO,SAASnL,EAAGjE,EAAQM,OAAO2D,GAAG7D,MAE9CE,EAAO+O,KAAKrP,EAAQM,OAAO2D,KAE3B8L,EAAUV,KAAKrP,EAAQM,OAAO2D,GAAGrB,IAIzC,IAAK,IAAIqB,EAAI,EAAGA,EAAIjE,EAAQE,MAAMnB,OAAQkF,IACnCjE,EAAQE,MAAM+D,GAAG7D,MAChB8O,EAASE,OAAO,QAAQnL,EAAGjE,EAAQE,MAAM+D,GAAG7D,MAE5CF,EAAMmP,KAAKrP,EAAQE,MAAM+D,KAEzB+L,EAASX,KAAKrP,EAAQE,MAAM+D,GAAGrB,IAIvC,IAAK,IAAIqB,EAAI,EAAGA,EAAIjE,EAAQK,OAAOtB,OAAQkF,IACpCjE,EAAQK,OAAO4D,GAAG7D,MACjB8O,EAASE,OAAO,SAASnL,EAAGjE,EAAQK,OAAO4D,GAAG7D,MAE9CC,EAAOgP,KAAKrP,EAAQK,OAAO4D,KAE3BgM,EAAUZ,KAAKrP,EAAQK,OAAO4D,GAAGrB,IAIzC,IAAI0M,EAAe,CACfpQ,IAAKc,EAAQd,IACbtB,KAAMkK,GAAMW,WAAW7K,KACvB2R,KAAMvP,EAAQuP,KACdjP,OAAQN,EAAQM,OAChBD,OAAQL,EAAQK,OAChBH,MAAOF,EAAQE,MACfX,WAAW,EACXZ,SAAS,EACT6Q,eAAgBxP,EAAQwP,gBAGxBpR,EAAO0J,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQc,EAAQmB,YAAUpB,SAAS+H,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQc,EAAQmB,YAAUpB,SAAShB,OAAO,GAElLgJ,EAAS,CACLhK,KlBxS4B,uBkByS5BC,QAAS,CACLgC,QAASsP,EACTnO,SAAUnB,EAAQmB,SAClBS,SAAUxD,EAAKc,MAAQc,EAAQd,OAIvC,IAAIsQ,EAAiB,GAErBxP,EAAQwP,eAAexQ,KAAI,SAAAyQ,GAEvB,OADAD,EAAeH,KAAKI,EAAEvQ,KACf,KAGXc,EAAQwP,eAAiBA,EACzBxP,EAAQmN,SAAWjG,GAAiB8G,cAEpCkB,EAASE,OAAO,MAAOpP,EAAQd,KAC/BgQ,EAASE,OAAO,OAAQpP,EAAQuP,MAChCL,EAASE,OAAO,iBAAkBpP,EAAQwP,gBAC1CN,EAASE,OAAO,SAAUpP,EAAQH,QAClCqP,EAASE,OAAO,WAAYpP,EAAQmB,UACpC+N,EAASE,OAAO,WAAYlI,GAAiB8G,eAC7CkB,EAASE,OAAO,YAAaW,GAC7Bb,EAASE,OAAO,YAAaa,GAC7Bf,EAASE,OAAO,WAAYY,GAE5BjE,MAAM,GAAD,OAAI7B,GAAJ,4BAAsC,CACnC8B,OAAQ,OACRC,QAAS,CACLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2C,IAETxI,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAgJ,GACF,GAAGA,EAAWhQ,MAMV,MALgC,aAA7BgQ,EAAWrC,OAAO,GAAGK,KACpB7K,KAAMnD,MAAM,8BAA+B,CACvCiQ,SAAU9M,KAAM+M,SAASC,aAG1B9H,EAAS,CACZhK,KlBxViB,wBkByVjBC,QAAS,CAACkB,IAAKc,EAAQd,IAAKiC,SAAUnB,EAAQmB,YAGtD4G,EAAS,CACLhK,KlB9VuB,0BkB+VvBC,QAAS,CAACkB,IAAKc,EAAQd,IAAKe,OAAQD,EAAQd,IAAKiC,SAAUnB,EAAQmB,eAG1EwF,OAAM,WACHoB,EAAS,CACLhK,KlBnWqB,wBkBoWrBC,QAAS,CAACkB,IAAKc,EAAQd,IAAKiC,SAAUnB,EAAQmB,iBAKjD+O,GAAe,SAAC,EAA6BvE,GAA9B,IAAExK,EAAF,EAAEA,SAAUtB,EAAZ,EAAYA,OAAQ8N,EAApB,EAAoBA,QAApB,OAA2C,SAAC5F,GACpE,IAAImI,EAAepI,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAV,GAAM,OAAIA,EAAOZ,MAAQiC,KAAUpB,SAASV,QAAO,SAAAoB,GAAC,OAAKA,EAAEC,QAAUD,EAAE7C,KAAKsB,MAAQW,KAE7I2N,YAAW,WACF0C,EAAanR,QACdgJ,EAAS,CACLhK,KlB9WqB,wBkB+WrBC,QAAS,CAACmD,WAAUtB,OAAQ8N,EAAStM,QAAQ,EAAMH,aAAa,OAGzE,GAEEgP,EAAanR,QACdgN,MAAM,GAAD,OAAI7B,GAAJ,6BAAuC,CACpC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBtL,WACAwM,UACAR,SAAUjG,GAAiB8G,kBAGlCtH,OACAC,OAAM,iBAMNwJ,GAAmB,SAACnQ,EAAS2L,GAAV,OAAuB,SAAC5D,GAOpD,IANA,IAAI5G,EAAWnB,EAAQmB,SACnB+N,EAAW,IAAIC,SACf7O,EAAS,GACTJ,EAAQ,GACRG,EAAS,GAEJ4D,EAAI,EAAGA,EAAIjE,EAAQM,OAAOvB,OAAQkF,IACvCiL,EAASE,OAAO,SAASnL,EAAGjE,EAAQM,OAAO2D,GAAG7D,MAC9CE,EAAO+O,KAAKrP,EAAQM,OAAO2D,IAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAIjE,EAAQE,MAAMnB,OAAQkF,IACtCiL,EAASE,OAAO,QAAQnL,EAAGjE,EAAQE,MAAM+D,GAAG7D,MAC5CF,EAAMmP,KAAKrP,EAAQE,MAAM+D,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAIjE,EAAQK,OAAOtB,OAAQkF,IACvCiL,EAASE,OAAO,SAASnL,EAAGjE,EAAQK,OAAO4D,GAAG7D,MAC9CC,EAAOgP,KAAKrP,EAAQK,OAAO4D,IAG/B,IAAIqL,EAAe,CACfpQ,IAAKc,EAAQd,IACbtB,KAAMkK,GAAMW,WAAW7K,KACvB2R,KAAMvP,EAAQuP,KACdjP,OAAQN,EAAQM,OAChBD,OAAQ,GACRH,MAAO,GACPX,WAAW,EACXZ,SAAS,EACT6Q,eAAgBxP,EAAQwP,eACxB9N,UAAWD,KAAKmM,MAChB7P,KAAM,WAGVgK,EAAS,CACLhK,KlB1a8B,yBkB2a9BC,QAAS,CAACmD,WAAUU,WAAY,CAAC7B,EAAQd,KAAMkC,aAAa,KAGhE2G,EAAS,CACLhK,KlBtb2B,sBkBub3BC,QAAS,CAACgC,QAASsP,EAAcnO,SAAUnB,EAAQmB,YAGvD,IAAIqO,EAAiB,GAErBxP,EAAQwP,eAAexQ,KAAI,SAAAyQ,GAEvB,OADAD,EAAeH,KAAKI,EAAEvQ,KACf,KAGXc,EAAQwP,eAAiBA,EACzBxP,EAAQmN,SAAWjG,GAAiB8G,cAEpCkB,EAASE,OAAO,OAAQpP,EAAQuP,MAChCL,EAASE,OAAO,iBAAkBpP,EAAQwP,gBAC1CN,EAASE,OAAO,SAAUpP,EAAQH,QAClCqP,EAASE,OAAO,WAAYpP,EAAQmB,UACpC+N,EAASE,OAAO,WAAYlI,GAAiB8G,eAE7CjC,MAAM,GAAD,OAAI7B,GAAJ,4BAAsC,CACnC8B,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2C,IAETxI,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAgJ,GACF,GAAGA,EAAWhQ,MACV,OAAOqI,EAAS,CACZhK,KlBrdiB,wBkBsdjBC,QAAS,CAACkB,IAAKc,EAAQd,IAAKiC,SAAUnB,EAAQmB,YAGtD4G,EAAS,CACLhK,KlB3duB,0BkB4dvBC,QAAS,CAACkB,IAAKc,EAAQd,IAAKe,OAAQyP,EAAWxQ,IAAKiC,SAAUnB,EAAQmB,eAG7EwF,OAAM,WACHoB,EAAS,CACLhK,KlBheqB,wBkBierBC,QAAS,CAACkB,IAAKc,EAAQd,IAAKiC,SAAUnB,EAAQmB,iBAKjDiP,GAAgB,SAAC,EAAqCzE,GAAtC,IAAExK,EAAF,EAAEA,SAAUwM,EAAZ,EAAYA,QAAS0C,EAArB,EAAqBA,eAArB,OAAmD,SAACtI,GAC7E,IAMI3G,EANAS,EAAa,GACjBwO,EAAerR,KAAI,SAAAyQ,GAEf,OADA5N,EAAWwN,KAAKI,EAAEvQ,KACX,KAMPkC,KADD0G,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,OAAe2G,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,KAAUpB,SAAShB,SAC7H+I,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,KAAUpB,SAASV,QAAO,SAAAoB,GAAC,OAAKoB,EAAWrB,MAAK,SAAA8P,GAAC,OAAIA,IAAM7P,EAAEvB,UAAMqR,MAI1IxI,EAAS,CACLhK,KlBhf8B,yBkBif9BC,QAAS,CAACmD,WAAUU,aAAYT,iBAGpC2K,MAAM,GAAD,OAAI7B,GAAJ,8BAAwC,CACrC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBtL,WACAwM,UACA9L,aACAsL,SAAUjG,GAAiB8G,kBAGlCtH,OACAC,OAAM,iBAKF6J,GAAqB,SAACtR,EAAKiC,GAAN,OAAmB,SAAC4G,GAClD,IAEI3G,EAFAS,EAAa,CAAC3C,GAIdkC,KADD0G,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,OAAe2G,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,KAAUpB,SAAShB,SAC7H+I,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,KAAUpB,SAASV,QAAO,SAAAoB,GAAC,OAAKoB,EAAWrB,MAAK,SAAA8P,GAAC,OAAIA,IAAM7P,EAAEvB,UAAMqR,MAI1IxI,EAAS,CACLhK,KlBlhB8B,yBkBmhB9BC,QAAS,CAACmD,WAAUU,aAAYT,mBAI3BqP,GAAe,SAAC,EAAY9E,GAAb,IAAExK,EAAF,EAAEA,SAAF,OAA0B,SAAC4G,GACnD,IAAI3G,EAAc0G,GAAMW,WAAWzH,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQiC,KAAUpB,SAAS,GAE1FgI,EAAS,CACLhK,KlB1hB2B,sBkB2hB3BC,QAASmD,IAGb4K,MAAM,GAAD,OAAI7B,GAAJ,6BAAuC,CACpC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBtL,WACAuP,cAAetP,EAAYlC,QAGlCwH,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAA3G,GACFgI,EAAS,CACLhK,KlB5iBqB,wBkB6iBrBC,QAAS,CAACmD,WAAWpB,SAAUA,EAASgN,UAAWlO,QAA8B,KAArBkB,EAAShB,aAG5E4H,OAAM,iB,wGCvmBA,IACXgK,IAAE,IACEC,SAAU,yDACVC,eAAgB,8FAChBC,SAAU,2BACVC,OAAQ,iCACRC,KAAM,iCACNC,KAAM,yDACNC,KAAM,+DACN/S,UAAW,qBACXE,SAAU,6CACVC,KAAM,iCACN6S,oBAAqB,uJACrBC,qBAAsB,+HACtBC,gBAAiB,mKACjBzS,MAAO,6CACP0S,YAAa,wFACbC,qBAAsB,oGACtBC,MAAO,2BACPpP,cAAe,qEACfqP,SAAU,mDACVzP,QAAS,uCACT0P,MAAO,mDACPC,OAAQ,yDACRC,sBAAuB,wLACvBC,OAAQ,iCACR7R,QAAS,yDACTsC,KAAM,yDACNwP,OAAQ,6CACRC,QAAS,yDACTC,cAAe,0DACfC,YAAa,6BACbC,OAAQ,6CACRC,QAAS,+DACTC,QAAS,6CACTC,IAAK,eACLC,cAAe,6GACfC,iBAAkB,oGAClBC,SAAU,2DACVC,OAAQ,6CACRC,YAAa,wFACbC,eAAgB,oGAChBC,UAAW,8FACXC,YAAa,mDACbC,OAAQ,+DACRzS,OAAQ,iCACRH,MAAO,iCACP9C,OAAQ,uCACR2V,YAAa,0GACbC,eAAgB,8FAChBC,cAAe,wFACfC,cAAe,oGACfC,gBAAiB,4EACjBC,gBAAiB,mIACjBC,eAAgB,6HAChBC,MAAO,mDACPC,QAAS,yDACTpU,MAAO,mDACPqU,SAAU,4EACVC,OAAQ,+DACRC,aAAc,oGACdC,MAAO,uCACPC,aAAc,kIACdC,SAAU,oDACVC,wBAAyB,sIACzBC,2BAA4B,mJAC5BC,wBAAyB,+JACzBC,oBAAqB,6LACrBC,QAAS,uCACTC,SAAU,6CACVC,MAAO,2BACPC,MAAO,uCACPC,IAAK,qBACLC,KAAM,2BACNC,KAAM,2BACNC,OAAQ,uCACRC,UAAW,mDACXC,QAAS,6CACTC,SAAU,uCACVC,SAAU,6CACVC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,IAAK,qBACLC,GAAI,SACJC,UAAW,iCACXC,MAAO,6CACPC,SAAU,0DACVC,oCAAqC,yNACrCC,uBAAwB,2NACxBC,oBAAqB,8LACrBC,yBAA0B,2LAC1BlU,OAAQ,mDACRmU,oBAAqB,wIACrBlW,SAAU,yDACVmW,eAAgB,2LAChBC,WAAY,qLACZC,iBAAkB,mIAClB1W,MAAO,uCACP2W,kBAAmB,mVACnBC,gBAAiB,qUACjBC,iBAAkB,+VAClBC,iBAAkB,4dAClB9N,MAAO,6CACP+N,UAAW,6GACXC,iBAAkB,2GAClBC,gBAAiB,mPACjBC,iBAAkB,mPAClBC,iBAAkB,uRAClBC,wBAAyB,+KACzBC,GAAI,eACJC,uBAAwB,qOACxBC,uBAAwB,2OACxBC,MAAO,2BACPC,MAAO,qBACPC,MAAO,2BACPC,SAAU,uCACVC,SAAU,uCACVC,SAAU,iCACVC,OAAQ,qBACRC,OAAQ,2BACRC,OAAQ,iCACRC,OAAQ,uCACRC,OAAQ,uCACRC,OAAQ,uCACRC,IAAK,kCAnIP,uCAoIwB,sIApIxB,uCAqIwB,+HArIxB,oCAsIqB,0MAtIrB,sCAuIuB,8JAvIvB,sCAwIuB,uJAxIvB,mCAyIoB,kOAzIpB,mCA0IoB,0DA1IpB,kCA2ImB,mHA3InB,kCA4ImB,kOA5InB,0CA6I2B,kHA7I3B,gCA8IiB,2DA9IjB,6BA+Ic,sEA/Id,wCAgJyB,sOAhJzB,gCAiJiB,0IAjJjB,mCAkJoB,sSAlJpB,IAoJFC,IAAE,IACEnH,SAAU,WACVC,eAAgB,iBAChBC,SAAU,WACVC,OAAQ,SACRC,KAAM,OACNC,KAAM,OACNC,KAAM,OACN/S,UAAW,aACXE,SAAU,YACVC,KAAM,OACN6S,oBAAqB,6BACrBC,qBAAsB,4BACtBC,gBAAiB,wBACjBzS,MAAO,QACP0S,YAAa,cACbC,qBAAsB,0BACtBC,MAAO,QACPpP,cAAe,gBACfqP,SAAU,WACVzP,QAAS,UACT0P,MAAO,QACPC,OAAQ,SACRC,sBAAuB,sCACvBC,OAAQ,SACR7R,QAAS,UACTsC,KAAM,OACNwP,OAAQ,SACRC,QAAS,UACTC,cAAe,gBACfC,YAAa,WACbC,OAAQ,SACRC,QAAS,UACTC,QAAS,UACTC,IAAK,MACLC,cAAe,mBACfC,iBAAkB,mBAClBS,eAAgB,iBAChBC,cAAe,gBACf7V,OAAQ,SACRqW,OAAQ,SACRf,YAAa,cACbC,eAAgB,iBAChBC,UAAW,YACXJ,SAAU,YACVC,OAAQ,SACRI,YAAa,cACbC,OAAQ,SACRzS,OAAQ,SACRH,MAAO,QACP6S,YAAa,cACbG,cAAe,gBACfC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,eAAgB,iBAChBC,MAAO,QACPC,QAAS,UACTpU,MAAO,QACPqU,SAAU,WACVE,aAAc,eACdC,MAAO,QACPC,aAAc,eACdC,SAAU,WACVC,wBAAyB,0BACzBC,2BAA4B,6BAC5BC,wBAAyB,0BACzBC,oBAAqB,qCACrBC,QAAS,UACTC,SAAU,WACVC,MAAO,QACPC,MAAO,QACPC,IAAK,MACLC,KAAM,OACNC,KAAM,OACNC,OAAQ,SACRC,UAAW,YACXC,QAAS,UACTC,SAAU,WACVC,SAAU,WACVC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,GAAI,KACJC,UAAW,YACXC,MAAO,QACPC,SAAU,WACVC,oCAAqC,sCACrCC,uBAAwB,0CACxBC,oBAAqB,uCACrBC,yBAA0B,8BAC1BlU,OAAQ,SACRmU,oBAAqB,sBACrBlW,SAAU,WACVmW,eAAgB,yBAChBC,WAAY,+BACZC,iBAAkB,mBAClB1W,MAAO,QACP2W,kBAAmB,0DACnBC,gBAAiB,yDACjBC,iBAAkB,oEAClBC,iBAAkB,8GAClB9N,MAAO,QACP+N,UAAW,sBACXC,iBAAkB,qBAClBC,gBAAiB,0CACjBC,iBAAkB,2CAClBC,iBAAkB,2CAClBC,wBAAyB,2BACzBC,GAAI,KACJC,uBAAwB,2CACxBC,uBAAwB,2CACxBC,MAAO,MACPC,MAAO,OACPC,MAAO,OACPC,SAAU,SACVC,SAAU,UACVC,SAAU,UACVC,OAAQ,OACRC,OAAQ,QACRC,OAAQ,QACRC,OAAQ,OACRC,OAAQ,QACRC,OAAQ,QACRC,IAAK,OAnIP,uCAoIwB,gCApIxB,uCAqIwB,+BArIxB,oCAsIqB,4CAtIrB,sCAuIuB,+BAvIvB,sCAwIuB,8BAxIvB,mCAyIoB,2CAzIpB,mCA0IoB,oBA1IpB,kCA2ImB,2BA3InB,kCA4ImB,gDA5InB,0CA6I2B,2BA7I3B,gCA8IiB,sBA9IjB,6BA+Ic,cA/Id,wCAgJyB,qCAhJzB,gCAiJiB,kBAjJjB,mCAkJoB,wEAlJpB,KClJC,SAASE,GAAMvV,GAClB,IAAI2H,EAAO,IAAI3I,KAAKgB,GAEhBwV,EAAQ7N,EAAK8N,WACbC,EAAU/N,EAAKgO,aASnB,OAPkC,IAA9BD,EAAQE,WAAWtZ,SACnBoZ,EAAU,IAAMA,GAEY,IAA5BF,EAAMI,WAAWtZ,SACjBkZ,EAAQ,IAAMA,GAGXA,EAAQ,IAAME,EA8ClB,SAASG,GAAgBC,GAC5B,IAAIha,EAAOuJ,GAAMW,WAAW7K,KAAKW,KAC7B6L,EAAO,IAAI3I,KAAK8W,GAEhBN,EAAQ7N,EAAK8N,WACbC,EAAU/N,EAAKgO,aAEe,IAA9BD,EAAQE,WAAWtZ,SACnBoZ,EAAU,IAAMA,GAEY,IAA5BF,EAAMI,WAAWtZ,SACjBkZ,EAAQ,IAAMA,GAGlB,IAAIO,GAAW,IAAI/W,MAAOgX,UAAYrO,EAAKqO,UACvCC,GAAY,IAAIjX,MAAOkX,cAAgBvO,EAAKuO,cAC5CC,EAAOxO,EAAKuO,cACZE,EAAQzO,EAAK0O,WAAW,EACxBC,EAAM3O,EAAKqO,UAEf,GAAIC,EAAY,EACZ,OACIE,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAaU,EAAIV,YAG9C,IAAIW,EAAI,CACJC,GAAU1a,GAAMuW,IAChBmE,GAAU1a,GAAMwW,IAChBkE,GAAU1a,GAAMyW,IAChBiE,GAAU1a,GAAM0W,IAChBgE,GAAU1a,GAAM+V,IAChB2E,GAAU1a,GAAM2W,IAChB+D,GAAU1a,GAAM4W,IAChB8D,GAAU1a,GAAM6W,IAChB6D,GAAU1a,GAAM8W,IAChB4D,GAAU1a,GAAM+W,IAChB2D,GAAU1a,GAAMgX,IAChB0D,GAAU1a,GAAMiX,KAapB,OAPqB,IAAbgD,GACCP,EAAQ,IAAOE,GAEH,IAAbK,GAAkBS,GAAU1a,GAAMmX,WACpB,IAAdgD,GAAmBK,EAAM,IAAMC,EAAIH,EAAM,GAM9C,SAASK,GAAWX,GACvB,IAAIha,EAAOuJ,GAAMW,WAAW7K,KAAKW,KAC7B6L,EAAO,IAAI3I,KAAK8W,GAEhBN,EAAQ7N,EAAK8N,WACbC,EAAU/N,EAAKgO,aAEe,IAA9BD,EAAQE,WAAWtZ,SACnBoZ,EAAU,IAAMA,GAEY,IAA5BF,EAAMI,WAAWtZ,SACjBkZ,EAAQ,IAAMA,GAGlB,IAAIW,EAAOxO,EAAKuO,cACZE,EAAQzO,EAAK0O,WAAW,EACxBC,EAAM3O,EAAKqO,UAEXU,IAAU,IAAI1X,MAAQ8L,UAAYnD,EAAKmD,WAAa,IACpDiL,GAAW,IAAI/W,MAAOgX,UAAYrO,EAAKqO,UACvCW,GAAc,IAAI3X,MAAOqX,WAAW,GAAM1O,EAAK0O,WAAW,GAE9D,OAAIO,MAAMb,IAAaA,EAAW,GAAKY,GAAc,EAE7CR,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAa,OAASJ,EAAQ,IAAOE,EAAUY,EAAIV,WAAa,OAASJ,EAAQ,IAAOE,GAOhG,IAAbK,IAEKW,EAAO,IAAMF,GAAU1a,GAAMqX,UAC1BuD,EAAO,KAAO,KAAOF,GAAU1a,GAAM8Y,SAAW,IAAM4B,GAAU1a,GAAMuZ,KACtEqB,EAAO,MAAQzV,KAAKE,MAAMuV,EAAO,IAAM,IAAMG,GAAW5V,KAAK6V,KAAKJ,EAAO,IAAK,CAACF,GAAU1a,GAAM8Y,SAAU4B,GAAU1a,GAAM+Y,SAAU2B,GAAU1a,GAAMgZ,WAAa,IAAM0B,GAAU1a,GAAMuZ,KACtLqB,EAAO,MAAQ,KAAOF,GAAU1a,GAAMiZ,OAAS,IAAMyB,GAAU1a,GAAMuZ,KACrEqB,EAAO,OAASzV,KAAKE,MAAMuV,EAAO,MAAQ,IAAMG,GAAW5V,KAAK6V,KAAKJ,EAAO,MAAO,CAACF,GAAU1a,GAAMiZ,OAAQyB,GAAU1a,GAAMkZ,OAAQwB,GAAU1a,GAAMmZ,SAAW,IAAMuB,GAAU1a,GAAMuZ,MAGhL,IAAbU,GAAkBS,GAAU1a,GAAMmX,UAAY,IAAMuD,GAAU1a,GAAMkX,GAAK,IAAMwC,EAAQ,IAAOE,GAC9FK,EAAW,GAAKA,EAAW,IAAMc,GAAW5V,KAAK6V,KAAKf,GAAW,CAACS,GAAU1a,GAAM2Y,MAAO+B,GAAU1a,GAAM4Y,MAAO8B,GAAU1a,GAAM6Y,QAAU,IAAM6B,GAAU1a,GAAMuZ,IAAM,IAAMmB,GAAU1a,GAAMkX,GAAK,IAAMwC,EAAQ,IAAOE,GACtNK,EAAW,IAAM9U,KAAK6V,KAAKf,EAAW,GAAK,IAAMc,GAAW5V,KAAK6V,KAAKf,EAAW,GAAI,CAACS,GAAU1a,GAAMoZ,OAAQsB,GAAU1a,GAAMqZ,OAAQqB,GAAU1a,GAAMsZ,SAAW,IAAMoB,GAAU1a,GAAMuZ,IAAM,IAAMmB,GAAU1a,GAAMkX,GAAK,IAAMwC,EAAQ,IAAOE,EAKzP,SAASmB,GAAWE,EAAGC,GACI,IAAIC,GAA3BF,EAAI9V,KAAKiW,IAAIH,GAAK,KAAkB,GACpC,OAAIA,EAAI,IAAMA,EAAI,GAAaC,EAAW,GACtCC,EAAK,GAAKA,EAAK,EAAYD,EAAW,GAChC,GAANC,EAAkBD,EAAW,GAC1BA,EAAW,G,uFC1FPG,G,4MAxEX/b,MAAQ,CACJgc,QAAQ,EACRC,KAAM,EACNC,IAAK,G,2DAGI/S,GAAI,IAAD,OACRgT,EAAU9V,SAAS+V,eAAetd,KAAKC,MAAMsd,MACjD,GAAGF,EAAS,CACR,IAAIxZ,GAAO,GACAwG,EAAElD,MAASkD,EAAEmT,cAAgBnT,EAAEmT,gBAClC3Z,MAAK,SAAAC,GAAC,OAAIA,EAAEmC,KAAO,EAAKhG,MAAMsd,UAClClT,EAAEoT,kBACF5Z,GAAO,GAGX,IAEIuZ,EACAD,EAHAO,EAAOL,EAAQM,wBAIhB3d,KAAKC,MAAM2d,QACVR,EAAMM,EAAK/J,EAAI0J,EAAQQ,aACvBV,EAAOO,EAAK5Z,EACT9D,KAAKC,MAAM6d,QACVX,EAAOO,EAAK5Z,EAAEuZ,EAAQU,eAG1BX,EAAMM,EAAK/J,EACXwJ,EAAOO,EAAK5Z,EAAEuZ,EAAQU,aAG1B/d,KAAKge,SAAS,CAACb,OAAMC,SACI,UAArBpd,KAAKC,MAAMge,QAAsBje,KAAKkB,MAAMgc,QAAUrZ,IAA+B,UAArB7D,KAAKC,MAAMge,QAC3Eje,KAAKge,SAAS,CAACd,QAASld,KAAKkB,MAAMgc,Y,0CAKnB,UAArBld,KAAKC,MAAMge,QACV1W,SAAS+V,eAAetd,KAAKC,MAAMsd,MAAMtP,iBAAiB,aAAcjO,KAAKke,aAAaC,KAAKne,OAC/FuH,SAAS+V,eAAetd,KAAKC,MAAMsd,MAAMtP,iBAAiB,aAAcjO,KAAKke,aAAaC,KAAKne,QAE3E,UAArBA,KAAKC,MAAMge,QACV1W,SAAS+V,eAAetd,KAAKC,MAAMsd,MAAMtP,iBAAiB,QAASjO,KAAKke,aAAaC,KAAKne,OAC1FuH,SAASqI,KAAK3B,iBAAiB,QAASjO,KAAKke,aAAaC,KAAKne,U,6CAK3C,UAArBA,KAAKC,MAAMge,QACV1W,SAAS+V,eAAetd,KAAKC,MAAMsd,MAAMa,oBAAoB,aAAcpe,KAAKke,aAAaC,KAAKne,OAClGuH,SAAS+V,eAAetd,KAAKC,MAAMsd,MAAMa,oBAAoB,aAAcpe,KAAKke,aAAaC,KAAKne,QAE9E,UAArBA,KAAKC,MAAMge,QACV1W,SAAS+V,eAAetd,KAAKC,MAAMsd,MAAMa,oBAAoB,QAASpe,KAAKke,aAAaC,KAAKne,OAC7FuH,SAASqI,KAAKwO,oBAAoB,QAASpe,KAAKke,aAAaC,KAAKne,U,+BAKtE,OACI,yBAAKD,MAAO,CAACod,KAAMnd,KAAKkB,MAAMic,KAAMC,IAAKpd,KAAKkB,MAAMkc,IAAKiB,UAAWre,KAAKC,MAAM2d,OAAS5d,KAAKC,MAAM6d,MAAQ,oBAAsB,OAAS,MAAOhe,UAAS,gCAA2BE,KAAKkB,MAAMgc,OAAS,SAAW,KAChN,yBAAKpd,UAAS,eACTE,KAAKC,MAAMqe,QAAQjc,KAAI,SAAClB,EAAQyE,GAC7B,OAAOzE,EAAS,kBAACod,GAAA,EAAD,CAAQC,IAAK5Y,EAAO6Y,QAAS,WAAOtd,EAAOA,UAAWrB,UAAU,iBAAiBqB,EAAOyR,MAAiB,c,GAjExHjT,IAAMkB,WCiBzB6d,G,4MACFxd,MAAQ,CACJyd,SAAU/X,GAAc,EAAG,M,uDAGrB,IAAD,OACL,OACI,kBAAC,KAAD,CAAS7G,MAAO,CAAC6e,eAAgB,QAASH,QAAS,SAACpU,GAC7C,iBAAU,EAAKpK,MAAMgB,KAAKsB,OAAU,EAAKtC,MAAM4e,QAAQ5O,SAASC,UAC/D7F,EAAEyU,kBACPhf,UAAU,cAAcsa,GAAE,iBAAYpa,KAAKC,MAAMgB,KAAKsB,MACrD,kBAACgc,GAAA,EAAD,CAAQze,UAAS,eACb,kBAAC,EAAD,CACII,SAAQF,KAAKC,MAAMgB,KAAKf,QAASF,KAAKC,MAAMgB,KAAKf,OACjDO,OAAQT,KAAKC,MAAMgB,KAAKR,OACxBV,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMgB,KAAKN,MAAzB,MAC9FP,KAAMJ,KAAKC,MAAMgB,KAAKb,KAAKmB,MAAM6d,OAAO,GAAKpf,KAAKC,MAAMgB,KAAKb,KAAKqB,KAAK2d,OAAO,KAGlF,yBAAKrf,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,uBAAGxf,UAAU,aAAY,wCAAUE,KAAKC,MAAMgB,KAAKb,KAAKmB,MAA/B,YAAwCvB,KAAKC,MAAMgB,KAAKb,KAAKqB,SACpFzB,KAAKC,MAAMkF,QAAU,uBAAGrF,UAAU,gBAC/BE,KAAKC,MAAMwE,YAAYxD,KAAKsB,MAAQvC,KAAKC,MAAMsf,OAAOhd,KAAO,0BAAMxC,MAAO,CAACY,MAAO,YAAaX,KAAKC,MAAMuf,UAAU9J,IAAvD,SAC7D1V,KAAKC,MAAMwE,YAAYmO,MAAQ,0BAAM9S,UAAU,UAAUC,MAAO,CAACY,MAAuC,SAAhCX,KAAKC,MAAMwE,YAAYrD,KAAkB,UAAY,OAAwC,SAAhCpB,KAAKC,MAAMwE,YAAYrD,KAAkBpB,KAAKC,MAAMuf,UAAUxf,KAAKC,MAAMwE,YAAYmO,MAAQ5S,KAAKC,MAAMwE,YAAYmO,OAExP5S,KAAKC,MAAMwE,YAAYmO,MACgB,IAAzC5S,KAAKC,MAAMwE,YAAYd,OAAOvB,QAC1B,oCAAE,0BAAOtC,UAAU,UAAUC,MAAO,CAACY,MAAO,YAA1C,WAGJX,KAAKC,MAAMwE,YAAYmO,MACzB5S,KAAKC,MAAMwE,YAAYd,OAAOvB,OAAS,GACnC,oCAAE,0BAAOtC,UAAU,UAAUC,MAAO,CAACY,MAAO,YAAaX,KAAKC,MAAMuf,UAAUrJ,OAA5E,KAAsFnW,KAAKC,MAAMwE,YAAYd,OAAOvB,OAApH,OAGJpC,KAAKC,MAAMwE,YAAYmO,OACxB5S,KAAKC,MAAMwE,YAAYd,OAAOvB,QACU,IAAzCpC,KAAKC,MAAMwE,YAAYf,OAAOtB,QAC1B,oCAAE,0BAAOtC,UAAU,UAAUC,MAAO,CAACY,MAAO,YAA1C,WAGJX,KAAKC,MAAMwE,YAAYmO,OACxB5S,KAAKC,MAAMwE,YAAYd,OAAOvB,QAC/BpC,KAAKC,MAAMwE,YAAYf,OAAOtB,OAAS,GACnC,oCAAE,0BAAMtC,UAAU,UAAUC,MAAO,CAACY,MAAO,YAAaX,KAAKC,MAAMuf,UAAU9b,OAA3E,KAAqF1D,KAAKC,MAAMwE,YAAYf,OAAOtB,OAAnH,OAGJpC,KAAKC,MAAMwE,YAAYmO,OACxB5S,KAAKC,MAAMwE,YAAYd,OAAOvB,SAC9BpC,KAAKC,MAAMwE,YAAYf,OAAOtB,QACS,IAAxCpC,KAAKC,MAAMwE,YAAYlB,MAAMnB,QACzB,oCAAE,0BAAMtC,UAAU,UAAUC,MAAO,CAACY,MAAO,YAAzC,UAGJX,KAAKC,MAAMwE,YAAYmO,OACxB5S,KAAKC,MAAMwE,YAAYd,OAAOvB,SAC9BpC,KAAKC,MAAMwE,YAAYf,OAAOtB,QAC/BpC,KAAKC,MAAMwE,YAAYlB,MAAMnB,OAAS,GAClC,oCAAE,0BAAMtC,UAAU,UAAUC,MAAO,CAACY,MAAO,YAAaX,KAAKC,MAAMuf,UAAUjc,MAA3E,KAAoFvD,KAAKC,MAAMwE,YAAYlB,MAAMnB,OAAjH,OAGJpC,KAAKC,MAAMwE,YAAYmO,OACxB5S,KAAKC,MAAMwE,YAAYd,OAAOvB,SAC9BpC,KAAKC,MAAMwE,YAAYf,OAAOtB,SAC9BpC,KAAKC,MAAMwE,YAAYlB,MAAMnB,UAC5BpC,KAAKC,MAAMwE,YAAYoO,eAAezQ,QACpC,oCAAE,0BAAMtC,UAAU,UAAUC,MAAO,CAACY,MAAO,YAAzC,wBAA2EX,KAAKC,MAAMwE,YAAYoO,eAAezQ,OAAjH,OAGTpC,KAAKC,MAAMkF,QAAU,uBAAGrF,UAAU,uBAAb,WAE1B,yBAAKA,UAAU,eACX,0BAAMA,UAAU,WAAW6b,GAAgB3b,KAAKC,MAAMwE,YAAYM,YAClE,kBAAC,sBAAD,CACJ0a,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,KAClB3f,KAAKC,MAAMwE,YAAYxD,KAAKsB,MAAQvC,KAAKC,MAAMsf,OAAOhd,MAAQvC,KAAKC,MAAMwE,YAAYzC,SAAWhC,KAAKC,MAAMwE,YAAY7B,WAAc,kBAAC,KAAD,CAAkB7C,MAAO,CAAC6f,UAAW,EAAGhf,SAAU,GAAID,MAAO,aAClMX,KAAKC,MAAMwE,YAAYxD,KAAKsB,MAAQvC,KAAKC,MAAMsf,OAAOhd,MAAQvC,KAAKC,MAAMwE,YAAYzC,UAAYhC,KAAKC,MAAMwE,YAAY7B,YAAc5C,KAAKC,MAAMwE,YAAYV,QAAW,kBAAC,KAAD,CAAUhE,MAAO,CAAC6f,UAAW,EAAGhf,SAAU,GAAID,MAAO,aAC7NX,KAAKC,MAAMwE,YAAYxD,KAAKsB,MAAQvC,KAAKC,MAAMsf,OAAOhd,MAAQvC,KAAKC,MAAMwE,YAAYzC,UAAYhC,KAAKC,MAAMwE,YAAY7B,WAAa5C,KAAKC,MAAMwE,YAAYV,QAAW,kBAAC,KAAD,CAAahE,MAAO,CAAC6f,UAAW,EAAGhf,SAAU,GAAID,MAAO,aAC/NX,KAAKC,MAAMwE,YAAYxD,KAAKsB,MAAQvC,KAAKC,MAAMsf,OAAOhd,OAASvC,KAAKC,MAAMyE,QAAW,0BAAM5E,UAAU,yBAAyBE,KAAKC,MAAMyE,QACzI1E,KAAKC,MAAMwE,YAAYxD,KAAKsB,MAAQvC,KAAKC,MAAMsf,OAAOhd,MAAQvC,KAAKC,MAAMyE,QAAW,0BAAM3E,MAAO,CAACkf,OAAQ,MAC1Gjf,KAAKC,MAAMwE,YAAYxD,KAAKsB,MAAQvC,KAAKC,MAAMsf,OAAOhd,MAAQvC,KAAKC,MAAMwE,YAAY7B,WAAa5C,KAAKC,MAAMwE,YAAYzC,SAAY,oCACnI,kBAAC,GAAD,CAAYic,MAAM,QAAQK,QAAS,CAC/B,CAAC1L,KAAM,QAASzR,OAAQ,WACpB,IAAIkC,EAAU,EAAKpD,MAAMwE,YACzBpB,EAAQH,OAAS,EAAKjD,MAAMgB,KAAKsB,IACjCc,EAAQmB,SAAW,EAAKvE,MAAMuE,SAC9B,EAAKvE,MAAM4f,eAAerM,iBAAiBnQ,EAAS,EAAKpD,MAAMsf,OAAOvQ,YAE1E,CAAC4D,KAAM,SAAUzR,OAAQ,WACrB,EAAKlB,MAAM4f,eAAehM,mBAAmB,EAAK5T,MAAMwE,YAAYlC,IAAK,EAAKtC,MAAMuE,aAEzF+Y,KAAM,yBAAyBvd,KAAKkB,MAAMyd,WAC7C,kBAAC,KAAD,CAAkB7e,UAAU,QAAQmG,GAAI,yBAAyBjG,KAAKkB,MAAMyd,SAAU5e,MAAO,CAAC6f,UAAW,EAAGhf,SAAU,GAAID,MAAO,sB,GAnGpIhB,IAAMkB,WAyHhBif,0BAASxD,GAATwD,CAAoBC,aAZX,SAAA7e,GACpB,MAAO,CACHqe,OAAQre,EAAMD,SAItB,SAA4BmK,GACxB,MAAO,CACHyU,eAAgBG,YAAmBH,EAAgBzU,MAIxB2U,CAA6CE,aAAWvB,M,qBC/GrFwB,GAAYC,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFlB,gBAAiB,UACjBnM,SAAU,WACV4K,OAAQ,GACRE,MAAO,GACP,UAAW,CACPqB,gBAAiB,eAKXgB,CAAsBG,MAElCC,G,4MAGFrf,MAAQ,CACJsf,YAAY,EACZC,UAAW,G,kEAIXzgB,KAAK0gB,QAAQC,cAAa,K,iCAQvB3gB,KAAKkB,MAAMuf,UAAYzgB,KAAK4gB,cAAcC,eACtC7gB,KAAKkB,MAAMsf,YACVxgB,KAAKge,SAAS,CAACwC,YAAY,IAE3BxgB,KAAKkB,MAAMsf,YACXxgB,KAAKge,SAAS,CAACwC,YAAY,IAG/BxgB,KAAK4gB,cAAcE,mBAAqB9gB,KAAK4gB,cAAcG,kBAAoB/gB,KAAK4gB,cAAcC,kBAAqB,GACvH7gB,KAAKC,MAAM4f,eAAe/N,YAAY9R,KAAKC,MAAMgB,KAAK+N,UAG1DhP,KAAKge,SAAS,CAACyC,UAAWzgB,KAAK4gB,cAAcC,mB,4CAG3BG,EAAWC,GAC7B,OAAGA,EAAUR,YAAczgB,KAAKkB,MAAMuf,Y,6CAQtCzgB,KAAK0gB,QAAQC,cAAa,K,+BAGpB,IC/EsBtD,ED+EvB,OACL,OACI,oCACI,yBAAKvd,UAAU,qCAAqCC,MAAO,CAACmhB,SAAU,WAClE,wBAAIphB,UAAU,iBAAiBE,KAAKC,MAAMuf,UAAU3K,OAEpD,kBAAC,aAAD,CACIsM,IAAK,SAACA,GAAS,EAAKP,cAAgBO,GACpCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,qBAChBsC,UAAQ,GAEPvhB,KAAKC,MAAMoE,QAAQxC,aC9FRwb,ED8FkC,yBAAKvd,UAAU,aACzD,kBAAC0hB,GAAA,EAAD,CAAUC,QAAQ,SAASC,MAAO,GAAIzC,OAAQ,KAC9C,kBAACuC,GAAA,EAAD,CAAUC,QAAQ,OAAO1hB,MAAO,CAAC4hB,WAAY,GAAIC,KAAM,UC/FxE,oCACFvE,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,IDuFgBrd,KAAKC,MAAMoE,QAAQA,QAAQhC,KAAI,SAACc,EAAQyC,GACrC,OAAOzC,EAAOsB,aACV,kBAAC,GAAD,CAAY+Z,IAAK5Y,EAAOpB,SAAUrB,EAAOZ,IAAK4C,OAAQhC,EAAOgC,OAAQT,OAAQvB,EAAOuB,OAAQD,YAAatB,EAAOsB,YAAaxD,KAAMkC,EAAOlC,YAKpJjB,KAAKC,MAAMoE,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEW,gBAAgB,yBAAK3E,UAAU,cACpE,kBAAC,KAAD,CAAgBC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAEnF,2BAAI9hB,KAAKC,MAAMuf,UAAUpG,sBAG7B,kBAAC2I,GAAA,EAAD,CAASvf,MAAM,gBAAgB1C,UAAS,2BAAsBE,KAAKkB,MAAMsf,WAAa,SAAW,IAAMwB,UAAU,OAC7G,kBAAC9B,GAAD,CAAWvf,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,mBAGZ,kBAAC,IAAD,c,GAlFLvV,IAAMkB,WAAvB0f,GACK4B,YAAcziB,EAwGVogB,0BAASxD,GAATwD,CAAoBC,aAdX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,MACboC,QAASnD,EAAMmD,YAIvB,SAA4B+G,GACxB,MAAO,CACHyU,eAAgBG,YAAmBH,EAAgBzU,MAIxB2U,CAA6CE,aAAWM,M,oBE/HrF6B,G,uKACQ,IAAD,OACL,OACI,kBAAC,KAAD,CAAMriB,MAAO,CAAC6e,eAAgB,QAASH,QAAS,SAACpU,GAC1C,EAAKpK,MAAM0F,KAAK1E,OACfoJ,EAAEyU,iBACF3T,GAAMC,SAAS,CACXhK,KzBmBO,kByBlBPC,QAAS,EAAKpB,MAAMqC,KAAKC,QAGlC6X,GAAE,iBAAYpa,KAAKC,MAAMqC,KAAKC,MAC7B,kBAACgc,GAAA,EAAD,CAAQze,UAAU,YAAY0C,MAAK,eAAUxC,KAAKC,MAAMqC,KAAKE,QACzD,kBAAC,EAAD,CAAQzC,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMqC,KAAK3B,MAAzB,MAAoCP,KAAMJ,KAAKC,MAAMqC,KAAKE,MAAM4c,OAAO,KAC7K,yBAAKrf,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAItf,KAAKC,MAAMqC,KAAKG,WAAa,kBAAC,KAAD,MAAqB,8BAAOzC,KAAKC,MAAMqC,KAAKE,QAC7E,yBAAK1C,UAAU,QAAQC,MAAO,CAACmhB,SAAU,WACpClhB,KAAKC,MAAMqC,KAAKU,MAAMX,KAAI,SAACpB,EAAM2E,GAAP,OACvB,kBAAC,EAAD,CAAQ4Y,IAAK5Y,EAAO1F,SAAQe,EAAKf,QAASe,EAAKf,OAAgBH,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,EAAGue,gBAAgB,OAAD,OAASle,EAAKN,MAAd,MAAyBP,KAAMa,EAAKb,KAAKmB,MAAM6d,OAAO,GAAGne,EAAKb,KAAKqB,KAAK2d,OAAO,gB,GAvBnOzf,IAAMkB,WAwCdkf,gBAPS,SAAA7e,GACpB,MAAO,CACHe,MAAOf,EAAMe,MACb0D,KAAMzE,EAAMyE,QAILoa,CAAyBqC,IC7BpCvT,IAAc,EAELwT,GAAW,SAACrT,EAAUpN,GAAX,OAAoB,SAACwJ,GACzCA,EAAS,CACLhK,K1BKqB,kB0BFzBgO,MAAM,GAAD,OAAI7B,GAAJ,qBAA+B,CAChC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBlO,WAGPmI,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC9H,GACHmJ,EAAS,CACLhK,K1BrCa,Y0BsCbC,QAASY,IAGbsI,GAAiB+G,SAAS1P,MAE7BoI,OAAM,SAACC,GACJmB,EAAS,CACLhK,K1BrBmB,yB0B0BlBkhB,GAAW,SAAAhgB,GAAI,OAAI,SAAC8I,GAC7BA,EAAS,CACLhK,K1BnDiB,Y0BoDjBC,QAASiB,MAIJigB,GAAY,SAACvT,EAAUpN,GAAX,OAAoB,SAACwJ,GACvCD,GAAMW,WAAW7J,MAAMC,UACtBkJ,EAAS,CACLhK,K1B/BiB,gB0BgCjBC,QAAS,KAGb+N,MAAM,GAAD,OAAI7B,GAAJ,kBAA4B,CAC7B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB0S,WAAYrX,GAAMW,WAAW7J,MAAMA,MAAMkJ,GAAMW,WAAW7J,MAAMA,MAAMG,OAAO,GAAGG,IAChFkgB,YAAatX,GAAMW,WAAW7J,MAAMA,MAAM,GAAGM,IAC7CX,WAGPmI,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC9H,GACHmJ,EAAS,CACLhK,K1BnDa,gB0BoDbC,QAASY,UAMZuP,GAAW,SAAC,GAAD,IAAEvL,EAAF,EAAEA,GAAI+I,EAAN,EAAMA,SAAN,OAAoB,SAAC5D,GACzCgE,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CACxB8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB7J,KACAuK,SAAUjG,GAAiB8G,kBAGlCtH,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAC0G,GACH,GAAGA,EAAK1N,MAQJ,OAPAyE,GAAc,cAEd4D,EAAS,CACLhK,K1B7FY,mB0B8FZC,QAASoP,EAAKC,OAAO,KAKzB,IAAIpO,EAAOmO,EAAKnO,KACZQ,EAAQ2N,EAAK3N,MAEjBR,EAAKa,OAAOC,SAAWd,EAAKa,OAAOC,SAASgN,UAE5C9N,EAAKU,MAAMX,KAAI,SAAAyB,GAEX,OADAA,EAAEE,UAAW,EACN,KAGXwD,GAAclF,EAAKE,OAEnB4I,EAAS,CACLhK,K1BzHW,kB0B0HXC,QAAS,CAACiB,OAAMJ,QAAyC,KAAhCI,EAAKa,OAAOC,SAAShB,OAAeU,WAG9D+L,IACC8B,aAAa9B,IAGd/L,GAAU,IAAIgC,KAAKhC,EAAMgD,MAAM8K,WAAY,IAAI9L,MAAO8L,WAAc,QACnE/B,GAAcgC,YAAW,WAClB1F,GAAMW,WAAW7J,MAAMF,YAC1BoJ,GAAMW,WAAW7J,MAAMF,WAAWQ,MAAQD,EAAKC,KAC7C4I,GAAMW,WAAW7J,MAAMF,WAAWe,OACpCqI,GAAMW,WAAW7J,MAAMF,WAAWe,MAAMgD,OAAShD,EAAMgD,MACnDqF,GAAMC,SAAS,CACXhK,K1B9GD,kB0B+GCC,SAAS,MAIjB,IAAIyD,KAAKhC,EAAMgD,MAAM8K,WAAY,IAAI9L,MAAO8L,YAGpDrG,GAAiBiH,SAAS,CAACvO,OAAQX,EAAKC,IAAKX,KAAMU,EAAKV,OAExD,IACI2O,GAA6BjO,EAAKC,KACpC,MAAO0H,GACLM,GAAiByB,UAAU,CAAC/I,OAAQX,EAAKC,IAAKX,KAAMU,EAAKV,OACzDwJ,EAAS,CACLhK,K1B9IQ,mB0B+IRC,QAAS,CAACyP,MAAO,MAAOC,IAAK,8BAK5C/G,OAAM,SAACC,GACJmB,EAAS,CACLhK,K1BtJgB,mB0BuJhBC,QAAS,CAACyP,MAAO,MAAOC,IAAK,+BAKhC/E,GAAY,SAAC/I,EAAQrB,GAAT,OAAkB,SAACwJ,GACxCmF,GAA2B,CAACtN,SAAQrB,SACpCwJ,EAAS,CACLhK,K1BvKwB,uB0B2KnBkR,GAAc,SAACjP,EAAS2L,GAAV,OAAuB,SAAC5D,GAO/C,IANA,IAAImH,EAAW,IAAIC,SACfjQ,EAAMqE,GAAc,EAAG,KACvBjD,EAAS,GACTJ,EAAQ,GACRG,EAAS,GAEJ4D,EAAI,EAAGA,EAAIjE,EAAQM,OAAOvB,OAAQkF,IACvCiL,EAASE,OAAO,SAASnL,EAAGjE,EAAQM,OAAO2D,GAAG7D,MAC9CE,EAAO+O,KAAKrP,EAAQM,OAAO2D,IAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAIjE,EAAQE,MAAMnB,OAAQkF,IACtCiL,EAASE,OAAO,QAAQnL,EAAGjE,EAAQE,MAAM+D,GAAG7D,MAC5CF,EAAMmP,KAAKrP,EAAQE,MAAM+D,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAIjE,EAAQK,OAAOtB,OAAQkF,IACvCiL,EAASE,OAAO,SAASnL,EAAGjE,EAAQK,OAAO4D,GAAG7D,MAC9CC,EAAOgP,KAAKrP,EAAQK,OAAO4D,IAG/B,IAAIqL,EAAe,CACfpQ,MACAtB,KAAMkK,GAAMW,WAAW7K,KACvB2R,KAAMvP,EAAQuP,KACdjP,SACAD,SACAH,QACAX,WAAW,EACXZ,SAAS,EACT+B,QAAQ,EACR8O,eAAgBxP,EAAQwP,eACxB9N,UAAWD,KAAKmM,MAChB7P,KAAM,WAGVgK,EAAS,CACLhK,K1B9MyB,oB0B+MzBC,QAASsR,IAGb,IAAIE,EAAiB,GAErBxP,EAAQwP,eAAexQ,KAAI,SAAAyQ,GAEvB,OADAD,EAAeH,KAAKI,EAAEvQ,KACf,KAGXc,EAAQwP,eAAiBA,EACzBxP,EAAQmN,SAAWjG,GAAiB8G,cAEpCkB,EAASE,OAAO,OAAQpP,EAAQuP,MAChCL,EAASE,OAAO,iBAAkBpP,EAAQwP,gBAC1CN,EAASE,OAAO,SAAUpP,EAAQJ,QAClCsP,EAASE,OAAO,WAAYpP,EAAQmB,UACpC+N,EAASE,OAAO,WAAYlI,GAAiB8G,eAG7CjC,MAAM,GAAD,OAAI7B,GAAJ,0BAAoC,CACjC8B,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2C,IAETxI,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAgJ,GACF,GAAGA,EAAWhQ,MAMV,MALgC,aAA7BgQ,EAAWrC,OAAO,GAAGK,KACpB7K,KAAMnD,MAAM,8BAA+B,CACvCiQ,SAAU9M,KAAM+M,SAASC,aAG1B9H,EAAS,CACZhK,K1BnPe,sB0BoPfC,QAASkB,IAGjB6I,EAAS,CACLhK,K1BzPqB,wB0B0PrBC,QAAS,CAACkB,MAAKe,OAAQyP,EAAWxQ,UAGzCyH,OAAM,WACHoB,EAAS,CACLhK,K1B9PmB,sB0B+PnBC,QAASkB,SAKZ4Q,GAAc,SAAC9P,EAAS2L,GAAV,OAAuB,SAAC5D,GAW/C,IAVA,IAAImH,EAAW,IAAIC,SAEf7O,EAAS,GACTJ,EAAQ,GACRG,EAAS,GAET0P,EAAY,GACZC,EAAW,GACXC,EAAY,GAEPhM,EAAI,EAAGA,EAAIjE,EAAQM,OAAOvB,OAAQkF,IACpCjE,EAAQM,OAAO2D,GAAG7D,MACjB8O,EAASE,OAAO,SAASnL,EAAGjE,EAAQM,OAAO2D,GAAG7D,MAE9CE,EAAO+O,KAAKrP,EAAQM,OAAO2D,KAE3B8L,EAAUV,KAAKrP,EAAQM,OAAO2D,GAAGrB,IAIzC,IAAK,IAAIqB,EAAI,EAAGA,EAAIjE,EAAQE,MAAMnB,OAAQkF,IACnCjE,EAAQE,MAAM+D,GAAG7D,MAChB8O,EAASE,OAAO,QAAQnL,EAAGjE,EAAQE,MAAM+D,GAAG7D,MAE5CF,EAAMmP,KAAKrP,EAAQE,MAAM+D,KAEzB+L,EAASX,KAAKrP,EAAQE,MAAM+D,GAAGrB,IAIvC,IAAK,IAAIqB,EAAI,EAAGA,EAAIjE,EAAQK,OAAOtB,OAAQkF,IACpCjE,EAAQK,OAAO4D,GAAG7D,MACjB8O,EAASE,OAAO,SAASnL,EAAGjE,EAAQK,OAAO4D,GAAG7D,MAE9CC,EAAOgP,KAAKrP,EAAQK,OAAO4D,KAE3BgM,EAAUZ,KAAKrP,EAAQK,OAAO4D,GAAGrB,IAIzC,IAAI0M,EAAe,CACfpQ,IAAKc,EAAQd,IACbtB,KAAMkK,GAAMW,WAAW7K,KACvB2R,KAAMvP,EAAQuP,KACdjP,OAAQN,EAAQM,OAChBD,OAAQL,EAAQK,OAChBH,MAAOF,EAAQE,MACfX,WAAW,EACXZ,SAAS,EACT6Q,eAAgBxP,EAAQwP,gBAG5BzH,EAAS,CACLhK,K1BzT0B,qB0B0T1BC,QAASsR,IAGb,IAAIE,EAAiB,GAErBxP,EAAQwP,eAAexQ,KAAI,SAAAyQ,GAEvB,OADAD,EAAeH,KAAKI,EAAEvQ,KACf,KAGXc,EAAQwP,eAAiBA,EACzBxP,EAAQmN,SAAWjG,GAAiB8G,cACpChO,EAAQJ,OAASkI,GAAMW,WAAW7J,MAAMF,WAAWQ,IAEnDgQ,EAASE,OAAO,MAAOpP,EAAQd,KAC/BgQ,EAASE,OAAO,OAAQpP,EAAQuP,MAChCL,EAASE,OAAO,iBAAkBpP,EAAQwP,gBAC1CN,EAASE,OAAO,SAAUpP,EAAQJ,QAClCsP,EAASE,OAAO,WAAYpP,EAAQmB,UACpC+N,EAASE,OAAO,WAAYlI,GAAiB8G,eAC7CkB,EAASE,OAAO,YAAaW,GAC7Bb,EAASE,OAAO,YAAaa,GAC7Bf,EAASE,OAAO,WAAYY,GAE5BjE,MAAM,GAAD,OAAI7B,GAAJ,0BAAoC,CACjC8B,OAAQ,OACRC,QAAS,CACLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2C,IAETxI,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAgJ,GACF,GAAGA,EAAWhQ,MAMV,MALgC,aAA7BgQ,EAAWrC,OAAO,GAAGK,KACpB7K,KAAMnD,MAAM,8BAA+B,CACvCiQ,SAAU9M,KAAM+M,SAASC,aAG1B9H,EAAS,CACZhK,K1BnWe,sB0BoWfC,QAASgC,EAAQd,MAGzB6I,EAAS,CACLhK,K1BzWqB,wB0B0WrBC,QAAS,CAACkB,IAAKc,EAAQd,IAAKe,OAAQD,EAAQd,UAGnDyH,OAAM,WACHoB,EAAS,CACLhK,K1B9WmB,sB0B+WnBC,QAASgC,EAAQd,WAKpBkR,GAAgB,SAAC,EAA0BzE,GAA3B,IAAE/L,EAAF,EAAEA,OAAQyQ,EAAV,EAAUA,eAAV,OAAwC,SAACtI,GAClE,IAAIlG,EAAa,GACjBwO,EAAerR,KAAI,SAAAyQ,GAEf,OADA5N,EAAWwN,KAAKI,EAAEvQ,KACX,KAGX6I,EAAS,CACLhK,K1BxX4B,uB0ByX5BC,QAAS6D,IAGbkK,MAAM,GAAD,OAAI7B,GAAJ,4BAAsC,CACnC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB7M,SACAiC,aACAsL,SAAUjG,GAAiB8G,kBAGlCtH,OACAC,OAAM,iBAKF6J,GAAqB,SAACtR,GAAD,OAAS,SAAC6I,GACxCA,EAAS,CACLhK,K1BjZ4B,uB0BkZ5BC,QAAS,CAACkB,OAILiR,GAAmB,SAACnQ,EAAS2L,GAAV,OAAuB,SAAC5D,GAMpD,IALA,IAAImH,EAAW,IAAIC,SACf7O,EAAS,GACTJ,EAAQ,GACRG,EAAS,GAEJ4D,EAAI,EAAGA,EAAIjE,EAAQM,OAAOvB,OAAQkF,IACvCiL,EAASE,OAAO,SAASnL,EAAGjE,EAAQM,OAAO2D,GAAG7D,MAC9CE,EAAO+O,KAAKrP,EAAQM,OAAO2D,IAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAIjE,EAAQE,MAAMnB,OAAQkF,IACtCiL,EAASE,OAAO,QAAQnL,EAAGjE,EAAQE,MAAM+D,GAAG7D,MAC5CF,EAAMmP,KAAKrP,EAAQE,MAAM+D,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAIjE,EAAQK,OAAOtB,OAAQkF,IACvCiL,EAASE,OAAO,SAASnL,EAAGjE,EAAQK,OAAO4D,GAAG7D,MAC9CC,EAAOgP,KAAKrP,EAAQK,OAAO4D,IAG/B,IAAIqL,EAAe,CACfpQ,IAAKc,EAAQd,IACbtB,KAAMkK,GAAMW,WAAW7K,KACvB2R,KAAMvP,EAAQuP,KACdjP,OAAQN,EAAQM,OAChBD,OAAQ,GACRH,MAAO,GACPX,WAAW,EACXZ,SAAS,EACT6Q,eAAgBxP,EAAQwP,eACxB9N,UAAWD,KAAKmM,MAChB7P,KAAM,WAGVgK,EAAS,CACLhK,K1B1b4B,uB0B2b5BC,QAAS,CAACgC,EAAQd,OAGtB6I,EAAS,CACLhK,K1BrcyB,oB0BsczBC,QAASsR,IAGb,IAAIE,EAAiB,GAErBxP,EAAQwP,eAAexQ,KAAI,SAAAyQ,GAEvB,OADAD,EAAeH,KAAKI,EAAEvQ,KACf,KAGXc,EAAQwP,eAAiBA,EACzBxP,EAAQmN,SAAWjG,GAAiB8G,cAEpCkB,EAASE,OAAO,OAAQpP,EAAQuP,MAChCL,EAASE,OAAO,iBAAkBpP,EAAQwP,gBAC1CN,EAASE,OAAO,SAAUpP,EAAQJ,QAClCsP,EAASE,OAAO,WAAYpP,EAAQmB,UACpC+N,EAASE,OAAO,WAAYlI,GAAiB8G,eAE7CjC,MAAM,GAAD,OAAI7B,GAAJ,0BAAoC,CACjC8B,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2C,IAETxI,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAgJ,GACF3H,EAAS,CACLhK,K1BpeqB,wB0BqerBC,QAAS,CAACkB,IAAKc,EAAQd,IAAKe,OAAQyP,EAAWxQ,UAGtDyH,OAAM,WACHoB,EAAS,CACLhK,K1BzemB,sB0B0enBC,QAASgC,EAAQd,WAKpBgR,GAAe,SAAC,EAA4BvE,GAA7B,IAAExK,EAAF,EAAEA,SAAUtB,EAAZ,EAAYA,OAAQD,EAApB,EAAoBA,OAApB,OAA0C,SAACmI,GACnE,IAAImI,EAAepI,GAAMW,WAAW7J,MAAMF,WAAWoB,OAAOC,SAASV,QAAO,SAAAoB,GAAC,OAAKA,EAAEC,QAAUD,EAAE7C,KAAKsB,MAAQW,KAE7G2N,YAAW,WACF0C,EAAanR,QACdgJ,EAAS,CACLhK,K1BhfmB,sB0BifnBC,QAAS6B,MAGlB,KAEEqQ,EAAanR,QACdgN,MAAM,GAAD,OAAI7B,GAAJ,2BAAqC,CAClC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBtL,WACAvB,aAGP8G,OACAC,OAAM,iBAMN8J,GAAe,SAAC,EAA4B9E,GAA7B,IAAExK,EAAF,EAAEA,SAAF,EAAYtB,OAAZ,EAAoBD,OAApB,OAA0C,SAACmI,GACnE,IAAI3G,EAAc0G,GAAMW,WAAW7J,MAAMF,WAAWoB,OAAOC,SAAS,GAEpEgI,EAAS,CACLhK,K1B1gByB,sB0B6gB7BgK,EAAS,CACLhK,K1B/gB2B,sB0BghB3BC,QAAS,CAAC+B,SAAU,GAAIlB,SAAS,KAGrCkN,MAAM,GAAD,OAAI7B,GAAJ,2BAAqC,CAClC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBtL,WACAuP,cAAetP,EAAYlC,QAGlCwH,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAA3G,GACFgI,EAAS,CACLhK,K1BliBmB,sB0BmiBnBC,QAAS,CAAC+B,SAAUA,EAASgN,UAAWlO,QAA8B,KAArBkB,EAAShB,aAGjE4H,OAAM,iB,+BCjiBTkW,GAAYC,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFlB,gBAAiB,UACjBnM,SAAU,WACV4K,OAAQ,GACRE,MAAO,GACP,UAAW,CACPqB,gBAAiB,eAKXgB,CAAsBG,MAElCoC,G,4MAGFxhB,MAAQ,CACJyhB,kBAAkB,EAClBlC,UAAW,EACXD,YAAY,G,kEAIZxgB,KAAK0gB,QAAQC,cAAa,GAEtB3gB,KAAKC,MAAMgC,MAAMH,QACjB9B,KAAKC,MAAM2iB,aAAaP,SAASriB,KAAKC,MAAMgB,KAAK+N,SAAUhP,KAAKC,MAAMgB,KAAKK,Y,iCAK5EtB,KAAKkB,MAAMuf,UAAYzgB,KAAK6iB,WAAWhC,eACnC7gB,KAAKkB,MAAMsf,YACVxgB,KAAKge,SAAS,CAACwC,YAAY,IAE3BxgB,KAAKkB,MAAMsf,YACXxgB,KAAKge,SAAS,CAACwC,YAAY,IAG/BxgB,KAAK6iB,WAAW/B,mBAAqB9gB,KAAK6iB,WAAW9B,kBAAoB/gB,KAAK6iB,WAAWhC,kBAAqB,GAC9G7gB,KAAKC,MAAM2iB,aAAaL,UAAUviB,KAAKC,MAAMgB,KAAK+N,SAAUhP,KAAKC,MAAMgB,KAAKK,UAGhFtB,KAAKge,SAAS,CAACyC,UAAWzgB,KAAK6iB,WAAWhC,mB,4CAGxBG,EAAWC,GAC7B,OAAGA,EAAUR,YAAczgB,KAAKkB,MAAMuf,Y,6CAQtCzgB,KAAK0gB,QAAQC,cAAa,K,+BAGpB,IAAD,OACL,OACI,oCACI,yBAAK7gB,UAAU,qCAAqCC,MAAO,CAACmhB,SAAU,WAClE,wBAAIphB,UAAU,iBAAiBE,KAAKC,MAAMuf,UAAUvd,OAEpD,kBAAC,aAAD,CACIkf,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,qBAChBsC,UAAQ,GAEPvhB,KAAKC,MAAMgC,MAAMJ,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CACrDY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAERpd,KAAKC,MAAMgC,MAAMA,MAAMI,KAAI,SAACC,EAAMsD,GAC/B,OACI,kBAAC,GAAD,CAAU4Y,IAAK5Y,EAAOtD,KAAMA,SAKtCtC,KAAKC,MAAMgC,MAAMJ,aAAe7B,KAAKC,MAAMgC,MAAMD,UAAYhC,KAAKC,MAAMgC,MAAMA,MAAMG,QAAU,yBAAKtC,UAAU,cAC3G,kBAAC,IAAD,CAAUC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAE7E,2BAAI9hB,KAAKC,MAAMuf,UAAUrG,0BAG3BnZ,KAAKC,MAAMgC,MAAMJ,YAAc7B,KAAKC,MAAMgC,MAAMD,SAAW,yBAAKlC,UAAU,cACxE,kBAAC,KAAD,CAAaC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAEhF,2BAAI9hB,KAAKC,MAAMuf,UAAU5K,sBAEzB,4BAAQ6J,QAAS,WAAO,EAAKxe,MAAM2iB,aAAaP,SAAS,EAAKpiB,MAAMgB,KAAK+N,SAAU,EAAK/O,MAAMgB,KAAKK,WAAYxB,UAAU,cAAcsB,KAAK,SAASrB,MAAO,CAAC2hB,MAAO,gBAApK,UAGJ,kBAACK,GAAA,EAAD,CAASvf,MAAOxC,KAAKC,MAAMuf,UAAU7K,YAAa7U,UAAS,2BAAsBE,KAAKkB,MAAMsf,WAAa,SAAW,IAAMwB,UAAU,OAChI,kBAAC,GAAD,CAAWrhB,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,mBAGZ,kBAAC,IAAD,c,GA/FRvV,IAAMkB,WAApB6hB,GACKP,YAAcziB,EAoHVogB,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACHwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWyC,MCjJ9EK,GAAmB,SAAC/T,GAAD,OAAc,SAAC5D,GAC3CgE,MAAM,GAAD,OAAI7B,GAAJ,6BAAuC,CACxC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhCjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACtE,GACH2F,EAAS,CACLhK,K5B0DqB,oB4BzDrBC,QAASoE,SAKRud,GAAmB,SAAC/c,EAAI+I,GAAL,OAAkB,SAAC5D,GAC/CA,EAAS,CACLhK,K5BoD0B,qB4BnD1BC,QAAS4E,IAGbmJ,MAAM,GAAD,OAAI7B,GAAJ,0BAAoC,CACrC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB7J,KACAuK,SAAUjG,GAAiB8G,oBClBjC4R,G,4MACF/hB,MAAQ,CACJyd,SAAU/X,GAAc,EAAG,M,uDAGrB,IAAD,OACL,OACI,kBAAC2X,GAAA,EAAD,CAAQze,UAAS,cAAiB2e,QAAS,WACnC,EAAKxe,MAAMyF,aAAa3B,QACxB,EAAK9D,MAAMijB,qBAAqBF,iBAAiB,EAAK/iB,MAAMyF,aAAanD,IAAK,EAAKtC,MAAMgB,KAAK+N,UAE9D,WAAjC,EAAK/O,MAAMyF,aAAatE,OACpB,EAAKnB,MAAM0F,KAAK1E,KACfkK,GAAMC,SAAS,CACXhK,K7BKG,kB6BJHC,QAAS,EAAKpB,MAAMyF,aAAapD,KAAKC,MAG1C,EAAKtC,MAAM4e,QAAQnM,KAAnB,iBAAkC,EAAKzS,MAAMyF,aAAapD,KAAKC,OAGnC,WAAjC,EAAKtC,MAAMyF,aAAatE,MAAsD,YAAjC,EAAKnB,MAAMyF,aAAatE,MACpE,EAAKnB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMyF,aAAazE,KAAKsB,SAGtD,kBAAC,EAAD,CACArC,SAAQF,KAAKC,MAAMyF,aAAazE,KAAKf,QAASF,KAAKC,MAAMyF,aAAazE,KAAKf,OAC3EQ,OAAQV,KAAKC,MAAMyF,aAAatE,KAChCrB,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMyF,aAAazE,KAAKN,MAAtC,MAC9FP,KAAMJ,KAAKC,MAAMyF,aAAazE,KAAKb,KAAKmB,MAAM6d,OAAO,GAAKpf,KAAKC,MAAMyF,aAAazE,KAAKb,KAAKqB,KAAK2d,OAAO,KAExG,yBAAKrf,MAAO,CACJsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAElB,uBAAGxf,UAAU,aAAY,wCAAUE,KAAKC,MAAMyF,aAAazE,KAAKb,KAAKmB,MAA5C,YAAqDvB,KAAKC,MAAMyF,aAAazE,KAAKb,KAAKqB,QAE9E,WAAjCzB,KAAKC,MAAMyF,aAAatE,MAAqB,uBAAGtB,UAAU,gBAAe,0BAAMA,UAAU,iBAAiBE,KAAKC,MAAMuf,UAAUrI,wBAAtD,OAAoF,0BAAMpX,MAAO,CAACY,MAAO,YAAaX,KAAKC,MAAMyF,aAAapD,KAAKE,SAC3L,WAAjCxC,KAAKC,MAAMyF,aAAatE,MAAqB,uBAAGtB,UAAU,gBAAe,0BAAMA,UAAU,iBAAiBE,KAAKC,MAAMuf,UAAUpI,6BAC9F,YAAjCpX,KAAKC,MAAMyF,aAAatE,MAAsB,uBAAGtB,UAAU,gBAAe,0BAAMA,UAAU,iBAAiBE,KAAKC,MAAMuf,UAAUnI,2BAErI,yBAAKvX,UAAU,eACX,0BAAMA,UAAU,WAAW6b,GAAgB3b,KAAKC,MAAMyF,aAAaX,YACnE,kBAAC,sBAAD,CACI0a,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MAClB3f,KAAKC,MAAMyF,aAAa3B,QAAU,0BAAMhE,MAAO,CAACojB,WAAY,UAAUpE,SAAU,GAAGE,OAAQ,GAAIW,UAAW,GAAI9f,UAAU,iC,GAlDvHH,IAAMkB,WAuEtBif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHyE,KAAMzE,EAAMyE,KACZ1E,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH8X,qBAAsBlD,YAAmBkD,EAAsB9X,MAIpC2U,CAA6CE,aAAWgD,MC9ErFG,G,kLAIEpjB,KAAK0gB,QAAQC,cAAa,GAEtB3gB,KAAKC,MAAMwF,cAAc3D,QACzB9B,KAAKC,MAAMijB,qBAAqBH,iBAAiB/iB,KAAKC,MAAMgB,KAAK+N,Y,6CAKrEhP,KAAK0gB,QAAQC,cAAa,K,+BAGpB,IAAD,OACL,OACI,oCACI,yBAAK7gB,UAAU,sCACX,wBAAIA,UAAU,iBAAiBE,KAAKC,MAAMuf,UAAU/Z,eAEpD,kBAAC,aAAD,CACI0b,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVC,MAAO,CAACkf,OAAQ,qBAChBsC,UAAQ,GAEPvhB,KAAKC,MAAMwF,cAAc5D,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC7DY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAERpd,KAAKC,MAAMwF,cAAcA,cAAcpD,KAAI,SAACqD,EAAcE,GACvD,OACI,kBAAC,GAAD,CAAkB4Y,IAAK5Y,EAAOF,aAAcA,SAKtD1F,KAAKC,MAAMwF,cAAc5D,aAAc7B,KAAKC,MAAMwF,cAAcA,cAAcrD,QAAU,yBAAKtC,UAAU,cACrG,kBAAC,IAAD,CAAuBC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAE1F,2BAAI9hB,KAAKC,MAAMuf,UAAUtG,4C,GA/CrBvZ,IAAMkB,WAA5BuiB,GACKjB,YAAcziB,EAmEVogB,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZwE,cAAevE,EAAMuE,kBAI7B,SAA4B2F,GACxB,MAAO,CACH8X,qBAAsBlD,YAAmBkD,EAAsB9X,MAIpC2U,CAA6CE,aAAWmD,MCtE9EC,GAAY,SAACpiB,EAAMoD,EAASE,EAAayL,EAAqBhB,GAAlD,OAA+D,SAAC5D,GACrFnK,EAAK+N,SAAWA,EAEhB5D,EAAS,CACLhK,K/BhBkB,a+BiBlBC,QAASJ,IAGb,IAAK,IAAIqG,EAAI,EAAGA,EAAIjD,EAAQjC,OAAQkF,IAChCjD,EAAQiD,GAAGrG,KAAOoD,EAAQiD,GAAGtE,MAAMa,MAAK,SAAAyf,GAAK,OAAIA,EAAM/gB,MAAQtB,EAAKsB,OAEhE8B,EAAQiD,GAAGrG,OACXoD,EAAQiD,GAAGrG,KAAOoD,EAAQiD,GAAGtE,MAAM,IAEvCqB,EAAQiD,GAAGnC,QAAS,EACpBd,EAAQiD,GAAGxF,QAAS,EACpBuC,EAAQiD,GAAG1E,WAAY,EAEpByB,EAAQiD,GAAG7C,cACVJ,EAAQiD,GAAG7C,YAAY7B,WAAY,EACnCyB,EAAQiD,GAAG7C,YAAYzC,SAAU,GAGlCqC,EAAQiD,GAAG7C,aAAeJ,EAAQiD,GAAG7C,YAAYxD,KAAKsB,MAAQtB,EAAKsB,MAClE8B,EAAQiD,GAAG5C,OAAS,GAG5B0G,EAAS,CACLhK,K/BGmB,c+BFnBC,QAAS,CAACgD,UAASE,iBAGvB6G,EAAS,CACLhK,K/BkCiC,4B+BjCjCC,QAAS2O,MAIJuT,GAAa,kBAAM,SAACnY,GAC7BA,EAAS,CACLhK,K/BnDmB,kB+BuDdoiB,GAAiB,SAAC5hB,GAAD,OAAU,SAACwJ,GACrCA,EAAS,CACLhK,K/BxD6B,wB+ByD7BC,QAASO,MAIJ6hB,GAAe,SAACpZ,EAAG2E,GAAJ,OAAiB,SAAC5D,GAC1C,GAAGf,EAAEqZ,OAAOngB,MAAM,GAAI,CAClB,IAAIE,EAAO,CACP0D,MAAOc,OAAO0b,KAAO1b,OAAO2b,WAAWC,gBAAgB,IAAIC,KAAK,CAACzZ,EAAEqZ,OAAOngB,MAAM,IAAK,CAACnC,KAAMiJ,EAAEqZ,OAAOngB,MAAM,GAAGnC,QAC9GqC,KAAM4G,EAAEqZ,OAAOngB,MAAM,GACrBnD,KAAMiK,EAAEqZ,OAAOngB,MAAM,GAAGnD,KACxBgB,KAAMiJ,EAAEqZ,OAAOngB,MAAM,GAAGnD,KAAK2jB,MAAM,KAAKnQ,MACxCqO,KAAM5X,EAAEqZ,OAAOngB,MAAM,GAAG0e,KAAO,KAG/B1P,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAUhP,EAAKA,MAE/B2L,MAAM,GAAD,OAAI7B,GAAJ,2BAAqC,CACtC8B,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2C,IAETxI,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAia,GACCA,EAAIjhB,OACsB,aAAtBihB,EAAItT,OAAO,GAAGK,KACb7K,KAAMnD,MAAM,8BAA+B,CACvCiQ,SAAU9M,KAAM+M,SAASC,aAIrC9H,EAAS,CACLhK,K/B5Fe,kB+B6FfC,QAAS,CAAC4iB,SAAUxgB,EAAK0D,KAAM7G,IAAKmD,EAAK0D,WAGhD6C,OAAM,WACH9D,KAAMnD,MAAM,uBAAwB,CAChCiQ,SAAU9M,KAAM+M,SAASC,mBC1E1BkP,G,uKAnBD,IAAD,OACL,OACI,0BAAMriB,MAAO,CAAC6e,eAAgB,QAASH,QAAS,WAAO,EAAKxe,MAAMwe,YAC9D,kBAACF,GAAA,EAAD,CAAQze,UAAU,aACd,kBAAC,EAAD,CAAQC,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,KAAM9e,KAAMJ,KAAKC,MAAMuC,MAAM4c,OAAO,KACtH,yBAAKrf,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAG,8BAAOtf,KAAKC,MAAMuC,e,GAZtB7C,IAAMkB,WCQvBqjB,G,kLAIElkB,KAAK0gB,QAAQC,cAAa,K,6CAI1B3gB,KAAK0gB,QAAQC,cAAa,K,qCAGf/e,GACX5B,KAAKC,MAAMkkB,YAAYX,eAAe5hB,GAEtC5B,KAAKC,MAAM2iB,aAAaP,SAASriB,KAAKC,MAAMgB,KAAK+N,SAAUpN,GAE3D2I,GAAiB+G,SAAS1P,GAE1B5B,KAAKC,MAAMwe,UAEXrP,MAAM,GAAD,OAAI7B,GAAJ,8BAAwC,CACzC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjBlO,a,+BAKF,IAAD,OACL,OACI,oCACI,yBAAK9B,UAAU,sCACX,wBAAIA,UAAU,iBAAiBE,KAAKC,MAAMuf,UAAUrL,UAEpD,kBAACiQ,GAAD,CAAc3F,QAAS,WACnB,EAAK+E,eAAe,QACrBhhB,MAAOxC,KAAKC,MAAMuf,UAAUhK,UAC/B,kBAAC4O,GAAD,CAAc3F,QAAS,WACnB,EAAK+E,eAAe,QACrBhhB,MAAOxC,KAAKC,MAAMuf,UAAU/J,gB,GA5C3B9V,IAAMkB,WAAxBqjB,GACK/B,YAAcziB,EA+DVogB,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH+Y,YAAanE,YAAmBmE,EAAa/Y,GAC7CwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWiE,MC/DrFG,G,4MACFnjB,MAAQ,CACJojB,UAAmE,SAAxD,EAAKrkB,MAAM4e,QAAQ5O,SAASC,SAASqU,UAAU,EAAE,GAAgB,WAAa,EAAKtkB,MAAMgB,KAAKK,SAAW,QAAU,a,uDAGxH,IAAD,OACL,OAAOtB,KAAKC,MAAMukB,MACd,oCACI,yBAAK1kB,UAAU,0CACX,4BACI,wBAAI2e,QAAS,WACT,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMgB,KAAKsB,SAEtC,kBAAC,EAAD,CAAQrC,SAAQF,KAAKC,MAAMgB,KAAKf,QAASF,KAAKC,MAAMgB,KAAKf,OAAgBH,MAAO,CAAC2hB,MAAO,GAAIzC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMgB,KAAKN,MAAzB,MAAoCP,KAAMJ,KAAKC,MAAMgB,KAAKb,KAAKmB,MAAM6d,OAAO,GAAKpf,KAAKC,MAAMgB,KAAKb,KAAKqB,KAAK2d,OAAO,MAC3Q,wBAAIrf,MAAO,CAACiT,SAAU,YAAalT,UAAS,UAA8B,aAAzBE,KAAKkB,MAAMojB,UAA2B,SAAW,IAAM7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,eAC9I,kBAAC,IAAD,CAAuBvkB,MAAO,CAACY,MAAO,aACrCX,KAAKC,MAAMoE,QAAQE,YAAc,GAAK,0BACnCzE,UAAU,wBACVC,MAAO,CACHqd,IAAK,GACLU,MAAO,MACPO,UAAW,kBACXc,gBAAiB,YAEvBnf,KAAKC,MAAMoE,QAAQE,cAEzB,wBAAIzE,UAAS,UAA8B,UAAzBE,KAAKkB,MAAMojB,UAAwB,SAAW,IAAM7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,YAAY,kBAAC,IAAD,CAAUvkB,MAAO,CAACY,MAAO,cACrJ,wBAAIZ,MAAO,CAACiT,SAAU,YAAalT,UAAS,UAA8B,kBAAzBE,KAAKkB,MAAMojB,UAAgC,SAAW,IAAM7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,oBACnJ,kBAAC,IAAD,CAAuBvkB,MAAO,CAACY,MAAO,aACrCX,KAAKC,MAAMwF,cAAcf,OAAS,GAAK,0BACpC5E,UAAU,wBACVC,MAAO,CACHqd,IAAK,GACLU,MAAO,MACPO,UAAW,kBACXc,gBAAiB,YAEvBnf,KAAKC,MAAMwF,cAAcf,SAE/B,wBAAI5E,UAAS,UAA8B,cAAzBE,KAAKkB,MAAMojB,UAA4B,SAAW,IAAM7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,gBAAgB,kBAAC,IAAD,CAAcvkB,MAAO,CAACY,MAAO,gBAI/I,aAAzBX,KAAKkB,MAAMojB,WAA4B,kBAAC,GAAD,MACd,UAAzBtkB,KAAKkB,MAAMojB,WAAyB,kBAAC,GAAD,MACX,kBAAzBtkB,KAAKkB,MAAMojB,WAAiC,kBAAC,GAAD,MACnB,cAAzBtkB,KAAKkB,MAAMojB,WAA6B,kBAAC,GAAD,CAAW7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,kB,GA/CpF3kB,IAAMkB,WA6DjBkf,gBARS,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZoD,QAASnD,EAAMmD,QACfoB,cAAevE,EAAMuE,iBAIdsa,CAAyBE,aAAWoE,K,sCCvD7CI,GAAY,SAAC,GAAa,IAAZ1kB,EAAW,EAAXA,MAChB,OAAO,yBACHA,MAAOA,EACP2kB,mBAAiB,OACjBC,UAAU,QACVC,cAAY,MACZC,YAAU,KACVC,KAAK,MACLC,MAAM,6BACNC,QAAQ,cACRllB,UAAU,sCACV,0BACImlB,KAAK,eACLC,EAAE,omBAAomBC,MAAM,OAIlnBC,G,4MACFlkB,MAAQ,CACJmkB,MAAO,GACPC,SAAU,GACVviB,OAAO,EACP2N,OAAQ,GACR7O,YAAY,G,uDAGPwI,GAAI,IAAD,OACRA,EAAEyU,iBAEC9e,KAAKkB,MAAMmkB,OAASrlB,KAAKkB,MAAMokB,WAC9BtlB,KAAKge,SAAS,CAACnc,YAAY,EAAMkB,OAAO,EAAO2N,OAAQ,KAEvDtB,MAAM,GAAD,OAAI7B,GAAJ,eAAyB,CAC1B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBM,KAAMC,KAAKC,UAAU,CACjBuV,MAAOrlB,KAAKkB,MAAMmkB,MAAME,cAAcC,QAAQ,OAAQ,IACtDF,SAAUtlB,KAAKkB,MAAMokB,aAG5Bvb,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAA0G,GACCA,EAAK1N,MACJ,EAAKib,SAAS,CAACjb,OAAO,EAAM2N,OAAQD,EAAKC,UAEtCD,EAAK5K,IACJsF,GAAMC,SAAS,CACXhK,KnC0BL,UmCzBKC,QAAS,CAAC0E,QAAS0K,EAAK1K,QAASD,KAAM2K,EAAK3K,SAGhD,EAAK7F,MAAMkkB,YAAYd,UAAU5S,EAAKxP,KAAMwP,EAAKpM,QAASoM,EAAKlM,YAAakM,EAAKT,oBAAqBS,EAAKgV,OAE3Glb,GAAiBwE,KAAK0B,EAAKgV,QAEX,EAAKxlB,MAAjBylB,QACAC,IAAI,WAAYlV,EAAKgV,MAAO,CAAEte,KAAM,OAGhD,EAAK6W,SAAS,CAACnc,YAAY,U,+BAK7B,IAAD,OACL,OAAG7B,KAAKkB,MAAMW,WACH,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC5BY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAIT,yBAAKtd,UAAU,cACX,wBAAIA,UAAU,QACV,0BAAMC,MAAO,CAACY,MAAO,YAArB,QACA,0BAAMZ,MAAO,CAACY,MAAO,YAArB,SAGJ,0BAAMilB,SAAU,SAACvb,GAAO,EAAKub,SAASvb,IAAKvK,UAAU,QACjD,uBAAGA,UAAU,cAAc+lB,KAAI,UAAKtY,GAAL,+BAAkC3G,GAAc,EAAG,WAC9E,kBAAC,GAAD,CAAW7G,MAAO,CAAC2hB,MAAO,GAAIzC,OAAQ,GAAI0C,WAAY,GAAImE,YAAa,GAAInlB,MAAO,aADtF,8DAIA,uBAAGb,UAAU,cAAc+lB,KAAI,UAAKtY,GAAL,+BAAkC3G,GAAc,EAAG,WAC9E,kBAACmf,GAAA,EAAD,CAAUhmB,MAAO,CAAC4hB,WAAY,GAAImE,YAAa,GAAInlB,MAAO,aAD9D,oEAKA,2BAAOqlB,MAAOhmB,KAAKkB,MAAMmkB,MAAOY,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACqH,MAAOhb,EAAEqZ,OAAOsC,SAAUlmB,UAAU,cAAcsB,KAAK,OAAOhB,KAAK,QAAQ8lB,YAAY,WACvJlmB,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,UAAhBA,EAAMlV,UAAsB,0BAAMhR,UAAU,qBACxEE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,UAAhBA,EAAMlV,SAAmBC,MAGnF,2BAAOiV,MAAOhmB,KAAKkB,MAAMokB,SAAUW,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACsH,SAAUjb,EAAEqZ,OAAOsC,SAAUlmB,UAAU,cAAcsB,KAAK,WAAWhB,KAAK,WAAW8lB,YAAY,aACpKlmB,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,aAAhBA,EAAMlV,UAAyB,0BAAMhR,UAAU,qBAC3EE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,aAAhBA,EAAMlV,SAAsBC,MAGrF/Q,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,QAAhBA,EAAMlV,UAAoB,0BAAM/Q,MAAO,CAAC6f,UAAW,IAAK9f,UAAU,qBAC9FE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,QAAhBA,EAAMlV,SAAiBC,MAGjF,4BAAQ3P,KAAK,SAAStB,UAAU,eAAhC,UAEA,uBAAGA,UAAU,YAAb,oBAAyC,kBAAC,KAAD,CAAMsa,GAAG,aAAT,kB,GA9FzCza,IAAMkB,WAiH1B,SAAS+F,GAActG,EAAKuG,GACxB,IAAIC,EAAOxG,EAAMyG,KAAKC,UAAYH,EAAM,EAAIvG,GAC5C,OAAOyG,KAAKE,MAAMH,GAGPgZ,0BAASxD,GAATwD,CAAoBC,aAjBX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH+Y,YAAanE,YAAmBmE,EAAa/Y,MASlB2U,CAA6CoG,aAAYf,MC1ItFgB,G,4MACFllB,MAAQ,CACJM,UAAW,GACXE,SAAU,GACV2jB,MAAO,GACPC,SAAU,GACVviB,OAAO,EACP2N,OAAQ,GACR7O,YAAY,G,uDAGPwI,GAAI,IAAD,OACRA,EAAEyU,iBAEC9e,KAAKkB,MAAMmkB,OAASrlB,KAAKkB,MAAMokB,WAC9BtlB,KAAKge,SAAS,CAACnc,YAAY,EAAMkB,OAAO,EAAO2N,OAAQ,KAEvDtB,MAAM,GAAD,OAAI7B,GAAJ,kBAA4B,CAC7B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBM,KAAMC,KAAKC,UAAU,CACjBtO,UAAWxB,KAAKkB,MAAMM,UACtBE,SAAU1B,KAAKkB,MAAMQ,SACrB2jB,MAAOrlB,KAAKkB,MAAMmkB,MAAME,cAAcC,QAAQ,OAAQ,IACtDF,SAAUtlB,KAAKkB,MAAMokB,aAG5Bvb,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAA0G,GACCA,EAAK1N,MACJ,EAAKib,SAAS,CAACjb,OAAO,EAAM2N,OAAQD,EAAKC,UAErB,EAAKzQ,MAAjBylB,QACAC,IAAI,WAAYlV,EAAKgV,MAAO,CAAEte,KAAM,MAE5C,EAAKlH,MAAMkkB,YAAYd,UAAU5S,EAAKxP,KAAMwP,EAAKpM,QAASoM,EAAKlM,YAAakM,EAAKT,oBAAqBS,EAAKgV,OAE3Glb,GAAiBwE,KAAK0B,EAAKgV,QAG/B,EAAKzH,SAAS,CAACnc,YAAY,U,+BAK7B,IAAD,OACL,OAAG7B,KAAKkB,MAAMW,WACH,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC5BY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAIT,yBAAKtd,UAAU,cACX,wBAAIA,UAAU,QACV,0BAAMC,MAAO,CAACY,MAAO,YAArB,QACA,0BAAMZ,MAAO,CAACY,MAAO,YAArB,SAGJ,0BAAMilB,SAAU,SAACvb,GAAO,EAAKub,SAASvb,IAAKvK,UAAU,QACjD,2BAAOkmB,MAAOhmB,KAAKkB,MAAMM,UAAWykB,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACxc,UAAW6I,EAAEqZ,OAAOsC,SAAUlmB,UAAU,cAAcsB,KAAK,OAAOhB,KAAK,YAAY8lB,YAAY,eACnKlmB,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,cAAhBA,EAAMlV,UAA0B,0BAAMhR,UAAU,qBAC5EE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,cAAhBA,EAAMlV,SAAuBC,MAGvF,2BAAOiV,MAAOhmB,KAAKkB,MAAMQ,SAAUukB,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACtc,SAAU2I,EAAEqZ,OAAOsC,SAAUlmB,UAAU,cAAcsB,KAAK,OAAOhB,KAAK,WAAW8lB,YAAY,cAChKlmB,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,aAAhBA,EAAMlV,UAAyB,0BAAMhR,UAAU,qBAC3EE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,aAAhBA,EAAMlV,SAAsBC,MAGtF,2BAAOiV,MAAOhmB,KAAKkB,MAAMmkB,MAAOY,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACqH,MAAOhb,EAAEqZ,OAAOsC,SAAUlmB,UAAU,cAAcsB,KAAK,OAAOhB,KAAK,QAAQ8lB,YAAY,WACvJlmB,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,UAAhBA,EAAMlV,UAAsB,0BAAMhR,UAAU,qBACxEE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,UAAhBA,EAAMlV,SAAmBC,MAGnF,2BAAOiV,MAAOhmB,KAAKkB,MAAMokB,SAAUW,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACsH,SAAUjb,EAAEqZ,OAAOsC,SAAUlmB,UAAU,cAAcsB,KAAK,WAAWhB,KAAK,WAAW8lB,YAAY,aACpKlmB,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,aAAhBA,EAAMlV,UAAyB,0BAAMhR,UAAU,qBAC3EE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,aAAhBA,EAAMlV,SAAsBC,MAGrF/Q,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,QAAhBA,EAAMlV,UAAoB,0BAAM/Q,MAAO,CAAC6f,UAAW,IAAK9f,UAAU,qBAC9FE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,QAAhBA,EAAMlV,SAAiBC,MAGjF,4BAAQ3P,KAAK,SAAStB,UAAU,eAAhC,WAEA,uBAAGA,UAAU,YAAb,yBAA8C,kBAAC,KAAD,CAAMsa,GAAG,UAAT,iB,GA7F3Cza,IAAMkB,WAgHdif,0BAASxD,GAATwD,CAAoBC,aAZX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH+Y,YAAanE,YAAmBmE,EAAa/Y,MAIlB2U,CAA6CoG,aAAYC,M,gNC5HxFC,IAAwB,EAkKbxY,G,4MA/JX3M,MAAQ,CACJolB,SAAU,QACVnc,OAAO,EACPwU,SAAU/X,GAAc,EAAG,M,kEAGV,IAAD,SACZ2f,EAAYhf,SAASif,kBAAkBxmB,KAAKC,MAAMI,KADtC,eAGCkmB,GAHD,IAGhB,IAAI,EAAJ,qBAA4B,CAAC,IAArBpc,EAAoB,QACxBA,EAAMsc,OAAS,GACfzmB,KAAKge,SAAS,CAAC7T,UACf,OANY,8BAShB,IAAIA,EAAQ5C,SAAS+V,eAAetd,KAAKkB,MAAMyd,UAE/CxU,EAAMuc,QAAU,WACZvc,EAAMwc,cAAc7mB,UAAY,iBAGpCqK,EAAMyc,OAAS,WACXzc,EAAMwc,cAAc7mB,UAAY,wBAGpCqK,EAAM0c,iBAAmB,WACrB,EAAKC,iB,oCAKT,SAASC,EAAQC,GACb,OAAQA,EAAI,GAAM,IAAMA,EAAIA,EAGhC,IALU,EAKNT,EAAYhf,SAASif,kBAAkBxmB,KAAKC,MAAMI,KAElD4mB,EAAI,EAPE,eASOV,GATP,IASV,IAAI,EAAJ,qBAA4B,CACxBU,EADwB,QACdX,SACV,OAXM,8BAcVtmB,KAAKge,SAAS,CAACsI,SAAUS,EAAQG,SAAUD,EAAK,KAAS,IAAMF,EAAQG,SAAUD,EAAK,S,6CAInFZ,IACCrmB,KAAKmnB,YAEN5f,SAASif,kBAAkBxmB,KAAKC,MAAMI,OACrCkH,SAASif,kBAAkBxmB,KAAKC,MAAMI,KAAKP,UAAY,gBACvDE,KAAKkB,MAAMiJ,MAAMsE,W,gCAIfpE,GACNA,EAAEoT,kBAEF,IAAI2J,EAAa7f,SAAS8f,uBAAuB,0BAEjDrnB,KAAKmnB,YALI,qBAOSC,GAPT,IAOT,2BAA8B,SACpB3Y,SARD,8BAWOlH,SAAS+V,eAAetd,KAAKkB,MAAMyd,UAGrCvQ,OAIdpO,KAAKsnB,e,0CAGWjd,GAChBA,EAAEoT,kBAEF,IAAIzK,EAAmC,IAAxB3I,EAAEkd,YAAYC,QAAgBxnB,KAAKynB,WAAW1J,YACzDtQ,EAAOzN,KAAKkB,MAAMiJ,MAAMmc,SAAW,IAAMtT,EAC7CrI,QAAQC,IAAIP,EAAEkd,aAEd,IAPmB,EAOfhB,EAAYhf,SAASif,kBAAkBxmB,KAAKC,MAAMI,KAPnC,eASFkmB,GATE,IASnB,IAAI,EAAJ,qBAA4B,SAClBrY,YAAcT,GAVL,8BAanB,IAbmB,EAafia,EAAYngB,SAASif,kBAAkBxmB,KAAKC,MAAMI,IAAI,UAbvC,eAeFqnB,GAfE,IAenB,IAAI,EAAJ,qBAA4B,SAClB3nB,MAAM2hB,MAAS,IAAI1hB,KAAKkB,MAAMiJ,MAAM+D,YAAYlO,KAAKkB,MAAMiJ,MAAMmc,SAAU,KAhBlE,iC,mCAoBT,IAAD,OACTD,GAAwBja,aAAY,WAChC,IADsC,EAClCsb,EAAYngB,SAASif,kBAAkB,EAAKvmB,MAAMI,IAAI,UADpB,eAGrBqnB,GAHqB,IAGtC,IAAI,EAAJ,qBAA4B,SAClB3nB,MAAM2hB,MAAS,IAAI,EAAKxgB,MAAMiJ,MAAM+D,YAAY,EAAKhN,MAAMiJ,MAAMmc,SAAU,KAJ/C,iCAMvC,O,kCAIHja,cAAcga,M,wCAGAhc,GACd,IADiB,EACb2I,EAAkC,IAAvB3I,EAAEkd,YAAYI,OAAe3nB,KAAKynB,WAAW1J,YACxDtQ,EAAOzN,KAAKkB,MAAMiJ,MAAMmc,SAAW,IAAMtT,EAEzC0U,EAAYngB,SAASif,kBAAkBxmB,KAAKC,MAAMI,IAAI,UAJzC,eAMAqnB,GANA,IAMjB,IAAI,EAAJ,qBAA4B,SAClB3nB,MAAM2hB,MAAS,IAAIjU,EAAKzN,KAAKkB,MAAMiJ,MAAMmc,SAAU,KAP5C,iC,gCAWXjc,GACHgc,IACCrmB,KAAKmnB,YAET9c,EAAEoT,kBAEF,IANS,EAML8I,EAAYhf,SAASif,kBAAkBxmB,KAAKC,MAAMI,KAN7C,eAQQkmB,GARR,IAQT,IAAI,EAAJ,qBAA4B,SAClB9X,SATD,iC,+BAaH,IAAD,OACL,OAAO,yBAAK3O,UAAU,iBAClB,2BAAOA,UAAS,yBAA4BmG,GAAIjG,KAAKkB,MAAMyd,SAAUve,KAAMJ,KAAKC,MAAMI,IAAKA,IAAKL,KAAKC,MAAMI,MAC3G,0BAAMP,UAAU,OAAO2e,QAAS,SAACpU,GAAO,EAAKud,UAAUvd,KAAK,kBAAC,KAAD,CAAetK,MAAO,CAACY,MAAO,cAC1F,0BAAMb,UAAU,QAAQ2e,QAAS,SAACpU,GAAO,EAAKwd,UAAUxd,KAAK,kBAAC,KAAD,CAAWtK,MAAO,CAACY,MAAO,cACvF,yBAAKb,UAAU,sBACX,uBAAGA,UAAU,uBAAuBE,KAAKC,MAAM6nB,UAC/C,uBAAGhoB,UAAU,2BAA2BE,KAAKkB,MAAMolB,WAGvD,yBAAKxmB,UAAU,sBACXqhB,IAAK,SAACA,GAAS,EAAKsG,WAAatG,GACjC4G,YAAa,SAAC1d,GAAO,EAAK2d,kBAAkB3d,IAC5C4d,aAAc,WAAO,EAAKd,aAC1Be,aAAc,WAAO,EAAKZ,cAC1B7I,QAAS,SAACpU,GAAO,EAAK8d,oBAAoB9d,KAE1C,0BAAMvK,UAAU,iBAAiBqhB,IAAK,SAACA,GAAS,EAAKiH,MAAQjH,GAAM/gB,KAAMJ,KAAKC,MAAMI,IAAM,iB,GA1JtFV,IAAMkB,W,qBCQbwnB,GAAU,SAACnlB,EAAQ8L,GAAT,OAAsB,SAAC5D,GAC1CgE,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQA,MAGf6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,aACVvE,EAAKuE,aAAeA,EACpB4F,EAAS,CACLhK,KtC4Ba,YsC3BbC,QAASJ,SAKRqnB,GAAa,SAACtZ,GAAD,OAAc,SAAC5D,GACrCgE,MAAM,GAAD,OAAI7B,GAAJ,yBAAmC,CACpC8B,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhCjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC1E,GACH,IAAIrC,EAAQ,GAEZqC,EAAQhD,KAAI,SAAApB,GAER,OADA+B,EAAM0P,KAAKzR,EAAKsnB,WACT,KAGXnd,EAAS,CACLhK,KtCOqB,oBsCNrBC,QAAS,CAAC2B,QAAOd,QAA0B,KAAjBc,EAAMZ,eAK/BomB,GAAe,SAACxZ,GAAD,OAAc,SAAC5D,GACvCgE,MAAM,GAAD,OAAI7B,GAAJ,2BAAqC,CACtC8B,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhCjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC1E,GACH,IAAIrC,EAAQ,GAEZqC,EAAQhD,KAAI,SAAApB,GAER,OADA+B,EAAM0P,KAAKzR,EAAKsnB,WACT,KAGXnd,EAAS,CACLhK,KtCjBuB,sBsCkBvBC,QAAS,CAAC2B,QAAOd,QAA0B,KAAjBc,EAAMZ,eAK/BqmB,GAAa,SAACzZ,GAAD,OAAc,SAAC5D,GACrCgE,MAAM,GAAD,OAAI7B,GAAJ,yBAAmC,CACpC8B,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhCjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC1E,GACH,IAAIrC,EAAQ,GAEZqC,EAAQhD,KAAI,SAAApB,GAER,OADA+B,EAAM0P,KAAKzR,EAAKsnB,WACT,KAGXnd,EAAS,CACLhK,KtCzCqB,oBsC0CrBC,QAAS,CAAC2B,QAAOd,QAA0B,KAAjBc,EAAMZ,eAK/BsmB,GAAW,SAACrjB,GAAD,OAAa,SAAC+F,GAElC,IADA,IAAIud,EAAa,GACRrhB,EAAI,EAAGA,EAAIjC,EAAQjD,OAAQkF,IAAK,CACrC,IAAIrG,EAAOoE,EAAQiC,GAAGihB,UAEtBtnB,EAAKuE,aAAeH,EAAQiC,GAAG5G,OAE/BioB,EAAWjW,KAAKzR,GAGpBmK,EAAS,CACLhK,KtC7DiB,YsC8DjBC,QAAS,CAACgE,QAASsjB,EAAYzmB,QAA+B,KAAtBymB,EAAWvmB,YAI9CwmB,GAAkB,SAAC1lB,GAAD,OAAY,SAACkI,GACxCA,EAAS,CACLhK,KtCtEgC,2BsCuEhCC,QAAS6B,MAIJ2lB,GAAc,SAAC3lB,EAAQ8L,GAAT,OAAsB,SAAC5D,GAC9CgE,MAAM,GAAD,OAAI7B,GAAJ,qBAA+B,CAChC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,aAGP6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACvE,GACH4F,EAAS,CACLhK,KtCzF2B,0BsC0F3BC,QAAS,CAAC6B,SAAQsC,kBAGnB2F,GAAMW,WAAW9I,MAAMuC,QAAQzD,SAC3BqJ,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,KAChDkI,EAAS,CACLhK,KtCtFa,oBsCuFbC,QAAS,CAACJ,KAAMkK,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,QAGrEkM,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQA,MAGf6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,aACVvE,EAAKuE,aAAeA,EACpB4F,EAAS,CACLhK,KtCrHC,YsCsHDC,QAASJ,IAEbmK,EAAS,CACLhK,KtC7GS,oBsC8GTC,QAAS,CAACJ,mBAQrB6nB,GAAgB,SAAC5lB,EAAQ8L,GAAT,OAAsB,SAAC5D,GAChDgE,MAAM,GAAD,OAAI7B,GAAJ,4BAAsC,CACvC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,aAGP6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACvE,GACH4F,EAAS,CACLhK,KtC/I2B,0BsCgJ3BC,QAAS,CAAC6B,SAAQsC,kBAGnB2F,GAAMW,WAAW9I,MAAMsC,UAAUxD,QAChCsJ,EAAS,CACLhK,KtC/IsB,yBsCgJtBC,QAAS,CAAC6B,YAIfiI,GAAMW,WAAW9I,MAAMqC,QAAQvD,SAC3BqJ,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,KAChDkI,EAAS,CACLhK,KtCrJa,oBsCsJbC,QAAS,CAACJ,KAAMkK,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,QAGrEkM,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQA,MAGf6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,aACVvE,EAAKuE,aAAeA,EACpB4F,EAAS,CACLhK,KtClLC,YsCmLDC,QAASJ,IAEbmK,EAAS,CACLhK,KtC5KS,oBsC6KTC,QAAS,CAACJ,mBAQrB8nB,GAAgB,SAAC7lB,EAAQ8L,GAAT,OAAsB,SAAC5D,GAChDgE,MAAM,GAAD,OAAI7B,GAAJ,4BAAsC,CACvC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,aAGP6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACvE,GACH4F,EAAS,CACLhK,KtC5M2B,0BsC6M3BC,QAAS,CAAC6B,SAAQsC,kBAGnB2F,GAAMW,WAAW9I,MAAMqC,QAAQvD,QACV,IAAjB0D,IACC4F,EAAS,CACLhK,KtC9MgB,uBsC+MhBC,QAAS,CAAC6B,YAGXiI,GAAMW,WAAW9I,MAAMsC,UAAUxD,SAC7BqJ,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,KAChDkI,EAAS,CACLhK,KtCjNO,sBsCkNPC,QAAS,CAACJ,KAAMkK,GAAMW,WAAW9I,MAAMA,MAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQW,QAGrEkM,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQA,MAGf6G,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA2B,IAAzB9I,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,aACVvE,EAAKuE,aAAeA,EACpB4F,EAAS,CACLhK,KtC/OP,YsCgPOC,QAASJ,IAEbmK,EAAS,CACLhK,KtCxOG,sBsCyOHC,QAAS,CAACJ,eAQ/BkK,GAAMW,WAAW9I,MAAMuC,QAAQzD,QAA2B,IAAjB0D,GACxC4F,EAAS,CACLhK,KtCrPoB,uBsCsPpBC,QAAS,CAAC6B,YAIfiI,GAAMW,WAAW9I,MAAMsC,UAAUxD,QAA2B,IAAjB0D,GAC1C4F,EAAS,CACLhK,KtC7PsB,yBsC8PtBC,QAAS,CAAC6B,iBC7TbyC,GAAO,SAAC1E,EAAM+N,GAAP,OAAoB,SAAC5D,GAClCD,GAAMW,WAAW7J,MAAMF,WACtBqJ,EAAS,CACLhK,KvCmFkB,iBuClFlBC,QAAS,CAACJ,OAAMP,OAAQ,iBAG5B0K,EAAS,CACLhK,KvC0EiB,gBuCzEjBC,QAAS,CAACJ,OAAMP,OAAQ,evBuBZ,WACpBoN,GAAKI,YAAc,EAEnB,IAAIC,EAAUL,GAAKM,YAEHC,IAAZF,GACAA,EAAQpE,MAAK,SAAAuE,OAAStE,OAAM,SAAAjH,GAAU4H,QAAQC,IAAI7H,MuB1BlDimB,GAEA5Z,MAAM,GAAD,OAAI7B,GAAJ,kBAA4B,CAC7B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB7J,GAAIhF,EAAKsB,IACTiO,SAAUjG,GAAiB8G,kBAGlCtH,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACpE,GACAA,EAAK5C,QACJyL,KACApD,EAAS,CACLhK,KvCoDW,kBuCnDXC,QAASsE,EAAK5C,eAOrBoS,GAAS,SAACnG,GAAD,OAAc,SAAC5D,GAC9BD,GAAMW,WAAW7J,MAAMF,WACtBqJ,EAAS,CACLhK,KvC4CkB,iBuC3ClBC,QAAS,CAACJ,KAAMkK,GAAMW,WAAWnG,KAAK1E,KAAMP,OAAQ,mBAGxD0K,EAAS,CACLhK,KvCoCmB,kBuCnCnBC,QAAS,WAGb+N,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQiI,GAAMW,WAAWnG,KAAK1E,KAAKsB,IACnCiO,SAAUjG,GAAiB8G,kBAGlCtH,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACpE,GACAA,EAAK5C,OACJqI,EAAS,CACLhK,KvCgBW,kBuCfXC,QAASsE,EAAK5C,QAElBwN,KACA7B,KAEAU,MAAM,GAAD,OAAI7B,GAAJ,kBAA4B,CAC7B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBU,SAAUjG,GAAiB8G,oBAInC3C,KACA6B,GAAsBpF,GAAMW,WAAWnG,KAAK1E,KAAKsB,YAMpD2J,GAAO,SAACjL,EAAM+N,GAAP,OAAoB,SAAC5D,GACrCoD,KACAE,KACA6B,KAEAnF,EAAS,CACLhK,KvChBqB,gBuCiBrBC,QAAS,CAACJ,MAAM,EAAOP,OAAQ,UAGnC0O,MAAM,GAAD,OAAI7B,GAAJ,kBAA4B,CAC7B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBU,SAAUjG,GAAiB8G,kBAIlCtH,MAAK,SAACpE,SAKEsjB,GAAQ,kBAAM,SAAC7d,GACxBA,EAAS,CACLhK,KvCvCqB,gBuCwCrBC,QAAS,CAACJ,MAAM,EAAOP,OAAQ,YCzFjCwoB,GAAqB,SAACrD,EAAMjT,EAAM4L,GASpC,OACI,uBAAGqH,KAAMA,EAAMpH,QAAS,SAACpU,GAAOA,EAAEoT,mBAAoBe,IAAKA,EAAKkF,OAAO,SAASyF,IAAI,uBAC/EvW,IAKPwW,G,4MACFloB,MAAQ,CACJyd,SAAU/X,GAAc,EAAG,M,uDAGrB,IAAD,OACDyiB,GAAgB,EAChBC,GAAW,EAEf,GAAGtpB,KAAKC,MAAMmD,SAASpD,KAAKC,MAAM2F,MAAM,GAAI,CACxC,IAAI2jB,EAAQ,IAAIzkB,KAAK9E,KAAKC,MAAMoD,QAAQ0B,WACpCykB,EAAQ,IAAI1kB,KAAK9E,KAAKC,MAAMmD,SAASpD,KAAKC,MAAM2F,MAAM,GAAGb,WAGzDwkB,EAAMvN,gBAAkBwN,EAAMxN,eAC9BuN,EAAMpN,aAAeqN,EAAMrN,YAC3BoN,EAAMzN,YAAc0N,EAAM1N,YAE1BuN,GAAgB,GAGJtiB,KAAKiW,IAAIuM,EAAQC,GAAS,KAE3B,IACXF,GAAW,GAInB,IAAIG,EACEzpB,KAAKC,MAAMmD,SAASpD,KAAKC,MAAM2F,MAAM,IACvC5F,KAAKC,MAAMmD,SAASpD,KAAKC,MAAM2F,MAAM,GAAG3E,KAAKsB,MAAQvC,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAC5EvC,KAAKC,MAAMmD,SAASpD,KAAKC,MAAM2F,MAAM,IAAO0jB,EAGjD,OAAQ,oCACHD,GAAiB,yBAAKvpB,UAAU,gBpBxEtC,SAAgBgG,GACnB,IAAIlE,EAAOuJ,GAAMW,WAAW7K,KAAKW,KAC7B6L,EAAO,IAAI3I,KAAKgB,GAEhB+V,GAAW,IAAI/W,MAAOgX,UAAYrO,EAAKqO,UACvCC,GAAY,IAAIjX,MAAOkX,cAAgBvO,EAAKuO,cAC5CC,EAAOxO,EAAKuO,cACZE,EAAQzO,EAAK0O,WAAW,EACxBC,EAAM3O,EAAKqO,UAEf,GAAIC,EAAY,EACZ,OACIE,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAaU,EAAIV,YAG9C,IAAIW,EAAI,CACJC,GAAU1a,GAAM2V,QAChB+E,GAAU1a,GAAM4V,SAChB8E,GAAU1a,GAAM6V,MAChB6E,GAAU1a,GAAM8V,MAChB4E,GAAU1a,GAAM+V,IAChB2E,GAAU1a,GAAMgW,KAChB0E,GAAU1a,GAAMiW,KAChByE,GAAU1a,GAAMkW,OAChBwE,GAAU1a,GAAMmW,UAChBuE,GAAU1a,GAAMoW,QAChBsE,GAAU1a,GAAMqW,SAChBqE,GAAU1a,GAAMsW,UAWpB,OALqB,IAAb2D,GAAkBS,GAAU1a,GAAMoX,OAErB,IAAb6C,GAAkBS,GAAU1a,GAAMmX,WACpB,IAAdgD,GAAmBK,EAAM,IAAMC,EAAIH,EAAM,GoBkCQwN,CAAO,IAAI5kB,KAAK9E,KAAKC,MAAMoD,QAAQ0B,aAEpF,yBACIjF,UAAS,kBAAaE,KAAKC,MAAM0pB,SAAW,WAAa,IACzDlL,QAAS,SAACpU,GACH,EAAKpK,MAAMoD,QAAQT,WAAa,EAAK3C,MAAMoD,QAAQrB,UAGnD,EAAK/B,MAAM0pB,SACV,EAAK1pB,MAAM2pB,SAAS,EAAK3pB,MAAMoD,QAAQd,KAEvC,EAAKtC,MAAM4pB,SAAS,EAAK5pB,MAAMoD,WAGvCtD,MAAO,CACHojB,WAAYnjB,KAAKC,MAAM6pB,SAAW,OAAU9pB,KAAKC,MAAMoD,QAAQT,WAAa5C,KAAKC,MAAMoD,QAAQrB,QAAW,OAAUhC,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,KAAQvC,KAAKC,MAAMoD,QAAQU,OAAsB,GAAZ,UACzMgmB,OAAS/pB,KAAKC,MAAMoD,QAAQT,WAAa5C,KAAKC,MAAMoD,QAAQrB,QAAW,UAAY,GACnFgoB,QAAShqB,KAAKC,MAAM6pB,SAAW,mBAAqB,MAInDL,GAAWJ,KAAmBrpB,KAAKC,MAAM6pB,UAC1C,0BAAM/pB,MAAO,CAACkf,OAAQ,eAAgBR,QAAS,SAACpU,GAC5CA,EAAEoT,kBACF,EAAKxd,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMoD,QAAQpC,KAAKsB,SAG7C,kBAAC,EAAD,CACIxC,MAAO,CAAC2hB,MAAO,GAAIzC,OAAQ,GAAIre,SAAU,GAAIqpB,WAAY,OAAQ/K,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMoD,QAAQpC,KAAKN,MAAjC,MACjGP,KAAMJ,KAAKC,MAAMoD,QAAQpC,KAAKb,KAAKmB,MAAM6d,OAAO,GAAGpf,KAAKC,MAAMoD,QAAQpC,KAAKb,KAAKqB,KAAK2d,OAAO,GAC5Flf,OAAQF,KAAKC,MAAMgB,KAAKsB,MAAQvC,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAMvC,KAAKC,MAAMgB,KAAKf,QAASF,KAAKC,MAAMgB,KAAKf,SAAiBF,KAAKC,MAAMoD,QAAQpC,KAAKf,QAASF,KAAKC,MAAMoD,QAAQpC,KAAKf,WAMvLupB,IAAYJ,IAAkBrpB,KAAKC,MAAM6pB,UAC3C,yBAAK/pB,MAAO,CAAC2hB,MAAO,OAGrB1hB,KAAKC,MAAMoD,QAAQT,YAAc5C,KAAKC,MAAMoD,QAAQrB,SAAYhC,KAAKC,MAAMiqB,WAAa,0BAAMpqB,UAAS,2BAAsBE,KAAKC,MAAM0pB,SAAW,SAAW,KACjK,kBAAC,sBAAD,CACIlK,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,KACvB3f,KAAKC,MAAM0pB,UAAY,kBAAC,KAAD,CAAW5pB,MAAO,CACtCY,MAAO,OACPC,SAAU,GACVoS,SAAU,WACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRiE,OAAQ,YAMhB,yBAAK/hB,UAAU,gBAEN2pB,GAAWJ,IACZ,wBAAI5K,QAAS,SAACpU,GACVA,EAAEoT,kBACF,EAAKxd,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMoD,QAAQpC,KAAKsB,QAE9CzC,UAAU,YAAYC,MAAO,CAACY,MAAOX,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,IAAM,UAAY,KACrGvC,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,KAAO,8CAAMvC,KAAKC,MAAMoD,QAAQpC,KAAKb,KAAKmB,MAAnC,YAA4CvB,KAAKC,MAAMoD,QAAQpC,KAAKb,KAAKqB,MAAzE,IAAiF,0BAAM3B,UAAU,WAAWub,GAAMrb,KAAKC,MAAMoD,QAAQ0B,aAC5L/E,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,KAAO,8CAAMvC,KAAKC,MAAMgB,KAAKb,KAAKmB,MAA3B,YAAoCvB,KAAKC,MAAMgB,KAAKb,KAAKqB,MAAzD,IAAiE,0BAAM3B,UAAU,WAAWub,GAAMrb,KAAKC,MAAMoD,QAAQ0B,cAIpL/E,KAAKC,MAAMoD,QAAQuP,MAAQ,uBAAG9S,UAAU,eAAe2e,QAAS,SAACpU,GAC/B,SAA5B,EAAKpK,MAAMoD,QAAQjC,MAAmB,EAAKnB,MAAMoD,QAAQpC,KAAKsB,MAAQ,EAAKtC,MAAMgB,KAAKsB,MACrF8H,EAAEoT,kBACF,EAAKxd,MAAMkqB,YAAYxkB,KAAK,EAAK1F,MAAMoD,QAAQpC,KAAM,EAAKhB,MAAMgB,KAAK+N,aAGzE,kBAAC,KAAD,CAASka,mBAAoBA,IACI,YAA5BlpB,KAAKC,MAAMoD,QAAQjC,MAAsB,oCACrCpB,KAAKC,MAAMoD,QAAQuP,KAAK4S,QAAQ,UAAW,IACvCA,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAEjBA,QAAQ,mCAAoC,IAC5CA,QAAQ,oBAAqB,SAIT,SAA5BxlB,KAAKC,MAAMoD,QAAQjC,MAAmB,oCAClCpB,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,KAAO,kBAAC,KAAD,CAAcxC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIklB,YAAa,KAC1H9lB,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,KAAO,kBAAC,KAAD,CAAkBxC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIklB,YAAa,KAC9H9lB,KAAKC,MAAMuf,UAAUxf,KAAKC,MAAMoD,QAAQuP,WAKlD5S,KAAKC,MAAMoD,QAAQwP,eAAezQ,QAAUpC,KAAKC,MAAMmqB,YAAc,GAAK,uBAAGtqB,UAAU,gBAAb,+BAChDE,KAAKC,MAAMoD,QAAQwP,eAAezQ,OADc,QAI1EpC,KAAKC,MAAMoD,QAAQM,OAAOvB,QAAU,yBAAKtC,UAAU,kBACjDE,KAAKC,MAAMoD,QAAQM,OAAOtB,KAAI,SAACgoB,EAAOzkB,EAAOjC,GAC1C,IAAI+d,EACA4I,GAAS,EAWb,OARI5I,EADD/d,EAAOvB,QAAU,GAAuB,IAAlBuB,EAAOvB,QACV,IAAVwD,EAAc,OAEd,MAGTjC,EAAOvB,OAAS,GAAe,IAAVwD,IACpB0kB,GAAS,GAEV1kB,EAAQ,EACA,KAER0kB,EACQ,yBAAK9L,IAAK5Y,EAAO9F,UAAU,QAAQC,MAAO,CAAC2hB,UAC9C,yBAAK5hB,UAAU,aAAa2e,QAAS,SAACpU,GAClCA,EAAEoT,kBACF,EAAKxd,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,kBAEX/J,GAAMC,SAAS,CACXhK,KxC5HlB,awC6HkBC,QAAS,CACLsC,SACAiC,MAAO,OAIf,yCAAWjC,EAAOvB,OAAO,IACzB,yBAAKmoB,UAAU,QAAQ/L,IAAK5Y,EAAOvF,IAAKgqB,EAAMljB,KAAMhH,IAAKkqB,EAAMjqB,SAInE,yBAAKoe,IAAK5Y,EAAO9F,UAAU,QAAQC,MAAO,CAAC2hB,UAC/C,yBAAK6I,UAAU,QAAQ9L,QAAS,SAACpU,GAC7BA,EAAEoT,kBACF,EAAKxd,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,kBAEX/J,GAAMC,SAAS,CACXhK,KxC/Id,awCgJcC,QAAS,CACLsC,SACAiC,YAGTvF,IAAKgqB,EAAMljB,KAAMhH,IAAKkqB,EAAMjqB,cAKxCJ,KAAKC,MAAMoD,QAAQK,OAAOtB,QAAU,yBAAKtC,UAAU,kBACjDE,KAAKC,MAAMoD,QAAQK,OAAOrB,KAAI,SAACmoB,EAAO5kB,EAAOjC,GAC1C,OAAO,kBAAC,GAAD,CACH6a,IAAK5Y,EACLkiB,SAAU0C,EAAMpqB,KAChBC,IAAKmqB,EAAMrjB,aAMpBnH,KAAKC,MAAMoD,QAAQE,MAAMnB,QAAU,yBAAKtC,UAAU,iBAChDE,KAAKC,MAAMoD,QAAQE,MAAMlB,KAAI,SAACoB,EAAMmC,EAAOjC,GACxC,OAAO,yBAAK7D,UAAU,eAAe0e,IAAK5Y,EAAO6Y,QAAS,SAACpU,GACvDA,EAAEoT,kBACFxV,OAAOwiB,KAAKhnB,EAAK0D,KAAM,WAEvB,kBAAC,KAAD,CAA6BrH,UAAU,YAAYC,MAAO,CAACY,MAAO,aAClE,yBAAKb,UAAU,qBACX,uBAAGA,UAAU,qBAAqB2D,EAAKrD,MACvC,uBAAGN,UAAU,qBAAqB2D,EAAKwe,KAAO,KAAOxe,EAAKwe,KAAO,KAAMyI,QAAQ,GAAK,MAAQ3jB,KAAK6V,KAAKnZ,EAAKwe,MAAQ,QAEvH,kBAAC,KAAD,CAAYniB,UAAU,gBAAgBC,MAAO,CAACY,MAAO,oBAM9DX,KAAKC,MAAMoD,QAAQwP,eAAezQ,QAAUpC,KAAKC,MAAMmqB,YAAc,GAAK,yBAAKtqB,UAAU,kBACvFE,KAAKC,MAAMoD,QAAQwP,eAAexQ,KAAI,SAACgB,EAASuC,EAAOxC,GACpD,OAAO,kBAAC,GAAD,CAAkBgnB,YAAa,EAAKnqB,MAAMmqB,YAAY,EAAGN,UAAU,EAAMD,SAAU,aAAUc,WAAY,SAACC,GAAkB,EAAK3qB,MAAM0qB,WAAWC,IAAgBpM,IAAK5Y,EAAOvC,QAASA,EAASD,SAAUA,EAAUwC,MAAOA,UAK5O5F,KAAKC,MAAM6pB,UAAY,yBAAKhqB,UAAU,kBACpC,kBAAC,sBAAD,CACI2f,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MACtB3f,KAAKC,MAAMiqB,YAAclqB,KAAKC,MAAMoD,QAAQT,YAAc5C,KAAKC,MAAMoD,QAAQrB,SAAWhC,KAAKC,MAAMoD,QAAQO,QAAU,kBAAC,KAAD,CAAkB7D,MAAO,CAACY,MAAO,gBAG9JX,KAAKC,MAAM6pB,UAAY,yBAAKhqB,UAAU,kBACpC,kBAAC,sBAAD,CACI2f,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MAClB3f,KAAKC,MAAMiqB,WAAalqB,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,KAAOvC,KAAKC,MAAMoD,QAAQT,WAAa,kBAAC,KAAD,CAAkB7C,MAAO,CAACY,MAAO,cAEhJX,KAAKC,MAAMiqB,WAAalqB,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,MAAQvC,KAAKC,MAAMoD,QAAQT,YAAc5C,KAAKC,MAAMoD,QAAQrB,UAAYhC,KAAKC,MAAMoD,QAAQU,QAAU,kBAAC,KAAD,CAAUhE,MAAO,CAACY,MAAO,cACtMX,KAAKC,MAAMiqB,WAAalqB,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,MAAOvC,KAAKC,MAAMoD,QAAQT,YAAc5C,KAAKC,MAAMoD,QAAQrB,SAAWhC,KAAKC,MAAMoD,QAAQU,QAAU,kBAAC,KAAD,CAAahE,MAAO,CAACY,MAAO,cACvMX,KAAKC,MAAMiqB,WAAalqB,KAAKC,MAAMoD,QAAQpC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,MAAOvC,KAAKC,MAAMoD,QAAQT,WAAa5C,KAAKC,MAAMoD,QAAQrB,SAAU,oCAC9I,kBAAC,GAAD,CAAYic,MAAM,QAAQK,QAAS,CAC/B,CAAC1L,KAAM,QAASzR,OAAQ,WACpB,EAAKlB,MAAMuT,iBAAiB,EAAKvT,MAAMoD,WAE3C,CAACuP,KAAM,SAAUzR,OAAQ,WACrB,EAAKlB,MAAM4T,mBAAmB,EAAK5T,MAAMoD,QAAQd,QAEtDgb,KAAM,yBAAyBvd,KAAKkB,MAAMyd,WAC7C,kBAAC,KAAD,CAAkB7e,UAAU,QAAQmG,GAAI,yBAAyBjG,KAAKkB,MAAMyd,SAAU5e,MAAO,CAACY,MAAO,sB,GA/P3GhB,IAAMkrB,eAsRb/K,0BAASxD,GAATwD,CAAoBC,aAdX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/C+e,YAAanK,YAAmBmK,EAAa/e,MAIlB2U,CAA6CE,aAAWmJ,M,0CC7TrFthB,KAA8BP,SAASQ,aAGvCC,IAAUF,MAAUG,OAAOC,WAE7B6iB,IAAiB,EAgBf7K,GAAYC,cAdA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFlB,gBAAiB,OACjBnM,SAAU,WACVrS,MAAO,UACPid,OAAQ,GACRE,MAAO,GACPkN,OAAQ,EACR,UAAW,CACP7L,gBAAiB,YAKXgB,CAAsBG,MAElC2K,G,4MACF/pB,MAAQ,CACJgqB,iBAAiB,EACjBC,YAAY,EACZ1K,UAAW,G,+DAIRzgB,KAAK4gB,gBACD5Y,IAAUF,GACT9H,KAAK4gB,cAAcwK,KAAK3K,UAAY,IAEpCzgB,KAAK4gB,cAAcwK,KAAKC,OAAO,CAC3BjO,IAAK,IACLD,KAAM,EACNmO,SAAU,c,6CAOtBrjB,OAAOmW,oBAAoB,OAAQpe,KAAKurB,SAASpN,KAAKne,OACtDiI,OAAOmW,oBAAoB,YAAape,KAAKwrB,UAAUrN,KAAKne,S,kCAGnD,IACLkd,EADI,OAGJA,IADDld,KAAK4gB,eAAiB5gB,KAAK4gB,cAAcC,eAAiB7gB,KAAK4gB,cAAcG,kBAAoB/gB,KAAK4gB,cAAcE,oBAMnH9gB,KAAKkB,MAAMiqB,YAAcjO,GAAYld,KAAKC,MAAMwrB,OAAOrpB,SACpD2oB,IACCpa,aAAaoa,IAEjB/qB,KAAKC,MAAMsT,eACXvT,KAAKge,SAAS,CAACmN,YAAY,IAE3BJ,GAAiBla,YAAW,WACxB,EAAKmN,SAAS,CAACmN,YAAY,MAC5B,Q,iCAKPnrB,KAAKge,SAAS,CAACmN,YAAY,M,0CAI3BljB,OAAOgG,iBAAiB,OAAQjO,KAAKurB,SAASpN,KAAKne,OACnDiI,OAAOgG,iBAAiB,YAAajO,KAAKwrB,UAAUrN,KAAKne,OAEtDA,KAAK4gB,gBACJ5gB,KAAK4gB,cAAcwK,KAAK3K,UAAY,KAExCzgB,KAAKC,MAAMsT,iB,yCAGImY,GAEXA,EAAUtoB,SAAShB,OAASpC,KAAKC,MAAMmD,SAAShB,QAChDyN,KAAKC,UAAU4b,EAAUtoB,SAAS,MAAQyM,KAAKC,UAAU9P,KAAKC,MAAMmD,SAAS,MAC3EpD,KAAK4gB,cAAcE,kBAAoB9gB,KAAK4gB,cAAcC,eAAkB7gB,KAAK4gB,cAAcG,kBAAoB,KACrH2K,EAAUtoB,SAASsoB,EAAUtoB,SAAShB,OAAO,GAAGnB,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,OAE1EvC,KAAKkB,MAAMiqB,YACVnrB,KAAKC,MAAMsT,eAGfvT,KAAK2rB,iBAEF3rB,KAAKkB,MAAMgqB,iBACVlrB,KAAKge,SAAS,CAACkN,iBAAiB,KAGrCrb,KAAKC,UAAU4b,EAAUtoB,SAAS,MAAQyM,KAAKC,UAAU9P,KAAKC,MAAMmD,SAAS,KAC5EpD,KAAK4gB,cAAcH,UAAUzgB,KAAK4gB,cAAcE,kBAAoB9gB,KAAKkB,MAAMuf,a,4CAIjEO,EAAWC,GAC7B,OAAGA,EAAUR,YAAczgB,KAAKkB,MAAMuf,Y,iCAQtCzgB,KAAKge,SAAS,CAACyC,UAAWzgB,KAAK4gB,cAAcE,kBAAoB9gB,KAAK4gB,cAAcC,iBACjF7gB,KAAK4gB,cAAcC,eAAiB7gB,KAAK4gB,cAAcG,kBAAoB/gB,KAAK4gB,cAAcE,kBAAoB,IAC7G9gB,KAAKkB,MAAMgqB,iBACXlrB,KAAKge,SAAS,CAACkN,iBAAiB,IAEjClrB,KAAKkB,MAAMgqB,kBACVlrB,KAAKge,SAAS,CAACkN,iBAAiB,IAC3BlrB,KAAKC,MAAMwrB,OAAOrpB,QACnBpC,KAAKC,MAAMsT,gBAKA,SAApBvT,KAAKC,MAAMmB,MAAmBpB,KAAKC,MAAMgC,MAAMF,WAAWG,SAAWlC,KAAK4gB,cAAcC,eAAiB,KACxG7gB,KAAKC,MAAM6T,eAGQ,WAApB9T,KAAKC,MAAMmB,MAAqBpB,KAAKC,MAAMkD,OAAOjB,SAAWlC,KAAK4gB,cAAcC,eAAiB,KAChG7gB,KAAKC,MAAM6T,iB,mCAOf,OAAiD,IAA9C9T,KAAKC,MAAMgC,MAAMF,WAAWY,OAAOP,OAC3BpC,KAAKC,MAAMgC,MAAMF,WAAWY,OAAO,GAAGvC,KAAKmB,MAGL,IAA9CvB,KAAKC,MAAMgC,MAAMF,WAAWY,OAAOP,OAC5B,GAAN,OAAUpC,KAAKC,MAAMgC,MAAMF,WAAWY,OAAO,GAAGvC,KAAKmB,MAArD,mBAAgEvB,KAAKC,MAAMgC,MAAMF,WAAWY,OAAO,GAAGvC,KAAKmB,OAGzG,GAAN,OAAUvB,KAAKC,MAAMgC,MAAMF,WAAWY,OAAO,GAAGvC,KAAKmB,MAArD,mBAAgEvB,KAAKC,MAAMgC,MAAMF,WAAWY,OAAOP,OAAO,K,+BAGpG,IAAD,OACL,OACI,yBAAKtC,UAAU,eACX,kBAAC,aAAD,CACIwhB,SAAU,WAAO,EAAKA,YACtBH,IAAK,SAACA,GAAS,EAAKP,cAAgBO,GACpCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,gBACVyhB,UAAQ,IAEe,SAApBvhB,KAAKC,MAAMmB,MAAmBpB,KAAKC,MAAMgC,MAAMF,WAAWa,WAAmC,WAApB5C,KAAKC,MAAMmB,MAAqBpB,KAAKC,MAAMkD,OAAOP,YAAe,yBAAK9C,UAAU,kBACxJ,kBAACgjB,GAAA,EAAD,CAAkB/iB,MAAO,CACrBY,MAAO,cAGdX,KAAKC,MAAMmD,SAASf,KAAI,SAACgB,EAASuC,EAAOxC,GACtC,OAAO,kBAAC,GAAD,CACHgnB,YAAa,EACbN,UAAU,EACVH,SAAU,EAAK1pB,MAAM4S,eAAehP,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,MAAQc,EAAQd,OAChE2nB,YAAa,EAAKjqB,MAAM4S,eAAezQ,OACvCoc,IAAK5Y,EACLiO,mBAAoB,SAACtR,GAAS,EAAKtC,MAAM4T,mBAAmBtR,IAC5DiR,iBAAkB,SAACnQ,GAAa,EAAKpD,MAAMuT,iBAAiBnQ,IAC5DuC,MAAOA,EACPvC,QAASA,EACTD,SAAUA,EACVymB,SAAU,SAACxmB,GAAa,EAAKpD,MAAM4pB,SAASxmB,IAC5CumB,SAAU,SAAC3jB,GAAQ,EAAKhG,MAAM2pB,SAAS3jB,SAI1B,SAApBjG,KAAKC,MAAMmB,MAAmB,yBAAKtB,UAAU,mBACvCE,KAAKC,MAAMgC,MAAMF,WAAWY,OAAOP,QAAU,uBAAGtC,UAAU,UAAUE,KAAK4rB,aAA5B,IAA2C5rB,KAAKC,MAAMuf,UAAUra,SAC9GnF,KAAKC,MAAMgC,MAAMF,WAAWY,OAAOP,QAAU,uBAAGrC,MAAO,CAACkf,OAAQ,OAGjD,WAApBjf,KAAKC,MAAMmB,MAAqB,yBAAKtB,UAAU,iBAC3CE,KAAKC,MAAMkF,QAAU,uBAAGrF,UAAU,UAAUE,KAAKC,MAAM4rB,SAAlC,IAA6C7rB,KAAKC,MAAMuf,UAAUra,SACtFnF,KAAKC,MAAMkF,QAAU,uBAAGpF,MAAO,CAACkf,OAAQ,QAIlD,kBAAC,GAAD,CAAWnf,UAAS,2BAAsBE,KAAKkB,MAAMgqB,gBAAkB,SAAW,IAAMvqB,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAAO,EAAKkN,qBACpJ3rB,KAAKC,MAAMwrB,OAAOrpB,QAAU,0BAAMtC,UAAU,yBAAyBE,KAAKC,MAAMwrB,OAAOrpB,QAC1F,kBAAC,KAAD,CAAgBrC,MAAO,CAACY,MAAO,cAGd,WAApBX,KAAKC,MAAMmB,MAAqBpB,KAAKC,MAAM6rB,SAAW,kBAAChJ,GAAA,EAAD,CAAkB/iB,MAAO,CAC5EY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,uBAGNpd,KAAKC,MAAMmD,SAAShB,SAAWpC,KAAKC,MAAM6rB,SAAY,yBAAKhsB,UAAU,cACpE,kBAAC,KAAD,CAAUC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAE7E,2BAAI9hB,KAAKC,MAAMuf,UAAUnG,yBAAzB,IAAoDrZ,KAAKC,MAAMma,U,GA7L9Dza,IAAMkB,WA2MZif,sBAASxD,GAATwD,CAAoBC,aAPX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,SAIc8d,CAAyBkL,K,yCCrOtD/B,GAAqB,SAACrD,EAAMjT,EAAM4L,GAAb,OACvB,uBAAGqH,KAAMA,EAAMpH,QAAS,SAACpU,GAAOA,EAAEoT,mBAAoBe,IAAKA,EAAKkF,OAAO,SAASyF,IAAI,uBACjFvW,IAIDmZ,G,uKACQ,IAAD,OACL,OACI,yBAAKjsB,UAAU,uBACRE,KAAKC,MAAM4S,eAAezQ,QAAU,yBAAKtC,UAAU,sBAClD,kBAACye,GAAA,EAAD,CAAQze,UAAU,oBAAoBC,MAAO,CAAC2hB,MAAO,IAAKjD,QAAS,WAAO,EAAKxe,MAAM+rB,2BACjF,kBAAC,KAAD,CAAWjsB,MAAO,CAACY,MAAO,cAGQ,IAArCX,KAAKC,MAAM4S,eAAezQ,QAAe,yBAAKtC,UAAU,sBACrD,wBAAIA,UAAU,aAAd,UAA8BE,KAAKC,MAAM4S,eAAe,GAAG5R,KAAKb,KAAKmB,MAArE,YAA8EvB,KAAKC,MAAM4S,eAAe,GAAG5R,KAAKb,KAAKqB,MAArH,IAA6H,0BAAM3B,UAAU,WAAWub,GAAMrb,KAAKC,MAAM4S,eAAe,GAAG9N,aAC3L,uBAAGjF,UAAU,gBAAe,kBAAC,KAAD,CAASopB,mBAAoBA,IACrDlpB,KAAKC,MAAM4S,eAAe,GAAGD,KAC7B5S,KAAKC,MAAM4S,eAAe,GAAGD,KAD7B,UACuC5S,KAAKC,MAAMuf,UAAUtJ,YAD5D,aAEIlW,KAAKC,MAAM4S,eAAe,GAAGlP,OAAOvB,OACpCpC,KAAKC,MAAM4S,eAAe,GAAGtP,MAAMnB,OACnCpC,KAAKC,MAAM4S,eAAe,GAAGnP,OAAOtB,OACpCpC,KAAKC,MAAM4S,eAAe,GAAGA,eAAezQ,OALhD,QAUPpC,KAAKC,MAAM4S,eAAezQ,OAAS,GAAI,yBAAKtC,UAAU,sBACnD,wBAAIA,UAAU,aAAaE,KAAKC,MAAMuf,UAAUlG,qBAChD,uBAAGxZ,UAAU,gBAAb,UAAgCE,KAAKC,MAAMuf,UAAUpc,SAArD,aAAkEpD,KAAKC,MAAM4S,eAAezQ,OAA5F,UAILpC,KAAKC,MAAM0D,OAAOvB,QAAU,yBAAKtC,UAAU,oBACzCE,KAAKC,MAAM0D,OAAOtB,KAAI,SAACgoB,EAAOzkB,EAAOjC,GAClC,OAAO,yBAAK6a,IAAK5Y,EAAO9F,UAAU,kBAAkBC,MAAO,CAAC+lB,YAAaniB,EAAOiC,EAAM,GAAK,EAAI,IAC3F,0BAAM9F,UAAU,mBAAmB2e,QAAS,WAAO,EAAKxe,MAAMgsB,YAAY5B,EAAMpkB,MAC5E,kBAAC,KAAD,CAAWlG,MAAO,CAACY,MAAO,WAE9B,yBAAKN,IAAKgqB,EAAMljB,KAAMhH,IAAI,kBAKnCH,KAAKC,MAAMyD,OAAOtB,QAAU,yBAAKtC,UAAU,oBACzCE,KAAKC,MAAMyD,OAAOrB,KAAI,SAACmoB,EAAO5kB,EAAOlC,GAClC,OAAO,yBAAK8a,IAAK5Y,EAAO9F,UAAU,mBAC9B,kBAACye,GAAA,EAAD,CAAQze,UAAU,oBAAoBC,MAAO,CAACgf,SAAU,IAAKN,QAAS,WAAO,EAAKxe,MAAMisB,YAAY1B,EAAMvkB,MACtG,kBAAC,KAAD,CAAWlG,MAAO,CAACY,MAAO,cAG9B,kBAAC,KAAD,CAAeZ,MAAO,CAACY,MAAO,aAE9B,uBAAGb,UAAU,yBAAyB0qB,EAAMpqB,aAKrDJ,KAAKC,MAAMsD,MAAMnB,QAAU,yBAAKtC,UAAU,oBACxCE,KAAKC,MAAMsD,MAAMlB,KAAI,SAACoB,EAAMmC,EAAOrC,GAChC,OAAO,yBAAKib,IAAK5Y,EAAO9F,UAAU,mBAC9B,kBAACye,GAAA,EAAD,CAAQze,UAAU,oBAAoBC,MAAO,CAACgf,SAAU,IAAKN,QAAS,WAAO,EAAKxe,MAAMksB,WAAW1oB,EAAKwC,MACpG,kBAAC,KAAD,CAAWlG,MAAO,CAACY,MAAO,cAG9B,kBAAC,KAAD,CAA6BZ,MAAO,CAACY,MAAO,aAE5C,uBAAGb,UAAU,yBAAyB2D,EAAKrD,gB,GA9D9CT,IAAMkB,WAuEhBif,sBAASxD,GAATwD,CAAoBiM,I,yCC7E7BK,GAActM,mBAASxD,GAATwD,EAAoB,SAAC7f,GACrC,OAAO,yBAAKH,UAAU,eAAeG,EAAMuf,UAAU7J,kBA+J1C0W,G,4MA3JXnrB,MAAQ,CACJorB,mBAAoB,EACpB1Z,KAAM,I,sDAGFA,GACJ5S,KAAKge,SAAS,CAACpL,W,8BAGXqL,GAGJ,IAFA,IAAIsO,GAAStO,EAAMuO,eAAiBvO,EAAMwO,cAAcD,eAAeD,MAE9D3mB,EAAQ,EAAGA,EAAQ2mB,EAAMnqB,OAAQwD,IACtC,GAA0B,SAAtB2mB,EAAM3mB,GAAO8mB,KAAiB,CAC9B,IAAIjpB,EAAO8oB,EAAM3mB,GAAO+mB,YAExB3sB,KAAKC,MAAM2sB,QAAQnpB,GAAM,M,2CAM9BzD,KAAKC,MAAM2D,SACN,KAAKipB,KAAK7sB,KAAKkB,MAAM0R,OAAU5S,KAAKC,MAAM6sB,uBAAuB1qB,QAAWpC,KAAKC,MAAM0D,OAAOvB,QAAWpC,KAAKC,MAAMsD,MAAMnB,QAAWpC,KAAKC,MAAMyD,OAAOtB,QACvJpC,KAAKC,MAAM8sB,uB,+BAKb,IAAD,OACL,OACI,yBAAKjtB,UAAS,uBAAkBE,KAAKC,MAAM+sB,OAAS,GAAI,WACpD,kBAACC,GAAA,EAAD,CAAYC,UAAW,QAASptB,UAAU,iBACtC,kBAAC,KAAD,CAAgBC,MAAO,CAACse,UAAW,gBAAiB1d,MAAO,aAE3D,2BACIS,KAAK,OACL+rB,UAAQ,EACRlH,SAAU,SAAC5b,GAAO,EAAKpK,MAAM2sB,QAAQviB,IACrCpE,GAAG,aACHlG,MAAO,CAAC+hB,QAAS,QACjB3M,OAAO,qJAIf,8BAAUrV,UAAU,oBAAoBmG,GAAG,gBAAgBmnB,QAAS,SAAC/iB,GAAO,EAAK+iB,QAAQ/iB,IACrFgjB,UAAW,SAAChjB,IACS,KAAdA,EAAEijB,SAAmB,EAAKrtB,MAAM2D,QAAW,EAAK1C,MAAM0R,KAAKxQ,QAC1D,EAAKnC,MAAMstB,qBAGG,KAAdljB,EAAEijB,SAAmBjjB,EAAEmjB,YACvBnjB,EAAEyU,kBACC,KAAK+N,KAAK,EAAK3rB,MAAM0R,OAAW,EAAK3S,MAAM6sB,uBAAuB1qB,QAAa,EAAKnC,MAAM0D,OAAOvB,QAAY,EAAKnC,MAAMsD,MAAMnB,QAAY,EAAKnC,MAAMyD,OAAOtB,UACvJ,EAAKnC,MAAM2D,QAKX,EAAK3D,MAAMwtB,gBAAgB,EAAKvsB,MAAM0R,MACtC,EAAKoL,SAAS,CAACpL,KAAM,OALrB,EAAK3S,MAAMqS,YAAY,EAAKpR,MAAM0R,MAClC,EAAKoL,SAAS,CAACpL,KAAM,MAMNrL,SAAS+V,eAAe,iBAC9Bvd,MAAM2tB,UAAY,UAI3CC,QAAS,WACL,IAAIC,EAAermB,SAAS+V,eAAe,iBAC3CsQ,EAAa7tB,MAAMkf,OAAS,MAC5B2O,EAAa7tB,MAAMkf,OAAU2O,EAAaC,aAAc,KAErDD,EAAaC,aAAe,IAC3BD,EAAa7tB,MAAM2tB,UAAY,QAE/BE,EAAa7tB,MAAM2tB,UAAaE,EAAaC,aAAc,MAGnE5H,SAAU,SAAC5b,GACP,EAAKpK,MAAMkF,OAAOkF,EAAEqZ,OAAOsC,MAAO,EAAK9kB,MAAM0R,MAC7C,EAAKoL,SAAS,CAACpL,KAAMvI,EAAEqZ,OAAOsC,SAElCA,MAAOhmB,KAAKkB,MAAM0R,QAGpB5S,KAAKkB,MAAM0R,MAAQ,kBAACwZ,GAAD,OAEnBpsB,KAAKC,MAAM2D,QAAU,kBAAC,sBAAD,CACnB6b,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,MACrB,KAAKkN,KAAK7sB,KAAKkB,MAAM0R,SAAW5S,KAAKC,MAAMsD,MAAMnB,UAAYpC,KAAKC,MAAM0D,OAAOvB,UAAWpC,KAAKC,MAAMyD,OAAOtB,UAAYpC,KAAKC,MAAM6sB,uBAAuB1qB,SAAW,kBAAC6qB,GAAA,EAAD,CAAYxO,QAAS,WACrL,EAAKxe,MAAMqS,YAAY,EAAKpR,MAAM0R,MAClC,EAAKoL,SAAS,CAACpL,KAAM,KACFrL,SAAS+V,eAAe,iBAC9Bvd,MAAM2tB,UAAY,QAChC5tB,UAAU,oBACb,kBAAC,KAAD,CAAUC,MAAO,CAACY,MAAO,eAIhCX,KAAKC,MAAM2D,QAAU,kBAAC,sBAAD,CAClB6b,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,KAEpB9P,KAAKC,UAAU,CACX8C,KAAM5S,KAAKC,MAAMkT,YAAYP,KAC7BjP,OAAQ3D,KAAKC,MAAMkT,YAAYxP,OAC/BD,OAAQ1D,KAAKC,MAAMkT,YAAYzP,OAC/BH,MAAOvD,KAAKC,MAAMkT,YAAY5P,MAC9BupB,uBAAwB9sB,KAAKC,MAAMkT,YAAYN,mBAEnDhD,KAAKC,UAAU,CACX8C,KAAM5S,KAAKkB,MAAM0R,KACjBjP,OAAQ3D,KAAKC,MAAM0D,OACnBD,OAAQ1D,KAAKC,MAAMyD,OACnBH,MAAOvD,KAAKC,MAAMsD,MAClBupB,uBAAwB9sB,KAAKC,MAAM6sB,0BAChC,kBAACG,GAAA,EAAD,CAAY9L,IAAK,SAAC2M,GACrBA,GACAA,EAAK/tB,MAAMguB,YAAY,eAAgB,IAAK,cAGhDtP,QAAS,WACL,EAAKxe,MAAMwtB,gBAAgB,EAAKvsB,MAAM0R,MACtC,EAAKoL,SAAS,CAACpL,KAAM,KACFrL,SAAS+V,eAAe,iBAC9Bvd,MAAM2tB,UAAY,QAChC5tB,UAAU,oBACb,kBAAC,KAAD,CAAkBC,MAAO,CAACY,MAAO,cAGrC,kBAACssB,GAAA,EAAD,CAAY9L,IAAK,SAAC2M,GACVA,GACAA,EAAK/tB,MAAMguB,YAAY,cAAe,IAAK,cAG/CtP,QAAS,WACL,EAAKxe,MAAM8sB,oBACQxlB,SAAS+V,eAAe,iBAC9Bvd,MAAM2tB,UAAY,QAChC5tB,UAAU,oBACb,kBAAC,KAAD,CAAWC,MAAO,CAACY,MAAO,eAIlC,kBAAC,KAAD,CAAqBqtB,cAAY,EAACC,SAAU,SAACvM,EAAO4K,GAChD,EAAKtO,SAAS,CAACsO,+B,GArJR3sB,IAAMkB,W,0CCL3BqtB,G,4MACFhtB,MAAQ,CACJorB,mBAAoB,G,uDAGd,IAAD,OACL,OACI,yBAAKxsB,UAAU,gBACX,kBAACye,GAAA,EAAD,CAAQze,UAAU,YAAY2e,QAAS,WAAO,EAAKxe,MAAMkuB,+BACrD,kBAAC,KAAD,CAAWpuB,MAAO,CAACY,MAAO,eAG5BX,KAAKC,MAAM4S,eAAehP,MAAK,SAAAR,GAAO,MAAqB,SAAjBA,EAAQjC,SAAoB,kBAACmd,GAAA,EAAD,CAAQze,UAAU,cAAc2e,QAAS,WAAO,EAAKxe,MAAMmuB,gCAC/H,kBAAC,KAAD,CAAWruB,MAAO,CAACY,MAAO,UAAW0d,UAAW,iBAGpD,yBAAKve,UAAU,QAEbE,KAAKC,MAAM4S,eAAe,GAAG5R,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,KAA6C,SAAtCvC,KAAKC,MAAM4S,eAAe,GAAGzR,MAAwD,IAArCpB,KAAKC,MAAM4S,eAAezQ,QAAiB,kBAACmc,GAAA,EAAD,CAAQze,UAAU,mBAAmB2e,QAAS,WACxM,EAAKxe,MAAMouB,mBAEX,kBAAC,KAAD,CAAkBtuB,MAAO,CAACY,MAAO,eAGnCX,KAAKC,MAAM4S,eAAehP,MAAK,SAAAR,GAAO,OAAIA,EAAQpC,KAAKsB,MAAQ,EAAKtC,MAAMgB,KAAKsB,QAAQ,kBAACgc,GAAA,EAAD,CAAQze,UAAU,qBAAqB2e,QAAS,WACrI,EAAKxe,MAAMwT,kBAEX,kBAAC,KAAD,CAAmB1T,MAAO,CAACY,MAAO,cAGtC,kBAAC4d,GAAA,EAAD,CAAQze,UAAU,oBAAoB2e,QAAS,WAC3C,EAAKxe,MAAMquB,kCAEX,kBAAC,KAAD,CAAWvuB,MAAO,CAACY,MAAO,mB,GAjCjBhB,IAAMkB,WA6CpBkf,gBANS,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,QAIL8e,CAAyBmO,ICxCpCK,IAAe,EAEbC,G,kDACF,WAAYvuB,GAAQ,IAAD,8BACf,cAAMA,IAIViB,MAAQ,CACJ2R,eAAgB,GAChBia,uBAAwB,EAAK7sB,MAAMoE,QAAQC,gBAC3CZ,OAAQ,GACRH,MAAO,GACPI,OAAQ,GACR2oB,mBAAoB,EACpB1oB,QAAQ,EACRuP,YAAa,GACbsb,WAAW,EACXC,MAAM,GAfS,EAkBnBC,QAAUhvB,IAAMivB,YAlBG,EAmBnBC,YAAc,EAnBK,EA8CnBC,WAAa,SAACzkB,GACVA,EAAEyU,iBACFzU,EAAEoT,mBAhDa,EAmDnBsR,aAAe,SAAC1kB,GACZA,EAAEyU,iBACFzU,EAAEoT,kBACF,EAAKoR,cACDxkB,EAAE2kB,aAAazC,OAASliB,EAAE2kB,aAAazC,MAAMnqB,OAAS,GACtD,EAAK4b,SAAS,CAAC0Q,MAAM,KAxDV,EA4DnBO,cAAgB,SAAC5kB,GACbA,EAAEyU,iBACFzU,EAAEoT,kBACF,EAAKoR,cACoB,IAArB,EAAKA,aACL,EAAK7Q,SAAS,CAAC0Q,MAAM,KAjEV,EAqEnBQ,WAAa,SAAC7kB,GACVA,EAAEyU,iBACFzU,EAAEoT,kBACF,EAAKO,SAAS,CAAC0Q,MAAM,IACjBrkB,EAAE2kB,aAAazrB,OAAS8G,EAAE2kB,aAAazrB,MAAMnB,OAAS,IACxD,EAAK+sB,gBAAgB9kB,EAAE2kB,aAAazrB,OACpC8G,EAAE2kB,aAAaI,YACf,EAAKP,YAAc,IA5EN,EAgFnBM,gBAAkB,SAAC5rB,GACf,IAAK,IAAI+D,EAAI,EAAGA,EAAI/D,EAAMnB,OAAQkF,IAC9B,EAAKslB,QAAQrpB,GAAO,GAAO,IAhF/B,EAAKqqB,aAAejuB,IAAMivB,YAFX,E,gEAsBV5uB,KAAKC,MAAMoE,QAAQC,gBAAgBlC,QACpCpC,KAAKC,MAAM4f,eAAexN,WAAW,IAGzC,IAAIgd,EAAMrvB,KAAK2uB,QAAQW,QACvBD,EAAIphB,iBAAiB,YAAajO,KAAK+uB,cACvCM,EAAIphB,iBAAiB,YAAajO,KAAKivB,eACvCI,EAAIphB,iBAAiB,WAAYjO,KAAK8uB,YACtCO,EAAIphB,iBAAiB,OAAQjO,KAAKkvB,YAElC,IAAIK,EAAM,eAAO1f,KAAK2f,MAAMnf,aAAaof,QAAQ,YAE9CF,EAAO,SAASvvB,KAAKC,MAAMuE,WAC1BxE,KAAK4tB,aAAa0B,QAAQI,QAAQH,EAAO,SAASvvB,KAAKC,MAAMuE,a,6CAIjE,IAAI6qB,EAAMrvB,KAAK2uB,QAAQW,QACvBD,EAAIjR,oBAAoB,YAAape,KAAK+uB,cAC1CM,EAAIjR,oBAAoB,YAAape,KAAKivB,eAC1CI,EAAIjR,oBAAoB,WAAYpe,KAAK8uB,YACzCO,EAAIjR,oBAAoB,OAAQpe,KAAKkvB,c,kCA2C7Btc,GACR,GAAG,KAAKia,KAAKja,IAAW5S,KAAKkB,MAAM4rB,uBAAuB1qB,QAAYpC,KAAKkB,MAAMyC,OAAOvB,QAAYpC,KAAKkB,MAAMqC,MAAMnB,QAAWpC,KAAKkB,MAAMwC,OAAOtB,OAAQ,CACtJ,IAAImtB,EAAM,eAAO1f,KAAK2f,MAAMnf,aAAaof,QAAQ,YAGjD,cAFOF,EAAO,SAASvvB,KAAKC,MAAMuE,UAClC6L,aAAaC,QAAQ,SAAUT,KAAKC,UAAUyf,IACtCvvB,KAAKC,MAAMmB,MACf,IAAK,OACDpB,KAAKC,MAAM2iB,aAAatQ,YAAY,CAChCM,KAAMA,EACN3P,OAAQjD,KAAKC,MAAMgD,OACnBU,OAAQ3D,KAAKkB,MAAMyC,OACnBJ,MAAOvD,KAAKkB,MAAMqC,MAClBG,OAAQ1D,KAAKkB,MAAMwC,OACnBc,SAAUxE,KAAKC,MAAMuE,SACrBqO,eAAgB7S,KAAKkB,MAAM4rB,wBAC5B9sB,KAAKC,MAAMgB,KAAK+N,UACnB,MACJ,IAAK,SACDhP,KAAKC,MAAM4f,eAAevN,YAAY,CAClCM,KAAMA,EACN1P,OAAQlD,KAAKC,MAAMiD,OACnBS,OAAQ3D,KAAKkB,MAAMyC,OACnBJ,MAAOvD,KAAKkB,MAAMqC,MAClBG,OAAQ1D,KAAKkB,MAAMwC,OACnBc,SAAUxE,KAAKC,MAAMuE,SACrBqO,eAAgB7S,KAAKkB,MAAM4rB,wBAC5B9sB,KAAKC,MAAMgB,KAAK+N,UAM3BhP,KAAKge,SAAS,CAAC8O,uBAAwB,GAAInpB,OAAQ,GAAID,OAAQ,GAAIH,MAAO,KAC1EvD,KAAK4tB,aAAa0B,QAAQI,QAAQ,O,sCAI1B9c,GACZ,GAAG,KAAKia,KAAKja,IAAW5S,KAAKkB,MAAM4rB,uBAAuB1qB,QAAYpC,KAAKkB,MAAMyC,OAAOvB,QAAYpC,KAAKkB,MAAMwC,OAAOtB,QAAYpC,KAAKkB,MAAMqC,MAAMnB,OAAQ,CACvJ,OAAQpC,KAAKC,MAAMmB,MACf,IAAK,OACDpB,KAAKC,MAAM2iB,aAAazP,YAAY,CAChC5Q,IAAKvC,KAAKkB,MAAMiS,YAAY5Q,IAC5BqQ,KAAMA,EACN3P,OAAQjD,KAAKC,MAAMgD,OACnBU,OAAQ3D,KAAKkB,MAAMyC,OACnBJ,MAAOvD,KAAKkB,MAAMqC,MAClBG,OAAQ1D,KAAKkB,MAAMwC,OACnBc,SAAUxE,KAAKC,MAAMuE,SACrBqO,eAAgB7S,KAAKkB,MAAM4rB,wBAC5B9sB,KAAKC,MAAMgB,KAAK+N,UACnB,MACJ,IAAK,SACDhP,KAAKC,MAAM4f,eAAe1M,YAAY,CAClC5Q,IAAKvC,KAAKkB,MAAMiS,YAAY5Q,IAC5BqQ,KAAMA,EACN1P,OAAQlD,KAAKC,MAAMiD,OACnBS,OAAQ3D,KAAKkB,MAAMyC,OACnBJ,MAAOvD,KAAKkB,MAAMqC,MAClBG,OAAQ1D,KAAKkB,MAAMwC,OACnBc,SAAUxE,KAAKC,MAAMuE,SACrBqO,eAAgB7S,KAAKkB,MAAM4rB,wBAC5B9sB,KAAKC,MAAMgB,KAAK+N,UAM5BhP,KAAK+sB,uB,sCAKR,OAAQ/sB,KAAKC,MAAMmB,MACf,IAAK,OACDpB,KAAKC,MAAM2iB,aAAanP,cAAc,CAClCxQ,OAAQjD,KAAKC,MAAMgD,OACnByQ,eAAgB1T,KAAKkB,MAAM2R,gBAC5B7S,KAAKC,MAAMgB,KAAK+N,UACnB,MACJ,IAAK,SACDhP,KAAKC,MAAM4f,eAAepM,cAAc,CACpCzC,QAAShR,KAAKC,MAAMiD,OACpBsB,SAAUxE,KAAKC,MAAMuE,SACrBkP,eAAgB1T,KAAKkB,MAAM2R,gBAC5B7S,KAAKC,MAAMgB,KAAK+N,UAM3BhP,KAAKge,SAAS,CAACnL,eAAgB,O,uCAGlBxP,GACb,OAAQrD,KAAKC,MAAMmB,MACf,IAAK,OACDiC,EAAQJ,OAASjD,KAAKC,MAAMgC,MAAMF,WAAWQ,IAC7Cc,EAAQmB,SAAWxE,KAAKC,MAAMuE,SAC9BxE,KAAKC,MAAM2iB,aAAapP,iBAAiBnQ,EAASrD,KAAKC,MAAMgB,KAAK+N,UAClE,MACJ,IAAK,SACD3L,EAAQH,OAASlD,KAAKC,MAAMiD,OAC5BG,EAAQmB,SAAWxE,KAAKC,MAAMuE,SAC9BxE,KAAKC,MAAM4f,eAAerM,iBAAiBnQ,EAASrD,KAAKC,MAAMgB,KAAK+N,a,yCAO7DzM,GACf,OAAQvC,KAAKC,MAAMmB,MACf,IAAK,OACDpB,KAAKC,MAAM2iB,aAAa/O,mBAAmBtR,GAC3C,MACJ,IAAK,SACDvC,KAAKC,MAAM4f,eAAehM,mBAAmBtR,EAAKvC,KAAKC,MAAMuE,a,mDAQrExE,KAAKge,SAAS,CACV8O,uBAAwB9sB,KAAKkB,MAAM2R,eACnCA,eAAgB,O,oDAKpB7S,KAAKC,MAAM4f,eAAexN,WAAWrS,KAAKkB,MAAM2R,gBAChD7S,KAAKge,SAAS,CACVnL,eAAgB,O,sDAKpB7S,KAAKge,SAAS,CACVnL,eAAgB,O,uCAKpB7S,KAAK4tB,aAAa0B,QAAQI,QAAQ1vB,KAAKkB,MAAM2R,eAAe,GAAGD,MAE/D5S,KAAKkB,MAAM2R,eAAe,GAAGlP,OAAOtB,KAAI,SAACyB,EAAGwD,GAExC,OADAxD,EAAEmC,GAAKqB,EACA,KAEXtH,KAAKkB,MAAM2R,eAAe,GAAGnP,OAAOrB,KAAI,SAACyB,EAAGwD,GAExC,OADAxD,EAAEmC,GAAKqB,EACA,KAEXtH,KAAKkB,MAAM2R,eAAe,GAAGtP,MAAMlB,KAAI,SAACyB,EAAGwD,GAEvC,OADAxD,EAAEmC,GAAKqB,EACA,KAGXtH,KAAKge,SAAS,CACVra,OAAQ3D,KAAKkB,MAAM2R,eAAe,GAAGlP,OACrCD,OAAQ1D,KAAKkB,MAAM2R,eAAe,GAAGnP,OACrCH,MAAOvD,KAAKkB,MAAM2R,eAAe,GAAGtP,MACpCsP,eAAgB,GAChBia,uBAAwB9sB,KAAKkB,MAAM2R,eAAe,GAAGA,eACrDjP,QAAQ,EACRuP,YAAanT,KAAKkB,MAAM2R,eAAe,O,2CAIzB,IAAD,OACb8c,EAAgB3vB,KAAKC,MAAMmD,SAAS+M,QAAQC,UAAUvM,MAAK,SAAAC,GAAC,OAAIA,EAAE7C,KAAKsB,MAAQ,EAAKtC,MAAMgB,KAAKsB,OAEnGotB,EAAchsB,OAAOtB,KAAI,SAACyB,EAAGwD,GAEzB,OADAxD,EAAEmC,GAAKqB,EACA,KAEXqoB,EAAcjsB,OAAOrB,KAAI,SAACyB,EAAGwD,GAEzB,OADAxD,EAAEmC,GAAKqB,EACA,KAEXqoB,EAAcpsB,MAAMlB,KAAI,SAACyB,EAAGwD,GAExB,OADAxD,EAAEmC,GAAKqB,EACA,KAGRqoB,IACC3vB,KAAK4tB,aAAa0B,QAAQI,QAAQC,EAAc/c,MAChD5S,KAAKge,SAAS,CACVra,OAAQgsB,EAAchsB,OACtBD,OAAQisB,EAAcjsB,OACtBH,MAAOosB,EAAcpsB,MACrBsP,eAAgB,GAChBia,uBAAwB6C,EAAc9c,eACtCjP,QAAQ,EACRuP,YAAawc,O,0CAMrB3vB,KAAK4tB,aAAa0B,QAAQI,QAAQ,IAClC1vB,KAAKge,SAAS,CACVra,OAAQ,GACRD,OAAQ,GACRH,MAAO,GACPsP,eAAgB,GAChBia,uBAAwB,GACxBlpB,QAAQ,EACRuP,YAAa,O,qCAIL,IAAD,OAIX,OAHGob,IACC5d,aAAa4d,IAETvuB,KAAKC,MAAMmB,MACf,IAAK,OACDmtB,GAAe1d,YAAW,WACtB,EAAK5Q,MAAM2iB,aAAarP,aAAa,CACjC/O,SAAU,EAAKvE,MAAMuE,SACrBvB,OAAQ,EAAKhD,MAAMgD,OACnBC,OAAQ,EAAKjD,MAAMgB,KAAKsB,KACzB,EAAKtC,MAAMgB,KAAK+N,YACpB,KACH,MACJ,IAAK,SACDuf,GAAe1d,YAAW,WACtB,EAAK5Q,MAAM4f,eAAetM,aAAa,CACnC/O,SAAU,EAAKvE,MAAMuE,SACrBwM,QAAS,EAAK/Q,MAAMiD,OACpBA,OAAQ,EAAKjD,MAAMgB,KAAKsB,KACzB,EAAKtC,MAAMgB,KAAK+N,YACpB,Q,qCAQX,OAAQhP,KAAKC,MAAMmB,MACf,IAAK,OACDpB,KAAKC,MAAM2iB,aAAa9O,aAAa,CAACtP,SAAUxE,KAAKC,MAAMuE,UAAWxE,KAAKC,MAAMgB,KAAK+N,UACtF,MACJ,IAAK,SACDhP,KAAKC,MAAM4f,eAAe/L,aAAa,CAACtP,SAAUxE,KAAKC,MAAMuE,UAAWxE,KAAKC,MAAMgB,KAAK+N,a,8BAO5F3E,GAAiC,IAA9BulB,EAA6B,wDAAdlB,EAAc,wDAChChrB,EAAM,YAAO1D,KAAKkB,MAAMwC,QACxBH,EAAK,YAAOvD,KAAKkB,MAAMqC,OACvBI,EAAM,YAAO3D,KAAKkB,MAAMyC,QAExBksB,EAAUnsB,EAAOtB,OAASmB,EAAMnB,OAASuB,EAAOvB,OAEpD,IAAIwtB,IAAUlB,EAAM,CAChB,IAAK,IAAIpnB,EAAI,EAAGA,EAAI+C,EAAEqZ,OAAOngB,MAAMnB,OAAQkF,IAAK,CAC5C,GAAGuoB,EAAU,EAAG,CACZ3pB,KAAMnD,MAAM,6BAA8B,CACtCiQ,SAAU9M,KAAM+M,SAASC,aAE7B,MAGJ,IAAIzP,EAAO,CACP0D,MAAOc,OAAO0b,KAAO1b,OAAO2b,WAAWC,gBAAgB,IAAIC,KAAK,CAACzZ,EAAEqZ,OAAOngB,MAAM+D,IAAK,CAAClG,KAAMiJ,EAAEqZ,OAAOngB,MAAM+D,GAAGlG,QAC9GqC,KAAM4G,EAAEqZ,OAAOngB,MAAM+D,GACrBlH,KAAMiK,EAAEqZ,OAAOngB,MAAM+D,GAAGlH,KACxBgB,KAAMiJ,EAAEqZ,OAAOngB,MAAM+D,GAAGlH,KAAK2jB,MAAM,KAAKnQ,MACxCqO,KAAM5X,EAAEqZ,OAAOngB,MAAM+D,GAAG2a,KAAO,KAGJ,QAA5Bxe,EAAKrC,KAAKmkB,eAAuD,QAA5B9hB,EAAKrC,KAAKmkB,eAAuD,SAA5B9hB,EAAKrC,KAAKmkB,eAAwD,QAA5B9hB,EAAKrC,KAAKmkB,gBACzH9hB,EAAKwC,GAAKtC,EAAOvB,OACjBuB,EAAO+O,KAAKjP,IAGe,QAA5BA,EAAKrC,KAAKmkB,eAAuD,QAA5B9hB,EAAKrC,KAAKmkB,eAAuD,SAA5B9hB,EAAKrC,KAAKmkB,eAAwD,QAA5B9hB,EAAKrC,KAAKmkB,eAAuD,QAA5B9hB,EAAKrC,KAAKmkB,gBAC9J9hB,EAAKwC,GAAK1C,EAAMnB,OAChBmB,EAAMmP,KAAKjP,IAGgB,QAA5BA,EAAKrC,KAAKmkB,gBACT9hB,EAAKwC,GAAKvC,EAAOtB,OACjBsB,EAAOgP,KAAKjP,IAGhBosB,IAGJxlB,EAAEqZ,OAAOsC,MAAQ,KAGrB,GAAG4J,EACC,GAAGC,EAAU,EACT3pB,KAAMnD,MAAM,4BAA6B,CACrCiQ,SAAU9M,KAAM+M,SAASC,iBAE1B,CACH,IAAIzP,EAAO,CACPwC,GAAItC,EAAOvB,OACX+E,MAAOc,OAAO0b,KAAO1b,OAAO2b,WAAWC,gBAAgB,IAAIC,KAAK,CAACzZ,GAAI,CAACjJ,KAAMiJ,EAAEjJ,QAC9EqC,KAAM4G,EACNjK,KAAMiK,EAAEjK,KACRgB,KAAMiJ,EAAEjK,KAAK2jB,MAAM,KAAKnQ,OAG5BjQ,EAAO+O,KAAKjP,GAIpB,GAAGirB,EACC,IAAK,IAAIpnB,EAAI,EAAGA,EAAI+C,EAAEjI,OAAQkF,IAAK,CAC/B,GAAGuoB,EAAU,EAAG,CACZ3pB,KAAMnD,MAAM,4BAA6B,CACrCiQ,SAAU9M,KAAM+M,SAASC,aAE7B,MAGJ,IAAIzP,EAAO,CACP0D,MAAOc,OAAO0b,KAAO1b,OAAO2b,WAAWC,gBAAgB,IAAIC,KAAK,CAACzZ,EAAE/C,IAAK,CAAClG,KAAMiJ,EAAE/C,GAAGlG,QACpFqC,KAAM4G,EAAE/C,GACRlH,KAAMiK,EAAE/C,GAAGlH,KACXgB,KAAMiJ,EAAE/C,GAAGlH,KAAK2jB,MAAM,KAAKnQ,MAC3BqO,KAAM5X,EAAE/C,GAAG2a,KAAO,KAGL,QAAdxe,EAAKrC,MAAgC,QAAdqC,EAAKrC,MAAgC,SAAdqC,EAAKrC,MAAiC,QAAdqC,EAAKrC,OAC1EqC,EAAKwC,GAAKtC,EAAOvB,OACjBuB,EAAO+O,KAAKjP,IAGC,QAAdA,EAAKrC,MAAgC,QAAdqC,EAAKrC,MAAgC,SAAdqC,EAAKrC,MAAiC,QAAdqC,EAAKrC,MAAgC,QAAdqC,EAAKrC,OACjGqC,EAAKwC,GAAK1C,EAAMnB,OAChBmB,EAAMmP,KAAKjP,IAGE,QAAdA,EAAKrC,OACJqC,EAAKwC,GAAKvC,EAAOtB,OACjBsB,EAAOgP,KAAKjP,IAGhBosB,IAIR7vB,KAAKge,SAAS,CAACta,SAAQH,QAAOI,a,4CAGZqd,EAAWC,GAC7B,OAAGjhB,KAAKkB,MAAMutB,YAAcxN,EAAUwN,Y,6BAOnCqB,EAASC,GAAW,IAAD,OACtB,GAAGD,EAAUC,IAAa/vB,KAAKkB,MAAM0C,QAC9B5D,KAAKkB,MAAMutB,UAAW,CAGrB,OAFAzuB,KAAKge,SAAS,CAACyQ,WAAW,IAElBzuB,KAAKC,MAAMmB,MACf,IAAK,OACDmJ,GAAiBmH,WAAW1R,KAAKC,MAAMgC,MAAMF,WAAWQ,KACxD,MACJ,IAAK,SACDgI,GAAiBoH,aAAa3R,KAAKC,MAAMiD,OAAQlD,KAAKC,MAAMgB,KAAKsB,KAMzEsO,YAAW,WACP,EAAKmN,SAAS,CAACyQ,WAAW,MAC3B,MAIX,IAAIzuB,KAAKkB,MAAM0C,OAAQ,CACnB,IAAI2rB,EAAM,eAAO1f,KAAK2f,MAAMnf,aAAaof,QAAQ,YACjDF,EAAO,SAASvvB,KAAKC,MAAMuE,UAAYsrB,EACnCP,EAAO,SAASvvB,KAAKC,MAAMuE,WAAc,KAAKqoB,KAAK0C,EAAO,SAASvvB,KAAKC,MAAMuE,mBACvE+qB,EAAO,SAASvvB,KAAKC,MAAMuE,UACtC6L,aAAaC,QAAQ,SAAUT,KAAKC,UAAUyf,O,+BAI5C,IAAD,OACL,OACA,oCACI,yBAAKzvB,UAAU,mBAAmBqhB,IAAKnhB,KAAK2uB,SACvC3uB,KAAKkB,MAAMwtB,MACR,yBAAK5uB,UAAU,2BACX,yBAAKA,UAAU,cACX,kBAAC,KAAD,CAA6BC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAEhG,iEAKZ,kBAAC,GAAD,CACIhO,aAAc,WAAO,EAAKA,gBAC1BN,iBAAkB,SAACnQ,GAAa,EAAKmQ,iBAAiBnQ,IACtDwQ,mBAAoB,SAACtR,GAAS,EAAKsR,mBAAmBtR,IACtDa,SAAUpD,KAAKC,MAAMmD,SACrBgX,GAAIpa,KAAKC,MAAMma,GACfjX,OAAQnD,KAAKC,MAAMkD,OACnB0oB,SAAU7rB,KAAKC,MAAM4rB,SACrB1mB,OAAQnF,KAAKC,MAAMkF,OACnB2mB,QAAS9rB,KAAKC,MAAM6rB,QACpB1qB,KAAMpB,KAAKC,MAAMmB,KACjBqqB,OAAQzrB,KAAKC,MAAMmD,SAASV,QAAO,SAAAoB,GAAC,OAAKA,EAAEC,QAAUD,EAAE7C,KAAKsB,MAAQ,EAAKtC,MAAMgB,KAAKsB,OACpFsQ,eAAgB7S,KAAKkB,MAAM2R,eAC3BgX,SAAU,SAACxmB,GACP,EAAK2a,SAAS,CAACnL,eAAe,GAAD,mBAAM,EAAK3R,MAAM2R,gBAAjB,CAAiCxP,OAElEumB,SAAU,SAAC3jB,GACP,EAAK+X,SAAS,CAACnL,eAAe,YACvB,EAAK3R,MAAM2R,eAAenQ,QAAO,SAAAW,GAChC,OAAOA,EAAQd,MAAQ0D,SAInCsN,aAAc,WACV,EAAKA,kBAIb,kBAAC,sBAAD,CACIkM,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,QACpB3f,KAAKkB,MAAM4rB,uBAAuB1qB,UAAYpC,KAAKkB,MAAMyC,OAAOvB,UAAYpC,KAAKkB,MAAMwC,OAAOtB,UAAYpC,KAAKkB,MAAMqC,MAAMnB,SAC3H,kBAAC,GAAD,CACIuB,OAAQ3D,KAAKkB,MAAMyC,OACnBkP,eAAgB7S,KAAKkB,MAAM4rB,uBAC3BvpB,MAAOvD,KAAKkB,MAAMqC,MAClBG,OAAQ1D,KAAKkB,MAAMwC,OACnBsoB,uBAAwB,WACpB,EAAKhO,SAAS,CAAC8O,uBAAwB,MAE3Cb,YAAa,SAAChmB,GACV,EAAK+X,SAAS,CAACra,OAAO,YACf,EAAKzC,MAAMyC,OAAOjB,QAAO,SAAA2nB,GACxB,OAAOA,EAAMpkB,KAAOA,SAIhCimB,YAAa,SAACjmB,GACV,EAAK+X,SAAS,CAACta,OAAO,YACf,EAAKxC,MAAMwC,OAAOhB,QAAO,SAAA8nB,GACxB,OAAOA,EAAMvkB,KAAOA,SAIhCkmB,WAAY,SAAClmB,GACT,EAAK+X,SAAS,CAACza,MAAM,YACd,EAAKrC,MAAMqC,MAAMb,QAAO,SAAAe,GACvB,OAAOA,EAAKwC,KAAOA,YAQ3C,kBAAC,GAAD,CACI+mB,QAAShtB,KAAKkB,MAAM2R,eAAezQ,OACnC+e,IAAKnhB,KAAK4tB,aACVb,kBAAmB,WAAO,EAAKA,qBAC/BnpB,OAAQ5D,KAAKkB,MAAM0C,OACnBuP,YAAanT,KAAKkB,MAAMiS,YACxBsa,gBAAiB,SAAC7a,GAAU,EAAK6a,gBAAgB7a,IACjDjP,OAAQ3D,KAAKkB,MAAMyC,OACnBD,OAAQ1D,KAAKkB,MAAMwC,OACnBH,MAAOvD,KAAKkB,MAAMqC,MAClBupB,uBAAwB9sB,KAAKkB,MAAM4rB,uBACnCxa,YAAa,SAACM,GAAU,EAAKN,YAAYM,IACzCzN,OAAQ,SAAC2qB,EAASC,GAAc,EAAK5qB,OAAO2qB,EAASC,IACrDnD,QAAS,SAACviB,EAAGulB,GAAW,EAAKhD,QAAQviB,EAAGulB,IACxCrC,mBAAoB,WAAO,EAAKA,0BAGjCvtB,KAAKkB,MAAM2R,eAAezQ,QACzB,kBAAC,GAAD,CACI+rB,2BAA4B,WAAO,EAAKA,8BACxCG,8BAA+B,WAAO,EAAKA,iCAC3CF,4BAA6B,WAAO,EAAKA,+BACzC3a,cAAe,WAAO,EAAKA,iBAC3BZ,eAAgB7S,KAAKkB,MAAM2R,eAC3Bwb,eAAgB,WAAO,EAAKA,0B,GA3kBjC1uB,IAAMkB,WAkmBVkf,oBAfS,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,MACboC,QAASnD,EAAMmD,YAIvB,SAA4B+G,GACxB,MAAO,CACHwX,aAAc5C,YAAmB4C,EAAcxX,GAC/CyU,eAAgBG,YAAmBH,EAAgBzU,MAI5C2U,CAA6CyO,I,oBC3mBtDwB,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,uBAErB+Q,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBC,UAAwB,WAI1BC,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACHC,OAAQvwB,KAAKC,MAAMswB,OACnBxwB,MAAOiwB,GACPQ,aAAa,mBAE8B,sBAA1CxwB,KAAKC,MAAMgC,MAAMF,WAAWgB,MAAMgO,KAA+B,kBAAC,KAAD,CAAUqJ,GAAG,aAC/E,kBAAC,KAAD,CAAkBra,MAAO,CAACY,MAAO,UAAWC,SAAU,MACtD,wBAAId,UAAU,eAAeE,KAAKC,MAAMuf,UAAUzc,OAClD,uBAAGjD,UAAU,aAAaC,MAAO,CAAC0wB,aAAgBzwB,KAAKC,MAAMgC,MAAMF,WAAWgB,MAAM8C,IAAM,EAAI,KAAM7F,KAAKC,MAAMuf,UAAUxf,KAAKC,MAAMgC,MAAMF,WAAWgB,MAAMgO,QACxJ/Q,KAAKC,MAAMgC,MAAMF,WAAWgB,MAAM8C,KAAO,uBAAG/F,UAAU,cAAcE,KAAKC,MAAMuf,UAAUpF,GAAhD,IAAoD,0BAAMra,MAAO,CAACY,MAAO,YAAa,IAAImE,KAAK9E,KAAKC,MAAMgC,MAAMF,WAAWgB,MAAM8C,IAAIC,MAAM4qB,mBACvL,4BAAQ5wB,UAAU,cAAcsB,KAAK,SAASrB,MAAO,CAAC2hB,MAAO,eAAgBjD,QAAS,WAClF,EAAKxe,MAAM4e,QAAQnM,KAAK,OACxB1S,KAAKC,MAAMuf,UAAUnL,W,GAdT1U,IAAMkB,WAyBnBif,sBAASxD,GAATwD,CAAoBC,aANX,SAAA7e,GACpB,MAAO,CACHe,MAAOf,EAAMe,SAIc8d,CAAyBE,aAAWqQ,M,yGCfjEpQ,GAAYC,cAXA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFlB,gBAAiB,OACjBxe,MAAO,UACPqqB,OAAQ,EACR,UAAW,CACP7L,gBAAiB,YAKXgB,CAAsBG,MAmBlCqQ,GAAaxQ,cAjBK,SAAAC,GAAK,MAAK,CAC9BC,KAAM,CACFlB,gBAAiB,OACjBxe,MAAO,UACPqqB,OAAQ,EACRjM,SAAU,GACVE,OAAQ,GACRmR,UAAW,iBACXzO,WAAY,OACZmE,YAAa,OACb,UAAW,CACP3G,gBAAiB,OACjBiR,UAAW,YAKJjQ,CAA4BG,MAEzCsQ,GAAU3Q,cAAW,SAAChgB,GACxB,OAAO,kBAAC,aAAD,CACHmhB,oBAAqB,kBAAM,yBAAKthB,UAAU,oBAC1CuhB,oBAAqB,kBAAM,yBAAKvhB,UAAU,oBAC1CA,UAAU,uBACVyhB,UAAQ,GAEPthB,EAAM+C,MAAMX,KAAI,SAACpB,EAAM2E,GAAP,OACb,yBAAK4Y,IAAK5Y,EAAO7F,MAAO,CAACgqB,OAAQ,WAAYjqB,UAAU,mDAAmD2e,QAAS,WAC/Gxe,EAAM4e,QAAQnM,KAAK,CACfwC,OAAO,SAAD,OAAWjU,EAAKsB,SAG1B,kBAAC,EAAD,CAAQhC,YAAa,CAAC4vB,aAAc,GAAIjwB,SAAQe,EAAKf,QAASe,EAAKf,OAAgBE,KAAMa,EAAKb,KAAKmB,MAAM6d,OAAO,GAAGne,EAAKb,KAAKqB,KAAK2d,OAAO,GAAIrf,MAAO,CAACa,SAAU,GAAIuvB,aAAc,EAAGzO,MAAO,OAAQzC,OAAQ,OAAQE,gBAAgB,OAAD,OAASle,EAAKN,MAAd,QACjOM,EAAK+C,UAAY,0BAAMlE,UAAU,aAClC,0BAAMA,UAAU,aAAamB,EAAKb,KAAKmB,MAAvC,IAA+CN,EAAKb,KAAKqB,cAMnEiL,G,kLAEE1M,KAAKmK,MAAM0mB,UAAY7wB,KAAKC,MAAMsJ,S,+BAG5B,IAAD,OACL,OAAO,2BAAO4X,IAAK,SAAAA,GAAQ,EAAKhX,MAAQgX,GAAMphB,MAAO,CAAC+hB,QAAS,QAASgP,UAAQ,EAACC,UAAQ,Q,GANvEpxB,IAAMkrB,eAU1BmG,G,4MAGF9vB,MAAQ,CACJ+vB,IAAKC,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQF,K,kEAGtD,IAAD,OAChBjxB,KAAK0gB,QAAQC,cAAa,GAE1B,IAAIyQ,EAAahlB,aAAY,WACtB7B,GAAiB8G,gBAChB,EAAKpR,MAAM2iB,aAAapR,SAAS,CAACvL,GAAI,EAAKhG,MAAMoxB,MAAMC,OAAOrrB,GAAI+I,SAAU,EAAK/O,MAAMgB,KAAK+N,WAC5F3C,cAAc+kB,MAEnB,KAEHpxB,KAAKC,MAAM4e,QAAQ0S,QAAO,SAACthB,GACvB,EAAK+N,SAAS,CACViT,IAAKC,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQF,W,6CAM/DjxB,KAAKC,MAAMgC,MAAMF,YAClB/B,KAAKC,MAAM2iB,aAAa5W,UAAUhM,KAAKC,MAAMgC,MAAMF,WAAWQ,IAAKvC,KAAKC,MAAMgC,MAAMF,WAAWH,Q,+BAG7F,IAAD,OACL,OAAI5B,KAAKC,MAAMgC,MAAMF,WAWlB/B,KAAKC,MAAMgC,MAAMF,YAAc/B,KAAKC,MAAMgC,MAAMF,WAAWgB,MACnD,kBAAC,GAAD,CAAewtB,QAAQ,IAG3BvwB,KAAKC,MAAMgC,MAAMF,YACpB,oCACK/B,KAAKC,MAAMgC,MAAMF,WAAWc,cAAgB,kBAAC,GAAD,CAAa0G,OAAQvJ,KAAKC,MAAMgC,MAAMF,WAAWc,eAC9F,yBAAK/C,UAAS,uDAAqE,SAAnBE,KAAKkB,MAAM+vB,IAAiB,SAAW,SACnG,yBAAKnxB,UAAU,gBACX,kBAACmtB,GAAA,EAAD,CAAYntB,UAAU,WAAW2e,QAAS,WAChB,SAAnB,EAAKvd,MAAM+vB,IACV,EAAKhxB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,KAGX,EAAKjV,MAAM4e,QAAQnM,KAAK,OAG5B,kBAAC,KAAD,CAAe9R,SAAS,QAAQb,MAAO,CAACY,MAAO,cAGnD,yBAAKb,UAAU,cACX,wBAAIA,UAAU,eAAeE,KAAKC,MAAMgC,MAAMF,WAAWS,OACzD,wBAAI1C,UAAU,wBAAwBE,KAAKC,MAAMgC,MAAMF,WAAWiB,MAAMZ,OAAS,EAAjF,IAAqFpC,KAAKC,MAAMuf,UAAU/e,SAG9G,kBAACkwB,GAAD,CAAY1qB,GAAI,uBAAuBjG,KAAKC,MAAMgC,MAAMF,WAAWQ,IAAK5B,MAAM,UAAUshB,KAAK,QAAQC,aAAW,QAC5G,kBAAC,KAAD,CAAcniB,MAAO,CAACY,MAAO,cAEjC,kBAAC,GAAD,CAAYsd,MAAM,QAAQL,QAAQ,EAAME,OAAO,EAAMQ,QACrDte,KAAKC,MAAMgC,MAAMF,WAAWyvB,UAAYxxB,KAAKC,MAAMgB,KAAKsB,KAAgC,UAAzBvC,KAAKC,MAAMgB,KAAK6jB,MAA6C,UAAzB9kB,KAAKC,MAAMgB,KAAK6jB,KAAmB,CAClI,CAAClS,KAAM5S,KAAKC,MAAMuf,UAAUxJ,eAAgB7U,OAAQ,WAChD,EAAKlB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,kBAGhB,CAACtC,KAAM5S,KAAKC,MAAMuf,UAAU5J,iBAAkBzU,OAAQ,WAClD,EAAKlB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,yBAGf,CACItC,KAAM5S,KAAKC,MAAMuf,UAAUvJ,UAC3B9U,OAAQ,WACJ,EAAKlB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,oBAIpB,CACItC,KAAM5S,KAAKC,MAAMuf,UAAUzJ,YAC3B5U,OAAQ,WACJ,EAAKlB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,uBAIpB,CACA,CACItC,KAAM5S,KAAKC,MAAMuf,UAAUxJ,eAAgB7U,OAAQ,WAC/C,EAAKlB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,kBAIpB,CAACtC,KAAM5S,KAAKC,MAAMuf,UAAU5J,iBAAkBzU,OAAQ,WAClD,EAAKlB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,0BAGhBqI,KAAM,uBAAuBvd,KAAKC,MAAMgC,MAAMF,WAAWQ,OAIhE,yBAAKzC,UAAU,iBACX,kBAAC,GAAD,CACAsD,SAAUpD,KAAKC,MAAMgC,MAAMF,WAAWoB,OAAOC,SAC7ChC,KAAK,OACLgZ,GAAIpa,KAAKC,MAAMgC,MAAMF,WAAWS,MAChCgC,SAAUxE,KAAKC,MAAMgC,MAAMF,WAAWoB,OAAOZ,IAC7CU,OAAQjD,KAAKC,MAAMgC,MAAMF,WAAWQ,QAK5C,yBAAKzC,UAAS,kDAAgE,SAAnBE,KAAKkB,MAAM+vB,IAAiB,OAAS,WAC3FjxB,KAAKC,MAAMgC,MAAMF,YAAc,kBAAC6uB,GAAD,CAAS5tB,MAAOhD,KAAKC,MAAMgC,MAAMF,WAAWiB,QAE5E,yBAAKlD,UAAU,iBACX,kBAAC,GAAD,CAAWA,UAAS,6BAAgC2e,QAAS,WAAO,EAAKxe,MAAM4e,QAAQnM,KAAK,CACxFwC,OAAO,kBAEJlV,KAAKC,MAAMgC,MAAMF,WAAWoB,OAAOC,SAASV,QAAO,SAAAoB,GAAC,OAAKA,EAAEC,QAAUD,EAAE7C,KAAKsB,MAAQ,EAAKtC,MAAMgB,KAAKsB,OAAKH,QAAU,0BAAMrC,MAAO,CAAC+d,MAAO,GAAIhe,UAAU,yBAAyBE,KAAKC,MAAMgC,MAAMF,WAAWoB,OAAOC,SAASV,QAAO,SAAAoB,GAAC,OAAKA,EAAEC,QAAUD,EAAE7C,KAAKsB,MAAQ,EAAKtC,MAAMgB,KAAKsB,OAAKH,QAC3R,kBAAC,IAAD,CAAuBrC,MAAO,CAACY,MAAOX,KAAKC,MAAMmE,MAAMF,QAAU,UAAY,aAE9ElE,KAAKC,MAAMgC,MAAMF,WAAWe,OAAS,kBAACif,GAAA,EAAD,CAASvf,MAAK,qBAAgB,IAAIsC,KAAK9E,KAAKC,MAAMgC,MAAMF,WAAWe,MAAMgD,MAAM4qB,kBAAoB1O,UAAU,OAAM,kBAAC,GAAD,CAAWliB,UAAS,uBAC3K,kBAAC,KAAD,CAAYC,MAAO,CAACY,MAAO,aAE7BX,KAAKC,MAAMgC,MAAMF,WAAWe,OAAS,kBAAC,GAAD,CAAWhD,UAAS,uBAAkBE,KAAKC,MAAMmE,MAAMH,MAAQ,SAAW,IAAMwa,QAAS,WAAOlO,OACnI,kBAAC,KAAD,CAASxQ,MAAO,CAACY,MAAOX,KAAKC,MAAMmE,MAAMH,MAAQ,OAAS,cAE9D,kBAAC,GAAD,CAAWnE,UAAS,uBAAkBE,KAAKC,MAAMmE,MAAMF,QAAU,GAAK,UAAYua,QAAS,WAAOlO,OAC9F,kBAAC,KAAD,CAAcxQ,MAAO,CAACY,MAAOX,KAAKC,MAAMmE,MAAMF,QAAU,UAAY,WAExE,kBAAC,GAAD,CAAWpE,UAAS,sBAAyB2e,QAAS,WAAO,EAAKxe,MAAM4e,QAAQnM,KAAK,OACjF,kBAAC,KAAD,CAAa3S,MAAO,CAACY,MAAO,cAnHrC,kBAACmiB,GAAA,EAAD,CAAkB/iB,MAAO,CAC5BY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,0B,GArCFzd,IAAMkB,WAAnBmwB,GACK7O,YAAcziB,EAwKVogB,0BAASxD,GAATwD,CAAoBC,aAdX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,MACbmC,MAAOlD,EAAMkD,UAIrB,SAA4BgH,GACxB,MAAO,CACHwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAW+Q,MCjQrFS,G,kLAIEzxB,KAAK0gB,QAAQC,cAAa,K,6CAI1B3gB,KAAK0gB,QAAQC,cAAa,K,+BAI1B,OACI,oCACI,yBAAK7gB,UAAU,WAAWC,MAAO,CAAC2xB,MAAO,KACzC,yBAAK5xB,UAAU,WAAWC,MAAO,CAAC2xB,MAAO,U,GAftC/xB,IAAMkB,WAAnB4wB,GACKtP,YAAcziB,EAoBzB,IAQeqgB,gBARS,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,MACboC,QAASnD,EAAMmD,WAIR0b,CAAyB0R,I,0CCsBlCE,GAAUxR,cAhCE,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFlB,gBAAiB,UACjBxe,MAAO,OACPqqB,OAAQ,EACRtJ,MAAO,GACPzC,OAAQ,GACRmR,UAAW,iBACXtK,YAAa,OACb,UAAW,CACP3G,gBAAiB,UACjBiR,UAAW,YAqBPjQ,CAAsBG,MAChCJ,GAAYC,cAjBM,SAAAC,GAAK,MAAK,CAC9BC,KAAM,CACFlB,gBAAiB,OACjBxe,MAAO,UACPqqB,OAAQ,EACRtJ,MAAO,GACPzC,OAAQ,GACRmR,UAAW,iBACXtK,YAAa,OACb,UAAW,CACP3G,gBAAiB,OACjBiR,UAAW,YAMLjQ,CAA4BG,MAExC2K,G,4MAGF/pB,MAAQ,CACJsf,YAAY,EACZC,UAAW,G,kEAGM,IAAD,OAChBzgB,KAAK0gB,QAAQC,cAAa,GAEvB1Y,OAAO2pB,WAAa,KACnB5xB,KAAK0gB,QAAQC,cAAa,GAE1B3gB,KAAKC,MAAMoE,QAAQA,QAAQR,MAAK,SAAAV,GAAM,OAAIA,EAAOlC,KAAKsB,MAAQ,EAAKtC,MAAMoxB,MAAMC,OAAOrrB,OAGtFjG,KAAKC,MAAM4f,eAAezN,aAAapS,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAAIjG,KAAKC,MAAMgB,KAAK+N,UAC/EhP,KAAKC,MAAMoE,QAAQA,QAAQR,MAAK,SAAAV,GAAM,OAAIA,EAAOlC,KAAKsB,MAAQ,EAAKtC,MAAMoxB,MAAMC,OAAOrrB,MAAInE,QAC1F9B,KAAKC,MAAM4f,eAAe1N,WAAWnS,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAAIjG,KAAKC,MAAMgB,KAAK+N,WAJrFhP,KAAKC,MAAM4f,eAAe5N,UAAUjS,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAAIjG,KAAKC,MAAMgB,KAAK+N,Y,6CASpFhP,KAAK0gB,QAAQC,cAAa,K,+BAGpB,IAAD,OACDxd,EAASnD,KAAKC,MAAMoE,QAAQA,QAAQR,MAAK,SAAAV,GAAM,OAAIA,EAAOlC,KAAKsB,MAAQ,EAAKtC,MAAMoxB,MAAMC,OAAOrrB,MAEnG,OACI,oCACK9C,IAAWA,EAAO+O,YAAc,oCAAE,yBAAKpS,UAAU,2CAA2CC,MAAO,CAAC2xB,MAAO,IACpG,kBAACzE,GAAA,EAAD,CAAYntB,UAAU,WAAW2e,QAAS,WACtC,EAAKxe,MAAM4e,QAAQnM,KAAK,OAExB,kBAAC,KAAD,CAAe9R,SAAS,QAAQb,MAAO,CAACY,MAAO,cAEtD,oCAAE,yBAAKZ,MAAO,CAAC+hB,QAAS,YAAarD,QAAS,WAC1C,EAAKxe,MAAM4e,QAAQnM,KAAK,CACrBwC,OAAO,SAAD,OAAW/R,EAAOlC,KAAKsB,SAEjC,kBAAC,EAAD,CAAQxC,MAAO,CACf2hB,MAAO,GACPzC,OAAQ,GACRre,SAAU,GACVse,WAAY,IACZC,gBAAgB,OAAD,OAAShc,EAAOlC,KAAKN,MAArB,MAEnBP,KAAM+C,EAAOlC,KAAKb,KAAKmB,MAAM6d,OAAO,GAAKjc,EAAOlC,KAAKb,KAAKqB,KAAK2d,OAAO,GACtElf,SAAQiD,EAAOlC,KAAKf,QAASiD,EAAOlC,KAAKf,UAEzC,yBAAKJ,UAAU,gBAAgB2e,QAAS,WACpC,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW/R,EAAOlC,KAAKsB,SAGjC,uBAAGzC,UAAU,aAAb,UAA6BqD,EAAOlC,KAAKb,KAAKmB,MAA9C,YAAuD4B,EAAOlC,KAAKb,KAAKqB,QACtE0B,EAAOlC,KAAKR,QAAU,uBAAGX,UAAU,gBAAgByc,GAAWpZ,EAAOlC,KAAK+D,WAC3E7B,EAAOlC,KAAKR,QAAU,uBAAGX,UAAU,eAAeC,MAAO,CAACY,MAAO,YAAaX,KAAKC,MAAMuf,UAAU/e,UAGxG,yBAAKV,MAAO,CAAC4hB,WAAY,SACpBxe,EAAOlC,KAAKsB,MAAQvC,KAAKC,MAAMgB,KAAKsB,KAAkC,SAA3BvC,KAAKC,MAAM0F,KAAKjF,QAAqB,kBAACixB,GAAD,CAAShxB,MAAM,UAAUshB,KAAK,QAAQC,aAAW,OAAOzD,QAAS,WAC9I,EAAKxe,MAAMkqB,YAAYxkB,KAAKxC,EAAOlC,KAAM,EAAKhB,MAAMgB,KAAK+N,YAEzD,kBAAC,KAAD,CAAUjP,MAAO,CAACY,MAAO,WAG7B,kBAAC,GAAD,CAAWsF,GAAI,uBAAuB9C,EAAOZ,IAAK5B,MAAM,UAAUshB,KAAK,QAAQC,aAAW,QACtF,kBAAC,KAAD,CAAcniB,MAAO,CAACY,MAAO,cAEjC,kBAAC,GAAD,CAAYsd,MAAM,QAAQL,QAAQ,EAAME,OAAO,EAAMQ,QAAS,CAC1D,CAAC1L,KAAM5S,KAAKC,MAAMuf,UAAU5J,iBAAkBzU,OAAQ,WAClD,EAAKlB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,0BAGhBqI,KAAM,uBAAuBpa,EAAOZ,QAG/C,yBAAKzC,UAAU,6BAA6BC,MAAO,CAAC2xB,MAAO,IACvD,kBAAC,GAAD,CACItuB,SAAUD,EAAOC,SACjB0oB,QAAS3oB,IAAWA,EAAOrB,OAC3BV,KAAK,SACLyqB,SAAU1oB,EAAOlC,KAAKb,KAAKmB,MAC3B4D,OAAQhC,EAAOgC,OACfjC,OAAQC,EAAOlC,KAAKsB,IACpB6X,GAAIjX,EAAOlC,KAAKb,KAAKmB,MACrBiD,SAAUrB,EAAOZ,IACjBY,OAAQA,MAIfA,GAAUA,EAAO+O,YAAc,oCAC5B,yBAAKpS,UAAU,6BAA6BC,MAAO,CAAC2xB,MAAO,KAC3D,yBAAK5xB,UAAU,6BAA6BC,MAAO,CAAC2xB,MAAO,IACvD,yBAAK5xB,UAAU,cACX,kBAAC,KAAD,CAAYC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAE/E,2BAAI9hB,KAAKC,MAAMuf,UAAU9I,wB,GArGhC/W,IAAMkrB,eAArBI,GACK9I,YAAcziB,EA6HVogB,0BAASxD,GAATwD,CAAoBC,aAhBX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZoD,QAASnD,EAAMmD,QACfsB,KAAMzE,EAAMyE,SAIpB,SAA4ByF,GACxB,MAAO,CACHyU,eAAgBG,YAAmBH,EAAgBzU,GACnD0f,aAAc9K,YAAmB8K,EAAc1f,GAC/C+e,YAAanK,YAAmBmK,EAAa/e,MAIlB2U,CAA6CE,aAAWgL,MChLrF4G,I,mNAGF3wB,MAAQ,CACJW,YAAY,EACZiwB,QAAS,GACTC,UAAU,G,kEAGO,IAAD,OAChB/xB,KAAK0gB,QAAQC,cAAa,GAE1BvR,MAAM,GAAD,OAAI7B,GAAJ,wBAAkC,CACnC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,aAGhDjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC+nB,GACH,EAAK9T,SAAS,CAACnc,YAAY,EAAOiwB,iB,6CAKtC9xB,KAAK0gB,QAAQC,cAAa,K,0BAG1BqR,GAAW,IAAD,OACVhyB,KAAKge,SAAS,CAACnc,YAAY,IAC3BuN,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjBkiB,eAGPjoB,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACyC,GACCA,EAAOzJ,QACP,EAAKib,SAAS,CAACnc,YAAY,IAC3B,EAAK5B,MAAM4e,QAAQnM,KAAK,W,+BAK1B,IAAD,OACL,OACI,oCACI,yBAAK5S,UAAU,gBACX,wBAAIA,UAAU,iBAAd,MAAkCE,KAAKC,MAAMgB,KAAKb,KAAKmB,OACvD,uBAAGzB,UAAU,oBAAb,2BAEA,yBAAKA,UAAU,mBACVE,KAAKkB,MAAMW,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC/CY,MAAO,OACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,uBAGPpd,KAAKkB,MAAMW,YAAc,yBAAK/B,UAAU,OACrCE,KAAKkB,MAAM4wB,QAAQzvB,KAAI,SAAA4vB,GACpB,OAAO,yBAAKnyB,UAAU,8DAClB,yBAAKA,UAAU,kBACX,uBAAGA,UAAU,wBAAwBmyB,EAAOzvB,OAC5C,uBAAG1C,UAAU,wBAAyC,IAAjBmyB,EAAOC,MAAc,OAASD,EAAOC,OAE1E,4BAAQpyB,UAAU,cAAc2e,QAAS,WACrC,EAAK0T,IAAIF,EAAO1vB,MACjBxC,MAAO,CAAC2hB,MAAO,MAAOG,OAAQ,gBAFjC,oB,GA5ElBliB,IAAMkB,YAAtBgxB,GACK1P,YAAcziB,EAyFzB,IAMeqgB,gBANS,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,QAIL8e,CAAyBE,aAAW4R,KChG7CA,I,mNAGF3wB,MAAQ,CACJW,YAAY,EACZiwB,QAAS,GACTC,UAAU,G,kEAIV/xB,KAAK0gB,QAAQC,cAAa,K,6CAI1B3gB,KAAK0gB,QAAQC,cAAa,K,+BAGpB,IAAD,OACL,OACI,oCACI,yBAAK7gB,UAAU,YACX,uBAAGA,UAAU,aAAb,YAEA,uBAAGA,UAAU,gBAAb,mBAA4C,0BAAMC,MAAO,CAACY,MAAO,YAAa,IAAImE,KAAK9E,KAAKC,MAAM4F,IAAIC,MAAM4qB,mBAE5G,4BAAQ5wB,UAAU,cAAc2e,QAAS,WACjB,EAAKxe,MAAjBylB,QACAnQ,OAAO,WAAY,CAAEpO,KAAM,MACnCc,OAAOgI,SAASmB,UACjBrR,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAJ5C,gB,GAzBEjgB,IAAMkB,YAAtBgxB,GACK1P,YAAcziB,EAmCzB,IAMeqgB,gBANS,SAAA7e,GACpB,MAAO,CACH2E,IAAK3E,EAAM2E,OAIJka,CAAyBE,aAAWkG,aAAY0L,MC/CzDO,G,4MACFlxB,MAAQ,CACJukB,MAAOyL,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQ1L,O,kEAItEzlB,KAAKkB,MAAMukB,OACUzlB,KAAKC,MAAjBylB,QACAC,IAAI,WAAY3lB,KAAKkB,MAAMukB,MAAO,CAAEte,KAAM,MAElDc,OAAOgI,SAASuV,QAAQ,MAExBvd,OAAOgI,SAASuV,QAAQ,O,+BAK5B,OAAO,kBAAC1C,GAAA,EAAD,CAAkB/iB,MAAO,CAC5BY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,0B,GAvBQzd,IAAMkB,WA6BhBslB,gBAAYlG,aAAWmS,KC2CvBC,GAlEA,CACX,CACIlrB,KAAM,SACNmrB,OAAO,EACPlxB,KAAM,OACNoB,MAAO,qEACP0qB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI/lB,KAAM,YACNmrB,OAAO,EACPlxB,KAAM,OACNoB,MAAO,qEACP0qB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI/lB,KAAM,eACNmrB,OAAO,EACPlxB,KAAM,OACNoB,MAAO,aACP0qB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI/lB,KAAM,IACNmrB,OAAO,EACPlxB,KAAM,OACNoB,MAAO,OACP0qB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI/lB,KAAM,aACNmrB,OAAO,EACPlxB,KAAM,OACNoB,MAAO,YACP0qB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI/lB,KAAM,aACNmrB,OAAO,EACPlxB,KAAM,OACNoB,MAAO,GACP0qB,UAAW,kBAAM,kBAAC,GAAD,CAAQ1O,IAAKvW,OAAOgI,SAASC,aAElD,CACI/I,KAAM,aACNmrB,OAAO,EACPlxB,KAAM,OACNoB,MAAO,GACP0qB,UAAW,kBAAM,kBAAC,GAAD,CAAM1O,IAAKvW,OAAOgI,SAASC,aAEhD,CACI/I,KAAM,WACNmrB,OAAO,EACPlxB,KAAM,OACNoB,MAAO,GACP0qB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI/lB,KAAM,OACNmrB,OAAO,EACPlxB,KAAM,MACNoB,MAAO,GACP0qB,UAAW,kBAAM,kBAAC,GAAD,SC3DVqF,G,uKANP,OACI,Q,GAHU5yB,IAAMkB,W,wCCoBtB2xB,GAAiBrS,cAfA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACF1f,MAAO,UACPmhB,QAAS,OACT,YAAa,CACTnhB,MAAO,UACP8xB,OAAQ,QAEZ,UAAW,CACPtT,gBAAiB,gBAGzBuT,QAAS,MAGUvS,CAA2BwS,MAE5CC,G,uKACQ,IAAD,OACL,OACI,kBAACrU,GAAA,EAAD,CAAQze,UAAS,YAAe2e,QAAS,WAAO,EAAKxe,MAAMwe,QAAQ,EAAKxe,MAAMgB,KAAKsB,OAC/E,kBAAC,EAAD,CACArC,SAAQF,KAAKC,MAAMgB,KAAKf,QAASF,KAAKC,MAAMgB,KAAKf,OACjDH,MAAO,CAACgf,SAAU,GAAIE,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMgB,KAAKN,MAAzB,MAChFP,KAAMJ,KAAKC,MAAMgB,KAAKb,KAAKmB,MAAM6d,OAAO,GAAKpf,KAAKC,MAAMgB,KAAKb,KAAKqB,KAAK2d,OAAO,KAE9E,yBAAKrf,MAAO,CAAC+hB,QAAS,OAAQ+Q,SAAU,OAAQnR,MAAO,sBACnD,uBAAG5hB,UAAU,aAAb,UAA6BE,KAAKC,MAAMgB,KAAKb,KAAKmB,MAAlD,YAA2DvB,KAAKC,MAAMgB,KAAKb,KAAKqB,QAC9EzB,KAAKC,MAAMgB,KAAKR,QAAU,uBAAGX,UAAU,gBAAgByc,GAAWvc,KAAKC,MAAMgB,KAAK+D,WACnFhF,KAAKC,MAAMgB,KAAKR,QAAU,uBAAGX,UAAU,eAAeC,MAAO,CAACY,MAAO,YAA3C,WAGV,WAApBX,KAAKC,MAAMmB,MAAqB,kBAACoxB,GAAD,CAAgBE,QAAS1yB,KAAKC,MAAM0pB,gB,GAf9DhqB,IAAMkB,WA2Bdkf,gBANS,SAAA7e,GACpB,MAAO,CACHqe,OAAQre,EAAMD,QAIP8e,CAAyBE,aAAW2S,KCtC/CE,IAAa,EAEXC,G,4MACF7xB,MAAQ,CACJ8xB,EAAG,GACHC,aAAc,I,kEAIVjzB,KAAKC,MAAM+C,MAAMqC,QAAQvD,QACzB9B,KAAKC,MAAM6qB,aAAaxC,WAAWtoB,KAAKC,MAAMgB,KAAK+N,Y,mEAQlD3E,GAAI,IAAD,OACJ2oB,EAAI3oB,EAAEqZ,OAAOsC,MACjBhmB,KAAKge,SAAS,CAACgV,MAEZF,IACCniB,aAAamiB,IAEZE,EAAE5wB,QAAU,KAAKyqB,KAAKmG,KACvBF,GAAajiB,YAAW,WACpBzB,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAY,EAAKvP,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjBkjB,EAAG,EAAK9xB,MAAM8xB,MAGrBjpB,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAkpB,GACF,EAAKjV,SAAS,CAACiV,sBAEpB,MAGHD,EAAE5wB,QACFpC,KAAKge,SAAS,CAACiV,aAAc,O,+BAG3B,IAAD,OACL,OAAO,oCACH,2BAAO7xB,KAAK,OAAO4kB,MAAOhmB,KAAKkB,MAAM8xB,EAAG/M,SAAU,SAAC5b,GAAO,EAAK6oB,SAAS7oB,IAAKvK,UAAU,uBAAuBomB,YAAalmB,KAAKC,MAAMuf,UAAUtK,UAE9IlV,KAAKkB,MAAM+xB,aAAa7wB,SAAWpC,KAAKkB,MAAM8xB,EAAE5wB,QAAU,kBAAC,aAAD,CACxD+e,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKC,MAAM+C,MAAMqC,QAAQxD,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CACzDY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAEZpd,KAAKC,MAAM+C,MAAMqC,QAAQrC,MAAMX,KAAI,SAACpB,EAAM2E,GACvC,OACI,kBAAC,GAAD,CAAU4Y,IAAK5Y,EAAOxE,KAAM,EAAKnB,MAAMmB,KAAMuoB,SAA8B,WAApB,EAAK1pB,MAAMmB,QAAsB,EAAKnB,MAAMkzB,YAAYtvB,MAAK,SAAAC,GAAC,OAAIA,IAAM7C,EAAKsB,OAAckc,QAAS,SAACxY,GAAQ,EAAKhG,MAAMwe,QAAQxY,IAAMhF,KAAMA,QAGxMjB,KAAKC,MAAM+C,MAAMqC,QAAQrC,MAAMZ,SAAWpC,KAAKC,MAAM+C,MAAMqC,QAAQxD,YAAe,yBAAK/B,UAAU,cAChG,kBAAC,KAAD,CAAWC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAE9E,2BAAI9hB,KAAKC,MAAMuf,UAAUvK,4BAI7BjV,KAAKkB,MAAM+xB,aAAa7wB,UAAYpC,KAAKkB,MAAM8xB,EAAE5wB,SAAW,kBAAC,aAAD,CAC5D+e,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAUPvhB,KAAKkB,MAAM+xB,aAAa5wB,KAAI,SAACpB,EAAM2E,GAChC,OACI,kBAAC,GAAD,CAAU4Y,IAAK5Y,EAAOxE,KAAM,EAAKnB,MAAMmB,KAAMuoB,SAA8B,WAApB,EAAK1pB,MAAMmB,QAAsB,EAAKnB,MAAMkzB,YAAYtvB,MAAK,SAAAC,GAAC,OAAIA,IAAM7C,EAAKsB,OAAckc,QAAS,SAACxY,GAAQ,EAAKhG,MAAMwe,QAAQxY,IAAMhF,KAAMA,QAGxMjB,KAAKkB,MAAM+xB,aAAa7wB,QAAW,yBAAKtC,UAAU,cACjD,kBAAC,KAAD,CAAWC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAE9E,2BAAI9hB,KAAKC,MAAMuf,UAAU/I,wB,GAzGtB9W,IAAMkB,WA6Hdif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAW8S,MC1HrFK,GAA0B,CAC5BnD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,qCAI1BiD,GAA0B,CAC5BpD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxBuU,UAAwB,QACxBxN,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAkB1BwI,GAAiBrS,cAdA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACF1f,MAAO,UACP,YAAa,CACTA,MAAO,UACP8xB,OAAQ,QAEZ,UAAW,CACPtT,gBAAiB,gBAGzBuT,QAAS,MAGUvS,CAA2BwS,MAE5Ca,G,4MACFtyB,MAAQ,CACJsB,MAAO,GACPC,WAAW,EACXgxB,KAAM,SACNN,YAAa,GACbpwB,OAAO,EACP2N,OAAQ,GACR7O,YAAY,G,uDAGPwI,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,GAAI7O,YAAY,IACrDwI,EAAEyU,iBAEF1P,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjBtN,MAAOxC,KAAKkB,MAAMsB,MAClBC,UAAWzC,KAAKkB,MAAMuB,UACtBb,KAAM5B,KAAKC,MAAMgB,KAAKK,SACtB6xB,YAAanzB,KAAKkB,MAAMiyB,gBAG/BppB,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACzH,GACAA,EAAKS,MACJ,EAAKib,SAAS,CAACjb,OAAO,EAAM2N,OAAQpO,EAAKoO,OAAQ+iB,KAAM,SAAU5xB,YAAY,KAE7E,EAAK5B,MAAM2iB,aAAaN,SAAShgB,GACjCiI,GAAiBgH,WAAW,CAACjP,OAAMV,KAAM,EAAK3B,MAAMgB,KAAKK,WAEtD,EAAKrB,MAAM0F,KAAK1E,MACf,EAAKhB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,KAEZ/J,GAAMC,SAAS,CACXhK,KzD9FO,kByD+FPC,QAASiB,EAAKC,OAGlB,EAAKtC,MAAM4e,QAAQnM,KAAnB,iBAAkCpQ,EAAKC,Y,+BAM7C,IAAD,OACL,OAAGvC,KAAKkB,MAAMW,WACH,kBAAC,KAAD,CACH0uB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOszB,GACP7C,aAAa,eAEb,kBAAC1N,GAAA,EAAD,CAAkB/iB,MAAO,CACrBY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,uBAKV,kBAAC,KAAD,CACHmT,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAA2B,WAApBC,KAAKkB,MAAMuyB,KAAoBL,GAA0BC,GAChE7C,aAAa,eAEQ,WAApBxwB,KAAKkB,MAAMuyB,MAAqB,wBAAI3zB,UAAU,eAAeE,KAAKC,MAAMuf,UAAU3I,UAC9D,WAApB7W,KAAKkB,MAAMuyB,MAAqB,wBAAI3zB,UAAU,eAAeE,KAAKC,MAAMuf,UAAUvI,cAEnF,0BAAMlX,MAAO,CAAC+hB,QAAS,YAAa8D,SAAU,SAACvb,GAAO,EAAKub,SAASvb,KAC3C,WAApBrK,KAAKkB,MAAMuyB,MAAqB,oCAC7B,2BACIzN,MAAOhmB,KAAKkB,MAAMsB,MAClByjB,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACxb,MAAO6H,EAAEqZ,OAAOsC,SACjDlmB,UAAU,cACVsB,KAAK,OACLrB,MAAO,CAAC0wB,aAAc,IACtBvK,YAAalmB,KAAKC,MAAMuf,UAAUhd,MAClCmxB,UAAW,KAEd3zB,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,UAAhBA,EAAMlV,UAAsB,0BAAMhR,UAAU,qBACxEE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,UAAhBA,EAAMlV,SAAmBC,MAGnF,kBAAC6iB,GAAA,EAAD,CACIC,QACI,kBAAC,GAAD,CACInB,QAAS1yB,KAAKkB,MAAMuB,UACpBwjB,SAAU,WAAO,EAAKjI,SAAS,CAACvb,WAAY,EAAKvB,MAAMuB,eAG/D1C,MAAO,CAACY,MAAO,WACf+M,MAAO1N,KAAKC,MAAMuf,UAAUzI,gBAG9B/W,KAAKkB,MAAMsB,MAAMJ,QAAU,4BAAQtC,UAAU,cAAc2e,QAAS,WAAO,EAAKxe,MAAM8L,SAAUhM,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,QAClKrU,KAAKkB,MAAMsB,MAAMJ,QAAU,4BAAQtC,UAAU,cAAc2e,QAAS,WAAO,EAAKT,SAAS,CAACyV,KAAM,YAAa1zB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUjL,OAGlK,WAApBvU,KAAKkB,MAAMuyB,MAAqB,oCAC7B,kBAACK,GAAD,CAASrV,QAAS,SAACxY,GACX,EAAK/E,MAAMiyB,YAAYtvB,MAAK,SAAAC,GAAC,OAAIA,IAAMmC,KAGvC,EAAK+X,SAAS,CAACmV,YAAY,YAAK,EAAKjyB,MAAMiyB,YAAYzwB,QAAO,SAAAoB,GAAC,OAAIA,IAAMmC,QAFzE,EAAK+X,SAAS,CAACmV,YAAY,CAAEltB,GAAH,mBAAU,EAAK/E,MAAMiyB,iBAGpD/xB,KAAM,SAAU+xB,YAAanzB,KAAKkB,MAAMiyB,cAE3C,4BAAQrzB,UAAU,cAAc2e,QAAS,WAAO,EAAKT,SAAS,CAACyV,KAAM,YAAa1zB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,MACrJ,4BAAQvU,UAAU,cAAcsB,KAAK,SAASrB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUxI,c,GAvH5GrX,IAAMkB,WA2IhBif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZ0E,KAAMzE,EAAMyE,SAIpB,SAA4ByF,GACxB,MAAO,CACHwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWuT,M,kJCvLrFtT,GAAYC,cAhBA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFlB,gBAAiB,UACjBiR,UAAW,iBACX,UAAW,CACPjR,gBAAiB,WAErB,cAAe,CACXxe,MAAO,kBAEX,QAAS,CACLozB,WAAY,iBAKN5T,CAAsBG,MAElC0T,G,sKAEE5kB,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMsf,OAAOvQ,WAE/CY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQlD,KAAKC,MAAMgB,KAAKsB,IACxBkL,KAAM,MAGb1D,MAAK,WACF7D,KAAM+tB,QAAQ,aAAc,CACxBjhB,SAAU9M,KAAM+M,SAASC,kB,+BAI3B,IAAD,OACL,OAAO,oCACC,0BAAMnT,MAAO,CAACgqB,OAAQ,UAAWoG,aAAc,IAAK1R,QAAS,WACtD,EAAKxe,MAAMgB,KAAKf,SACf,EAAKD,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,kBAEX/J,GAAMC,SAAS,CACXhK,K1DiBF,a0DhBEC,QAAS,CACLsC,OAAQ,CAAC,CAACwD,KAAM,EAAKlH,MAAMgB,KAAKf,OAAO+jB,WACvCre,MAAO,QAIpB,kBAAC,EAAD,CACC7F,MAAO,CAAC2hB,MAAO,GAAIzC,OAAQ,GAAIre,SAAU,GAAIqpB,WAAY,OAAQ/K,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMgB,KAAKN,MAAzB,MACjGP,KAAMJ,KAAKC,MAAMgB,KAAKb,KAAKmB,MAAM6d,OAAO,GAAGpf,KAAKC,MAAMgB,KAAKb,KAAKqB,KAAK2d,OAAO,GAC5Elf,SAAQF,KAAKC,MAAMgB,KAAKf,QAASF,KAAKC,MAAMgB,KAAKf,UAGrD,uBAAGJ,UAAU,qBAAqBE,KAAKC,MAAMgB,KAAKb,KAAKmB,MAAvD,IAA+DvB,KAAKC,MAAMgB,KAAKb,KAAKqB,MACpF,uBAAG3B,UAAU,qBAAqBE,KAAKC,MAAMgB,KAAKU,KAAO3B,KAAKC,MAAMgB,KAAKU,KAAO3B,KAAKC,MAAMuf,UAAUnK,eAErG,oCACI,yBAAKvV,UAAU,YACX,kBAAC,KAAD,CAASC,MAAO,CAAC6e,eAAgB,QAASH,QAAS,SAACpU,GAC7C,iBAAU,EAAKpK,MAAMgB,KAAKsB,OAAU,EAAKtC,MAAM4e,QAAQ5O,SAASC,UAC/D7F,EAAEyU,kBACPhf,UAAU,cAAcsa,GAAE,iBAAYpa,KAAKC,MAAMgB,KAAKsB,MACrD,kBAAC,GAAD,CAAW5B,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,cAC9D,kBAAC,KAAD,CAA+B1e,MAAO,CAACY,MAAO,eAGtD,2BAAIX,KAAKC,MAAMuf,UAAUnc,UAGD,SAA3BrD,KAAKC,MAAM0F,KAAKjF,QAAqB,yBAAKZ,UAAU,YACjD,kBAAC,KAAD,CAASC,MAAO,CAAC6e,eAAgB,QAASH,QAAS,SAACpU,GAChDA,EAAEyU,iBACF,EAAK7e,MAAMkqB,YAAYxkB,KAAK,EAAK1F,MAAMgB,KAAM,EAAKhB,MAAMsf,OAAOvQ,WAChElP,UAAU,cAAcsa,GAAE,iBAAYpa,KAAKC,MAAMgB,KAAKsB,MACrD,kBAAC,GAAD,CAAW5B,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,cAC9D,kBAAC,KAAD,CAAU1e,MAAO,CAACY,MAAO,eAGjC,2BAAIX,KAAKC,MAAMuf,UAAU7Z,OAGK,IAAjC3F,KAAKC,MAAMgB,KAAKuE,cAAsB,yBAAK1F,UAAU,YAClD,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM6qB,aAAajC,YAAY,EAAK5oB,MAAMiD,OAAQ,EAAKjD,MAAMsf,OAAOvQ,YAEzE,kBAAC,KAAD,CAAuBjP,MAAO,CAACY,MAAO,cAE1C,2BAAIX,KAAKC,MAAMuf,UAAUlK,cAGK,IAAjCtV,KAAKC,MAAMgB,KAAKuE,cAAsB,yBAAK1F,UAAU,YAClD,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM6qB,aAAahC,cAAc,EAAK7oB,MAAMiD,OAAQ,EAAKjD,MAAMsf,OAAOvQ,YAE3E,kBAAC,KAAD,CAAmBjP,MAAO,CAACY,MAAO,cAEtC,2BAAIX,KAAKC,MAAMuf,UAAUrK,UAGM,IAAjCnV,KAAKC,MAAMgB,KAAKuE,cAAuD,IAAjCxF,KAAKC,MAAMgB,KAAKuE,eAAuB,yBAAK1F,UAAU,YAC1F,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM6qB,aAAa/B,cAAc,EAAK9oB,MAAMiD,OAAQ,EAAKjD,MAAMsf,OAAOvQ,YAE3E,kBAAC,KAAD,CAAmBjP,MAAO,CAACY,MAAO,cAEtC,2BAAIX,KAAKC,MAAMuf,UAAUpK,UAGK,IAAjCpV,KAAKC,MAAMgB,KAAKuE,cAAsB,yBAAK1F,UAAU,YAClD,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM6qB,aAAa/B,cAAc,EAAK9oB,MAAMiD,OAAQ,EAAKjD,MAAMsf,OAAOvQ,YAE3E,kBAAC,KAAD,CAA2BjP,MAAO,CAACY,MAAO,cAE9C,2BAAIX,KAAKC,MAAMuf,UAAUjK,UAGA,UAA3BvV,KAAKC,MAAMsf,OAAOuF,MAA+C,UAA3B9kB,KAAKC,MAAMsf,OAAOuF,OAAqB,yBAAKhlB,UAAU,YAC1F,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMgB,KAAKsB,SAGrC,kBAAC,KAAD,CAAYxC,MAAO,CAACY,MAAO,cAE/B,qCAGyB,UAA3BX,KAAKC,MAAMsf,OAAOuF,MAA+C,UAA3B9kB,KAAKC,MAAMsf,OAAOuF,OAAqB,yBAAKhlB,UAAU,YAC1F,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,WAAD,OAAa,EAAKjV,MAAMgB,KAAKsB,SAGvC,kBAAC,KAAD,CAASxC,MAAO,CAACY,MAAO,cAE5B,uCAGyB,UAA3BX,KAAKC,MAAMsf,OAAOuF,MAA+C,UAA3B9kB,KAAKC,MAAMsf,OAAOuF,OAAqB,yBAAKhlB,UAAU,YAC1F,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,YAAD,OAAc,EAAKjV,MAAMgB,KAAKsB,SAGxC,kBAAC,KAAD,CAAkBxC,MAAO,CAACY,MAAO,cAErC,yCAGyB,UAA3BX,KAAKC,MAAMsf,OAAOuF,MAA+C,UAA3B9kB,KAAKC,MAAMsf,OAAOuF,OAAqB,yBAAKhlB,UAAU,YAC1F,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,cAAD,OAAgB,EAAKjV,MAAMgB,KAAKsB,SAG1C,kBAAC,KAAD,CAAcxC,MAAO,CAACY,MAAO,cAEjC,2CAGyB,UAA3BX,KAAKC,MAAMsf,OAAOuF,MAA+C,UAA3B9kB,KAAKC,MAAMsf,OAAOuF,OAAqB,yBAAKhlB,UAAU,YAC1F,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,gBAAD,OAAkB,EAAKjV,MAAMgB,KAAKsB,SAG5C,kBAAC,KAAD,CAAaxC,MAAO,CAACY,MAAO,cAEhC,6CAGyB,UAA3BX,KAAKC,MAAMsf,OAAOuF,MAA+C,UAA3B9kB,KAAKC,MAAMsf,OAAOuF,OAAqB,yBAAKhlB,UAAU,YAC1F,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,QAAD,OAAU,EAAKjV,MAAMgB,KAAKsB,SAGpC,kBAAC,KAAD,CAAWxC,MAAO,CAACY,MAAO,cAE9B,oCAGyB,UAA3BX,KAAKC,MAAMsf,OAAOuF,MAA+C,UAA3B9kB,KAAKC,MAAMsf,OAAOuF,OAAqB,yBAAKhlB,UAAU,YAC1F,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKyV,UAEL,kBAAC,KAAD,CAAmBn0B,MAAO,CAACY,MAAO,cAEtC,2C,GAjLAhB,IAAMkB,WAuMfif,0BAASxD,GAATwD,CAAoBC,aAfX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACbuc,OAAQre,EAAMD,KACd0E,KAAMzE,EAAMyE,SAIpB,SAA4ByF,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/C+e,YAAanK,YAAmBmK,EAAa/e,MAIlB2U,CAA6CE,aAAW+T,M,+DCrNrF9T,GAAYC,cAhBA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFlB,gBAAiB,UACjBiR,UAAW,iBACX,UAAW,CACPjR,gBAAiB,WAErB,cAAe,CACXxe,MAAO,kBAEX,QAAS,CACLozB,WAAY,iBAKN5T,CAAsBG,MAElC6T,G,4MACFjzB,MAAQ,CACJojB,UAAW,Q,uDAGL,IAAD,OACL,OAAO,oCACH,2BAAOvkB,MAAO,CAACgqB,OAAQ,WAAYjqB,UAAU,iBACzC,kBAAC,EAAD,CACIC,MAAO,CAAC2hB,MAAO,GAAIzC,OAAQ,GAAIre,SAAU,GAAIqpB,WAAY,OAAQ/K,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMgB,KAAKN,MAAzB,MACjGP,KAAMJ,KAAKC,MAAMgB,KAAKb,KAAKmB,MAAM6d,OAAO,GAAGpf,KAAKC,MAAMgB,KAAKb,KAAKqB,KAAK2d,OAAO,GAC5Elf,SAAQF,KAAKC,MAAMgB,KAAKf,QAASF,KAAKC,MAAMgB,KAAKf,SAErD,kBAAC,KAAD,CAAeJ,UAAU,qBAAqBC,MAAO,CAACY,MAAO,UAC7D,yBAAKb,UAAU,6BACf,2BACIsB,KAAK,OACL6kB,SAAU,SAAC5b,GAAO,EAAKpK,MAAMkkB,YAAYV,aAAapZ,EAAG,EAAKpK,MAAMgB,KAAK+N,WACzE/I,GAAG,eACHlG,MAAO,CAAC+hB,QAAS,QACjB3M,OAAO,0BAIf,uBAAGrV,UAAU,qBAAqBE,KAAKC,MAAMgB,KAAKb,KAAKmB,MAAvD,IAA+DvB,KAAKC,MAAMgB,KAAKb,KAAKqB,MACpF,uBAAG3B,UAAU,qBAAqBE,KAAKC,MAAMgB,KAAKU,KAAO3B,KAAKC,MAAMgB,KAAKU,KAAO3B,KAAKC,MAAMuf,UAAUnK,eAErG,yBAAKvV,UAAU,YACX,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,sBAGX,kBAAC,KAAD,CAAsBnV,MAAO,CAACY,MAAO,cAEzC,2BAAIX,KAAKC,MAAMuf,UAAUvL,WAG7B,yBAAKnU,UAAU,YACX,kBAAC,GAAD,CAAWa,MAAM,UAAUshB,KAAK,QAAQC,aAAW,MAAMzD,QAAS,WAC9D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,sBAGX,kBAAC,KAAD,CAAkBnV,MAAO,CAACY,MAAO,cAErC,2BAAIX,KAAKC,MAAMuf,UAAU1K,gB,GA9CpBnV,IAAMkB,WAkEZif,0BAASxD,GAATwD,CAAoBC,aAdX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/C+Y,YAAanE,YAAmBmE,EAAa/Y,MAIlB2U,CAA6CE,aAAWkU,MCzFrFnE,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,QACxB4R,UAAW,MAIbc,G,kLACmB,IAAD,OACZp0B,KAAKC,MAAM+C,MAAMA,MAAMa,MAAK,SAAA5C,GAAI,OAAIA,EAAKsB,MAAQ,EAAKtC,MAAMiD,WAAWlD,KAAKC,MAAMgB,KAAKsB,MAAQvC,KAAKC,MAAMiD,QAC1GlD,KAAKC,MAAM6qB,aAAazC,QAAQroB,KAAKC,MAAMiD,OAAQlD,KAAKC,MAAMgB,KAAK+N,Y,+BAIjE,IAAD,OACD/N,EAAOjB,KAAKC,MAAM+C,MAAMA,MAAMa,MAAK,SAAA5C,GAAI,OAAIA,EAAKsB,MAAQ,EAAKtC,MAAMiD,UACvE,OAAO,kBAAC,KAAD,CACHqtB,QAAQ,EACRmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,QAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAErCM,GACG,kBAAC,GAAD,CAAWiC,OAAQlD,KAAKC,MAAMiD,OAAQjC,KAAMA,KAG9CA,GAAQjB,KAAKC,MAAMgB,KAAKsB,MAAQvC,KAAKC,MAAMiD,QAAU,kBAAC4f,GAAA,EAAD,CAAkB/iB,MAAO,CAC5EY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAGRpd,KAAKC,MAAMgB,KAAKsB,MAAQvC,KAAKC,MAAMiD,QAChC,kBAAC,GAAD,W,GAlCGvD,IAAMkB,WAqDVkf,oBAbS,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIxC2U,CAA6CE,aAAWmU,KC/EjErB,G,kLAEM/yB,KAAKC,MAAM+C,MAAMsC,UAAUxD,QAC3B9B,KAAKC,MAAM6qB,aAAatC,aAAaxoB,KAAKC,MAAMgB,KAAK+N,Y,mEAQnD,IAAD,OACL,OAAO,kBAAC,aAAD,CACHmS,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKC,MAAM+C,MAAMsC,UAAUzD,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC3DY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAEZpd,KAAKC,MAAM+C,MAAMsC,UAAUtC,MAAMX,KAAI,SAACpB,EAAM2E,GACzC,OACI,kBAAC,GAAD,CAAU4Y,IAAK5Y,EAAO3E,KAAMA,EAAMwd,QAAS,SAACxY,GAAQ,EAAKhG,MAAMwe,QAAQxY,UAG5EjG,KAAKC,MAAM+C,MAAMsC,UAAUtC,MAAMZ,SAAWpC,KAAKC,MAAM+C,MAAMsC,UAAUzD,YAAe,yBAAK/B,UAAU,cACpG,kBAAC,KAAD,CAAWC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAE9E,2BAAI9hB,KAAKC,MAAMuf,UAAUnF,8B,GArClB1a,IAAMkB,WAwDdif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAW8S,MCxDrFA,G,kLAEM/yB,KAAKC,MAAM+C,MAAMuC,QAAQzD,QACzB9B,KAAKC,MAAM6qB,aAAarC,WAAWzoB,KAAKC,MAAMgB,KAAK+N,Y,mEAQjD,IAAD,OACL,OAAO,kBAAC,aAAD,CACHmS,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKC,MAAM+C,MAAMuC,QAAQ1D,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CACzDY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAEZpd,KAAKC,MAAM+C,MAAMuC,QAAQvC,MAAMX,KAAI,SAACpB,EAAM2E,GACvC,OACI,kBAAC,GAAD,CAAU4Y,IAAK5Y,EAAO3E,KAAMA,EAAMwd,QAAS,SAACxY,GAAQ,EAAKhG,MAAMwe,QAAQxY,UAG5EjG,KAAKC,MAAM+C,MAAMuC,QAAQvC,MAAMZ,SAAWpC,KAAKC,MAAM+C,MAAMuC,QAAQ1D,YAAe,yBAAK/B,UAAU,cAChG,kBAAC,KAAD,CAAWC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAE9E,2BAAI9hB,KAAKC,MAAMuf,UAAUlF,8B,GArClB3a,IAAMkB,WAwDdif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAW8S,MCvDrF/C,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1B+I,G,4MACF7xB,MAAQ,CACJojB,UAAW,W,uDAGL,IAAD,OACL,OAAO,kBAAC,KAAD,CACHiM,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAeE,KAAKC,MAAMuf,UAAU1K,UAElD,yBAAKhV,UAAU,iBACX,0BAAMA,UAAoC,YAAzBE,KAAKkB,MAAMojB,UAA0B,SAAW,GAAI7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,cAAetkB,KAAKC,MAAMuf,UAAUna,SACnJ,0BAAMvF,UAAoC,UAAzBE,KAAKkB,MAAMojB,UAAwB,SAAW,GAAI7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,YAAatkB,KAAKC,MAAMuf,UAAUzK,OAC/I,0BAAMjV,UAAoC,WAAzBE,KAAKkB,MAAMojB,UAAyB,SAAW,GAAI7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,aAActkB,KAAKC,MAAMuf,UAAUxK,SAG3H,YAAzBhV,KAAKkB,MAAMojB,WAA2B,kBAACwP,GAAD,CAASrV,QAAS,SAACxY,GACtD,EAAKhG,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAWjP,MAEtB7E,KAAM,WACiB,UAAzBpB,KAAKkB,MAAMojB,WAAyB,kBAACgQ,GAAD,CAAO7V,QAAS,SAACxY,GAClD,EAAKhG,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAWjP,QAGC,WAAzBjG,KAAKkB,MAAMojB,WAA0B,kBAACiQ,GAAD,CAAQ9V,QAAS,SAACxY,GACpD,EAAKhG,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAWjP,a,GArCdtG,IAAMkB,WAyDdif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAW8S,MC5FrF/C,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1BwK,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACHjE,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,eAEb,wBAAI1wB,UAAU,eAAeE,KAAKC,MAAMuf,UAAUtI,UAElD,kBAAC4c,GAAD,CAASrV,QAAS,SAACxY,GACf,EAAKhG,MAAM4e,QAAQnM,KAAnB,iBAAkCzM,Y,GAXvBtG,IAAMkB,WA6BlBif,0BAASxD,GAATwD,CAAoBC,aAZX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACHwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWuU,MCvDrFnB,GAA0B,CAC5BpD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1BwJ,G,4MACFtyB,MAAQ,CACJiyB,YAAa,GACbpwB,OAAO,EACP2N,OAAQ,I,uDAGHrG,GAAI,IAAD,OACRA,EAAEyU,iBAEF1P,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB7J,GAAIjG,KAAKC,MAAMgC,MAAMF,WAAWQ,IAChC4wB,YAAanzB,KAAKkB,MAAMiyB,gBAG/BppB,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,YAAc,IAAZhH,EAAW,EAAXA,MACJ,EAAKib,SAAS,CAACmV,YAAa,KAC5BjtB,aAAM,EAAKjG,MAAMuf,UAAUiV,cAAe,CACtCzhB,SAAU9M,KAAM+M,SAASC,aAE1BnQ,GACCmD,aAAM,EAAKjG,MAAMuf,UAAUkV,sBAAuB,CAC9C1hB,SAAU9M,KAAM+M,SAASC,aAGjC,EAAKjT,MAAM8L,a,+BAIT,IAAD,OACL,OAAO,kBAAC,KAAD,CACHwkB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOszB,GACP7C,aAAa,eAEb,wBAAI1wB,UAAU,eAAeE,KAAKC,MAAMuf,UAAUvI,cAElD,0BAAMlX,MAAO,CAAC+hB,QAAS,YAAa8D,SAAU,SAACvb,GAAO,EAAKub,SAASvb,KAChE,kBAACypB,GAAD,CAASrV,QAAS,SAACxY,GACX,EAAK/E,MAAMiyB,YAAYtvB,MAAK,SAAAC,GAAC,OAAIA,IAAMmC,KAGvC,EAAK+X,SAAS,CAACmV,YAAY,YAAK,EAAKjyB,MAAMiyB,YAAYzwB,QAAO,SAAAoB,GAAC,OAAIA,IAAMmC,QAFzE,EAAK+X,SAAS,CAACmV,YAAY,CAAEltB,GAAH,mBAAU,EAAK/E,MAAMiyB,iBAGpD/xB,KAAM,SAAU+xB,YAAanzB,KAAKkB,MAAMiyB,eAEzCnzB,KAAKkB,MAAMiyB,YAAY/wB,QAAU,4BAAQtC,UAAU,cAAc2e,QAAS,WAAO,EAAKxe,MAAM8L,SAAUhM,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,QACxKrU,KAAKkB,MAAMiyB,YAAY/wB,QAAU,4BAAQtC,UAAU,cAAcsB,KAAK,SAASrB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAU1I,c,GAvD5InX,IAAMkB,WA0EhBif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACHwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWuT,MCnGrFJ,GAA0B,CAC5BnD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxBuU,UAAyB,QACzBxN,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,qCAkB1BoC,GAAiBrS,cAdA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACF1f,MAAO,UACP,YAAa,CACTA,MAAO,UACP8xB,OAAQ,QAEZ,UAAW,CACPtT,gBAAiB,gBAGzBuT,QAAS,MAGUvS,CAA2BwS,MAE5Ca,G,4MACFtyB,MAAQ,CACJsB,MAAO,EAAKvC,MAAMgC,MAAMF,WAAWS,MACnCC,UAAW,EAAKxC,MAAMgC,MAAMF,WAAWU,UACvCM,OAAO,EACPlB,YAAY,EACZ6O,OAAQ,I,uDAGHrG,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,GAAI7O,YAAY,IACrDwI,EAAEyU,iBAEF1P,MAAM,GAAD,OAAI7B,GAAJ,kBAA4B,CAC7B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB7J,GAAIjG,KAAKC,MAAMgC,MAAMF,WAAWQ,IAChCC,MAAOxC,KAAKkB,MAAMsB,MAClBC,UAAWzC,KAAKkB,MAAMuB,cAG7BsH,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAACzH,GACAA,EAAKS,MACJ,EAAKib,SAAS,CAACjb,OAAO,EAAM2N,OAAQpO,EAAKoO,OAAQ7O,YAAY,IAE7D,EAAK5B,MAAM8L,a,+BAKb,IAAD,OACL,OAAG/L,KAAKkB,MAAMW,WACH,kBAAC,KAAD,CACH0uB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOqzB,GACP5C,aAAa,aAEb,kBAAC1N,GAAA,EAAD,CAAkB/iB,MAAO,CACrBY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,uBAKV,kBAAC,KAAD,CACHmT,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOqzB,GACP5C,aAAa,aAEb,wBAAI1wB,UAAU,eAAeE,KAAKC,MAAMuf,UAAUvJ,WAElD,0BAAMlW,MAAO,CAAC+hB,QAAS,YAAa8D,SAAU,SAACvb,GAAO,EAAKub,SAASvb,KAChE,2BACI2b,MAAOhmB,KAAKkB,MAAMsB,MAClByjB,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACxb,MAAO6H,EAAEqZ,OAAOsC,SACjDlmB,UAAU,cACVsB,KAAK,OACLrB,MAAO,CAAC0wB,aAAc,IACtBvK,YAAalmB,KAAKC,MAAMuf,UAAUhd,MAClCmxB,UAAW,KAEd3zB,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,UAAhBA,EAAMlV,UAAsB,0BAAMhR,UAAU,qBACxEE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,UAAhBA,EAAMlV,SAAmBC,MAGnF,kBAAC6iB,GAAA,EAAD,CACIC,QACI,kBAAC,GAAD,CACInB,QAAS1yB,KAAKkB,MAAMuB,UACpBwjB,SAAU,WAAO,EAAKjI,SAAS,CAACvb,WAAY,EAAKvB,MAAMuB,eAG/D1C,MAAO,CAACY,MAAO,WACf+M,MAAO1N,KAAKC,MAAMuf,UAAUzI,eAG/B/W,KAAKkB,MAAMsB,QAAUxC,KAAKC,MAAMgC,MAAMF,WAAWS,OAASxC,KAAKkB,MAAMuB,YAAczC,KAAKC,MAAMgC,MAAMF,WAAWU,WAAa,4BAAQ3C,UAAU,cAAc2e,QAAS,WAClK,EAAKxe,MAAM8L,SACZhM,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,OAEpErU,KAAKkB,MAAMsB,QAAUxC,KAAKC,MAAMgC,MAAMF,WAAWS,OAASxC,KAAKkB,MAAMuB,YAAczC,KAAKC,MAAMgC,MAAMF,WAAWU,YAAc,4BAAQ3C,UAAU,cAAcsB,KAAK,SAASrB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUlL,Y,GA5FvO3U,IAAMkB,WA+GhBif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACHwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWuT,MC/JrFJ,GAA0B,CAC5BnD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxBC,SAAwB,QACxB8G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxB+Q,SAAwB,SAI1B8B,G,yKACU,IAAD,OACPvlB,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB7J,GAAIjG,KAAKC,MAAMgC,MAAMF,WAAWQ,QAGvCwH,MAAK,WACF,EAAK9J,MAAM8L,a,+BAIT,IAAD,OACL,OAAO,kBAAC,KAAD,CACHwkB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOqzB,GACP5C,aAAa,eAEb,wBAAI1wB,UAAU,cAAcC,MAAO,CAAC2hB,MAAO,SAAU1hB,KAAKC,MAAMuf,UAAU3J,UAE1E,2BAAI7V,KAAKC,MAAMuf,UAAU3F,kBAEzB,4BAAQ/Z,UAAU,cAAc2e,QAAS,WAAO,EAAKxe,MAAM8L,SAAUhM,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,MACxI,4BAAQvU,UAAU,cAAc2e,QAAS,WAAO,EAAKmH,YAAa7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAU1J,a,GA9BxHnW,IAAMkB,WA0ChBif,sBAASxD,GAATwD,CAAoBC,aAPX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,SAIc8d,CAAyBE,aAAW0U,MClEjEtB,GAA0B,CAC5BpD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1BwJ,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACHjD,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOszB,GACP7C,aAAa,oBAEb,wBAAI1wB,UAAU,eAAeE,KAAKC,MAAMuf,UAAU5I,SAElD,kBAACkd,GAAD,CAASrV,QAAS,SAACxY,GACf,EAAKhG,MAAM4e,QAAQnM,KAAnB,iBAAkCzM,Y,GAXzBtG,IAAMkB,WA8BhBif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACHwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWuT,M,+DCfrF7B,GAAUxR,cA/BM,SAAAC,GAAK,MAAK,CAC5BC,KAAM,CACFlB,gBAAiB,UACjBxe,MAAO,OACPqqB,OAAQ,EACRtJ,MAAO,GACPzC,OAAQ,GACRmR,UAAW,iBACXvO,OAAQ,QACR,UAAW,CACP1C,gBAAiB,UACjBiR,UAAW,YAoBPjQ,CAA0BG,MACpCsU,GAAYzU,cAjBM,SAAAC,GAAK,MAAK,CAC9BC,KAAM,CACFlB,gBAAiB,UACjBxe,MAAO,OACPqqB,OAAQ,EACRtJ,MAAO,GACPzC,OAAQ,GACRmR,UAAW,iBACXvO,OAAQ,QACR,UAAW,CACP1C,gBAAiB,UACjBiR,UAAW,YAMLjQ,CAA4BG,MAcxCJ,GAAYC,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFlB,gBAAiB,UACjBxe,MAAO,UACPqqB,OAAQ,EACRnJ,OAAQ,kBACR,UAAW,CACP1C,gBAAiB,eAKXgB,CAAsBG,MAElC0P,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1B6K,GAA0B,CAC5B5E,QAAS,CACLjd,SAAU,QACV0O,MAAO,cACPzC,OAAQ,cACR7B,IAAK,GACLD,KAAM,QACNW,MAAO,GACPkN,OAAQ,GAEZkF,QAAU,CACNuC,OAAQ,OACR1T,SAAwB,QACxBE,OAAQ,cACRkR,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,SACxBhX,SAAU,UAIZ8hB,GAAoC,CACtC7E,QAAS,CACLjd,SAAU,QACV0O,MAAO,OACPzC,OAAQ,QACR7B,IAAK,EACLD,KAAM,EACN6N,OAAQ,GAEZkF,QAAU,CACNuC,OAAQ,OACR1T,SAAwB,OACxBE,OAAQ,QACRkR,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,SACxBhX,SAAU,QACV+hB,WAAY,SACZC,aAAc,SACdC,aAAc,WAIhBvoB,G,kLAEE1M,KAAKmK,MAAM0mB,UAAY7wB,KAAKC,MAAMsJ,OACV,UAArBvJ,KAAKC,MAAMmE,QACVpE,KAAKkK,MAAM2mB,UAAY7wB,KAAKC,MAAMsJ,U,+BAGhC,IAAD,OACL,OAAO,oCACH,2BAAO4X,IAAK,SAAAA,GAAQ,EAAKhX,MAAQgX,GAAMphB,MAAO,CAAC+hB,QAAS,QAASgP,UAAQ,EAACC,UAAQ,IAC5D,UAArB/wB,KAAKC,MAAMmE,OAAqB,2BAAOtE,UAAU,cAAcqhB,IAAK,SAAAA,GAAQ,EAAKjX,MAAQiX,GAAM2P,UAAQ,EAAChuB,OAAK,S,GAVhGnD,IAAMkrB,eAe1B2J,G,4MACFtzB,MAAQ,CACJg0B,YAAY,G,uDAEN,IAAD,OACL,OAAO,kBAAC,KAAD,CACH3E,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WACkB,cAA3B,EAAKzzB,MAAM0F,KAAKjF,QAAqD,aAA3B,EAAKT,MAAM0F,KAAKjF,QACzD,EAAKT,MAAMkqB,YAAYlB,SAG/BlpB,MAAkC,WAA3BC,KAAKC,MAAM0F,KAAKjF,OAAsBV,KAAKkB,MAAMg0B,WAAaJ,GAAoCD,GAA0B7E,GACnIQ,aAAa,OACb2E,iBAAiB,cAEhBn1B,KAAKC,MAAM0F,KAAK9C,cAAgB,kBAAC,GAAD,CAAauB,MAAOpE,KAAKC,MAAM0F,KAAKvB,MAAOoa,IAAKxe,KAAKC,MAAM0F,KAAK9C,aAAaoD,GAAGjG,KAAKC,MAAM0F,KAAKvB,MAAOmF,OAAQvJ,KAAKC,MAAM0F,KAAK9C,eACpI,UAA3B7C,KAAKC,MAAM0F,KAAKjF,QAAsB,qCACN,cAA3BV,KAAKC,MAAM0F,KAAKjF,QAAqD,SAA3BV,KAAKC,MAAM0F,KAAKjF,QAAgD,aAA3BV,KAAKC,MAAM0F,KAAKjF,SAA0B,wBAAIX,MAAO,CAAC2hB,MAAO,QAAS5hB,UAAU,eAAeE,KAAKC,MAAMuf,UAAUnJ,gBACzK,aAA3BrW,KAAKC,MAAM0F,KAAKjF,QAAyB,wBAAIX,MAAO,CAAC2hB,MAAO,QAAS5hB,UAAU,eAAeE,KAAKC,MAAMuf,UAAUlJ,eAEzF,UAA1BtW,KAAKC,MAAM0F,KAAKvB,OAAqB,oCAClC,yBAAKtE,UAAsC,SAA3BE,KAAKC,MAAM0F,KAAKjF,QAAgD,aAA3BV,KAAKC,MAAM0F,KAAKjF,QAAoD,WAA3BV,KAAKC,MAAM0F,KAAKjF,OAAsB,eAAiB,IACjJ,kBAAC,EAAD,CACIX,MAAO,CAAC2hB,MAAO,GAAIzC,OAAQ,GAAIre,SAAU,GAAIqpB,WAAY,OAAQ/K,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAM0F,KAAK1E,KAAKN,MAA9B,KAAwCqqB,OAAQ,GACjJ5qB,KAAMJ,KAAKC,MAAM0F,KAAK1E,KAAKb,KAAKmB,MAAM6d,OAAO,GAAGpf,KAAKC,MAAM0F,KAAK1E,KAAKb,KAAKqB,KAAK2d,OAAO,GACtFlf,SAAQF,KAAKC,MAAM0F,KAAK1E,KAAKf,QAASF,KAAKC,MAAM0F,KAAK1E,KAAKf,UAInE,uBAAGJ,UAAU,qBAAqBE,KAAKC,MAAM0F,KAAK1E,KAAKb,KAAKmB,MAA5D,IAAoEvB,KAAKC,MAAM0F,KAAK1E,KAAKb,KAAKqB,MAC9F,uBAAG3B,UAAU,qBAAqBE,KAAKC,MAAM0F,KAAK1E,KAAKU,KAAO3B,KAAKC,MAAM0F,KAAK1E,KAAKU,KAAO3B,KAAKC,MAAMuf,UAAUnK,gBAGxF,UAA1BrV,KAAKC,MAAM0F,KAAKvB,OAAqB,oCAClC,yBAAKrE,MAAO,CAACkf,OAAQjf,KAAKkB,MAAMg0B,WAAa,oBAAsB,IAAKxT,MAAO,WAGvD,SAA3B1hB,KAAKC,MAAM0F,KAAKjF,QAAgD,aAA3BV,KAAKC,MAAM0F,KAAKjF,QAAyB,yBAAKX,MAAO,CAAC2hB,MAAO,OAAQ2O,UAAW,SAAUzQ,UAAW,GAAI6Q,aAAc,KAC7H,WAA3BzwB,KAAKC,MAAM0F,KAAKjF,QAAuB,oCACpC,kBAAC,GAAD,CAAWZ,UAAS,uBAAkBE,KAAKC,MAAMmE,MAAMH,MAAQ,GAAK,UAAYwa,QAAS,WAAOlO,OAC5F,kBAAC,KAAD,CAAYxQ,MAAO,CAACY,MAAOX,KAAKC,MAAMmE,MAAMH,MAAQ,UAAY,WAEpE,kBAAC,GAAD,CAAWnE,UAAS,uBAAkBE,KAAKC,MAAMmE,MAAMF,QAAU,GAAK,UAAYua,QAAS,WAAOlO,OAC9F,kBAAC,KAAD,CAAcxQ,MAAO,CAACY,MAAOX,KAAKC,MAAMmE,MAAMF,QAAU,UAAY,WAExE,kBAAC,GAAD,CAAWpE,UAAS,uBAAkBE,KAAKC,MAAMmE,MAAMD,SAAW,SAAW,IAAMsa,QAAS,WAAOlO,OAC/F,kBAAC,KAAD,CAAsBxQ,MAAO,CAACY,MAAOX,KAAKC,MAAMmE,MAAMD,SAAW,OAAS,cAE9E,kBAAC,GAAD,CAAWrE,UAAS,uBAAkBE,KAAKkB,MAAMg0B,WAAa,SAAW,IAAMzW,QAAS,WAAO,EAAKT,SAAS,CAACkX,YAAa,EAAKh0B,MAAMg0B,gBAChIl1B,KAAKkB,MAAMg0B,YAAc,kBAAC,KAAD,CAAgBn1B,MAAO,CAACY,MAAO,aACzDX,KAAKkB,MAAMg0B,YAAc,kBAAC,KAAD,CAAoBn1B,MAAO,CAACY,MAAO,YAIzC,aAA3BX,KAAKC,MAAM0F,KAAKjF,QAAyB,kBAAC,GAAD,CAASC,MAAM,UAAUshB,KAAK,QAAQC,aAAW,OAAOzD,QAAS,WACvG,EAAKxe,MAAMkqB,YAAYhV,OAAO,EAAKlV,MAAMgB,KAAK+N,YAE9C,kBAAC,KAAD,CAAUjP,MAAO,CAACY,MAAO,WAG7B,kBAACi0B,GAAD,CAAWj0B,MAAM,UAAUshB,KAAK,QAAQC,aAAW,OAAOzD,QAAS,WAC/D,EAAKxe,MAAMkqB,YAAYje,KAAK,EAAKjM,MAAM0F,KAAK1E,KAAM,EAAKhB,MAAMgB,KAAK+N,YAElE,kBAAC,KAAD,CAAajP,MAAO,CAACY,MAAO,YAIR,SAA3BX,KAAKC,MAAM0F,KAAKjF,QAAqB,yBAAKX,MAAO,CAAC2hB,MAAO,OAAQ2O,UAAW,SAAUzQ,UAAW,GAAI6Q,aAAc,GAAI9vB,MAAO,UAAWC,SAAU,KAC/IZ,KAAKC,MAAMuf,UAAU1F,UADY,IACD,6BAAS,uBAAG/Z,MAAO,CAACY,MAAO,UAAWopB,OAAQ,WAAYtL,QAAS,WAAO,EAAKxe,MAAMkqB,YAAYlB,UAAWjpB,KAAKC,MAAMuf,UAAUzT,QAG1I,aAA3B/L,KAAKC,MAAM0F,KAAKjF,QAAyB,yBAAKX,MAAO,CAAC2hB,MAAO,OAAQ2O,UAAW,SAAUzQ,UAAW,GAAI6Q,aAAc,GAAI9vB,MAAO,UAAWC,SAAU,KACnJZ,KAAKC,MAAM0F,KAAK1E,KAAKb,KAAKmB,MADW,IACHvB,KAAKC,MAAMuf,UAAUzF,iBADlB,IACoC,6BAAS,uBAAGha,MAAO,CAACY,MAAO,UAAWopB,OAAQ,WAAYtL,QAAS,WAAO,EAAKxe,MAAMkqB,YAAYlB,UAAWjpB,KAAKC,MAAMuf,UAAUzT,SAGvL,sBAA3B/L,KAAKC,MAAM0F,KAAKjF,QAAkC,oCAC9CV,KAAKC,MAAMkqB,YAAYlB,QACxB,kBAAC,KAAD,CAAU7O,GAAG,cAEW,UAA3Bpa,KAAKC,MAAM0F,KAAKjF,QAAsB,oCAEnC,kBAAC,KAAD,CAAkBX,MAAO,CAACY,MAAO,UAAWC,SAAU,MACtD,wBAAId,UAAU,cAAcC,MAAO,CAAC2hB,MAAO,SAAU1hB,KAAKC,MAAMuf,UAAUzc,OAC1E,uBAAGjD,UAAU,aAAaC,MAAO,CAAC2hB,MAAO,OAAQ2O,UAAW,WAAYrwB,KAAKC,MAAMuf,UAAU/F,wB,GApFlF9Z,IAAMkB,WAwGlBif,0BAASxD,GAATwD,CAAoBC,aAdX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZ0E,KAAMzE,EAAMyE,KACZvB,MAAOlD,EAAMkD,UAIrB,SAA4BgH,GACxB,MAAO,CACH+e,YAAanK,YAAmBmK,EAAa/e,MAIlB2U,CAA6CE,aAAWuU,M,0CC3QrFxE,I,OAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBoM,QAAwB,IACxBlE,YAAwB,OACxBzH,UAAwB,wBACxB8E,WAAwB,sBACxBsP,OAAwB,OACxB/Q,MAAO,OACPzC,OAAQ,WA0CDmW,G,4MApCXl0B,MAAQ,CACJ0E,MAAO,EAAK3F,MAAM2F,O,uDAGZ,IAAD,OACL,OAAO,kBAAC,KAAD,CACH2qB,QAAQ,EACRmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,UAEb,yBAAK1wB,UAAU,eAAe2e,QAAS,WACnC,EAAKxe,MAAM8L,UAEX,kBAAC,KAAD,CAAWhM,MAAO,CAACY,MAAO,OAAQC,SAAU,GAAIy0B,QAAS,OAG5Dr1B,KAAKC,MAAM0D,OAAO3D,KAAKkB,MAAM0E,MAAM,IAAM,yBAAK9F,UAAU,cAAc2e,QAAS,WAC5E,EAAKT,SAAS,CAACpY,MAAO,EAAK1E,MAAM0E,MAAM,MAEvC,kBAAC,KAAD,CAAoB7F,MAAO,CAACY,MAAO,OAAQC,SAAU,GAAIy0B,QAAS,OAGtE,yBAAKv1B,UAAU,yBAAyB2e,QAAS,WAAO,EAAKxe,MAAM8L,UAC/D,yBAAKjM,UAAU,eAAeO,IAAKL,KAAKC,MAAM0D,OAAO3D,KAAKkB,MAAM0E,OAAOuB,KAAMhH,IAAI,qBAGpFH,KAAKC,MAAM0D,OAAO3D,KAAKkB,MAAM0E,MAAM,IAAM,yBAAK9F,UAAU,cAAc2e,QAAS,WAC5E,EAAKT,SAAS,CAACpY,MAAO,EAAK1E,MAAM0E,MAAM,MAEvC,kBAAC,KAAD,CAAkB7F,MAAO,CAACY,MAAO,OAAQC,SAAU,GAAIy0B,QAAS,Y,GA/B3D11B,IAAMkB,W,qBCnBrBy0B,G,4MACFp0B,MAAQ,CACJW,YAAY,EACZ8B,OAAQ,I,kEAGS,IAAD,OAChB,GAAG3D,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAAI,CAC3B,IAEI2J,EAFAxO,EAAOpB,KAAKC,MAAM4e,QAAQ5O,SAASC,SAASqU,UAAU,EAAE,GAC5DvkB,KAAKge,SAAS,CAACnc,YAAY,IAGvB+N,EADQ,SAATxO,EACQ,CACH8B,OAAQlD,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAChC7E,KAAM,SAGH,CACH6B,OAAQjD,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAChC7E,KAAM,SAGdgO,MAAM,GAAD,OAAI7B,GAAJ,gBAA2B,SAATnM,EAAkB,SAAW,OAA/C,oBAAyE,CAC1EiO,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAUF,KAExB7F,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAApG,GACEA,EAAOZ,QACPY,EAASA,EAAOtB,KAAI,SAAAyB,GAAC,OAAIA,EAAE2M,QAE3B,EAAKuN,SAAS,CAACra,SAAQ9B,YAAY,W,mEAUzC,IAAD,OACL,OAAO,kBAAC,aAAD,CACHsf,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,2BACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKkB,MAAMW,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC3CY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAEZpd,KAAKkB,MAAMyC,OAAOtB,KAAI,SAACgoB,EAAOzkB,GAC3B,OACI,yBAAK9F,UAAU,oBACX,yBAAK0e,IAAK5Y,EAAOzF,IAAKkqB,EAAMjqB,KAAML,MAAO,CAACgqB,OAAQ,WAAYtL,QAAS,WACnE,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,kBAEX,EAAKjV,MAAMmL,SAAS,CAChBhK,KvEON,auENMC,QAAS,CACLsC,OAAQ,EAAKzC,MAAMyC,OACnBiC,YAGTvF,IAAKgqB,EAAMljB,YAIvBnH,KAAKkB,MAAMyC,OAAOvB,SAAWpC,KAAKkB,MAAMW,YAAe,yBAAK/B,UAAU,cACrE,kBAAC,KAAD,CAAkBC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAErF,2BAAI9hB,KAAKC,MAAMuf,UAAUtF,wB,GArFpBva,IAAMkB,WAkGZif,sBAASxD,GAATwD,CAAoBC,aAPX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,QAIe8e,CAAyBE,aAAWqV,M,qBClGjEA,G,4MACFp0B,MAAQ,CACJW,YAAY,EACZ6B,OAAQ,I,kEAGS,IAAD,OAChB,GAAG1D,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAAI,CAC3B,IAEI2J,EAFAxO,EAAOpB,KAAKC,MAAM4e,QAAQ5O,SAASC,SAASqU,UAAU,EAAE,GAC5DvkB,KAAKge,SAAS,CAACnc,YAAY,IAGvB+N,EADQ,SAATxO,EACQ,CACH8B,OAAQlD,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAChC7E,KAAM,SAGH,CACH6B,OAAQjD,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAChC7E,KAAM,SAGdgO,MAAM,GAAD,OAAI7B,GAAJ,gBAA2B,SAATnM,EAAkB,SAAW,OAA/C,oBAAyE,CAC1EiO,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAUF,KAExB7F,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAArG,GACEA,EAAOX,QACPW,EAASA,EAAOrB,KAAI,SAAAyB,GAAC,OAAIA,EAAE2M,QAE3B,EAAKuN,SAAS,CAACta,SAAQ7B,YAAY,W,mEAUzC,IAAD,OACL,OAAO,kBAAC,aAAD,CACHsf,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,2BACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKkB,MAAMW,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC3CY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAEZpd,KAAKkB,MAAMwC,OAAOrB,KAAI,SAACmoB,EAAO5kB,GAC3B,OACI,kBAAC,GAAD,CACI4Y,IAAK5Y,EACLkiB,SAAU0C,EAAMpqB,KAChBC,IAAKmqB,EAAMrjB,WAIpBnH,KAAKkB,MAAMwC,OAAOtB,SAAWpC,KAAKkB,MAAMW,YAAe,yBAAK/B,UAAU,cACrE,kBAAC,KAAD,CAAgBC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAEnF,2BAAI9hB,KAAKC,MAAMuf,UAAUvF,wB,GA5EpBta,IAAMkB,WAyFZif,sBAASxD,GAATwD,CAAoBC,aAPX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,QAIe8e,CAAyBE,aAAWqV,M,qBCxFjEA,G,4MACFp0B,MAAQ,CACJW,YAAY,EACZ0B,MAAO,I,kEAGU,IAAD,OAChB,GAAGvD,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAAI,CAC3B,IAEI2J,EAFAxO,EAAOpB,KAAKC,MAAM4e,QAAQ5O,SAASC,SAASqU,UAAU,EAAE,GAC5DvkB,KAAKge,SAAS,CAACnc,YAAY,IAGvB+N,EADQ,SAATxO,EACQ,CACH8B,OAAQlD,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAChC7E,KAAM,QAGH,CACH6B,OAAQjD,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAChC7E,KAAM,QAGdgO,MAAM,GAAD,OAAI7B,GAAJ,gBAA2B,SAATnM,EAAkB,SAAW,OAA/C,oBAAyE,CAC1EiO,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAUF,KAExB7F,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAxG,GACEA,EAAMR,QACNQ,EAAQA,EAAMlB,KAAI,SAAAyB,GAAC,OAAIA,EAAE2M,QAEzB,EAAKuN,SAAS,CAACza,QAAO1B,YAAY,W,mEAUxC,IAAD,OACL,OAAO,kBAAC,aAAD,CACHsf,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,2BACVwhB,SAAU,WAAO,EAAKA,YACtBvhB,MAAO,CAACkf,OAAQ,IAAK0C,WAAY,IACjCJ,UAAQ,GAEPvhB,KAAKkB,MAAMW,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC3CY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,sBAEZpd,KAAKkB,MAAMqC,MAAMlB,KAAI,SAACoB,EAAMmC,GACzB,OACI,yBAAK9F,UAAU,eAAeC,MAAO,CAACgqB,OAAQ,WAAYvL,IAAK5Y,EAAO6Y,QAAS,SAACpU,GAC5EpC,OAAOwiB,KAAKhnB,EAAK0D,KAAM,WAEvB,kBAAC,KAAD,CAA6BrH,UAAU,YAAYC,MAAO,CAACY,MAAO,aAClE,yBAAKb,UAAU,qBACX,uBAAGA,UAAU,qBAAqB2D,EAAKrD,MACvC,uBAAGN,UAAU,qBAAqB2D,EAAKwe,KAAO,KAAOxe,EAAKwe,KAAO,KAAMyI,QAAQ,GAAK,MAAQ3jB,KAAK6V,KAAKnZ,EAAKwe,MAAQ,QAEvH,kBAAC,KAAD,CAAYniB,UAAU,gBAAgBC,MAAO,CAACY,MAAO,kBAI9DX,KAAKkB,MAAMqC,MAAMnB,SAAWpC,KAAKkB,MAAMW,YAAe,yBAAK/B,UAAU,cACpE,kBAAC,KAAD,CAAcC,MAAO,CAACY,MAAO,UAAWC,SAAU,GAAIihB,OAAQ,SAAUC,QAAS,WAEjF,2BAAI9hB,KAAKC,MAAMuf,UAAUxF,uB,GAjFpBra,IAAMkB,WA8FZif,sBAASxD,GAATwD,CAAoBC,aAPX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,QAIe8e,CAAyBE,aAAWqV,MC9FjEtF,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1B+I,G,4MACF7xB,MAAQ,CACJojB,UAAW,U,uDAGL,IAAD,OACL,OAAO,kBAAC,KAAD,CACHiM,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,wBAAI1wB,UAAU,eAAeE,KAAKC,MAAMuf,UAAUtJ,aAElD,yBAAKpW,UAAU,iBACX,0BAAMA,UAAoC,WAAzBE,KAAKkB,MAAMojB,UAAyB,SAAW,GAAI7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,aAActkB,KAAKC,MAAMuf,UAAUrJ,QACjJ,0BAAMrW,UAAoC,WAAzBE,KAAKkB,MAAMojB,UAAyB,SAAW,GAAI7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,aAActkB,KAAKC,MAAMuf,UAAU9b,QACjJ,0BAAM5D,UAAoC,UAAzBE,KAAKkB,MAAMojB,UAAwB,SAAW,GAAI7F,QAAS,WAAO,EAAKT,SAAS,CAACsG,UAAW,YAAatkB,KAAKC,MAAMuf,UAAUjc,QAGzH,WAAzBvD,KAAKkB,MAAMojB,WAA0B,kBAAC,GAAD,MACZ,WAAzBtkB,KAAKkB,MAAMojB,WAA0B,kBAACiR,GAAD,MACZ,UAAzBv1B,KAAKkB,MAAMojB,WAAyB,kBAACkR,GAAD,W,GAtB1B71B,IAAMkB,WAwCdif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAW8S,MCtErF/C,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1ByL,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACHlF,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAGtC,wBAAIb,UAAU,eAAeE,KAAKC,MAAMuf,UAAUvL,UAElD,uBAAGnU,UAAU,gBAAgB2e,QAAS,WAClC,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,qBAEZlV,KAAKC,MAAMuf,UAAUtL,gBACzB,uBAAGpU,UAAU,gBAAgB2e,QAAS,WAClC,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,sBAEZlV,KAAKC,MAAMuf,UAAUrL,UAEzB,uBAAGrU,UAAU,gBAAgB2e,QAAS,WACd,EAAKxe,MAAjBylB,QACAnQ,OAAO,WAAY,CAAEpO,KAAM,MACnCc,OAAOgI,SAASmB,WAChBpR,KAAKC,MAAMuf,UAAUpL,a,GA/BdzU,IAAMkB,WAiDdif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,OC3EjGzF,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1ByL,G,4MACFv0B,MAAQ,CACJM,UAAW,EAAKvB,MAAMgB,KAAKb,KAAKmB,MAChCG,SAAU,EAAKzB,MAAMgB,KAAKb,KAAKqB,KAC/BE,KAAM,EAAK1B,MAAMgB,KAAKU,KACtBoB,OAAO,EACP2N,OAAQ,I,uDAGHrG,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,KACrCrG,EAAEyU,iBAEF1P,MAAM,GAAD,OAAI7B,GAAJ,kBAA4B,CAC7B8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjBtO,UAAWxB,KAAKkB,MAAMM,UACtBE,SAAU1B,KAAKkB,MAAMQ,SACrBC,KAAM3B,KAAKkB,MAAMS,SAGxBoI,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,SAAC9I,GACAA,EAAK8B,MACJ,EAAKib,SAAS,CAACjb,OAAO,EAAM2N,OAAQzP,EAAKyP,SAEzCvF,GAAMC,SAAS,CACXhK,K5E5EK,Y4E6ELC,QAAS,CACLG,UAAW,EAAKN,MAAMM,UACtBE,SAAU,EAAKR,MAAMQ,SACrBC,KAAM,EAAKT,MAAMS,a,+BAO3B,IAAD,OACL,OAAO,kBAAC,KAAD,CACH4uB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAeE,KAAKC,MAAMuf,UAAUtL,gBAElD,0BAAMnU,MAAO,CAAC+hB,QAAS,YAAa8D,SAAU,SAACvb,GAAO,EAAKub,SAASvb,KAChE,2BACI2b,MAAOhmB,KAAKkB,MAAMM,UAClBykB,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACxc,UAAW6I,EAAEqZ,OAAOsC,SACrDlmB,UAAU,cACVsB,KAAK,OACL8kB,YAAalmB,KAAKC,MAAMuf,UAAUhe,UAClCzB,MAAO,CAAC6f,UAAW,KAEtB5f,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,cAAhBA,EAAMlV,UAA0B,0BAAMhR,UAAU,qBAC5EE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,cAAhBA,EAAMlV,SAAuBC,MAGvF,2BACIiV,MAAOhmB,KAAKkB,MAAMQ,SAClBukB,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACtc,SAAU2I,EAAEqZ,OAAOsC,SACpDlmB,UAAU,cACVsB,KAAK,OACLrB,MAAO,CAAC0wB,aAAc,GACtBvK,YAAalmB,KAAKC,MAAMuf,UAAU9d,WAErC1B,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,aAAhBA,EAAMlV,UAAyB,0BAAMhR,UAAU,qBAC3EE,KAAKC,MAAMuf,UAAUxf,KAAKkB,MAAMwP,OAAO7M,MAAK,SAAAmiB,GAAK,MAAoB,aAAhBA,EAAMlV,SAAsBC,MAGtF,2BACIiV,MAAOhmB,KAAKkB,MAAMS,KAClBskB,SAAU,SAAC5b,GAAO,EAAK2T,SAAS,CAACrc,KAAM0I,EAAEqZ,OAAOsC,SAChDlmB,UAAU,cACVsB,KAAK,OACL8kB,YAAalmB,KAAKC,MAAMuf,UAAU7d,QAGpC3B,KAAKkB,MAAMM,YAAcxB,KAAKC,MAAMgB,KAAKb,KAAKmB,OAASvB,KAAKkB,MAAMQ,WAAa1B,KAAKC,MAAMgB,KAAKb,KAAKqB,MAAQzB,KAAKkB,MAAMS,OAAS3B,KAAKC,MAAMgB,KAAKU,OAAS,4BAAQ7B,UAAU,cAAcsB,KAAK,SAASrB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUlL,MAC3QtU,KAAKkB,MAAMM,YAAcxB,KAAKC,MAAMgB,KAAKb,KAAKmB,OAASvB,KAAKkB,MAAMQ,WAAa1B,KAAKC,MAAMgB,KAAKb,KAAKqB,MAAQzB,KAAKkB,MAAMS,OAAS3B,KAAKC,MAAMgB,KAAKU,MAAS,4BAAQ7B,UAAU,cAAc2e,QAAS,WAC5L,EAAKxe,MAAM4e,QAAQwV,UACpBt0B,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,Y,GA7FpE1U,IAAMkB,WAgHdif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,OC7IjGzF,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAI1ByL,G,sKACM7zB,GACJuJ,GAAMC,SAAS,CACXhK,K7E9CiB,gB6E+CjBC,QAASO,IAGbwN,MAAM,GAAD,OAAI7B,GAAJ,sBAAgC,CACjC8B,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjBlO,a,+BAKF,IAAD,OACL,OAAO,kBAAC,KAAD,CACH2uB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAeE,KAAKC,MAAMuf,UAAUhJ,iBAElD,uBAAG1W,UAAS,wBAA4C,OAAzBE,KAAKC,MAAMgB,KAAKW,KAAgB,SAAW,IAAM6c,QAAS,WACzD,OAAzB,EAAKxe,MAAMgB,KAAKW,MACnB,EAAK8zB,QAAQ,QACb11B,KAAKC,MAAMuf,UAAUhK,SACzB,uBAAG1V,UAAS,wBAA4C,OAAzBE,KAAKC,MAAMgB,KAAKW,KAAgB,SAAW,IAAM6c,QAAS,WACzD,OAAzB,EAAKxe,MAAMgB,KAAKW,MACnB,EAAK8zB,QAAQ,QACb11B,KAAKC,MAAMuf,UAAU/J,c,GAzCd9V,IAAMkB,WA2Ddif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,O,UCpFnG3C,IAAa,EAEX9C,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAmB1B2L,GAAcxV,cAfA,SAAAC,GAAK,MAAK,CAC1BC,KAAM,CACF1f,MAAO,UACPmhB,QAAS,OACT,YAAa,CACTnhB,MAAO,UACP8xB,OAAQ,QAEZ,UAAW,CACPtT,gBAAiB,gBAGzBuT,QAAS,MAGOvS,CAAwByV,MAEtCxT,G,uKACQ,IAAD,OACL,OAAO,oCACH,kBAAC7D,GAAA,EAAD,CAAQze,UAAU,YAAY0C,MAAK,eAAUxC,KAAKC,MAAMqC,KAAKE,OAASic,QAAS,WAC3E,EAAKxe,MAAM41B,WAAW,EAAK51B,MAAMqC,KAAKC,OAEtC,kBAAC,EAAD,CAAQxC,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMqC,KAAK3B,MAAzB,MAAoCP,KAAMJ,KAAKC,MAAMqC,KAAKE,MAAM4c,OAAO,KAC7K,yBAAKrf,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAItf,KAAKC,MAAMqC,KAAKG,WAAa,kBAAC,KAAD,MAAqB,8BAAOzC,KAAKC,MAAMqC,KAAKE,SAEjF,kBAACmzB,GAAD,CACIjD,QAAS1yB,KAAKC,MAAM61B,eAAiB91B,KAAKC,MAAMqC,KAAKC,Y,GAhBlD5C,IAAMkB,WAuBvB40B,G,4MACFv0B,MAAQ,CACJ6B,OAAO,EACP2N,OAAQ,GACR7O,YAAY,EACZI,MAAO,EAAKhC,MAAMgC,MAAMF,WAAa,CAAC,EAAK9B,MAAMgC,MAAMF,YAAc,GACrE+zB,eAAc,EAAK71B,MAAMgC,MAAMF,YAAa,EAAK9B,MAAMgC,MAAMF,WAAWQ,IACxEkL,KAAM,EACNulB,EAAG,EAAK/yB,MAAMgC,MAAMF,WAAa,EAAK9B,MAAMgC,MAAMF,WAAWS,MAAQ,GACrEixB,KAAM,Q,uDAGDppB,GAAI,IAAD,OACJ2oB,EAAI3oB,EAAEqZ,OAAOsC,MACjBhmB,KAAKge,SAAS,CAACgV,MAEZF,IACCniB,aAAamiB,IAEZE,EAAE5wB,QAAU,KAAKyqB,KAAKmG,KACvBhzB,KAAKge,SAAS,CAACnc,YAAY,IAC3BixB,GAAajiB,YAAW,WACpBzB,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAY,EAAKvP,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjBkjB,EAAG,EAAK9xB,MAAM8xB,MAGrBjpB,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAA9H,GACF,EAAK+b,SAAS,CAACnc,YAAY,IAC3B,EAAKmc,SAAS,CAAC/b,eAEpB,MAGH+wB,EAAE5wB,QACFpC,KAAKge,SAAS,CAAC/b,MAAO,O,+BAGrBoI,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,KAErCtB,MAAM,GAAD,OAAI7B,GAAJ,kBAA4B,CAC7B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB7M,OAAQjD,KAAKkB,MAAM40B,aACnB5yB,OAAQlD,KAAKC,MAAMiD,OACnBuK,KAAMzN,KAAKkB,MAAMuM,SAGxB1D,MAAK,WACF,EAAK9J,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMiD,UAEhCgD,KAAM+tB,QAAQ,YAAa,CACvBjhB,SAAU9M,KAAM+M,SAASC,kB,+BAK3B,IAAD,OACL,OAAO,kBAAC,KAAD,CACHqd,QAAQ,EACRmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAd,QAEqB,SAApBE,KAAKkB,MAAMuyB,MAAmB,oCAC3B,2BAAOryB,KAAK,OAAO4kB,MAAOhmB,KAAKkB,MAAM8xB,EAAG/M,SAAU,SAAC5b,GAAO,EAAK6oB,SAAS7oB,IAAKvK,UAAU,uBAAuBomB,YAAalmB,KAAKC,MAAMuf,UAAUtK,SAEhJ,kBAAC,aAAD,CACIiM,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVC,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKkB,MAAMW,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC/CY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,wBAENpd,KAAKkB,MAAM8xB,EAAE5wB,SAAWpC,KAAKkB,MAAMW,YAAc7B,KAAKkB,MAAMe,MAAMI,KAAI,SAACC,EAAMsD,GAC5E,OACI,kBAAC,GAAD,CAAUiwB,WAAY,SAAC5vB,GACnB,EAAK+X,SAAS,CAAC8X,aAAc7vB,KAC9BuY,IAAK5Y,EAAOtD,KAAMA,EAAMwzB,aAAc,EAAK50B,MAAM40B,mBAG1D91B,KAAKkB,MAAM8xB,EAAE5wB,SAAWpC,KAAKkB,MAAMW,aAAe7B,KAAKkB,MAAMe,MAAMG,QAAU,yBAAKtC,UAAU,cAC1F,wDAGDE,KAAKkB,MAAM8xB,EAAE5wB,SAAWpC,KAAKkB,MAAMW,aAAe7B,KAAKkB,MAAMe,MAAMG,QAAU,yBAAKtC,UAAU,cAC3F,iDAILE,KAAKkB,MAAM40B,cAAgB,4BAAQh2B,UAAU,cAAc2e,QAAS,WACnE,EAAKT,SAAS,CAACyV,KAAM,UACtB1zB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUjL,OACrEvU,KAAKkB,MAAM40B,cAAgB,4BAAQh2B,UAAU,cAAc2e,QAAS,WAClE,EAAKxe,MAAM4e,QAAQwV,UACpBt0B,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,OAItD,SAApBrU,KAAKkB,MAAMuyB,MAAmB,oCAC1BjmB,GAAWnL,KAAI,SAACoL,EAAM7H,GAAP,OACR,kBAAC2Y,GAAA,EAAD,CAAQC,IAAK5Y,EAAO9F,UAAU,YAAYC,MAAO,CAACkf,OAAQ,IAAKR,QAAS,WACpE,EAAKT,SAAS,CAACvQ,KAAMA,EAAKA,SAE1B,yBAAK1N,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAG,8BAAO7R,EAAKC,SAEnB,kBAACioB,GAAD,CACIjD,QAAS,EAAKxxB,MAAMuM,OAASA,EAAKA,aAI/CzN,KAAKkB,MAAMuM,MAAQ,4BAAQ3N,UAAU,cAAc2e,QAAS,WAC3D,EAAKmH,YACN7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAFtB,SAGpB5f,KAAKkB,MAAMuM,MAAQ,4BAAQ3N,UAAU,cAAc2e,QAAS,WAC1D,EAAKT,SAAS,CAACyV,KAAM,UACtB1zB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,Y,GAxJhE1U,IAAMkB,WA6Kdif,0BAASxD,GAATwD,CAAoBC,aAfX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/CwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,OCtPjGzF,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAmB1B2L,GAAcxV,cAfA,SAAAC,GAAK,MAAK,CAC1BC,KAAM,CACF1f,MAAO,UACPmhB,QAAS,OACT,YAAa,CACTnhB,MAAO,UACP8xB,OAAQ,QAEZ,UAAW,CACPtT,gBAAiB,gBAGzBuT,QAAS,MAGOvS,CAAwByV,MAEtCxT,G,uKACQ,IAAD,OACL,OAAO,oCACH,kBAAC7D,GAAA,EAAD,CAAQze,UAAU,YAAY0C,MAAK,eAAUxC,KAAKC,MAAMqC,KAAKE,OAASic,QAAS,WAC3E,EAAKxe,MAAM41B,WAAW,EAAK51B,MAAMqC,KAAKC,OAEtC,kBAAC,EAAD,CAAQxC,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMqC,KAAK3B,MAAzB,MAAoCP,KAAMJ,KAAKC,MAAMqC,KAAKE,MAAM4c,OAAO,KAC7K,yBAAKrf,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAItf,KAAKC,MAAMqC,KAAKG,WAAa,kBAAC,KAAD,MAAqB,8BAAOzC,KAAKC,MAAMqC,KAAKE,SAEjF,kBAAC,GAAD,CACIkwB,QAAS1yB,KAAKC,MAAM61B,eAAiB91B,KAAKC,MAAMqC,KAAKC,Y,GAhBlD5C,IAAMkB,WAuBvB40B,G,4MACFv0B,MAAQ,CACJ6B,OAAO,EACP2N,OAAQ,GACR7O,YAAY,EACZI,MAAO,GACP6zB,cAAc,G,kEAGG,IAAD,OAChB1mB,MAAM,GAAD,OAAI7B,GAAJ,sBAAgC,CACjC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQlD,KAAKC,MAAMiD,WAG1B6G,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAgsB,GACF,IAAI9zB,EAAQ8zB,EAAO1zB,KAAI,SAAAyB,GAAC,OAAIA,EAAExB,QAC9B,EAAK0b,SAAS,CAACnc,YAAY,EAAOI,e,+BAIjCoI,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,KAErCtB,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB7M,OAAQjD,KAAKkB,MAAM40B,aACnB5yB,OAAQlD,KAAKC,MAAMiD,WAG1B6G,MAAK,WACF7D,KAAM+tB,QAAQ,cAAe,CACzBjhB,SAAU9M,KAAM+M,SAASC,aAE7B,EAAK8K,SAAS,CAAC/b,MAAM,YAAK,EAAKf,MAAMe,MAAMS,QAAO,SAAAoB,GAAC,OAAIA,EAAEvB,MAAQ,EAAKrB,MAAM40B,iBAAgBA,aAAc,S,+BAIxG,IAAD,OACL,OAAO,kBAAC,KAAD,CACHvF,QAAQ,EACRmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAd,UAEA,kBAAC,aAAD,CACIqhB,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVC,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKkB,MAAMW,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC/CY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,uBAEPpd,KAAKkB,MAAMW,YAAc7B,KAAKkB,MAAMe,MAAMI,KAAI,SAACC,EAAMsD,GACnD,OACI,kBAAC,GAAD,CAAUiwB,WAAY,SAAC5vB,GACnB,EAAK+X,SAAS,CAAC8X,aAAc7vB,KAC9BuY,IAAK5Y,EAAOtD,KAAMA,EAAMwzB,aAAc,EAAK50B,MAAM40B,mBAG1D91B,KAAKkB,MAAMW,aAAe7B,KAAKkB,MAAMe,MAAMG,QAAU,yBAAKtC,UAAU,cAClE,kEAILE,KAAKkB,MAAM40B,cAAgB,4BAAQh2B,UAAU,cAAc2e,QAAS,WACnE,EAAKmH,YACN7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAFd,WAG5B5f,KAAKkB,MAAM40B,cAAgB,4BAAQh2B,UAAU,cAAc2e,QAAS,WAClE,EAAKxe,MAAM4e,QAAQwV,UACpBt0B,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,W,GAlG5D1U,IAAMkB,WAsHdif,0BAASxD,GAATwD,CAAoBC,aAfX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/CwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,OCzLnG3C,IAAa,EAEX9C,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAmB1B2L,GAAcxV,cAfA,SAAAC,GAAK,MAAK,CAC1BC,KAAM,CACF1f,MAAO,UACPmhB,QAAS,OACT,YAAa,CACTnhB,MAAO,UACP8xB,OAAQ,QAEZ,UAAW,CACPtT,gBAAiB,gBAGzBuT,QAAS,MAGOvS,CAAwByV,MAEtCxT,G,uKACQ,IAAD,OACL,OAAO,oCACH,kBAAC7D,GAAA,EAAD,CAAQze,UAAU,YAAY0C,MAAK,eAAUxC,KAAKC,MAAMqC,KAAKE,OAASic,QAAS,WAC3E,EAAKxe,MAAM41B,WAAW,EAAK51B,MAAMqC,KAAKC,OAEtC,kBAAC,EAAD,CAAQxC,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMqC,KAAK3B,MAAzB,MAAoCP,KAAMJ,KAAKC,MAAMqC,KAAKE,MAAM4c,OAAO,KAC7K,yBAAKrf,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAItf,KAAKC,MAAMqC,KAAKG,WAAa,kBAAC,KAAD,MAAqB,8BAAOzC,KAAKC,MAAMqC,KAAKE,SAEjF,kBAAC,GAAD,CACIkwB,QAAS1yB,KAAKC,MAAM61B,eAAiB91B,KAAKC,MAAMqC,KAAKC,Y,GAhBlD5C,IAAMkB,WAuBvB40B,G,4MACFv0B,MAAQ,CACJ6B,OAAO,EACP2N,OAAQ,GACR7O,YAAY,EACZI,MAAO,EAAKhC,MAAMgC,MAAMF,WAAa,CAAC,EAAK9B,MAAMgC,MAAMF,YAAc,GACrE+zB,eAAc,EAAK71B,MAAMgC,MAAMF,YAAa,EAAK9B,MAAMgC,MAAMF,WAAWQ,IACxEkL,KAAM,EACNulB,EAAG,EAAK/yB,MAAMgC,MAAMF,WAAa,EAAK9B,MAAMgC,MAAMF,WAAWS,MAAQ,GACrEixB,KAAM,Q,uDAGDppB,GAAI,IAAD,OACJ2oB,EAAI3oB,EAAEqZ,OAAOsC,MACjBhmB,KAAKge,SAAS,CAACgV,MAEZF,IACCniB,aAAamiB,IAEZE,EAAE5wB,QAAU,KAAKyqB,KAAKmG,KACvBhzB,KAAKge,SAAS,CAACnc,YAAY,IAC3BixB,GAAajiB,YAAW,WACpBzB,MAAM,GAAD,OAAI7B,GAAJ,oBAA8B,CAC/B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAY,EAAKvP,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjBkjB,EAAG,EAAK9xB,MAAM8xB,MAGrBjpB,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAA9H,GACF,EAAK+b,SAAS,CAACnc,YAAY,IAC3B,EAAKmc,SAAS,CAAC/b,eAEpB,MAGH+wB,EAAE5wB,QACFpC,KAAKge,SAAS,CAAC/b,MAAO,O,+BAGrBoI,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,KAErCtB,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB7M,OAAQjD,KAAKkB,MAAM40B,aACnB5yB,OAAQlD,KAAKC,MAAMiD,OACnBuK,KAAMzN,KAAKkB,MAAMuM,SAGxB1D,MAAK,WACF,EAAK9J,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMiD,UAEhCgD,KAAM+tB,QAAQ,YAAa,CACvBjhB,SAAU9M,KAAM+M,SAASC,kB,+BAK3B,IAAD,OAEL,OADAvI,QAAQC,IAAI5K,KAAKkB,MAAM40B,cAChB,kBAAC,KAAD,CACHvF,QAAQ,EACRmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAd,YAEqB,SAApBE,KAAKkB,MAAMuyB,MAAmB,oCAC3B,2BAAOryB,KAAK,OAAO4kB,MAAOhmB,KAAKkB,MAAM8xB,EAAG/M,SAAU,SAAC5b,GAAO,EAAK6oB,SAAS7oB,IAAKvK,UAAU,uBAAuBomB,YAAalmB,KAAKC,MAAMuf,UAAUtK,SAEhJ,kBAAC,aAAD,CACIiM,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVC,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKkB,MAAMW,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC/CY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,wBAENpd,KAAKkB,MAAM8xB,EAAE5wB,SAAWpC,KAAKkB,MAAMW,YAAc7B,KAAKkB,MAAMe,MAAMI,KAAI,SAACC,EAAMsD,GAC5E,OACI,kBAAC,GAAD,CAAUiwB,WAAY,SAAC5vB,GACnB,EAAK+X,SAAS,CAAC8X,aAAc7vB,KAC9BuY,IAAK5Y,EAAOtD,KAAMA,EAAMwzB,aAAc,EAAK50B,MAAM40B,mBAG1D91B,KAAKkB,MAAM8xB,EAAE5wB,SAAWpC,KAAKkB,MAAMW,aAAe7B,KAAKkB,MAAMe,MAAMG,QAAU,yBAAKtC,UAAU,cAC1F,wDAGDE,KAAKkB,MAAM8xB,EAAE5wB,SAAWpC,KAAKkB,MAAMW,aAAe7B,KAAKkB,MAAMe,MAAMG,QAAU,yBAAKtC,UAAU,cAC3F,iDAILE,KAAKkB,MAAM40B,cAAgB,4BAAQh2B,UAAU,cAAc2e,QAAS,WACnE,EAAKT,SAAS,CAACyV,KAAM,UACtB1zB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUjL,OACrEvU,KAAKkB,MAAM40B,cAAgB,4BAAQh2B,UAAU,cAAc2e,QAAS,WAClE,EAAKxe,MAAM4e,QAAQwV,UACpBt0B,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,OAItD,SAApBrU,KAAKkB,MAAMuyB,MAAmB,oCAC1BjmB,GAAWnL,KAAI,SAACoL,EAAM7H,GAAP,OACR,kBAAC2Y,GAAA,EAAD,CAAQC,IAAK5Y,EAAO9F,UAAU,YAAYC,MAAO,CAACkf,OAAQ,IAAKR,QAAS,WACpE,EAAKT,SAAS,CAACvQ,KAAMA,EAAKA,SAE1B,yBAAK1N,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAG,8BAAO7R,EAAKC,SAEnB,kBAAC,GAAD,CACIglB,QAAS,EAAKxxB,MAAMuM,OAASA,EAAKA,aAI/CzN,KAAKkB,MAAMuM,MAAQ,4BAAQ3N,UAAU,cAAc2e,QAAS,WAC3D,EAAKmH,YACN7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAFtB,QAGpB5f,KAAKkB,MAAMuM,MAAQ,4BAAQ3N,UAAU,cAAc2e,QAAS,WAC1D,EAAKT,SAAS,CAACyV,KAAM,UACtB1zB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,Y,GAzJhE1U,IAAMkB,WA8Kdif,0BAASxD,GAATwD,CAAoBC,aAfX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/CwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,OCvPjGzF,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAmB1B2L,GAAcxV,cAfA,SAAAC,GAAK,MAAK,CAC1BC,KAAM,CACF1f,MAAO,UACPmhB,QAAS,OACT,YAAa,CACTnhB,MAAO,UACP8xB,OAAQ,QAEZ,UAAW,CACPtT,gBAAiB,gBAGzBuT,QAAS,MAGOvS,CAAwByV,MAEtCxT,G,uKACQ,IAAD,OACL,OAAO,oCACH,kBAAC7D,GAAA,EAAD,CAAQze,UAAU,YAAY0C,MAAK,eAAUxC,KAAKC,MAAMqC,KAAKE,OAASic,QAAS,WAC3E,EAAKxe,MAAM41B,WAAW,EAAK51B,MAAMqC,KAAKC,OAEtC,kBAAC,EAAD,CAAQxC,MAAO,CAACgf,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIre,SAAU,GAAIse,WAAY,IAAKC,gBAAgB,OAAD,OAASnf,KAAKC,MAAMqC,KAAK3B,MAAzB,MAAoCP,KAAMJ,KAAKC,MAAMqC,KAAKE,MAAM4c,OAAO,KAC7K,yBAAKrf,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAItf,KAAKC,MAAMqC,KAAKG,WAAa,kBAAC,KAAD,MAAqB,8BAAOzC,KAAKC,MAAMqC,KAAKE,SAEjF,kBAAC,GAAD,CACIkwB,QAAS1yB,KAAKC,MAAM61B,eAAiB91B,KAAKC,MAAMqC,KAAKC,Y,GAhBlD5C,IAAMkB,WAuBvB40B,G,4MACFv0B,MAAQ,CACJ6B,OAAO,EACP2N,OAAQ,GACR7O,YAAY,EACZI,MAAO,GACP6zB,cAAc,G,kEAGG,IAAD,OAChB1mB,MAAM,GAAD,OAAI7B,GAAJ,yBAAmC,CACpC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQlD,KAAKC,MAAMiD,WAG1B6G,MAAK,SAAA0F,GAAQ,OAAIA,EAASC,UAC1B3F,MAAK,SAAAgsB,GACF,IAAI9zB,EAAQ8zB,EAAO1zB,KAAI,SAAAyB,GAAC,OAAIA,EAAExB,QAE9B,EAAK0b,SAAS,CAACnc,YAAY,EAAOI,e,+BAIjCoI,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,KAErCtB,MAAM,GAAD,OAAI7B,GAAJ,mBAA6B,CAC9B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB7M,OAAQjD,KAAKkB,MAAM40B,aACnB5yB,OAAQlD,KAAKC,MAAMiD,WAG1B6G,MAAK,WACF7D,KAAM+tB,QAAQ,kBAAmB,CAC7BjhB,SAAU9M,KAAM+M,SAASC,aAE7B,EAAK8K,SAAS,CAAC/b,MAAM,YAAK,EAAKf,MAAMe,MAAMS,QAAO,SAAAoB,GAAC,OAAIA,EAAEvB,MAAQ,EAAKrB,MAAM40B,iBAAgBA,aAAc,S,+BAIxG,IAAD,OACL,OAAO,kBAAC,KAAD,CACHvF,QAAQ,EACRmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAd,cAEA,kBAAC,aAAD,CACIqhB,IAAK,SAACA,GAAS,EAAK0B,WAAa1B,GACjCC,oBAAqB,SAAAnhB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CuhB,oBAAqB,SAAAphB,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVC,MAAO,CAACkf,OAAQ,KAChBsC,UAAQ,GAEPvhB,KAAKkB,MAAMW,YAAc,kBAACihB,GAAA,EAAD,CAAkB/iB,MAAO,CAC/CY,MAAO,UACPqS,SAAU,WACVmK,KAAM,EACNW,MAAO,EACP+D,OAAQ,OACRzE,IAAK,uBAEPpd,KAAKkB,MAAMW,YAAc7B,KAAKkB,MAAMe,MAAMI,KAAI,SAACC,EAAMsD,GACnD,OACI,kBAAC,GAAD,CAAUiwB,WAAY,SAAC5vB,GACnB,EAAK+X,SAAS,CAAC8X,aAAc7vB,KAC9BuY,IAAK5Y,EAAOtD,KAAMA,EAAMwzB,aAAc,EAAK50B,MAAM40B,mBAG1D91B,KAAKkB,MAAMW,aAAe7B,KAAKkB,MAAMe,MAAMG,QAAU,yBAAKtC,UAAU,cAClE,gEAILE,KAAKkB,MAAM40B,cAAgB,4BAAQh2B,UAAU,cAAc2e,QAAS,WACnE,EAAKmH,YACN7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAFd,UAG5B5f,KAAKkB,MAAM40B,cAAgB,4BAAQh2B,UAAU,cAAc2e,QAAS,WAClE,EAAKxe,MAAM4e,QAAQwV,UACpBt0B,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,W,GAnG5D1U,IAAMkB,WAuHdif,0BAASxD,GAATwD,CAAoBC,aAfX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/CwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,OC7LjGzF,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAM1ByL,G,4MACFv0B,MAAQ,CACJ6B,OAAO,EACP2N,OAAQ,GACR7O,YAAY,EACZb,QAAS,I,uDAGJqJ,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,KAErCtB,MAAM,GAAD,OAAI7B,GAAJ,0BAAoC,CACrC8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB9O,QAAShB,KAAKkB,MAAMF,QACpBkC,OAAQlD,KAAKC,MAAMiD,WAG1B6G,MAAK,WACF,EAAK9J,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMiD,UAEhCgD,KAAM+tB,QAAQ,eAAgB,CAC1BjhB,SAAU9M,KAAM+M,SAASC,kB,+BAK3B,IAAD,OACL,OAAO,kBAAC,KAAD,CACHqd,QAAQ,EACRmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAd,gBAEA,8BACIA,UAAU,cACVmmB,SAAU,SAAC5b,GACP,EAAK2T,SAAS,CAAChd,QAASqJ,EAAEqZ,OAAOsC,SAErCA,MAAOhmB,KAAKkB,MAAMF,YAGnBhB,KAAKkB,MAAMF,SAAW,4BAAQlB,UAAU,cAAc2e,QAAS,WAC9D,EAAKmH,YACN7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAFnB,SAGvB5f,KAAKkB,MAAMF,SAAW,4BAAQlB,UAAU,cAAc2e,QAAS,WAC7D,EAAKxe,MAAM4e,QAAQwV,UACpBt0B,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,W,GA5D5D1U,IAAMkB,WAgFdif,0BAASxD,GAATwD,CAAoBC,aAfX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/CwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,O,qBCzHjGzF,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,KAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBC,UAAwB,WAI1B2F,G,uKAEE,OAAO,kBAAC,KAAD,CACHzF,OAAQvwB,KAAKC,MAAMswB,OACnBxwB,MAAOiwB,GACPQ,aAAa,WAEb,kBAAC,KAAD,CAA2BzwB,MAAO,CAACY,MAAO,UAAWC,SAAU,MAE/D,wBAAId,UAAU,eAAd,WAEA,uBAAGA,UAAU,cAAcE,KAAKC,MAAMgB,KAAKD,SAE3C,4BAAQlB,UAAU,cAAcsB,KAAK,SAASrB,MAAO,CAAC2hB,MAAO,eAAgBjD,QAAS,WAClFtT,GAAMC,SAAS,CACXhK,KnF3CY,mBmF4CZC,SAAS,MAHjB,c,GAbU1B,IAAMkB,WA6Bbkf,gBANS,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,QAIL8e,CAAyBE,aAAW+V,KCjD7C5C,GAA0B,CAC5BnD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxBC,SAAwB,QACxB8G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxB+Q,SAAwB,SAI1B8B,G,yKACU,IAAD,OACPxpB,GAAMC,SAAS,CACXhK,KpFiDkB,iBoFhDlBC,QAAS,CAACJ,MAAM,EAAOP,QAAQ,KAGnCV,KAAKC,MAAM4e,QAAQnM,KAAnB,iBAAkC1S,KAAKC,MAAM0F,KAAKxD,MAAMlB,KAAKsB,MAE7DsO,YAAW,WACP,EAAK5Q,MAAMkqB,YAAYhV,OAAO,EAAKlV,MAAMgB,KAAK+N,YAC/C,O,8BAIH7D,GAAMC,SAAS,CACXhK,KpFoCkB,iBoFnClBC,QAAS,CAACJ,MAAM,EAAOP,QAAQ,O,+BAI7B,IAAD,OACL,OAAO,kBAAC,KAAD,CACH6vB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAK3nB,SAC5BhM,MAAOqzB,GACP5C,aAAa,eAEb,wBAAI1wB,UAAU,cAAcC,MAAO,CAAC2hB,MAAO,SAAU1hB,KAAKC,MAAMuf,UAAU3J,UAE1E,2BAAI7V,KAAKC,MAAMuf,UAAU9F,mBAEzB,4BAAQ5Z,UAAU,cAAc2e,QAAS,WAAO,EAAK1S,SAAUhM,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,MAClI,4BAAQvU,UAAU,cAAc2e,QAAS,WAAO,EAAKmH,YAAa7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUrK,a,GAjCxHxV,IAAMkB,WAmDhBif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZ0E,KAAMzE,EAAMyE,SAIpB,SAA4ByF,GACxB,MAAO,CACH+e,YAAanK,YAAmBmK,EAAa/e,MAIlB2U,CAA6CE,aAAW0U,MC7ErFvB,GAA0B,CAC5BnD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxBC,SAAwB,QACxB8G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxB+Q,SAAwB,SAI1B8B,G,yKACU,IAAD,OACP30B,KAAKC,MAAM4e,QAAQnM,KAAnB,iBAAkC1S,KAAKC,MAAM0F,KAAKxD,MAAMlB,KAAKsB,MAE7D4I,GAAMC,SAAS,CACXhK,KrF+CkB,iBqF9ClBC,QAAS,CAACJ,MAAM,EAAOP,QAAQ,KAGnCmQ,YAAW,WACP,EAAK5Q,MAAMkqB,YAAYxkB,KAAK,EAAK1F,MAAM0F,KAAKxD,MAAMlB,KAAM,EAAKhB,MAAMgB,KAAK+N,YACzE,O,8BAIH7D,GAAMC,SAAS,CACXhK,KrFoCkB,iBqFnClBC,QAAS,CAACJ,MAAM,EAAOP,QAAQ,O,+BAI7B,IAAD,OACL,OAAO,kBAAC,KAAD,CACH6vB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAK3nB,SAC5BhM,MAAOqzB,GACP5C,aAAa,eAEb,wBAAI1wB,UAAU,cAAcC,MAAO,CAAC2hB,MAAO,SAAU1hB,KAAKC,MAAMuf,UAAU3J,UAE1E,2BAAI7V,KAAKC,MAAMuf,UAAU5F,kBAEzB,4BAAQ9Z,UAAU,cAAc2e,QAAS,WAAO,EAAK1S,SAAUhM,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,MAClI,4BAAQvU,UAAU,cAAc2e,QAAS,WAAO,EAAKmH,YAAa7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAU7Z,W,GAjCxHhG,IAAMkB,WAmDhBif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZ0E,KAAMzE,EAAMyE,SAIpB,SAA4ByF,GACxB,MAAO,CACH+e,YAAanK,YAAmBmK,EAAa/e,MAIlB2U,CAA6CE,aAAW0U,MC7ErFvB,GAA0B,CAC5BnD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxBC,SAAwB,QACxB8G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxB+Q,SAAwB,SAI1B8B,G,yKACU,IAAD,OACP30B,KAAKC,MAAMkqB,YAAYje,KAAKlM,KAAKC,MAAM0F,KAAK1E,KAAMjB,KAAKC,MAAMgB,KAAK+N,UAClE,IAAI/L,EAASjD,KAAKC,MAAMgC,MAAME,MAC9BgJ,GAAMC,SAAS,CACXhK,KtFLmB,kBsFMnBC,SAAS,IAGbwP,YAAW,WACP,EAAK5Q,MAAM4e,QAAQnM,KAAnB,iBAAkCzP,MACnC,O,8BAIHkI,GAAMC,SAAS,CACXhK,KtFhBmB,kBsFiBnBC,SAAS,M,+BAIP,IAAD,OACL,OAAO,kBAAC,KAAD,CACHkvB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAK3nB,SAC5BhM,MAAOqzB,GACP5C,aAAa,eAEb,wBAAI1wB,UAAU,cAAcC,MAAO,CAAC2hB,MAAO,SAAU1hB,KAAKC,MAAMuf,UAAU3J,UAE1E,2BAAI7V,KAAKC,MAAMuf,UAAU7F,iBAEzB,4BAAQ7Z,UAAU,cAAc2e,QAAS,WAAO,EAAK1S,SAAUhM,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,MAClI,4BAAQvU,UAAU,cAAc2e,QAAS,WAAO,EAAKmH,YAAa7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUrK,a,GAjCxHxV,IAAMkB,WAoDhBif,0BAASxD,GAATwD,CAAoBC,aAdX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZ0E,KAAMzE,EAAMyE,KACZ1D,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACH+e,YAAanK,YAAmBmK,EAAa/e,MAIlB2U,CAA6CE,aAAW0U,MCxErF3E,GAAoB,CACtBC,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxB+G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxByR,eAAwB,SACxBV,SAAwB,OACxBnR,MAAwB,cACxB1C,SAAwB,QACxBgL,QAAwB,WAmB1B2L,GAAcxV,cAfA,SAAAC,GAAK,MAAK,CAC1BC,KAAM,CACF1f,MAAO,UACPmhB,QAAS,OACT,YAAa,CACTnhB,MAAO,UACP8xB,OAAQ,QAEZ,UAAW,CACPtT,gBAAiB,gBAGzBuT,QAAS,MAGOvS,CAAwByV,MAEtCH,G,4MACFv0B,MAAQ,CACJ6B,OAAO,EACP2N,OAAQ,GACR7O,YAAY,EACZ4L,KAAM,G,uDAGDpD,GAAI,IAAD,OACRrK,KAAKge,SAAS,CAACjb,OAAO,EAAO2N,OAAQ,KAErCtB,MAAM,GAAD,OAAI7B,GAAJ,iBAA2B,CAC5B8B,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYxP,KAAKC,MAAMgB,KAAK+N,WAE7CY,KAAMC,KAAKC,UAAU,CACjB5M,OAAQlD,KAAKC,MAAMiD,OACnBuK,KAAMzN,KAAKkB,MAAMuM,SAGxB1D,MAAK,WACF,EAAK9J,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMiD,UAEhCgD,KAAM+tB,QAAQ,WAAY,CACtBjhB,SAAU9M,KAAM+M,SAASC,kB,+BAK3B,IAAD,OACL,OAAO,kBAAC,KAAD,CACHqd,QAAQ,EACRmD,eAAgB,WAAO,EAAKzzB,MAAM8L,SAClChM,MAAOiwB,GACPQ,aAAa,YAEb,0BAAM1wB,UAAU,aAAa2e,QAAS,SAACpU,GACnC,EAAKpK,MAAM4e,QAAQwV,WAEnB,kBAAC,KAAD,CAAmBt0B,MAAO,CAACY,MAAO,cAEtC,wBAAIb,UAAU,eAAd,OAEC0N,GAAWnL,KAAI,SAACoL,EAAM7H,GAAP,OACR,kBAAC2Y,GAAA,EAAD,CAAQC,IAAK5Y,EAAO9F,UAAU,YAAYC,MAAO,CAACkf,OAAQ,IAAKR,QAAS,WACpE,EAAKT,SAAS,CAACvQ,KAAMA,EAAKA,SAE1B,yBAAK1N,MAAO,CACRsf,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAG,8BAAO7R,EAAKC,SAEnB,kBAAC,GAAD,CACIglB,QAAS,EAAKxxB,MAAMuM,OAASA,EAAKA,aAI/CzN,KAAKkB,MAAMuM,MAAQ,4BAAQ3N,UAAU,cAAc2e,QAAS,WAC3D,EAAKmH,YACN7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAFtB,QAGpB5f,KAAKkB,MAAMuM,MAAQ,4BAAQ3N,UAAU,cAAc2e,QAAS,WAC1D,EAAKxe,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMiD,WAEjCnD,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,KAAM5f,KAAKC,MAAMuf,UAAUnL,W,GAvE5D1U,IAAMkB,WA2Fdif,0BAASxD,GAATwD,CAAoBC,aAfX,SAAA7e,GACpB,MAAO,CACH8B,MAAO9B,EAAM8B,MACb/B,KAAMC,EAAMD,KACZgB,MAAOf,EAAMe,UAIrB,SAA4BmJ,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,GAC/CwX,aAAc5C,YAAmB4C,EAAcxX,MAIpB2U,CAA6CE,aAAWkG,aAAYsP,OCpJjGQ,G,uKACQ,IAAD,OACL,OAAO,yBAAKn2B,UAAU,aAAa2e,QAAS,WACN,iBAA/B,EAAKxe,MAAMiG,MAAMC,YACa,WAA1B,EAAKlG,MAAMiG,MAAM9E,OACb+J,GAAMW,WAAW7J,MAAMF,WACtBoJ,GAAMC,SAAS,CACXhK,KxFuFG,kBwFtFHC,QAAS,CAAC4E,GAAI,EAAKhG,MAAMiG,MAAM5D,KAAKC,IAAKnB,KAAM,YAGnD,EAAKnB,MAAM4e,QAAQnM,KAAnB,iBAAkC,EAAKzS,MAAMiG,MAAM5D,KAAKC,OAInC,WAA1B,EAAKtC,MAAMiG,MAAM9E,MAA+C,YAA1B,EAAKnB,MAAMiG,MAAM9E,MACtD,EAAKnB,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAO,SAAD,OAAW,EAAKjV,MAAMiG,MAAMjF,KAAKsB,QAKjB,YAA/B,EAAKtC,MAAMiG,MAAMC,WACb,iBAAU,EAAKlG,MAAMiG,MAAMjF,KAAKsB,OAAU,EAAKtC,MAAM4e,QAAQ5O,SAASC,WAClE/E,GAAMW,WAAW7J,MAAMF,WACtBoJ,GAAMC,SAAS,CACXhK,KxFoEG,kBwFnEHC,QAAS,CAAC4E,GAAI,EAAKhG,MAAMiG,MAAMjF,KAAKsB,IAAKnB,KAAM,aAGnD,EAAKnB,MAAM4e,QAAQnM,KAAnB,iBAAkC,EAAKzS,MAAMiG,MAAMjF,KAAKsB,OAKpE4I,GAAMC,SAAS,CACXhK,KxFyDa,gBwFxDbC,QAAS,EAAKpB,MAAMiG,MAAM3D,QAG9B,0BAAMzC,UAAU,aAAa2e,QAAS,SAACpU,GACnCA,EAAEoT,kBACFtS,GAAMC,SAAS,CACXhK,KxFkDS,gBwFjDTC,QAAS,EAAKpB,MAAMiG,MAAM3D,QAG9B,kBAAC,KAAD,CAAmBxC,MAAO,CAACY,MAAO,cAGtC,uBAAGb,UAAU,QAAQE,KAAKC,MAAMiG,MAAMjF,KAAKb,KAAKmB,MAAhD,IAAwDvB,KAAKC,MAAMiG,MAAMjF,KAAKb,KAAKqB,MACnD,YAA/BzB,KAAKC,MAAMiG,MAAMC,WAA2B,uBAAGrG,UAAU,QAAb,gBACb,iBAA/BE,KAAKC,MAAMiG,MAAMC,WAAgC,oCACnB,WAA1BnG,KAAKC,MAAMiG,MAAM9E,MAAqB,uBAAGtB,UAAU,QAAQE,KAAKC,MAAMuf,UAAUrI,wBAA1C,OAAwE,0BAAMpX,MAAO,CAACY,MAAO,YAAaX,KAAKC,MAAMiG,MAAM5D,KAAKE,QAC5I,WAA1BxC,KAAKC,MAAMiG,MAAM9E,MAAqB,uBAAGtB,UAAU,QAAQE,KAAKC,MAAMuf,UAAUpI,4BACtD,YAA1BpX,KAAKC,MAAMiG,MAAM9E,MAAsB,uBAAGtB,UAAU,QAAQE,KAAKC,MAAMuf,UAAUnI,wBAA1C,OAAwE,0BAAMtX,MAAO,CAACY,MAAO,oB,GAvDjIhB,IAAMkB,WA6DXif,sBAASxD,GAATwD,CAAoBG,aAAWgW,KCxDxCC,G,4MACFh1B,MAAQ,CACJojB,UAAW,W,uDAIX,QAAStkB,KAAKC,MAAM+F,OAAOA,OAAO5D,QAAU,yBAAKtC,UAAU,eACtDE,KAAKC,MAAM+F,OAAOA,OAAO3D,KAAI,SAAC6D,EAAON,GAClC,OAAO,kBAAC,GAAD,CAAO4Y,IAAK5Y,EAAOM,MAAOA,Y,GAR5BvG,IAAMkB,WA2BZif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACH8E,OAAQ9E,EAAM8E,OACd/E,KAAMC,EAAMD,SAIpB,SAA4BmK,GACxB,MAAO,CACH0f,aAAc9K,YAAmB8K,EAAc1f,MAIpB2U,CAA6CE,aAAWiW,MC3BrF9C,GAA0B,CAC5BnD,QAAS,CACLjd,SAAU,QACVoK,IAAK,EACLD,KAAM,EACNW,MAAO,EACPF,OAAQ,EACRuB,gBAAiB,sBACjB6L,OAAQ,GAEZkF,QAAU,CACN9S,IAAwB,MACxBD,KAAwB,MACxBW,MAAwB,OACxBF,OAAwB,OACxBmB,SAAwB,QACxBC,SAAwB,QACxB8G,YAAwB,OACxBzH,UAAwB,wBACxB8R,aAAwB,OACxBC,UAAwB,mCACxBtO,QAAwB,OACxB+Q,SAAwB,SAI1B8B,G,yKACU,IAAD,OACPxpB,GAAMC,SAAS,CACXhK,K1F4DmB,kB0F3DnBC,QAAS,CAAC4E,IAAI,EAAO7E,MAAM,KAGK,YAAjCpB,KAAKC,MAAM+F,OAAO7D,MAAMf,MACvBpB,KAAKC,MAAM4e,QAAQnM,KAAnB,iBAAkC1S,KAAKC,MAAM+F,OAAO7D,MAAM8D,KAE1B,WAAjCjG,KAAKC,MAAM+F,OAAO7D,MAAMf,OACvBpB,KAAKC,MAAM4e,QAAQnM,KAAK,KAExB7B,YAAW,WACP,EAAK5Q,MAAM4e,QAAQnM,KAAnB,iBAAkC,EAAKzS,MAAM+F,OAAO7D,MAAM8D,OAC3D,Q,8BAKPkF,GAAMC,SAAS,CACXhK,K1F0CmB,kB0FzCnBC,QAAS,CAAC4E,IAAI,EAAO7E,MAAM,O,+BAIzB,IAAD,OACL,OAAO,kBAAC,KAAD,CACHmvB,OAAQvwB,KAAKC,MAAMswB,OACnBmD,eAAgB,WAAO,EAAK3nB,SAC5BhM,MAAOqzB,GACP5C,aAAa,eAEb,wBAAI1wB,UAAU,cAAcC,MAAO,CAAC2hB,MAAO,SAAU1hB,KAAKC,MAAMuf,UAAU3J,UAE1E,2BAAI7V,KAAKC,MAAMuf,UAAU2W,kBAEzB,4BAAQr2B,UAAU,cAAc2e,QAAS,WAAO,EAAK1S,SAAUhM,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUnL,MAClI,4BAAQvU,UAAU,cAAc2e,QAAS,WAAO,EAAKmH,YAAa7lB,MAAO,CAAC2hB,MAAO,cAAe9B,UAAW,IAAK5f,KAAKC,MAAMuf,UAAUjL,W,GAtCxH5U,IAAMkB,WAwDhBif,0BAASxD,GAATwD,CAAoBC,aAbX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZ+E,OAAQ9E,EAAM8E,WAItB,SAA4BoF,GACxB,MAAO,CACH+e,YAAanK,YAAmBmK,EAAa/e,MAIlB2U,CAA6CE,aAAW0U,MChErFyB,G,4MACFl1B,MAAQ,CACJ+vB,IAAKC,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQF,IACvEhwB,KAAMiwB,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQlwB,KACxEo1B,MAAOnF,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQkF,MACzEC,KAAMpF,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQmF,KACxEC,OAAQrF,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQoF,OAC1EC,QAAStF,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQqF,QAC3EC,UAAWvF,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQsF,UAC7EC,YAAaxF,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQuF,YAC/E7wB,IAAKqrB,KAAG1B,MAAM,EAAKvvB,MAAMgQ,SAASiF,OAAQ,CAAEic,mBAAmB,IAAQtrB,K,kEAGtD,IAAD,OAChB7F,KAAKC,MAAM4e,QAAQ0S,QAAO,SAACthB,GACvB,EAAK+N,SAAS,CACViT,IAAKC,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQF,IAC5DhwB,KAAMiwB,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQlwB,KAC7Do1B,MAAOnF,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQkF,MAC9DC,KAAMpF,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQmF,KAC7DC,OAAQrF,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQoF,OAC/DC,QAAStF,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQqF,QAChEC,UAAWvF,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQsF,UAClEC,YAAaxF,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQuF,YACpE7wB,IAAKqrB,KAAG1B,MAAMvf,EAASiF,OAAQ,CAAEic,mBAAmB,IAAQtrB,W,+BAK9D,IAAD,OACL,OAAO,oCACH,kBAAC,GAAD,CAAY0qB,OAA2B,YAAnBvwB,KAAKkB,MAAM+vB,IAAmBllB,MAAO,WACrD,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIhB,kBAAC,GAAD,CAAcqb,OAA2B,YAAnBvwB,KAAKkB,MAAM+vB,IAAmBllB,MAAO,WACvD,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIflV,KAAKkB,MAAMD,MAAQ,kBAAC,GAAD,CAAMiC,OAAQlD,KAAKkB,MAAMD,KAAM8K,MAAO,WACtD,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,UAIblV,KAAKC,MAAMgB,KAAKD,SAAW,kBAAC,GAAD,CAASuvB,SAAUvwB,KAAKC,MAAMgB,KAAKD,UAEhEhB,KAAKkB,MAAMo1B,MAAiC,SAAzBt2B,KAAKC,MAAMgB,KAAK6jB,MAAmB,kBAAC6R,GAAD,CAAMzzB,OAAQlD,KAAKkB,MAAMo1B,KAAMvqB,MAAO,WACzF,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIflV,KAAKkB,MAAMq1B,QAAmC,SAAzBv2B,KAAKC,MAAMgB,KAAK6jB,MAAmB,kBAAC8R,GAAD,CAAQ1zB,OAAQlD,KAAKkB,MAAMq1B,OAAQxqB,MAAO,WAC/F,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIflV,KAAKkB,MAAMs1B,SAAoC,SAAzBx2B,KAAKC,MAAMgB,KAAK6jB,MAAmB,kBAAC+R,GAAD,CAAS3zB,OAAQlD,KAAKkB,MAAMs1B,QAASzqB,MAAO,WAClG,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIflV,KAAKkB,MAAM2E,KAAgC,SAAzB7F,KAAKC,MAAMgB,KAAK6jB,MAAmB,kBAAC,GAAD,CAAK5hB,OAAQlD,KAAKkB,MAAM2E,IAAKkG,MAAO,WACtF,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIflV,KAAKkB,MAAMu1B,WAAsC,SAAzBz2B,KAAKC,MAAMgB,KAAK6jB,MAAmB,kBAACgS,GAAD,CAAW5zB,OAAQlD,KAAKkB,MAAMu1B,UAAW1qB,MAAO,WACxG,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIflV,KAAKkB,MAAMw1B,aAAwC,SAAzB12B,KAAKC,MAAMgB,KAAK6jB,MAAmB,kBAACiS,GAAD,CAAY7zB,OAAQlD,KAAKkB,MAAMw1B,YAAa3qB,MAAO,WAC7G,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIhB,kBAAC,GAAD,CAAUqb,OAA6B,aAArBvwB,KAAKkB,MAAMm1B,MAAsBtqB,MAAO,WACtD,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIhB,kBAAC,GAAD,CAAUqb,OAA6B,aAArBvwB,KAAKkB,MAAMm1B,MAAsBtqB,MAAO,WACtD,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIM,YAArBlV,KAAKkB,MAAMm1B,OAAuB,kBAACW,GAAD,CAASzG,OAA6B,YAArBvwB,KAAKkB,MAAMm1B,MAAqBtqB,MAAO,WACvF,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIM,aAArBlV,KAAKkB,MAAMm1B,OAAwB,kBAAC,GAAD,CAAU9F,OAA6B,aAArBvwB,KAAKkB,MAAMm1B,MAAsBtqB,MAAO,WAC1F,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIhB,kBAAC+hB,GAAD,CAAQ1G,OAA2B,WAAnBvwB,KAAKkB,MAAM+vB,KAAoBjxB,KAAKC,MAAMgC,MAAMF,WAAYgK,MAAO,WAC/E,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAII,aAAnBlV,KAAKkB,MAAM+vB,KAAsBjxB,KAAKC,MAAMgC,MAAMF,aAAe/B,KAAKC,MAAMgB,KAAKsB,MAAQvC,KAAKC,MAAMgC,MAAMF,WAAWyvB,SAAqC,UAAzBxxB,KAAKC,MAAMgB,KAAK6jB,MAA6C,UAAzB9kB,KAAKC,MAAMgB,KAAK6jB,OAAqB,kBAACoS,GAAD,CAAU3G,OAA2B,aAAnBvwB,KAAKkB,MAAM+vB,KAAsBjxB,KAAKC,MAAMgC,MAAMF,WAAYgK,MAAO,WAC9R,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAII,eAAnBlV,KAAKkB,MAAM+vB,KAAwBjxB,KAAKC,MAAMgC,MAAMF,aAAe/B,KAAKC,MAAMgB,KAAKsB,MAAQvC,KAAKC,MAAMgC,MAAMF,WAAWyvB,SAAoC,UAAzBxxB,KAAKC,MAAMgB,KAAK6jB,MAA6C,UAAzB9kB,KAAKC,MAAMgB,KAAK6jB,OAAqB,kBAAC,GAAD,CAAYyL,OAA2B,eAAnBvwB,KAAKkB,MAAM+vB,KAAwBjxB,KAAKC,MAAMgC,MAAMF,WAAYgK,MAAO,WACnS,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,QAIhB,kBAACiiB,GAAD,CAAS5G,SAAUvwB,KAAKC,MAAMoE,QAAQC,gBAAgBlC,OAAQ2J,MAAO,SAACrL,GAClE,EAAKT,MAAMmL,SAAS,CAChBhK,K3F3Ge,sB2F4GfC,QAAS,QAIK,WAArBrB,KAAKkB,MAAMm1B,SAAwBr2B,KAAKC,MAAMsG,OAAO5C,OAAOvB,QAAU,kBAAC,GAAD,CAAQwD,MAAO5F,KAAKC,MAAMsG,OAAOX,MAAOjC,OAAQ3D,KAAKC,MAAMsG,OAAO5C,OAAQoI,MAAO,WACpJ,EAAK9L,MAAMmL,SAAS,CAChBhK,K3F3EM,a2F4ENC,QAAS,CACLsC,OAAQ,GACRiC,MAAO,KAGf,EAAK3F,MAAM4e,QAAQwV,YAGtBr0B,KAAKC,MAAMoxB,MAAMC,OAAOrrB,IAA2B,gBAArBjG,KAAKkB,MAAMm1B,OAA2B,kBAACe,GAAD,CACjE7G,OAAQvwB,KAAKC,MAAMoxB,MAAMC,OAAOrrB,IAA2B,gBAArBjG,KAAKkB,MAAMm1B,MACjD7xB,SAAUxE,KAAKC,MAAMoxB,MAAMC,OAAOrrB,GAClC8F,MAAO,WACH,EAAK9L,MAAM4e,QAAQnM,KAAK,CACpBwC,OAAQ,UAKjBlV,KAAKC,MAAMgC,MAAME,OAAS,kBAACk1B,GAAD,CAAe9G,QAAQ,IAEnDvwB,KAAKC,MAAM0F,KAAK1E,MAAyC,iBAAjCjB,KAAKC,MAAM0F,KAAKxD,MAAMzB,QAA6B,kBAAC42B,GAAD,CAAiB/G,QAAQ,IACnE,eAAjCvwB,KAAKC,MAAM0F,KAAKxD,MAAMzB,QAA2B,kBAAC62B,GAAD,CAAgBhH,QAAQ,MACvEvwB,KAAKC,MAAM+F,OAAO7D,MAAM8D,IAAM,kBAACuxB,GAAD,CAAYjH,QAAQ,IAEpDvwB,KAAKC,MAAM0F,KAAK1E,OAASjB,KAAKC,MAAM0F,KAAKxD,MAAMzB,QAAU,kBAAC,GAAD,CAAM6vB,QAAQ,IAExE,kBAAC,GAAD,W,GArKY5wB,IAAMkB,WAqLfkf,gBAXS,SAAA7e,GACpB,MAAO,CACHe,MAAOf,EAAMe,MACbhB,KAAMC,EAAMD,KACZoD,QAASnD,EAAMmD,QACfsB,KAAMzE,EAAMyE,KACZY,OAAQrF,EAAMqF,OACdP,OAAQ9E,EAAM8E,UAIP+Z,CAAyBE,aAAWmW,KChM7CqB,G,4MACJv2B,MAAQ,CACNw2B,UAAU,G,EAwFZC,aAAe,YAA4B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,6BACxC,OACE,kBAAC,KAAD,iBACMA,EADN,CAEEC,OAAQ,kBACN,EAAK73B,MAAMgB,KAAKF,OAAS,EAAKd,MAAM4F,IAAIA,IAAM,kBAAC,KAAD,CAC9CuU,GAAI,CACFlK,SAAU,UAGT,oCACE0nB,EACD,kBAAC,GAAD,OAGF,kBAAC,KAAD,CACExd,GAAI,CACFlK,SAAU,iB,EASxB6nB,UAAY,YAA4B,IAAzBH,EAAwB,EAAxBA,SAAaC,EAAW,6BACrC,OACE,kBAAC,KAAD,iBACMA,EADN,CAEEC,OAAQ,kBACL,EAAK73B,MAAMgB,KAAKF,OAOf,kBAAC,KAAD,CACEqZ,GAAI,CACFlK,SAAU,OATW,EAAKjQ,MAAM4F,IAAIA,IAAM,kBAAC,KAAD,CAChDuU,GAAI,CACFlK,SAAU,UAGV0nB,O,kEAzHW,IAAD,OAClB53B,KAAKC,MAAM4e,QAAQ0S,QAAO,WACxBrqB,GAAS,EAAKjH,MAAM4e,QAAQ5O,SAASC,SAAUmiB,OAGjDnrB,GAASlH,KAAKC,MAAM4e,QAAQ5O,SAASC,SAAUmiB,IAL7B,IAQdrjB,EADgBhP,KAAKC,MAAjBylB,QACesS,IAAI,YAEvBhpB,EACFI,MAAM,GAAD,OAAI7B,GAAJ,gBAA0B,CAC7B8B,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1BjF,MAAK,SAAC0F,GAAD,OAAcA,EAASC,UAC5B3F,MAAK,YAA4E,IAA1E9I,EAAyE,EAAzEA,KAAMoD,EAAmE,EAAnEA,QAASE,EAA0D,EAA1DA,YAAayL,EAA6C,EAA7CA,oBAAqBnK,EAAwB,EAAxBA,IAAKE,EAAmB,EAAnBA,QAASD,EAAU,EAAVA,KAClED,EACDsF,GAAMC,SAAS,CACbhK,K5FiDS,U4FhDTC,QAAS,CAAC0E,UAASD,WAGrByE,GAAiBwE,KAAKC,GACtB,EAAK/O,MAAMkkB,YAAYd,UAAUpiB,EAAMoD,EAASE,EAAayL,EAAqBhB,IAEpF,EAAKgP,SAAS,CAAC0Z,UAAU,OAE1B1tB,OAAM,WACLqG,aAAaC,QAAQ,SAAUT,KAAKC,UAAU,KAC9C,EAAKkO,SAAS,CAAC0Z,UAAU,QAG7BrnB,aAAaC,QAAQ,SAAUT,KAAKC,UAAU,KAC9C9P,KAAKge,SAAS,CAAC0Z,UAAU,O,+BAInB,IAAD,OACP,OAAO13B,KAAKkB,MAAMw2B,UAAa,oCAC7B,kBAAC,KAAD,KACKrF,GAAOhwB,KAAI,SAAC41B,EAAOryB,GAChB,OAAQqyB,EAAM72B,MACV,IAAK,OACD,OAAO,kBAAC,EAAK22B,UAAN,CACHvZ,IAAK5Y,EACLuB,KAAM8wB,EAAM9wB,KACZmrB,MAAO2F,EAAM3F,OAEb,kBAAC2F,EAAM/K,UAAP,OAGR,IAAK,OACD,OAAO,kBAAC,EAAKyK,aAAN,CACHnZ,IAAK5Y,EACLuB,KAAM8wB,EAAM9wB,KACZmrB,MAAO2F,EAAM3F,OAEb,kBAAC2F,EAAM/K,UAAP,OAER,IAAK,MACH,OAAO,EAAKjtB,MAAM4F,IAAIA,IAAM,kBAAC,GAAD,MAAU,kBAAC,KAAD,CACtCuU,GAAI,CACFlK,SAAU,OAId,QACI,OAAO,MAQnB,kBAAC,KAAD,CAAOgd,UAAWqF,W,GArFJ5yB,IAAMkB,WA0Jfkf,oBAdS,SAAC7e,GACvB,MAAO,CACLD,KAAMC,EAAMD,KACZ4E,IAAK3E,EAAM2E,QAIf,SAA4BuF,GAC1B,MAAO,CACL+Y,YAAanE,YAAmBmE,EAAa/Y,GAC7C0f,aAAc9K,YAAmB8K,EAAc1f,MAIpC2U,CAGboG,aAAYlG,aAAWwX,MCnKnBS,G,kDACF,WAAYj4B,GAAQ,IAAD,8BACf,cAAMA,IACD0gB,aAAe,SAACqF,GACjB,EAAKhI,SAAS,CAACma,WAAYnS,KAG/B,EAAK9kB,MAAQ,CACTi3B,YAAY,EACZxX,aAAc,EAAKA,cARR,E,qDAef,OACI,kBAACjhB,EAAa04B,SAAd,CAAuBpS,MAAOhmB,KAAKkB,OAC9BlB,KAAKC,MAAMgB,KAAKF,QAAUf,KAAKC,MAAMoG,IAAID,YAAc,yBAAKtG,UAAU,yBACnE,kBAACgjB,GAAA,EAAD,CAAkB/iB,MAAO,CACrBY,MAAO,OACP+gB,MAAO,GACPzC,OAAQ,GACR6G,YAAa,MAEjB,8BAAO9lB,KAAKC,MAAMuf,UAAUpZ,WAA5B,QAGJ,yBAAKtG,UAAU,mBACX,yBAAKA,UAAU,OACVE,KAAKC,MAAMgB,KAAKF,QAAU,kBAAC,GAAD,CAAayjB,KAAMxkB,KAAKkB,MAAMi3B,aACzD,kBAAC,GAAD,MACA,kBAAC,YAAD,CAAWv2B,KAAM5B,KAAKC,MAAMgB,KAAKF,OAASf,KAAKC,MAAMgB,KAAKW,KAAO,c,GAhCvEjC,IAAMkB,WA+CTif,sBAASxD,GAATwD,CAAoBC,aAPX,SAAA7e,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZoF,IAAKnF,EAAMmF,OAIgB0Z,CAAyBmY,KCnDxCG,QACW,cAA7BpwB,OAAOgI,SAASqoB,UAEe,UAA7BrwB,OAAOgI,SAASqoB,UAEhBrwB,OAAOgI,SAASqoB,SAASjH,MACvB,2D,cCONkH,KAAMC,cAAc,SAEpBC,IAASX,OACL,kBAACY,GAAA,EAAD,KACI,kBAAC,IAAD,CAAUvtB,MAAOA,IACb,kBAAC,KAAD,KACI,kBAAC,GAAD,MACA,kBAAC,KAAD,SAIZ5D,SAAS+V,eAAe,SD+FtB,kBAAmB7T,WACrBA,UAAUkvB,cAAcC,MACrB7uB,MAAK,SAAA8uB,GACJA,EAAaC,gBAEd9uB,OAAM,SAAAjH,GACL4H,QAAQ5H,MAAMA,EAAMM,c","file":"static/js/main.051918b0.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img alt={this.props.name} src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR,\r\n    USER_EDIT,\r\n    USER_SET_LANG,\r\n    USER_SET_WARNING\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false,\r\n    warning: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false, warning: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        case USER_EDIT:\r\n            return { ...state, name: {first: action.payload.firstName, last: action.payload.lastName}, city: action.payload.city }\r\n        case USER_SET_LANG:\r\n            return { ...state, lang: action.payload }\r\n        case USER_SET_WARNING:\r\n            return { ...state, warning: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\nexport const USER_EDIT = 'USER_EDIT'\r\nexport const USER_SET_LANG = 'USER_SET_LANG'\r\nexport const USER_SET_WARNING = 'USER_SET_WARNING'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\nexport const ROOMS_PRELOAD = 'ROOMS_PRELOAD'\r\nexport const ROOMS_SET_MUTED = 'ROOMS_SET_MUTED'\r\nexport const ROOMS_SET_FORCE = 'ROOMS_SET_FORCE'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\nexport const DIALOGS_PRELOAD = 'DIALOGS_PRELOAD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'\r\nexport const CALL_SET_FORCE = 'CALL_SET_FORCE'\r\n\r\n// Slider\r\nexport const SLIDER_SET = 'SLIDER_SET'\r\n\r\n// Ban\r\nexport const BAN_SET = 'BAN_SET'\r\n\r\n// Toasts\r\nexport const TOASTS_ADD = 'TOASTS_ADD'\r\nexport const TOASTS_REMOVE = 'TOASTS_REMOVE'\r\nexport const TOAST_SET_FORCE = 'TOAST_SET_FORCE'\r\n\r\n// App\r\nexport const APP_SET_STATUS_NETWORK = 'APP_SET_STATUS_NETWORK'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: [],\r\n    canLoad: false,\r\n    force: false\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true, canLoad: action.payload.length === 20 }\r\n        }\r\n        case ROOMS_PRELOAD:\r\n            return { ...state, rooms: [ ...state.rooms, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false, muted: action.payload.muted} }\r\n        case ROOMS_SET_MUTED:\r\n            return { ...state, activeRoom: {...state.activeRoom, muted: action.payload} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_SET_FORCE:\r\n            return { ...state, force: action.payload }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId,\r\n                    files: message.files.map(item => {return { ...item, file: false}}),\r\n                    sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                    images: message.images.map(item => {return { ...item, file: false}})\r\n                } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: [],\r\n    canLoad: false\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount, canLoad: action.payload.dialogs.length === 20 }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_PRELOAD:\r\n            return { ...state, dialogs: [ ...state.dialogs, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId, \r\n                            files: message.files.map(item => {return { ...item, file: false}}),\r\n                            sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                            images: message.images.map(item => {return { ...item, file: false}})\r\n                         } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA,\r\n    CALL_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio',\r\n    force: {user: false, status: false}\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        case CALL_SET_FORCE:\r\n            return { ...state, force: {user: action.payload.user, status: action.payload.status} }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { \r\n    SLIDER_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    images: [],\r\n    index: 0\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SLIDER_SET: {\r\n            return { ...state, images: action.payload.images, index: action.payload.index }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { \r\n    BAN_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    ban: false,\r\n    date: '',\r\n    numDate: 0\r\n}\r\n\r\nconst ban = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case BAN_SET:\r\n            return { ...state, ban: true, date: action.payload.date, numDate: action.payload.numDate }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default ban","import { \r\n    TOASTS_ADD,\r\n    TOASTS_REMOVE,\r\n    TOAST_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    toasts: [],\r\n    force: {id: false, type: false}\r\n}\r\n\r\nconst toasts = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case TOASTS_ADD:\r\n            return { ...state, toasts: [ {...action.payload.toast, toastType: action.payload.toastType}, ...state.toasts ] }\r\n        case TOASTS_REMOVE:\r\n            return { ...state, toasts: [...state.toasts.filter(toast => toast._id !== action.payload)] }\r\n        case TOAST_SET_FORCE:\r\n            return { ...state, force: {id: action.payload.id, type: action.payload.type} }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default toasts","import { \r\n    APP_SET_STATUS_NETWORK\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    connecting: false\r\n}\r\n\r\nconst app = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case APP_SET_STATUS_NETWORK:\r\n            return { ...state, connecting: action.payload }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default app","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\nimport slider from './slider'\r\nimport ban from './ban'\r\nimport toasts from './toasts'\r\nimport app from './app'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call,\r\n    slider,\r\n    ban,\r\n    toasts,\r\n    app\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","export function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\n// const RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        if(localStream) {\r\n            localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: localStream.getAudioTracks()[0].enabled\r\n            })\r\n        }\r\n    },\r\n    toggleMusic() {\r\n        if(remoteStream) {\r\n            remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MUSIC,\r\n                payload: remoteStream.getAudioTracks()[0].enabled\r\n            })\r\n        }\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(!!store.getState().call.status === 'active')\r\n            return \r\n            \r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        try {\r\n            let answer = new RTCSessionDescription({\r\n                type: 'answer',\r\n                sdp: sdpAnswer\r\n            })\r\n            \r\n            WebRtcPeerConnection.setRemoteDescription(answer);\r\n    \r\n            let stream = new MediaStream();\r\n    \r\n            for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                stream.addTrack(sender.track);\r\n            }\r\n    \r\n            remoteStream = stream\r\n    \r\n            store.dispatch({\r\n                type: ROOMS_SET_REMOTE_STREAM,\r\n                payload: stream\r\n            })\r\n    \r\n            speechEvents = hark(localStream, {});\r\n     \r\n            speechEvents.on('speaking', function() {\r\n                SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n            });\r\n        \r\n            speechEvents.on('stopped_speaking', function() {\r\n                SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'\r\nexport const timeStamps = [\r\n    {\r\n        time: 60,\r\n        label: '1 minute'\r\n    },\r\n    {\r\n        time: 1800,\r\n        label: '30 minute'\r\n    },\r\n    {\r\n        time: 3600,\r\n        label: '1 hour'\r\n    },\r\n    {\r\n        time: 86400,\r\n        label: '24 hour'\r\n    },\r\n    {\r\n        time: 604800,\r\n        label: '7 days'\r\n    },\r\n    {\r\n        time: 2419200,\r\n        label: '1 month'\r\n    },\r\n    {\r\n        time: 999999999,\r\n        label: 'Forever'\r\n    },\r\n]","import {urlApi} from '../config'\r\n\r\nconst CTX = new (window.AudioContext || window.webkitAudioContext)()\r\n\r\nlet newMessageSound = new Audio(`${urlApi}/sounds/NewMessage.mp3`)\r\nlet beep = new Audio(`${urlApi}/sounds/Beep.mp3`)\r\nlet rington = new Audio(`${urlApi}/sounds/Rington.mp3`)\r\n\r\nsetInterval(() => {\r\n    CTX.resume().then(() => {})\r\n}, 3000)\r\n\r\nbeep.addEventListener(\"ended\", function() {\r\n    beep.currentTime = 0;\r\n    let promise = beep.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n});\r\n\r\nrington.addEventListener(\"ended\", function() {\r\n    rington.currentTime = 0;\r\n    let promise = rington.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n});\r\n\r\nexport const playNewMessage = () => {\r\n    newMessageSound.currentTime = 0\r\n    let promise = newMessageSound.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n}\r\n\r\nexport const playBeep = () => {\r\n    beep.currentTime = 0\r\n    \r\n    let promise = beep.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n}\r\n\r\nexport const stopBeep = () => {\r\n    beep.currentTime = 0\r\n    beep.pause()\r\n}\r\n\r\nexport const playRington = () => {\r\n    rington.currentTime = 0\r\n    \r\n    let promise = rington.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n}\r\n\r\nexport const stopRington = () => {\r\n    rington.currentTime = 0\r\n    rington.pause()\r\n}","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_LEAVE_ROOM,\r\n    USER_SET_WARNING,\r\n    TOASTS_ADD,\r\n    TOASTS_REMOVE,\r\n    USER_LOGOUT,\r\n    BAN_SET,\r\n    USER_LOGIN,\r\n    DIALOGS_GET,\r\n    APP_SET_STATUS_NETWORK,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET,\r\n    NOTIFICATIONS_GET,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_UPDATE_ONLINE\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\nimport {playNewMessage, stopBeep, playRington, stopRington} from './SoundController'\r\nimport { setForceTitle } from './FunctionsController'\r\n\r\nlet socket = false\r\nlet activeLang = false\r\nlet unmuteTimer = false\r\nlet counterConnect = 0\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        if(socket) \r\n            return\r\n\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n\r\n        socket.on('disconnect', () => {\r\n            store.dispatch({\r\n                type: APP_SET_STATUS_NETWORK,\r\n                payload: true\r\n            })\r\n        })\r\n\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n\r\n            if(counterConnect > 0) {\r\n                fetch(`${urlApi}/api/user/me`, {\r\n                    method: \"get\",\r\n                    headers: {\r\n                      Accept: \"application/json\",\r\n                      \"Content-Type\": \"application/json\",\r\n                      Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                  })\r\n                    .then((response) => response.json())\r\n                    .then(({user, dialogs, noReadCount, noReadNotifications, ban, numDate, date}) => {\r\n                      if(ban) {\r\n                        store.dispatch({\r\n                          type: BAN_SET,\r\n                          payload: {numDate, date}\r\n                        })\r\n                      } else {\r\n                        // this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n                        user.apiToken = apiToken\r\n    \r\n                        store.dispatch({\r\n                            type: USER_LOGIN,\r\n                            payload: user\r\n                        })\r\n\r\n                        for (let i = 0; i < dialogs.length; i++) {\r\n                            dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                            if(!dialogs[i].user)\r\n                                dialogs[i].user = dialogs[i].users[0]\r\n\r\n                            dialogs[i].typing = false\r\n                            dialogs[i].getted = false\r\n                            dialogs[i].isLoading = false\r\n\r\n                            if(dialogs[i].lastMessage) {\r\n                                dialogs[i].lastMessage.isLoading = false\r\n                                dialogs[i].lastMessage.isError = false\r\n                            }\r\n\r\n                            if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n                                dialogs[i].noRead = 0\r\n                        }\r\n\r\n                        store.dispatch({\r\n                            type: DIALOGS_GET,\r\n                            payload: {dialogs, noReadCount}\r\n                        })\r\n\r\n                        store.dispatch({\r\n                            type: NOTIFICATIONS_SET_NO_READ,\r\n                            payload: noReadNotifications\r\n                        })\r\n\r\n                        if(window.location.pathname.slice(1, 6) === 'chats') {\r\n                            let userId = window.location.pathname.slice(7, 31)\r\n\r\n                            fetch(`${urlApi}/api/dialog/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({dialog, messages}) => {\r\n                                dialog.messages = messages.reverse()\r\n                        \r\n                                store.dispatch({\r\n                                    type: DIALOGS_LOAD,\r\n                                    payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n                                })\r\n                            });\r\n                        }\r\n                      }\r\n                    })\r\n                    .catch(() => {\r\n                        localStorage.setItem('drafts', JSON.stringify([]));\r\n                    //   this.setState({isRender: true})\r\n                        store.dispatch({\r\n                            type: USER_LOGOUT\r\n                        })\r\n                    })\r\n\r\n                if(store.getState().notifications.getted) {\r\n                    fetch(`${urlApi}/api/notification/get-all`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        }\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then((notifications) => {\r\n                        store.dispatch({\r\n                            type: NOTIFICATIONS_GET,\r\n                            payload: notifications\r\n                        })\r\n                    });\r\n                }\r\n                \r\n                if(store.getState().rooms.getted) {\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_GET,\r\n                    })\r\n                \r\n                    fetch(`${urlApi}/api/room/get-all`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            lang: store.getState().user.roomLang\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then((rooms) => {\r\n                        store.dispatch({\r\n                            type: ROOMS_GET,\r\n                            payload: rooms\r\n                        })\r\n                    })\r\n                    .catch((err) => {\r\n                        store.dispatch({\r\n                            type: ROOMS_GET_ERROR,\r\n                        })\r\n                    })\r\n                }\r\n                    \r\n                if(activeLang)\r\n                    socket.emit('leaveLang', activeLang)\r\n                \r\n                socket.emit('joinLang', store.getState().user.roomLang)\r\n                activeLang = store.getState().user.roomLang\r\n\r\n                let activeRoom = store.getState().rooms.activeRoom\r\n\r\n                if(!!activeRoom) {\r\n                    WebRtcController.leaveRoom({roomId: activeRoom._id, lang: activeRoom.lang})\r\n                    store.dispatch({\r\n                        type: ROOMS_LEAVE_ROOM\r\n                    })\r\n\r\n                    fetch(`${urlApi}/api/room/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json',\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            id: activeRoom._id,\r\n                            socketId: socket.id\r\n                        })\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then((data) => {\r\n                        if(data.error) {\r\n                            setForceTitle('Error')\r\n            \r\n                            store.dispatch({\r\n                                type: ROOMS_JOIN_ERROR,\r\n                                payload: data.errors[0]\r\n                            })\r\n                            \r\n                            return\r\n                        } else {\r\n                            let room = data.room\r\n                            let muted = data.muted\r\n            \r\n                            room.dialog.messages = room.dialog.messages.reverse()\r\n            \r\n                            room.users.map(x => {\r\n                                x.speaking = false\r\n                                return 1\r\n                            })\r\n            \r\n                            setForceTitle(room.title)\r\n            \r\n                            store.dispatch({\r\n                                type: ROOMS_JOIN_ROOM,\r\n                                payload: {room, canLoad: room.dialog.messages.length === 50, muted}\r\n                            })\r\n            \r\n                            if(unmuteTimer) {\r\n                                clearTimeout(unmuteTimer)\r\n                            }\r\n            \r\n                            if(muted && (new Date(muted.date).getTime() - new Date().getTime()) <= 86400000) {\r\n                                unmuteTimer = setTimeout(() => {\r\n                                    if(store.getState().rooms.activeRoom && \r\n                                    store.getState().rooms.activeRoom._id === room._id && \r\n                                    !!store.getState().rooms.activeRoom.muted && \r\n                                    store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                                        store.dispatch({\r\n                                            type: ROOMS_SET_MUTED,\r\n                                            payload: false\r\n                                        })\r\n                                    }\r\n                                    // console.log(unmuteTimer)\r\n                                }, (new Date(muted.date).getTime() - new Date().getTime()) );\r\n                            }\r\n\r\n                            socket.emit('joinRoom', {roomId: room._id, lang: room.lang, userId: store.getState().user._id})\r\n            \r\n                            try {\r\n                                WebRtcController.connectRoom(room._id)\r\n                            } catch (err) {\r\n                                socket.emit('leaveRoom', {roomId: room._id, lang: room.lang})\r\n                                store.dispatch({\r\n                                    type: ROOMS_JOIN_ERROR,\r\n                                    payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        store.dispatch({\r\n                            type: ROOMS_JOIN_ERROR,\r\n                            payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                        })\r\n                    })\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: APP_SET_STATUS_NETWORK,\r\n                    payload: false\r\n                })\r\n            }\r\n\r\n            counterConnect++\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n\r\n            if(message.user._id !== store.getState().user._id && `/chats/${message.user._id}` !== window.location.pathname) {\r\n                playNewMessage()\r\n\r\n                store.dispatch({\r\n                    type: TOASTS_ADD,\r\n                    payload: {toast: message, toastType: 'message'}\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: TOASTS_REMOVE,\r\n                        payload: message._id\r\n                    })\r\n                }, 5000)\r\n            }\r\n\r\n            if(message.user._id !== store.getState().user._id)\r\n                store.dispatch({\r\n                    type: DIALOGS_UPDATE_ONLINE,\r\n                    payload: {userId: message.user._id, online: true, onlineAt: Date.now()}\r\n                })\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted) {\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            } else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: TOASTS_ADD,\r\n                payload: {toast: notification, toastType: 'notification'}\r\n            })\r\n\r\n            setTimeout(() => {\r\n                store.dispatch({\r\n                    type: TOASTS_REMOVE,\r\n                    payload: notification._id\r\n                })\r\n            }, 5000)\r\n\r\n            playNewMessage()\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n\r\n            store.dispatch({\r\n                type: TOASTS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n\r\n            let dialog = store.getState().dialogs.dialogs.find(x => x._id === dialogId)\r\n            if(userId === store.getState().user._id && !!dialog)\r\n                store.dispatch({\r\n                    type: DIALOGS_UPDATE_ONLINE,\r\n                    payload: {userId: dialog.user._id, online: true, onlineAt: Date.now()}\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n\r\n                if(userId !== store.getState().user._id)\r\n                    store.dispatch({\r\n                        type: DIALOGS_UPDATE_ONLINE,\r\n                        payload: {userId: userId, online: true, onlineAt: Date.now()}\r\n                    })\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                playRington()\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n                stopBeep()\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                stopBeep()\r\n                stopRington()\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('muteRoom', ({roomId, muted}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: muted\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if((muted.numDate*1000) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === roomId && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                    }, muted.numDate*1000);\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('unmuteRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: false\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('banRoom', ({roomId, ban}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                WebRtcController.leaveRoom({roomId, lang: store.getState().rooms.activeRoom.lang})\r\n                store.dispatch({\r\n                    type: ROOMS_LEAVE_ROOM\r\n                })\r\n                store.dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {msg: 'you_banned_in_this_room', ban: ban}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendWarning', warning => {\r\n            store.dispatch({\r\n                type: USER_SET_WARNING,\r\n                payload: warning\r\n            })\r\n        })\r\n\r\n        socket.on('ban', async () => {\r\n            window.location.reload()\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', activeLang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogsLoad = (apiToken) => (dispatch) => {\r\n    if(store.getState().dialogs.canLoad) {\r\n        dispatch({\r\n            type: DIALOGS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/dialog/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastDialogId: store.getState().dialogs.dialogs[store.getState().dialogs.dialogs.length-1]._id,\r\n                firstDialogId: store.getState().dialogs.dialogs[0]._id\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dialogs) => {\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n                \r\n                if(existDialog) {\r\n                    dialogs[i] = existDialog\r\n                } else {\r\n                    dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n    \r\n                    if(!dialogs[i].user)\r\n                        dialogs[i].user = dialogs[i].users[0]\r\n    \r\n                    dialogs[i].typers = []\r\n                }\r\n            }\r\n            \r\n            dispatch({\r\n                type: DIALOGS_PRELOAD,\r\n                payload: dialogs\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 1)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","export default {\r\n    ru: {\r\n        settings: 'Настройки',\r\n        change_profile: 'Изменить профиль',\r\n        language: 'Язык',\r\n        logout: 'Выйти',\r\n        back: 'Назад',\r\n        save: 'Сохранить',\r\n        next: 'Продолжить',\r\n        firstName: 'Имя',\r\n        lastName: 'Фамилия',\r\n        city: 'Город',\r\n        last_name_not_empty: 'Фамилия не может быть пустой',\r\n        first_name_not_empty: 'Имя не может быть пустым',\r\n        title_not_empty: 'Заголовок не может быть пустым',\r\n        rooms: 'Комнаты',\r\n        create_room: 'Создать комнату',\r\n        something_goes_wrong: 'Что-то пошло не так...',\r\n        chats: 'Чаты',\r\n        notifications: 'Уведомления',\r\n        contacts: 'Контакты',\r\n        friends: 'Друзья',\r\n        inbox: 'Входящие',\r\n        outbox: 'Исходящие',\r\n        you_dont_have_friends: 'У вас нет друзей, давайте добавим их',\r\n        search: 'Поиск',\r\n        message: 'Сообщение',\r\n        call: 'Позвонить',\r\n        accept: 'Принять',\r\n        decline: 'Отклонить',\r\n        not_indicated: 'Не указано',\r\n        plus_friend: '+ Друг',\r\n        remove: \"Удалить\",\r\n        english: 'Английский',\r\n        russian: 'Русский',\r\n        you: 'Вы',\r\n        write_message: 'Напишите сообщение...',\r\n        show_investments: 'Показать вложения',\r\n        you_sure: 'Вы уверены?',\r\n        delete: 'Удалить',\r\n        delete_room: 'Удалить комнату',\r\n        invite_friends: 'Пригласить друзей',\r\n        edit_room: 'Изменить комнату',\r\n        investments: 'Вложения',\r\n        photos: 'Фотографии',\r\n        sounds: 'Аудио',\r\n        files: 'Файлы',\r\n        online: 'онлайн',\r\n        missed_call: 'Пропущенный звонок',\r\n        outcoming_call: 'Исходящий звонок',\r\n        incoming_call: 'Входящий звонок',\r\n        canceled_call: 'Отменённый звонок',\r\n        select_language: 'Выберите язык',\r\n        users_not_found: 'Пользователи не найдены',\r\n        user_not_found: 'Пользователь не найден',\r\n        reply: 'Ответить',\r\n        forward: 'Переслать',\r\n        title: 'Название',\r\n        new_room: 'Новая комната',\r\n        invite: 'Пригласить',\r\n        private_room: 'Приватная комната',\r\n        start: 'Начать',\r\n        select_users: 'Выберите пользователей',\r\n        new_chat: 'Новый чат',\r\n        invited_you_to_the_room: 'Пригласил(а) вас в комнату',\r\n        accept_your_friend_request: 'Принял(а) ваш запрос в друзья',\r\n        send_you_friend_request: 'Отправил(а) вам запрос в друзья',\r\n        you_are_not_invited: 'Вы не были приглашенны в эту комнату',\r\n        january: 'Январь',\r\n        february: 'Февраль',\r\n        march: 'Март',\r\n        april: 'Апрель',\r\n        may: 'Май',\r\n        june: 'Июнь',\r\n        july: 'Июль',\r\n        august: 'Август',\r\n        september: 'Сентябрь',\r\n        october: 'Октябрь',\r\n        november: 'Ноябрь',\r\n        december: 'Декабрь',\r\n        jan: 'Янв',\r\n        feb: 'Фев',\r\n        mar: 'Мар',\r\n        apr: 'Апр',\r\n        jun: 'Июн',\r\n        jul: 'Июл',\r\n        aug: 'Авг',\r\n        sep: 'Сен',\r\n        oct: 'Окт',\r\n        nov: 'Ноя',\r\n        dec: 'Дек',\r\n        in: 'в',\r\n        yerstaday: 'вчера',\r\n        today: 'сегодня',\r\n        just_now: 'только что',\r\n        here_wiil_placed_your_notifications: 'Здесь будут находиться ваши уведомления',\r\n        create_your_first_room: 'Создайте свою первую комнату в этом языке',\r\n        you_dont_have_chats: 'У вас нет чатов, давайте создадим его',\r\n        write_your_first_message: 'Напишите свое первое сообщение для',\r\n        typing: 'печатает',\r\n        attachment_messages: 'Прикрепленные сообщения',\r\n        messages: 'Сообщения',\r\n        have_max_rooms: 'Создано максимальное кол-во комнат',\r\n        room_exist: 'Комната с таким именем существует',\r\n        have_active_call: 'Имеется активный звонок',\r\n        error: 'Ошибка',\r\n        force_accept_text: 'Если вы примите личный звонок, то ваш звонок в комнате завершится.',\r\n        force_join_text: 'Если вы перейдете в комнату, текущий личный звонок завершится.',\r\n        force_place_text: 'Если вы совершите личный звонок, то ваш звонок в комнате завершится.',\r\n        delete_room_text: 'После удаления вы и присутсвующие в комнате останутся в ней, но больше никто не сможет зайти.',\r\n        close: 'Закрыть',\r\n        user_busy: 'Пользователь занят...',\r\n        cancel_your_call: 'отклонил ваш звонок',\r\n        empty_inv_files: 'Здесь будут находиться файды из этого диалога',\r\n        empty_inv_sounds: 'Здесь будет находиться аудио из этого диалога',\r\n        empty_inv_images: 'Здесь будут находиться изображения из этого диалога',\r\n        you_banned_in_this_room: 'Вы заблокированны в этой комнате',\r\n        to: 'до',\r\n        incoming_request_empty: 'Здесь будут отображаться входящие запросы',\r\n        outgoing_request_empty: 'Здесь будут отображаться исходящие запросы',\r\n        day_1: 'день',\r\n        day_2: 'дня',\r\n        day_5: 'дней',\r\n        minute_1: 'минуту',\r\n        minute_2: 'минуты',\r\n        minute_5: 'минут',\r\n        hour_1: 'час',\r\n        hour_2: 'часа',\r\n        hour_5: 'часов',\r\n        week_1: 'неделю',\r\n        week_2: 'недели',\r\n        week_5: 'недель',\r\n        ago: 'назад',\r\n        first_name_not_empty: 'Имя не должно быть пустым',\r\n        first_name_is_string: 'Имя должно быть строкой',\r\n        first_name_is_min: 'Имя должно содержать минимум 2 символа',\r\n        last_name_not_empty: 'Фамилия не должна быть пустой',\r\n        last_name_is_string: 'Фамилия должно быть строкой',\r\n        last_name_is_min: 'Фамилия должно содержать минимум 2 символа',\r\n        email_is_invalid: 'Email неверный',\r\n        email_not_empty: 'Email не может быть пустым',\r\n        password_is_min: 'Пароль должен содержать минимум 8 символов',\r\n        email_or_password_wrong: 'Email или пароль неверный',\r\n        email_already: 'Email уже занят',\r\n        connecting: 'Подключение',\r\n        you_have_invite_users: \"Вы уже приглашали некоторых пользователей\",\r\n        invited_sents: \"Приглашения отправленны!\",\r\n        force_toast_text: 'После перехода вы будете отключены от активной комнаты.'\r\n    },\r\n    en: {\r\n        settings: 'Settings',\r\n        change_profile: 'Change profile',\r\n        language: 'Language',\r\n        logout: 'Logout',\r\n        back: 'Back',\r\n        save: 'Save',\r\n        next: 'Next',\r\n        firstName: 'First name',\r\n        lastName: 'Last name',\r\n        city: 'City',\r\n        last_name_not_empty: 'First name cannot be empty',\r\n        first_name_not_empty: 'Last name cannot be empty',\r\n        title_not_empty: 'Title cannot be empty',\r\n        rooms: 'Rooms',\r\n        create_room: 'Create room',\r\n        something_goes_wrong: 'Something goes wrong...',\r\n        chats: 'Chats',\r\n        notifications: 'Notifications',\r\n        contacts: 'Contacts',\r\n        friends: 'Friends',\r\n        inbox: 'Inbox',\r\n        outbox: 'Outbox',\r\n        you_dont_have_friends: 'You dont have friends, lets add him',\r\n        search: 'Search',\r\n        message: 'Message',\r\n        call: 'Call',\r\n        accept: 'Accept',\r\n        decline: 'Decline',\r\n        not_indicated: 'Not indicated',\r\n        plus_friend: '+ Friend',\r\n        remove: \"Remove\",\r\n        english: 'English',\r\n        russian: 'Russian',\r\n        you: 'You',\r\n        write_message: 'Write message...',\r\n        show_investments: 'Show investments',\r\n        outcoming_call: 'Outcoming call',\r\n        incoming_call: 'Incoming call',\r\n        online: 'online',\r\n        invite: 'Invite',\r\n        delete_room: 'Delete room',\r\n        invite_friends: 'Invite friends',\r\n        edit_room: 'Edit room',\r\n        you_sure: 'You sure?',\r\n        delete: 'Delete',\r\n        investments: 'Investments',\r\n        photos: 'Photos',\r\n        sounds: 'Sounds',\r\n        files: 'Files',\r\n        missed_call: 'Missed call',\r\n        canceled_call: 'Canceled call',\r\n        select_language: 'Select language',\r\n        users_not_found: 'Users not found',\r\n        user_not_found: 'User not found',\r\n        reply: 'Reply',\r\n        forward: 'Forward',\r\n        title: 'Title',\r\n        new_room: 'New room',\r\n        private_room: 'Private room',\r\n        start: 'Start',\r\n        select_users: 'Select users',\r\n        new_chat: 'New chat',\r\n        invited_you_to_the_room: 'Invited you to the room',\r\n        accept_your_friend_request: 'Accept your friend request',\r\n        send_you_friend_request: 'Send you friend request',\r\n        you_are_not_invited: 'You dont have invited in this room',\r\n        january: 'January',\r\n        february: 'February',\r\n        march: 'March',\r\n        april: 'April',\r\n        may: 'May',\r\n        june: 'June',\r\n        july: 'July',\r\n        august: 'August',\r\n        september: 'September',\r\n        october: 'October',\r\n        november: 'November',\r\n        december: 'December',\r\n        jan: 'Jan',\r\n        feb: 'Feb',\r\n        mar: 'Mar',\r\n        apr: 'Apr',\r\n        jun: 'Jun',\r\n        jul: 'Jul',\r\n        aug: 'Aug',\r\n        sep: 'Sep',\r\n        oct: 'Oct',\r\n        nov: 'Nov',\r\n        dec: 'Dec',\r\n        in: 'in',\r\n        yerstaday: 'yerstaday',\r\n        today: 'Today',\r\n        just_now: 'just now',\r\n        here_wiil_placed_your_notifications: 'Here will placed your notifications',\r\n        create_your_first_room: 'Create your first room in this language',\r\n        you_dont_have_chats: 'You dont have chats, lets create new',\r\n        write_your_first_message: 'Write your first message to',\r\n        typing: 'typing',\r\n        attachment_messages: 'Attachment messages',\r\n        messages: 'Messages',\r\n        have_max_rooms: 'Create max limit rooms',\r\n        room_exist: 'A room with that name exists',\r\n        have_active_call: 'Have active call',\r\n        error: 'Error',\r\n        force_accept_text: 'If you accept a personal call, your room call will end.',\r\n        force_join_text: 'If you move to a room, the current personal call ends.',\r\n        force_place_text: 'If you make a personal call, then your call in the room will end.',\r\n        delete_room_text: 'After deleting, you and those present in the room will remain in it, but no one else will be able to enter.',\r\n        close: 'Close',\r\n        user_busy: 'The user is busy...',\r\n        cancel_your_call: 'canceled your call',\r\n        empty_inv_files: 'Here will placed files from this dialog',\r\n        empty_inv_sounds: 'Here will placed sounds from this dialog',\r\n        empty_inv_images: 'Here will placed images from this dialog',\r\n        you_banned_in_this_room: 'You blocked in this room',\r\n        to: 'to',\r\n        incoming_request_empty: 'Incoming requests will be displayed here',\r\n        outgoing_request_empty: 'Outgoing requests will be displayed here',\r\n        day_1: 'day',\r\n        day_2: 'days',\r\n        day_5: 'days',\r\n        minute_1: 'minute',\r\n        minute_2: 'minutes',\r\n        minute_5: 'minutes',\r\n        hour_1: 'hour',\r\n        hour_2: 'hours',\r\n        hour_5: 'hours',\r\n        week_1: 'week',\r\n        week_2: 'weeks',\r\n        week_5: 'weeks',\r\n        ago: 'ago',\r\n        first_name_not_empty: 'First name must not be empty',\r\n        first_name_is_string: 'First name must be a string',\r\n        first_name_is_min: 'First name contain at least 2 characters',\r\n        last_name_not_empty: 'Last name must not be empty',\r\n        last_name_is_string: 'Last name must be a string',\r\n        last_name_is_min: 'Last name contain at least 2 characters',\r\n        email_is_invalid: 'Email is invalid',\r\n        email_not_empty: 'Email must not be empty',\r\n        password_is_min: 'Password must contain at least 8 characters ',\r\n        email_or_password_wrong: 'Email or password wrong',\r\n        email_already: 'Email already uses',\r\n        connecting: 'Connecting',\r\n        you_have_invite_users: \"You've already invited some users\",\r\n        invited_sents: \"Invited sents!\",\r\n        force_toast_text: 'After the transition, you will be disconnected from the active room.'\r\n    }\r\n}","import languages from \"../languages\";\r\nimport store from \"../Redux/store\";\r\n\r\nexport function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].january,\r\n        languages[lang].february,\r\n        languages[lang].march,\r\n        languages[lang].april,\r\n        languages[lang].may,\r\n        languages[lang].june,\r\n        languages[lang].july,\r\n        languages[lang].august,\r\n        languages[lang].september,\r\n        languages[lang].october,\r\n        languages[lang].november,\r\n        languages[lang].december\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && languages[lang].today\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].jan,\r\n        languages[lang].feb,\r\n        languages[lang].mar,\r\n        languages[lang].apr,\r\n        languages[lang].may,\r\n        languages[lang].jun,\r\n        languages[lang].jul,\r\n        languages[lang].aug,\r\n        languages[lang].sep,\r\n        languages[lang].oct,\r\n        languages[lang].nov,\r\n        languages[lang].dec,\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate();\r\n    var month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() + ' in ' + hours + ':' +  minutes : day.toString() + ' in ' + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (\r\n                (diff < 60 && languages[lang].just_now)\r\n                || (diff < 120 && '1 ' + languages[lang].minute_1 + ' ' + languages[lang].ago)\r\n                || (diff < 3600 && Math.floor(diff / 60) + ' ' + declension(Math.ceil(diff / 60), [languages[lang].minute_1, languages[lang].minute_2, languages[lang].minute_5]) + ' ' + languages[lang].ago)\r\n                || (diff < 7200 && '1 ' + languages[lang].hour_1 + ' ' + languages[lang].ago)\r\n                || (diff < 86400 && Math.floor(diff / 3600) + ' ' + declension(Math.ceil(diff / 3600), [languages[lang].hour_1, languages[lang].hour_2, languages[lang].hour_5]) + ' ' + languages[lang].ago)\r\n            )\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + ' ' + declension(Math.ceil(day_diff), [languages[lang].day_1, languages[lang].day_2, languages[lang].day_5]) + ' ' + languages[lang].ago + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + ' ' + declension(Math.ceil(day_diff / 7), [languages[lang].week_1, languages[lang].week_2, languages[lang].week_5]) + ' ' + languages[lang].ago + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}\r\n\r\nfunction declension(n, text_forms) {  \r\n    n = Math.abs(n) % 100; var n1 = n % 10;\r\n    if (n > 10 && n < 20) { return text_forms[2]; }\r\n    if (n1 > 1 && n1 < 5) { return text_forms[1]; }\r\n    if (n1 == 1) { return text_forms[0]; }\r\n    return text_forms[2];\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive(e) {\r\n        let element = document.getElementById(this.props.from)\r\n        if(element) {\r\n            let find = false\r\n            let path = e.path || (e.composedPath && e.composedPath());\r\n            if(path.find(x => x.id === this.props.from)) {\r\n                e.stopPropagation()\r\n                find = true\r\n            }\r\n            \r\n            let rect = element.getBoundingClientRect()\r\n\r\n            let top\r\n            let left\r\n            if(this.props.bottom) {\r\n                top = rect.y + element.clientHeight\r\n                left = rect.x\r\n                if(this.props.right)\r\n                    left = rect.x+element.clientWidth\r\n            }\r\n            else {\r\n                top = rect.y\r\n                left = rect.x+element.clientWidth\r\n            }\r\n            \r\n            this.setState({left, top})\r\n            if((this.props.event === 'click' && (this.state.active || find)) || this.props.event === 'hover')\r\n                this.setState({active: !this.state.active})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).addEventListener('click', this.toggleActive.bind(this))\r\n            document.body.addEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).removeEventListener('click', this.toggleActive.bind(this))\r\n            document.body.removeEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? this.props.right ? 'translateX(-100%)' : 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>{this.props.langProps.you}:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\" style={{color: this.props.lastMessage.type === 'call' ? '#008FF7' : null}}>{this.props.lastMessage.type === 'call' ? this.props.langProps[this.props.lastMessage.text] : this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Photo</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.photos} [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Sound</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.sounds} [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>File</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.files} [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.messagesBlock.getScrollHeight() - (this.messagesBlock.getClientHeight() + this.messagesBlock.getScrollTop())) === 0) {\r\n            this.props.dialogsActions.dialogsLoad(this.props.user.apiToken)\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.chats}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.you_dont_have_chats}</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages)))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../../Redux/constants';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(this.props.call.user) {\r\n                    e.preventDefault()\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_FORCE,\r\n                        payload: this.props.room._id\r\n                    })\r\n                }\r\n            }} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RoomItem)","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nlet unmuteTimer = false\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const roomsLoad = (apiToken, lang) => (dispatch) => {\r\n    if(store.getState().rooms.canLoad) {\r\n        dispatch({\r\n            type: ROOMS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/room/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastRoomId: store.getState().rooms.rooms[store.getState().rooms.rooms.length-1]._id,\r\n                firstRoomId: store.getState().rooms.rooms[0]._id,\r\n                lang\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((rooms) => {\r\n            dispatch({\r\n                type: ROOMS_PRELOAD,\r\n                payload: rooms\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: data.errors[0]\r\n                })\r\n                \r\n                return\r\n            } else {\r\n                let room = data.room\r\n                let muted = data.muted\r\n\r\n                room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n                room.users.map(x => {\r\n                    x.speaking = false\r\n                    return 1\r\n                })\r\n\r\n                setForceTitle(room.title)\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ROOM,\r\n                    payload: {room, canLoad: room.dialog.messages.length === 50, muted}\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if(muted && (new Date(muted.date).getTime() - new Date().getTime()) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === room._id && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                        // console.log(unmuteTimer)\r\n                    }, (new Date(muted.date).getTime() - new Date().getTime()) );\r\n                }\r\n                \r\n                SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n                try {\r\n                    WebRtcController.connectRoom(room._id)\r\n                } catch (err) {\r\n                    SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                    dispatch({\r\n                        type: ROOMS_JOIN_ERROR,\r\n                        payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.roomsBlock.getScrollHeight() - (this.roomsBlock.getClientHeight() + this.roomsBlock.getScrollTop())) === 0) {\r\n            this.props.roomsActions.roomsLoad(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.rooms}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.create_your_first_room}</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.something_goes_wrong}</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title={this.props.langProps.create_room} className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms)))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport store from '../../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../../Redux/constants';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite') {\r\n                    if(this.props.call.user) {\r\n                        store.dispatch({\r\n                            type: ROOMS_SET_FORCE,\r\n                            payload: this.props.notification.room._id\r\n                        })\r\n                    } else {\r\n                        this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                    }\r\n                }\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.accept_your_friend_request}</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.send_you_friend_request}</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        call: state.call,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.notifications}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.here_wiil_placed_your_notifications}</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications)))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(userN => userN._id !== user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <span style={{textDecoration: 'none'}} onClick={() => {this.props.onClick()}}>\r\n                <Button className=\"room-item\">\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600}} name={this.props.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p><span>{this.props.title}</span></p>\r\n                    </div>\r\n                </Button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport LanguageItem from '../Partials/Language/LanguageItem'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../languages'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        this.props.onClick()\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.language}</h2>\r\n\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }} title={this.props.langProps.english} />\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }} title={this.props.langProps.russian} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages)))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: this.props.history.location.pathname.substring(1,5) === 'chat' ? 'messages' : this.props.user.roomLang ? 'rooms' : 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {this.props.dialogs.noReadCount > 0 && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {this.props.notifications.noRead > 0 && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages onClick={() => {this.setState({activeTab: 'rooms'})}} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport store from '../../Redux/store'\r\nimport { BAN_SET } from '../../Redux/constants'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\nimport {Facebook} from '@material-ui/icons';\r\n\r\nconst Vkontakte = ({style}) => {\r\n    return <svg \r\n        style={style}\r\n        aria-aria-hidden=\"true\" \r\n        focusable=\"false\" \r\n        data-prefix=\"fab\" \r\n        data-icon=\"vk\" \r\n        role=\"img\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        viewBox=\"0 0 576 512\"\r\n        className=\"svg-inline--fa fa-vk fa-w-18 fa-2x\">\r\n        <path \r\n            fill=\"currentColor\" \r\n            d=\"M545 117.7c3.7-12.5 0-21.7-17.8-21.7h-58.9c-15 0-21.9 7.9-25.6 16.7 0 0-30 73.1-72.4 120.5-13.7 13.7-20 18.1-27.5 18.1-3.7 0-9.4-4.4-9.4-16.9V117.7c0-15-4.2-21.7-16.6-21.7h-92.6c-9.4 0-15 7-15 13.5 0 14.2 21.2 17.5 23.4 57.5v86.8c0 19-3.4 22.5-10.9 22.5-20 0-68.6-73.4-97.4-157.4-5.8-16.3-11.5-22.9-26.6-22.9H38.8c-16.8 0-20.2 7.9-20.2 16.7 0 15.6 20 93.1 93.1 195.5C160.4 378.1 229 416 291.4 416c37.5 0 42.1-8.4 42.1-22.9 0-66.8-3.4-73.1 15.4-73.1 8.7 0 23.7 4.4 58.7 38.1 40 40 46.6 57.9 69 57.9h58.9c16.8 0 25.3-8.4 20.4-25-11.2-34.9-86.9-106.7-90.3-111.5-8.7-11.2-6.2-16.2 0-26.2.1-.1 72-101.3 79.4-135.6z\" class=\"\" />\r\n    </svg>\r\n}\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true, error: false, errors: []})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email.toLowerCase().replace(/\\s+/g, ''),\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    if(data.ban) {\r\n                        store.dispatch({\r\n                            type: BAN_SET,\r\n                            payload: {numDate: data.numDate, date: data.date}\r\n                        })\r\n                    } else {\r\n                        this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                        SocketController.init(data.token)\r\n                    }\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isFetching)\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n            \r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <a className=\"social-auth\" href={`${urlApi}/auth/login_vk?uuid=${randomInteger(0, 9999999)}`}>\r\n                        <Vkontakte style={{width: 24, height: 24, marginLeft: 20, marginRight: 15, color: '#5181b8'}} />\r\n                        Вход через VK\r\n                    </a>\r\n                    <a className=\"social-auth\" href={`${urlApi}/auth/login_fb?uuid=${randomInteger(0, 9999999)}`}>\r\n                        <Facebook style={{marginLeft: 20, marginRight: 15, color: '#4267b2'}} />\r\n                        Вход через FaceBook\r\n                    </a>\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'email').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'password').msg]} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'all').msg]} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Log in</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nfunction randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withCookies(Login)))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true, error: false, errors: []})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email.toLowerCase().replace(/\\s+/g, ''),\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isFetching)\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'email').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'password').msg]} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'all').msg]} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Sign up</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withCookies(Register)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onpause = () => {\r\n            audio.parentElement.className = 'message-sound'\r\n        }\r\n\r\n        audio.onplay = () => {\r\n            audio.parentElement.className = 'message-sound active'\r\n        }\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(document.getElementsByName(this.props.src)) {\r\n            document.getElementsByName(this.props.src).className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) {\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementById(this.state.randomId)\r\n\r\n        // for(let audio of thisAudio) {\r\n            thisAudio.play()\r\n        //     break\r\n        // }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.offsetX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n        console.log(e.nativeEvent)\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","import { CALL_SET_USER, CALL_SET_STATUS, CALL_SET_FORCE } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\nimport { playBeep, stopBeep, stopRington } from \"../../Controllers/SoundController\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    if(store.getState().rooms.activeRoom) {\r\n        dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user, status: 'force-call'}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: CALL_SET_USER,\r\n            payload: {user, status: 'outcoming'}\r\n        })\r\n\r\n        playBeep()\r\n\r\n        fetch(`${urlApi}/api/call/call`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: user._id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((call) => {\r\n            if(call.error) {\r\n                stopBeep()\r\n                dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: call.error\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    if(store.getState().rooms.activeRoom) {\r\n        dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: store.getState().call.user, status: 'force-accept'}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: CALL_SET_STATUS,\r\n            payload: 'active'\r\n        })\r\n\r\n        fetch(`${urlApi}/api/call/accept`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: store.getState().call.user._id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((call) => {\r\n            if(call.error) {\r\n                dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: call.error\r\n                })\r\n                WebRtcController.stopCall()\r\n                stopRington()\r\n\r\n                fetch(`${urlApi}/api/call/stop`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        socketId: SocketController.getSocketId()\r\n                    })\r\n                })\r\n            } else {\r\n                stopRington()\r\n                WebRtcController.call(store.getState().call.user._id)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    stopBeep()\r\n    stopRington()\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\n// import ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n// import urlMetadata from 'url-metadata'\r\n\r\n// let ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n    // urlMetadata(href).then((metadata) => {\r\n    //     console.log(metadata)\r\n    // })\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {this.props.message.user._id !== this.props.user._id && <>{`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}\r\n                            {this.props.message.user._id === this.props.user._id && <>{`${this.props.user.name.first} ${this.props.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}                            \r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\" onClick={(e) => {\r\n                        if(this.props.message.type === 'call' && this.props.message.user._id !== this.props.user._id) {\r\n                            e.stopPropagation()\r\n                            this.props.callActions.call(this.props.message.user, this.props.user.apiToken)\r\n                        }\r\n                    }}>\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.langProps[this.props.message.text]}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.history.push({\r\n                                            search: `?modal=slider`\r\n                                        })\r\n                                        store.dispatch({\r\n                                            type: SLIDER_SET,\r\n                                            payload: {\r\n                                                images,\r\n                                                index: 0\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.history.push({\r\n                                        search: `?modal=slider`\r\n                                    })\r\n                                    store.dispatch({\r\n                                        type: SLIDER_SET,\r\n                                        payload: {\r\n                                            images,\r\n                                            index\r\n                                        }\r\n                                    })\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Message)))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n        this.props.readMessages()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight() + 100 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} {this.props.langProps.typing}</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} {this.props.langProps.typing}</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.write_your_first_message} {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(Dialog))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `${this.props.langProps.investments} [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{this.props.langProps.attachment_messages}</h3>\r\n                        <p className=\"message-text\">{`${this.props.langProps.messages} [${this.props.recentMessages.length}]`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(Attachment)","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst PlaceHolder = withLang(languages)((props) => {\r\n    return <div className=\"placeholder\">{props.langProps.write_message}</div>\r\n})\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <PlaceHolder />}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n\r\n                {!this.props.recentMessages.find(message => message.type === 'call') && <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB', transform: 'scaleX(-1)'}} />\r\n                </Button>}\r\n\r\n                <div className=\"col\"></div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type.toLowerCase() === 'png' || file.type.toLowerCase() === 'jpg' || file.type.toLowerCase() === 'jpeg' || file.type.toLowerCase() === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type.toLowerCase() === 'txt' || file.type.toLowerCase() === 'pdf' || file.type.toLowerCase() === 'docx' || file.type.toLowerCase() === 'zip' || file.type.toLowerCase() === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type.toLowerCase() === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >  \r\n            {this.props.rooms.activeRoom.error.msg === 'dont_have_payment' && <Redirect to=\"/payment\" />}\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">{this.props.langProps.error}</h2>\r\n            <p className=\"modal-text\" style={{marginBottom: !!this.props.rooms.activeRoom.error.ban ? 0 : ''}}>{this.props.langProps[this.props.rooms.activeRoom.error.msg]}</p>\r\n            {!!this.props.rooms.activeRoom.error.ban && <p className=\"modal-text\">{this.props.langProps.to} <span style={{color: '#008FF7'}}>{new Date(this.props.rooms.activeRoom.error.ban.date).toLocaleString()}</span></p>}\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>{this.props.langProps.back}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(RoomJoinError)))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport qs from 'qs'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        minWidth: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab2 = withStyles(fabStylesCustom)(Fab);\r\n\r\nconst Members = withRouter((props) => {\r\n    return <Scrollbars\r\n        renderTrackVertical={() => <div className=\"track-vertical\"/>}\r\n        renderThumbVertical={() => <div className=\"thumb-vertical\"/>}\r\n        className=\"theme-members scroll\"\r\n        autoHide\r\n    >\r\n        {props.users.map((user, index) => \r\n            <div key={index} style={{cursor: 'pointer'}} className=\"member col-6 col-sm-6 col-md-6 col-lg-4 col-xl-3\" onClick={() => {\r\n                props.history.push({\r\n                    search: `?user=${user._id}`\r\n                })\r\n            }}>\r\n                <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                {user.speaking && <span className=\"speaking\"></span>}\r\n                <span className=\"user-name\">{user.name.first} {user.name.last}</span>\r\n            </div>\r\n        )}\r\n    </Scrollbars>\r\n})\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(!!this.props.rooms.activeRoom)\r\n            this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.rooms.activeRoom) {\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className={`col-xl-3 col-lg-6 col-md-6 theme-first-block ${this.state.act === 'chat' ? 'active' : 'hide'}`}>\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            if(this.state.act === 'chat') {\r\n                                this.props.history.push({\r\n                                    search: ``\r\n                                })\r\n                            } else {\r\n                                this.props.history.push('/')\r\n                            }                           \r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} {this.props.langProps.online}</h3>\r\n                        </div>\r\n\r\n                        <CustomFab2 id={'dialog-more-actions-'+this.props.rooms.activeRoom._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab2>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={\r\n                        this.props.rooms.activeRoom.ownerId === this.props.user._id || this.props.user.role === 'admin' || this.props.user.role === 'moder' ? [\r\n                            {text: this.props.langProps.invite_friends, action: () => {\r\n                                this.props.history.push({\r\n                                    search: '?act=invite'\r\n                                })\r\n                            }},\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: this.props.langProps.edit_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=editRoom'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {\r\n                                text: this.props.langProps.delete_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=deleteRoom'\r\n                                    })\r\n                                }\r\n                            }\r\n                        ] : [\r\n                            {\r\n                                text: this.props.langProps.invite_friends, action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=invite'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }}\r\n                        ]} from={'dialog-more-actions-'+this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat \r\n                        messages={this.props.rooms.activeRoom.dialog.messages} \r\n                        type=\"room\" \r\n                        to={this.props.rooms.activeRoom.title} \r\n                        dialogId={this.props.rooms.activeRoom.dialog._id} \r\n                        roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className={`col-xl-9 col-lg-6 col-md-6 theme-screen ${this.state.act === 'chat' ? 'hide' : 'active'}`}>\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option mobile-option`} onClick={() => {this.props.history.push({\r\n                            search: `?act=chat`\r\n                        })}}>\r\n                            {!!this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length && <span style={{right: 0}} className=\"unread-messages-count\">{this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length}</span>}\r\n                            <ChatBubbleOutlineIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        {!!this.props.rooms.activeRoom.muted && <Tooltip title={`Blocked to ${new Date(this.props.rooms.activeRoom.muted.date).toLocaleString()}`} placement=\"top\"><CustomFab className={`media-option reject`}>\r\n                            <MicOffIcon style={{color: '#fff'}} />\r\n                        </CustomFab></Tooltip>}\r\n                        {!this.props.rooms.activeRoom.muted && <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>}\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Room)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ActionMenu from '../../Partials/ActionMenu'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabStyles)(Fab);\r\nconst CustomFab = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 36, \r\n                        height: 36, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info col\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>{this.props.langProps.online}</p>}\r\n                    </div></>\r\n\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                            this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                        }}>\r\n                            <CallIcon style={{color: '#fff'}} />\r\n                        </CallFab>}\r\n                        \r\n                        <CustomFab id={'dialog-more-actions-'+dialog._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={[\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                        ]} from={'dialog-more-actions-'+dialog._id} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>{this.props.langProps.user_not_found}</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog)))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Payment.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        fetch(`${urlApi}/api/payment/get-all`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((tariffs) => {\r\n            this.setState({isFetching: false, tariffs})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    buy(tariffId) {\r\n        this.setState({isFetching: true})\r\n        fetch(`${urlApi}/api/payment/buy`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                tariffId\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((answer) => {\r\n            if(!answer.error) {\r\n                this.setState({isFetching: false})\r\n                this.props.history.push('/')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"payment-page\">\r\n                    <h2 className=\"payment-title\">Hi {this.props.user.name.first}</h2>\r\n                    <p className=\"payment-subtitle\">Pick a plan to continue</p>\r\n\r\n                    <div className=\"payment-tariffs\">\r\n                        {this.state.isFetching && <CircularProgress style={{\r\n                            color: '#fff',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n\r\n                        {!this.state.isFetching && <div className=\"row\">\r\n                            {this.state.tariffs.map(tariff => {\r\n                                return <div className=\"col-12 col-md-6 col-lg-3 col-xl-2 payment-tariff-container\">\r\n                                    <div className=\"payment-tariff\">\r\n                                        <p className=\"payment-tariff-title\">{tariff.title}</p>\r\n                                        <p className=\"payment-tariff-price\">{tariff.price === 0 ? \"Free\" : tariff.price}</p>\r\n\r\n                                        <button className=\"button-gray\" onClick={() => {\r\n                                            this.buy(tariff._id)\r\n                                        }} style={{width: '80%', margin: '0 10% 0 10%'}}>Buy</button>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                        </div>}\r\n                    </div>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Payment))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Ban.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"ban-page\">\r\n                    <p className=\"ban-title\">Ooops...</p>\r\n\r\n                    <p className=\"ban-subtitle\">You have ban to <span style={{color: '#008FF7'}}>{new Date(this.props.ban.date).toLocaleString()}</span></p>\r\n\r\n                    <button className=\"button-blue\" onClick={() => {\r\n                        const { cookies } = this.props;\r\n                        cookies.remove(\"apiToken\", { path: \"/\" });\r\n                        window.location.reload()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>Logout</button>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ban: state.ban,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(withCookies(Payment)))\r\n","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport qs from 'qs'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass AuthSocial extends React.Component {\r\n    state = {\r\n        token: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).token,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.token) {\r\n            const { cookies } = this.props\r\n            cookies.set('apiToken', this.state.token, { path: '/' })\r\n\r\n            window.location.replace('/')\r\n        } else {\r\n            window.location.replace('/')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <CircularProgress style={{\r\n            color: '#008FF7',\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            margin: 'auto',\r\n            top: 'calc(50% - 20px)'\r\n        }} />\r\n    }\r\n}\r\n\r\n\r\nexport default withCookies(withRouter(AuthSocial))","import React from 'react'\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Room from '../Pages/User/Room';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport Payment from '../Pages/User/Payment';\r\nimport Ban from '../Pages/User/Ban';\r\nimport AuthSocial from '../Pages/Auth/AuthSocial';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/auth_social',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Loading...',\r\n        component: () => <AuthSocial />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/payment',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Payment />\r\n    },\r\n    {\r\n        path: '/ban',\r\n        exact: true,\r\n        type: 'ban',\r\n        title: '',\r\n        component: () => <Ban />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\n// import {\r\n//     BrowserRouter as Router,\r\n// } from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.you_dont_have_friends}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.users_not_found}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../Redux/constants';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        minHeight             : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: [], isFetching: true})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create', isFetching: false})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n\r\n                if(this.props.call.user) {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_FORCE,\r\n                        payload: room._id\r\n                    })\r\n                } else {\r\n                    this.props.history.push(`/rooms/${room._id}`)\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isFetching) {\r\n            return <Modal\r\n                isOpen={this.props.isOpen}\r\n                onRequestClose={() => {this.props.close()}}\r\n                style={customStylesModalInvite}\r\n                contentLabel=\"Create room\"\r\n            >\r\n                <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />\r\n            </Modal>\r\n        }\r\n\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">{this.props.langProps.new_room}</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder={this.props.langProps.title}\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label={this.props.langProps.private_room}\r\n                    />\r\n                    \r\n                    {!this.state.title.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                    {!!this.state.title.length && <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.next}</button>}\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.start}</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport { urlApi } from '../../config';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    unban() {\r\n        fetch(`${urlApi}/api/user/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.myUser.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.user._id,\r\n                time: 1\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unban sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n    render() {\r\n        return <>\r\n                <span style={{cursor: 'pointer', borderRadius: 50}} onClick={() => {\r\n                    if(this.props.user.avatar) {\r\n                        this.props.history.push({\r\n                            search: `?modal=slider`\r\n                        })\r\n                        store.dispatch({\r\n                            type: SLIDER_SET,\r\n                            payload: {\r\n                                images: [{path: this.props.user.avatar.original}],\r\n                                index: 0\r\n                            }\r\n                        })\r\n                    }\r\n                }}><Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                /></span>\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.message}</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            e.preventDefault()\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.call}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.plus_friend}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.accept}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.decline}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.remove}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?mute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicOffIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Mute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unmute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unmute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?banroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unbanroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOpenIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?sendwarning=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <WarningIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Send warning</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?ban=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <BlockIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.unban()\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unban</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=settings`\r\n                    })\r\n                }}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.settings}</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.contacts}</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px',\r\n        minHeight: 100\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {!user && this.props.user._id !== this.props.userId && <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />}\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.incoming_request_empty}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n                \r\n                <p>{this.props.langProps.outgoing_request_empty}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">{this.props.langProps.contacts}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>{this.props.langProps.friends}</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>{this.props.langProps.inbox}</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>{this.props.langProps.outbox}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n            {this.state.activeTab === 'outbox' && <Outbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.new_chat}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(({error}) => {\r\n            this.setState({selectUsers: []})\r\n            toast(this.props.langProps.invited_sents, {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            if(error) {\r\n                toast(this.props.langProps.you_have_invite_users, {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                });\r\n            }\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.invite}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        minHeight              : '245px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        isFetching: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: [], isFetching: true})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, isFetching: false})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isFetching) {\r\n            return <Modal\r\n                isOpen={this.props.isOpen}\r\n                onRequestClose={() => {this.props.close()}}\r\n                style={customStylesModalCreate}\r\n                contentLabel=\"Edit room\"\r\n            >\r\n                <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />\r\n            </Modal>\r\n        }\r\n\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.edit_room}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder={this.props.langProps.title}\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label={this.props.langProps.private_room}\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.save}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.delete_room_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.delete}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.forward}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.outcoming_call}</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.incoming_call}</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <div className={this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && this.props.call.status !== 'active' ? 'pulse-avatar' : ''}>\r\n                        <Avatar \r\n                            style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`, zIndex: 3}} \r\n                            name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                            avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                        />\r\n                    </div>\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">{this.props.call.user.city ? this.props.call.user.city : this.props.langProps.not_indicated}</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.langProps.user_busy} <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>{this.props.langProps.close}</a>\r\n                </div>}\r\n                \r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} {this.props.langProps.cancel_your_call} <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>{this.props.langProps.close}</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'dont_have_payment' && <>\r\n                {this.props.callActions.clear()}\r\n                <Redirect to=\"/payment\" />\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                \r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.error}</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>{this.props.langProps.have_active_call}</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: this.props.index\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        images: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                if(!images.error) {\r\n                    images = images.map(x => x.data)\r\n                    \r\n                    this.setState({images, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.images.map((image, index) => {\r\n                return (\r\n                    <div className=\"investment-image\">\r\n                        <img key={index} alt={image.name} style={{cursor: 'pointer'}} onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?modal=slider`\r\n                            })\r\n                            this.props.dispatch({\r\n                                type: SLIDER_SET,\r\n                                payload: {\r\n                                    images: this.state.images,\r\n                                    index\r\n                                }\r\n                            })\r\n                        }} src={image.path} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.images.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <PhotoLibraryIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_images}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport Audio from '../../Partials/Chat/Audio';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        sounds: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(sounds => {\r\n                if(!sounds.error) {\r\n                    sounds = sounds.map(x => x.data)\r\n                    \r\n                    this.setState({sounds, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.sounds.map((sound, index) => {\r\n                return (\r\n                    <Audio\r\n                        key={index}\r\n                        fileName={sound.name}\r\n                        src={sound.path}\r\n                    />\r\n                )\r\n            })}\r\n            {(!this.state.sounds.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <AudiotrackIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_sounds}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        files: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(files => {\r\n                if(!files.error) {\r\n                    files = files.map(x => x.data)\r\n                    \r\n                    this.setState({files, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340, marginLeft: 15}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)',\r\n                }} />}\r\n            {this.state.files.map((file, index) => {\r\n                return (\r\n                    <div className=\"message-file\" style={{cursor: 'pointer'}} key={index} onClick={(e) => {\r\n                        window.open(file.path, '_self');\r\n                    }}>\r\n                        <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                        <div className=\"message-file-info\">\r\n                            <p className=\"message-file-name\">{file.name}</p>\r\n                            <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                        </div>\r\n                        <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.files.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <FileCopyIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_files}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Images from './investmentsPartials/Images';\r\nimport Sounds from './investmentsPartials/Sounds';\r\nimport Files from './investmentsPartials/Files';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'images'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.investments}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'images' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'images'})}}>{this.props.langProps.photos}</span>\r\n                <span className={this.state.activeTab === 'sounds' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'sounds'})}}>{this.props.langProps.sounds}</span>\r\n                <span className={this.state.activeTab === 'files' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'files'})}}>{this.props.langProps.files}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'images' && <Images />}\r\n            {this.state.activeTab === 'sounds' && <Sounds />}\r\n            {this.state.activeTab === 'files' && <Files />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Settings\"\r\n        >\r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            \r\n            <h2 className=\"modal-title\">{this.props.langProps.settings}</h2>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=profile'\r\n                })\r\n            }}>{this.props.langProps.change_profile}</p>\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=language'\r\n                })\r\n            }}>{this.props.langProps.language}</p>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                const { cookies } = this.props;\r\n                cookies.remove(\"apiToken\", { path: \"/\" });\r\n                window.location.reload()\r\n            }}>{this.props.langProps.logout}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport store from '../Redux/store';\r\nimport { USER_EDIT } from '../Redux/constants';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        firstName: this.props.user.name.first,\r\n        lastName: this.props.user.name.last,\r\n        city: this.props.user.city,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/user/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                city: this.state.city\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((user) => {\r\n            if(user.error) {\r\n                this.setState({error: true, errors: user.errors})\r\n            } else {\r\n                store.dispatch({\r\n                    type: USER_EDIT,\r\n                    payload: {\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        city: this.state.city\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">{this.props.langProps.change_profile}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.firstName} \r\n                    onChange={(e) => {this.setState({firstName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.firstName}\r\n                    style={{marginTop: 0}} \r\n                />\r\n                {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.lastName} \r\n                    onChange={(e) => {this.setState({lastName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 0}} \r\n                    placeholder={this.props.langProps.lastName}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.city} \r\n                    onChange={(e) => {this.setState({city: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.city}\r\n                />\r\n\r\n                {(this.state.firstName !== this.props.user.name.first || this.state.lastName !== this.props.user.name.last || this.state.city !== this.props.user.city) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.save}</button>}\r\n                {(this.state.firstName === this.props.user.name.first && this.state.lastName === this.props.user.name.last && this.state.city === this.props.user.city) && <button className=\"button-gray\" onClick={() => {\r\n                        this.props.history.goBack()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_LANG } from '../Redux/constants';\r\nimport { urlApi } from '../config';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    setLang(lang) {\r\n        store.dispatch({\r\n            type: USER_SET_LANG,\r\n            payload: lang\r\n        })\r\n\r\n        fetch(`${urlApi}/api/user/set-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_language}</h2>\r\n\r\n            <p className={`settings-item ${this.props.user.lang === 'en' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'en')\r\n                this.setLang('en')\r\n            }}>{this.props.langProps.english}</p>\r\n            <p className={`settings-item ${this.props.user.lang === 'ru' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'ru')\r\n                this.setLang('ru')\r\n            }}>{this.props.langProps.russian}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: this.props.rooms.activeRoom ? [this.props.rooms.activeRoom] : [],\r\n        selectRoomId: this.props.rooms.activeRoom ? this.props.rooms.activeRoom._id : false,\r\n        time: 0,\r\n        q: this.props.rooms.activeRoom ? this.props.rooms.activeRoom.title : '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">Mute</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Mute</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unmute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unmute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">Unmute</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have mutes rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unmute</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: this.props.rooms.activeRoom ? [this.props.rooms.activeRoom] : [],\r\n        selectRoomId: this.props.rooms.activeRoom ? this.props.rooms.activeRoom._id : false,\r\n        time: 0,\r\n        q: this.props.rooms.activeRoom ? this.props.rooms.activeRoom.title : '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.selectRoomId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">Ban room</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-roomban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            \r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unban room sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">Unban room</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have ban rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unban</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        warning: ''\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/send-warning`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                warning: this.state.warning,\r\n                userId: this.props.userId,\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Warning sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">Send warning</h2>\r\n\r\n            <textarea \r\n                className=\"input-field\"\r\n                onChange={(e) => {\r\n                    this.setState({warning: e.target.value})\r\n                }}\r\n                value={this.state.warning}\r\n            ></textarea>\r\n\r\n            {!!this.state.warning && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Send</button>}\r\n            {!this.state.warning && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_WARNING } from '../Redux/constants';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 999\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass Warning extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Warning\"\r\n        >\r\n            <ReportProblemOutlinedIcon style={{color: '#FF3333', fontSize: 60}} />\r\n\r\n            <h2 className=\"modal-title\">Warning</h2>\r\n\r\n            <p className=\"modal-text\">{this.props.user.warning}</p>\r\n            \r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                store.dispatch({\r\n                    type: USER_SET_WARNING,\r\n                    payload: false\r\n                })\r\n            }}>Close</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Warning))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n        \r\n        this.props.history.push(`/chats/${this.props.call.force.user._id}`)\r\n\r\n        setTimeout(() => {\r\n            this.props.callActions.accept(this.props.user.apiToken)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_accept_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.accept}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        this.props.history.push(`/chats/${this.props.call.force.user._id}`)\r\n        \r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.props.callActions.call(this.props.call.force.user, this.props.user.apiToken)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_place_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.call}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n        let roomId = this.props.rooms.force\r\n        store.dispatch({\r\n            type: ROOMS_SET_FORCE,\r\n            payload: false\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.props.history.push(`/rooms/${roomId}`)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: ROOMS_SET_FORCE,\r\n            payload: false\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_join_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.accept}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Button, Radio, withStyles } from '@material-ui/core'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        time: 0,\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Ban sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <span className=\"modal-back\" onClick={(e) => {\r\n                this.props.history.goBack()\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n            <h2 className=\"modal-title\">Ban</h2>\r\n\r\n            {timeStamps.map((time, index) => \r\n                    <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                        this.setState({time: time.time})\r\n                    }}>\r\n                        <div style={{\r\n                            flexGrow: 1,\r\n                            minWidth: 0,\r\n                            maxWidth: '100%',\r\n                            paddingRight: 10\r\n                        }}>\r\n                            <p><span>{time.label}</span></p>\r\n                        </div>\r\n                        <CustomRadio\r\n                            checked={this.state.time === time.time}\r\n                        />\r\n                    </Button>\r\n            )}\r\n            {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n            {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: `?user=${this.props.userId}`\r\n                })\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { TOASTS_REMOVE, TOAST_SET_FORCE } from '../Redux/constants';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nclass Toast extends React.Component {\r\n    render() {\r\n        return <div className=\"bell-toast\" onClick={() => {\r\n            if(this.props.toast.toastType === 'notification') {\r\n                if(this.props.toast.type === 'invite') {\r\n                    if(store.getState().rooms.activeRoom) {\r\n                        store.dispatch({\r\n                            type: TOAST_SET_FORCE,\r\n                            payload: {id: this.props.toast.room._id, type: 'invite'}\r\n                        })\r\n                    } else {\r\n                        this.props.history.push(`/rooms/${this.props.toast.room._id}`)\r\n                    }\r\n                }\r\n\r\n                if(this.props.toast.type === 'accept' || this.props.toast.type === 'request') {\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.toast.user._id}`\r\n                    })\r\n                }\r\n            }\r\n\r\n            if(this.props.toast.toastType === 'message') {\r\n                if(`/chats/${this.props.toast.user._id}` !== this.props.history.location.pathname) {\r\n                    if(store.getState().rooms.activeRoom) {\r\n                        store.dispatch({\r\n                            type: TOAST_SET_FORCE,\r\n                            payload: {id: this.props.toast.user._id, type: 'message'}\r\n                        })\r\n                    } else {\r\n                        this.props.history.push(`/chats/${this.props.toast.user._id}`)\r\n                    }\r\n                }\r\n            }\r\n\r\n            store.dispatch({\r\n                type: TOASTS_REMOVE,\r\n                payload: this.props.toast._id\r\n            })\r\n        }}>\r\n            <span className=\"bell-close\" onClick={(e) => {\r\n                e.stopPropagation()\r\n                store.dispatch({\r\n                    type: TOASTS_REMOVE,\r\n                    payload: this.props.toast._id\r\n                })\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n\r\n            <p className='name'>{this.props.toast.user.name.first} {this.props.toast.user.name.last}</p>\r\n            {this.props.toast.toastType === 'message' && <p className=\"text\">New message!</p>}\r\n            {this.props.toast.toastType === 'notification' && <>\r\n                {this.props.toast.type === 'invite' && <p className=\"text\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.toast.room.title}</span></p>}\r\n                {this.props.toast.type === 'accept' && <p className=\"text\">{this.props.langProps.accept_your_friend_request}</p>}\r\n                {this.props.toast.type === 'request' && <p className=\"text\">{this.props.langProps.send_you_friend_request}&nbsp;<span style={{color: '#008FF7'}}></span></p>}\r\n            </>}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(withRouter(Toast))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport Toast from './Toast';\r\n\r\nclass Toasts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return !!this.props.toasts.toasts.length && <div className=\"bell-toasts\">\r\n            {this.props.toasts.toasts.map((toast, index) => {\r\n                return <Toast key={index} toast={toast} />\r\n            })}\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toasts: state.toasts,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Toasts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE, TOAST_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        store.dispatch({\r\n            type: TOAST_SET_FORCE,\r\n            payload: {id: false, type: false}\r\n        })\r\n        \r\n        if(this.props.toasts.force.type === 'message')\r\n            this.props.history.push(`/chats/${this.props.toasts.force.id}`)\r\n\r\n        if(this.props.toasts.force.type === 'invite') {\r\n            this.props.history.push('/')\r\n            \r\n            setTimeout(() => {\r\n                this.props.history.push(`/rooms/${this.props.toasts.force.id}`)\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: TOAST_SET_FORCE,\r\n            payload: {id: false, type: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_toast_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.next}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        toasts: state.toasts\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD, SLIDER_SET } from '../Redux/constants';\r\nimport Call from './Call';\r\nimport Slider from '../Partials/Chat/Slider';\r\nimport Investments from './Investments';\r\nimport Settings from './Settings';\r\nimport Profile from './Profile';\r\nimport Language from './Language';\r\nimport Mute from './Mute';\r\nimport Unmute from './Unmute';\r\nimport Banroom from './Banroom';\r\nimport Unbanroom from './Unbanroom';\r\nimport SendWaning from './SendWaning';\r\nimport Warning from './Warning';\r\nimport ForceAcceptCall from './ForceAcceptCall';\r\nimport ForcePlaceCall from './ForcePlaceCall';\r\nimport ForceJoinRoom from './ForceJoinRoom';\r\nimport Ban from './Ban';\r\nimport Toasts from './Toasts';\r\nimport ForceToast from './ForceToast';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n        mute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).mute,\r\n        unmute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unmute,\r\n        banroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).banroom,\r\n        unbanroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n        sendwarning: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n        ban: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).ban,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n                mute: qs.parse(location.search, { ignoreQueryPrefix: true }).mute,\r\n                unmute: qs.parse(location.search, { ignoreQueryPrefix: true }).unmute,\r\n                banroom: qs.parse(location.search, { ignoreQueryPrefix: true }).banroom,\r\n                unbanroom: qs.parse(location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n                sendwarning: qs.parse(location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n                ban: qs.parse(location.search, { ignoreQueryPrefix: true }).ban,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {!!this.props.user.warning && <Warning isOpen={!!this.props.user.warning} />}\r\n\r\n            {this.state.mute && this.props.user.role !== 'user' && <Mute userId={this.state.mute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unmute && this.props.user.role !== 'user' && <Unmute userId={this.state.unmute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.banroom && this.props.user.role !== 'user' && <Banroom userId={this.state.banroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.ban && this.props.user.role !== 'user' && <Ban userId={this.state.ban} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unbanroom && this.props.user.role !== 'user' && <Unbanroom userId={this.state.unbanroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.sendwarning && this.props.user.role !== 'user' && <SendWaning userId={this.state.sendwarning} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Settings isOpen={this.state.modal === 'settings'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n            \r\n            {this.state.modal === 'profile' && <Profile isOpen={this.state.modal === 'profile'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.modal === 'language' && <Language isOpen={this.state.modal === 'language'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId  || this.props.user.role === 'admin' || this.props.user.role === 'moder') && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId || this.props.user.role === 'admin' || this.props.user.role === 'moder') && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n            {this.state.modal === 'slider' && !!this.props.slider.images.length && <Slider index={this.props.slider.index} images={this.props.slider.images} close={() => {\r\n                this.props.dispatch({\r\n                    type: SLIDER_SET,\r\n                    payload: {\r\n                        images: [],\r\n                        index: 0\r\n                    }\r\n                })\r\n                this.props.history.goBack()\r\n            }} />}\r\n            \r\n            {this.props.match.params.id && this.state.modal === 'investments' && <Investments \r\n                isOpen={this.props.match.params.id && this.state.modal === 'investments'} \r\n                dialogId={this.props.match.params.id} \r\n                close={() => {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                }}\r\n            />}\r\n\r\n            {!!this.props.rooms.force && <ForceJoinRoom isOpen={true} />}\r\n\r\n            {this.props.call.user && this.props.call.force.status === 'force-accept' && <ForceAcceptCall isOpen={true} />}\r\n            {this.props.call.force.status === 'force-call' && <ForcePlaceCall isOpen={true} />}\r\n            {!!this.props.toasts.force.id && <ForceToast isOpen={true} />}\r\n\r\n            {this.props.call.user && !this.props.call.force.status && <Call isOpen={true} />}\r\n\r\n            <Toasts />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call,\r\n        slider: state.slider,\r\n        toasts: state.toasts\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nimport store from \"../Redux/store\";\r\nimport { BAN_SET } from \"../Redux/constants\";\r\nimport Ban from \"../Pages/User/Ban\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications, ban, numDate, date}) => {\r\n          if(ban) {\r\n            store.dispatch({\r\n              type: BAN_SET,\r\n              payload: {numDate, date}\r\n            })\r\n          } else {\r\n            SocketController.init(apiToken)\r\n            this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          }\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          localStorage.setItem('drafts', JSON.stringify([]));\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      localStorage.setItem('drafts', JSON.stringify([]));\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n                  case 'ban':\r\n                    return this.props.ban.ban ? <Ban /> : <Redirect\r\n                    to={{\r\n                      pathname: \"/\",\r\n                    }}\r\n                  /> \r\n\r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? this.props.ban.ban ? <Redirect\r\n          to={{\r\n            pathname: \"/ban\",\r\n          }}\r\n        /> : (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ?  this.props.ban.ban ? <Redirect\r\n          to={{\r\n            pathname: \"/ban\",\r\n          }}\r\n        /> : (\r\n            children\r\n          )  : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    ban: state.ban\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MultiLang, withLang } from \"react-multi-language\";\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\nimport { CircularProgress } from '@material-ui/core';\nimport languages from './languages';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                {this.props.user.isAuth && this.props.app.connecting && <div className=\"app-status-connecting\">\n                    <CircularProgress style={{\n                        color: '#fff',\n                        width: 20,\n                        height: 20,\n                        marginRight: 10\n                    }} />\n                    <span>{this.props.langProps.connecting}...</span>\n                </div>}\n\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                        <MultiLang lang={this.props.user.isAuth ? this.props.user.lang : 'en'}/>\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        app: state.app\n    }\n}\n\nexport default withLang(languages)(connect(mapStateToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}