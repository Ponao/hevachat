{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","Partials/Room/RoomItem.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Redux/actions/rooms.js","Redux/actions/users.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Sidebar/Rooms.js","Partials/Notifications/NotificationItem.js","Redux/actions/notifications.js","Sidebar/Notifications.js","Redux/actions/user.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/Slider.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Pages/User/Dialog.js","Router/config.js","Pages/NoMatch.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","name","toUpperCase","online","Component","INITIAL_STATE","isAuth","user","state","action","type","payload","roomLang","isFetching","getted","activeRoom","isError","rooms","room","typers","canLoad","isLoading","remoteStream","error","users","filter","_id","map","roomId","userId","dialog","messages","message","_newId","isEdit","find","x","isRead","speaking","micOn","musicOn","media","dialogs","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","combineReducers","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","min","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","length","title","document","setForceTitle","WebRtcPeerConnection","activeRoomId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraints","mozRTCIceCandidate","RTCIceCandidate","offerToReceiveAudio","offerToReceiveVideo","options","iceServers","urls","credential","username","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","getAudioTracks","enabled","store","dispatch","addStream","onicecandidate","createOffer","then","offer","setLocalDescription","console","log","sendRoomOfferSdp","offerSdp","sdp","onRoomOffer","mediaDevices","audio","video","catch","err","lang","close","leaveRoom","stop","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","forEach","sender","addTrack","track","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","urlApi","socket","activeLang","init","apiToken","io","transports","emit","getState","setTimeout","answerSdp","WebRtcController","otherId","fetch","method","headers","Accept","Authorization","body","JSON","stringify","response","json","notification","last","getSocketId","id","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","sendMessage","formData","FormData","images","files","sounds","append","file","push","localMessage","text","recentMessages","now","m","socketId","messageRes","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","RoomItem","textDecoration","to","Button","width","height","fontSize","fontWeight","backgroundColor","color","charAt","isPrivate","index","key","first","getHM","date","time","hours","getHours","minutes","getMinutes","toString","LastMessageDate","getTime","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","OnlineDate","diff","getDay","month_diff","isNaN","ceil","ActionMenu","active","left","top","element","getElementById","from","rect","getBoundingClientRect","setState","clientWidth","addEventListener","toggleActive","bind","removeEventListener","actions","onClick","DialogItem","randomId","history","location","pathname","preventDefault","myUser","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","position","bottom","right","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","search","contextType","roomsGet","roomsAdd","errors","param","msg","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","status","setActiveUserId","sendRequest","acceptRequest","removeRequest","CustomCheckbox","border","checked","Checkbox","UserItem","minWidth","flexWrap","selected","Contacts","usersActions","roomsBlock","CircularProgress","selectUsers","customStylesModalCreate","overlay","zIndex","content","marginRight","transform","borderRadius","boxShadow","customStylesModalInvite","justifyContent","maxWidth","padding","CreateRoom","step","roomsActions","isOpen","onRequestClose","contentLabel","onSubmit","value","onChange","target","marginBottom","placeholder","maxLength","FormControlLabel","control","label","Friends","Rooms","isOpenCreateRoom","NotificationItem","data","background","notificationsGet","Notifications","notificationsActions","loginUser","logoutUser","updateRoomLang","Languages","userActions","UserSidebar","activeTab","show","Login","email","password","cookies","set","token","withCookies","Register","firstName","lastName","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","src","volume","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","parentElement","pause","stopPropagation","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","setInterval","clearInterval","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","unSelect","onSelect","isRecent","cursor","lineHeight","canSelect","replace","countRecent","image","isBlur","openSlider","draggable","alt","sound","open","toFixed","sliderImages","PureComponent","waitActiveUser","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","getClientHeight","getScrollHeight","unRead","clearTimeout","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","customStylesModal","Slider","opacity","InputMessage","inputMessageHeight","event","items","clipboardData","originalEvent","kind","getAsFile","addFile","test","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","accept","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","isOpenSlider","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","toast","POSITION","TOP_CENTER","URL","webkitURL","createObjectURL","Blob","split","newText","prevText","textAlign","RoomJoinError","Members","srcObject","autoPlay","controls","Room","waitSocket","match","params","Main","order","innerWidth","routes","exact","NoMatch","transition","OtherUser","MyUser","User","Inbox","Outbox","CreateDialog","MainModal","act","qs","ignoreQueryPrefix","modal","listen","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88e11c0d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_DELETE,\r\n    ROOMS_EDIT,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: []\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: []\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_GET,\r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: []\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ]  }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","import { push } from 'react-router-redux';\r\n\r\nexport function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import adapter from 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\nconst RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraints = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst options = {\r\n    iceServers: [\r\n        {urls: 'stun:173.194.66.127:19302'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia({audio: true, video: false}).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia({\r\n            audio: true,\r\n            video: false\r\n        }, \r\n        callback, \r\n        () => {\r\n            createEmptyStream(callback)\r\n        });\r\n    }\r\n\r\n    function onerror(e) {\r\n        console.log(JSON.stringify(e, null, '\\t'));\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia((stream) => {\r\n            localStream = stream\r\n            // let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n            // let dest = audioCtx.createMediaStreamDestination ();\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(options)\r\n            \r\n            WebRtcPeerConnection.addStream(stream)\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraints).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer);\r\n                \r\n                onRoomOffer(null, offer)\r\n            });\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getAudioTracks()[0].stop()\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getAudioTracks()[0].stop()\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(WebRtcPeerConnection)\r\n            WebRtcPeerConnection.addIceCandidate(e)\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        let answer = new RTCSessionDescription({\r\n            type: 'answer',\r\n            sdp: sdpAnswer\r\n        })\r\n        \r\n        WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n        let stream = new MediaStream();\r\n\r\n        WebRtcPeerConnection.getReceivers().forEach(function (sender) {\r\n            stream.addTrack(sender.track);\r\n        });\r\n\r\n        remoteStream = stream\r\n\r\n        store.dispatch({\r\n            type: ROOMS_SET_REMOTE_STREAM,\r\n            payload: stream\r\n        })\r\n\r\n        speechEvents = hark(localStream, {});\r\n \r\n        speechEvents.on('speaking', function() {\r\n            SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n        });\r\n    \r\n        speechEvents.on('stopped_speaking', function() {\r\n            SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n        });\r\n    }\r\n}","export const urlApi = 'https://romadevtest.tk:8080'","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = null\r\nlet activeLang = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n        // console.log(123)\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}{this.props.room.title}</p>\r\n                        <div className=\"users\">\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} style={{width: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","export function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && 'Today'\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes : day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (\r\n                (diff < 60 && 'just now')\r\n                || (diff < 120 && \"1 \" + 'minute' + \" \" + 'ago' + \"\")\r\n                || (diff < 3600 && Math.floor(diff / 60) + \" \" + 'minutes' + \" \" + 'ago' + \"\")\r\n                || (diff < 7200 && \"1 \" + 'hour' + \" \" + 'ago' + \"\")\r\n                || (diff < 86400 && Math.floor(diff / 3600) + \" \" + 'hours' + \" \" + 'ago')\r\n            )\r\n        )\r\n        || (day_diff == 1 && 'yerstaday' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + \" \" + 'days' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + \" \" + 'weeks' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive() {\r\n        let element = document.getElementById(this.props.from)\r\n        let rect = element.getBoundingClientRect()\r\n        \r\n        this.setState({left: rect.x+element.clientWidth, top: rect.y})\r\n        this.setState({active: !this.state.active})\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar online={this.props.user.online} style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                    <div>\r\n                        <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>You:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <>{this.props.lastMessage.text}</>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.images[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span style={{color: '#008FF7'}}>Фотографии [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.sounds[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span style={{color: '#008FF7'}}>Аудио [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.files[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span style={{color: '#008FF7'}}>Файлы [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Chats</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>You dont have chats, lets create new</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(room => {\r\n            if(room.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: room.errors[0]\r\n                })\r\n                \r\n                return\r\n            }\r\n\r\n            room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n            room.users.map(x => {\r\n                x.speaking = false\r\n            })\r\n\r\n            setForceTitle(room.title)\r\n\r\n            dispatch({\r\n                type: ROOMS_JOIN_ROOM,\r\n                payload: {room, canLoad: room.dialog.messages.length === 50}\r\n            })\r\n            \r\n            SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n            try {\r\n                WebRtcController.connectRoom(room._id)\r\n            } catch (err) {\r\n                SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                })\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","import { \r\n    USERS_ADD,\r\n    USERS_GET,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.friends.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>You dont have friends, lets add him</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create'})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n                this.props.history.push(`/rooms/${room._id}`)\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">New room</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">Select users</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder=\"Title\"\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'title').msg} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label=\"Private theme\"\r\n                    />\r\n\r\n                    <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>Next</button>\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Start</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Modal\r\nimport ModalCreateRoom from '../Modals/CreateRoom'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Rooms</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Create your first room in this language</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Что то пошло не так...</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create room\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms))","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(this.props.notification.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.notification.data.roomId}`)\r\n            }}>\r\n                <Avatar online={this.props.notification.user.online} style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div>\r\n                    <p className=\"user-name\">{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\">Invited you to the room&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.data.title}</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem))","import { \r\n    NOTIFICATIONS_GET\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Notifications</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Here will placed your notifications</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET\r\n} from '../constants'\r\nimport store from '../store'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.history.push('/')\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Language</h2>\r\n\r\n                    <span style={{color: this.props.user.roomLang === 'eng' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }}>English</span>\r\n                    <span style={{color: this.props.user.roomLang === 'rus' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }}>Russian</span>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li><Avatar style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}><NotificationsNoneIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserSidebar)","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(this.state.audio) {\r\n            this.state.audio.parentElement.className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) { \r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound active'\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\nimport ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nlet ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span>\r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                .replace(/&amp;/g, '&')\r\n                                .replace(/&gt;/g, '>')\r\n                                .replace(/&lt;/g, '<')\r\n                                // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                            }\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.openSlider(images)\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.openSlider(images)\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Message))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, LinearProgress, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getClientHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight()/3 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} typing</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} typing</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Write your first message to {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialog)","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `Вложения [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">Attachment messages</h3>\r\n                        <p className=\"message-text\">{`${this.props.recentMessages.length} messages`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attachment","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: 0\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <div className=\"placeholder\">Write message...</div>}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    Reply\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\">\r\n                    Forward\r\n                </Button>\r\n\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n\r\n                {(!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport Slider from './Slider'\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\nlet waitDraft = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: [],\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isOpenSlider: false,\r\n        sliderImages: [],\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = ''\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.isOpenSlider && <Slider images={this.state.sliderImages} close={() => {this.setState({isOpenSlider: false, sliderImages: []})}} />}\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    openSlider={(sliderImages) => {this.setState({sliderImages, isOpenSlider: true})}}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\">{this.props.rooms.activeRoom.error.msg}</p>\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport Avatar from '../../Partials/User/Avatar';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Members extends React.Component {\r\n    render() {\r\n        return <Scrollbars\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"theme-members scroll\"\r\n            autoHide\r\n        >\r\n            {this.props.users.map((user, index) => \r\n                <div key={index} className=\"member\">\r\n                    <Avatar name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                    {user.speaking && <span className=\"speaking\"></span>}\r\n                </div>\r\n            )}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6\">\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} online</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat messages={this.props.rooms.activeRoom.dialog.messages} type=\"room\" to={this.props.rooms.activeRoom.title} dialogId={this.props.rooms.activeRoom.dialog._id} roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6 theme-screen\">\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Room))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../../Partials/Loading'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\n\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 32, \r\n                        height: 32, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} /></div>\r\n                    <div className=\"user-info\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                    </div></>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>User not found</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog))\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Room from '../Pages/User/Room';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport { randomInteger } from '../Controllers/FunctionsController';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={randomInteger(0, 1000)} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                />\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">Moscow</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>Message</p>\r\n                    </div>    \r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>+ Friend</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Accept</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Decline</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Remove</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PermMediaOutlined';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Avatar \r\n                style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n            />\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">Moscow</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Settings</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Contacts</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <PermMediaOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Media</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px'\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Incoming requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Outgoing requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">Contacts</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>Friends</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>Inbox</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>Outbox</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox />}\r\n            {this.state.activeTab === 'outbox' && <Outbox />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">New chat</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog))","// App\r\nimport React from 'react'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n        </>\r\n    }\r\n}\r\n\r\nexport default withRouter(MainModal)","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount}) => {\r\n          SocketController.init(apiToken)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}