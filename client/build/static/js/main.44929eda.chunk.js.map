{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/slider.js","Redux/reducers/ban.js","Redux/reducers/toasts.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SoundController.js","Controllers/SocketController.js","Redux/actions/dialogs.js","languages.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Partials/Room/RoomItem.js","Redux/actions/rooms.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Partials/Language/LanguageItem.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Redux/actions/users.js","Redux/actions/call.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Pages/User/Dialog.js","Pages/User/Payment.js","Pages/User/Ban.js","Pages/Auth/AuthSocial.js","Router/config.js","Pages/NoMatch.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Partials/Chat/Slider.js","Modals/investmentsPartials/Images.js","Modals/investmentsPartials/Sounds.js","Modals/investmentsPartials/Files.js","Modals/Investments.js","Modals/Settings.js","Modals/Profile.js","Modals/Language.js","Modals/Mute.js","Modals/Unmute.js","Modals/Banroom.js","Modals/Unbanroom.js","Modals/SendWaning.js","Modals/Warning.js","Modals/ForceAcceptCall.js","Modals/ForcePlaceCall.js","Modals/ForceJoinRoom.js","Modals/Ban.js","Modals/Toast.js","Modals/Toasts.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","avatar","alt","name","src","min","avatarStyle","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","warning","user","state","action","type","payload","roomLang","first","firstName","last","lastName","city","lang","isFetching","getted","activeRoom","isError","rooms","canLoad","force","length","map","room","_id","title","isPrivate","filter","typers","isLoading","remoteStream","muted","error","users","roomId","userId","dialog","messages","message","_newId","files","item","file","sounds","images","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","index","ban","date","numDate","toasts","toast","toastType","combineReducers","slider","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","getState","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","timeStamps","time","label","CTX","newMessageSound","Audio","beep","rington","resume","addEventListener","currentTime","promise","play","undefined","_","playNewMessage","stopBeep","pause","stopRington","socket","activeLang","unmuteTimer","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","setTimeout","WebRtcController","otherId","location","pathname","id","read","playRington","clearTimeout","msg","reload","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogsLoad","lastDialogId","firstDialogId","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","append","push","localMessage","text","recentMessages","now","m","socketId","messageRes","errors","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","ru","settings","change_profile","language","logout","back","save","next","last_name_not_empty","first_name_not_empty","title_not_empty","create_room","something_goes_wrong","chats","contacts","inbox","outbox","you_dont_have_friends","search","accept","decline","not_indicated","plus_friend","remove","english","russian","you","write_message","show_investments","you_sure","delete","delete_room","invite_friends","edit_room","investments","photos","missed_call","outcoming_call","incoming_call","canceled_call","select_language","users_not_found","user_not_found","reply","forward","new_room","invite","private_room","start","select_users","new_chat","invited_you_to_the_room","accept_your_friend_request","send_you_friend_request","you_are_not_invited","january","february","march","april","may","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","in","yerstaday","today","just_now","here_wiil_placed_your_notifications","create_your_first_room","you_dont_have_chats","write_your_first_message","attachment_messages","have_max_rooms","room_exist","have_active_call","force_accept_text","force_join_text","force_place_text","delete_room_text","user_busy","cancel_your_call","empty_inv_files","empty_inv_sounds","empty_inv_images","you_banned_in_this_room","to","incoming_request_empty","outgoing_request_empty","day_1","day_2","day_5","minute_1","minute_2","minute_5","hour_1","hour_2","hour_5","week_1","week_2","week_5","ago","en","getHM","hours","getHours","minutes","getMinutes","toString","LastMessageDate","timeR","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","arr","languages","OnlineDate","diff","getTime","month_diff","isNaN","declension","ceil","n","text_forms","n1","abs","ActionMenu","active","left","top","element","getElementById","from","composedPath","stopPropagation","rect","getBoundingClientRect","bottom","clientHeight","right","clientWidth","setState","event","toggleActive","bind","removeEventListener","transform","actions","Button","key","onClick","DialogItem","randomId","textDecoration","history","preventDefault","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","myUser","langProps","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","withLang","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","getScrollHeight","getClientHeight","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","contextType","RoomItem","roomsGet","roomsAdd","roomsLoad","lastRoomId","firstRoomId","data","param","Rooms","isOpenCreateRoom","roomsActions","roomsBlock","CircularProgress","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","uploadAvatar","target","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","LanguageItem","UserSidebar","activeTab","substring","show","Vkontakte","aria-aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","class","Login","email","password","toLowerCase","replace","token","cookies","set","onSubmit","href","marginRight","Facebook","value","onChange","placeholder","withCookies","Register","audioDurationInterval","duration","thisAudio","getElementsByName","volume","onpause","parentElement","onplay","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","otherAudio","getElementsByClassName","startTimer","nativeEvent","layerX","rangeBlock","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","playBeep","clear","componentDecorator","rel","Message","isHistoryDate","moreHour","date1","date2","isFirst","timeAt","selected","unSelect","onSelect","isRecent","cursor","padding","lineHeight","canSelect","callActions","countRecent","image","isBlur","draggable","sound","open","toFixed","openSlider","sliderImages","PureComponent","usersActions","waitActiveUser","zIndex","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","PlaceHolder","InputMessage","inputMessageHeight","items","clipboardData","originalEvent","kind","getAsFile","addFile","test","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","newText","prevText","customStylesModal","overlay","content","borderRadius","boxShadow","textAlign","RoomJoinError","isOpen","contentLabel","marginBottom","toLocaleString","CustomFab2","Members","srcObject","autoPlay","controls","Room","act","qs","ignoreQueryPrefix","waitSocket","match","params","listen","ownerId","Main","order","CallFab","innerWidth","Payment","tariffs","redirect","tariffId","tariff","price","buy","AuthSocial","routes","exact","NoMatch","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","waitSearch","Contacts","q","searchResult","onSearch","selectUsers","customStylesModalCreate","customStylesModalInvite","minHeight","justifyContent","CreateRoom","step","onRequestClose","maxLength","FormControlLabel","control","Friends","transition","OtherUser","MyUser","User","Inbox","Outbox","CreateDialog","DeleteRoom","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","justifyItems","alignContent","fullScreen","overlayClassName","Slider","opacity","Images","Sounds","Files","Settings","goBack","setLang","CustomRadio","Radio","selectRoom","selectRoomId","success","limits","Warning","Toast","Toasts","MainModal","modal","mute","unmute","banroom","unbanroom","sendwarning","Mute","Unmute","Banroom","Unbanroom","SendWaning","Profile","Invite","EditRoom","Forward","Investments","ForceJoinRoom","ForceAcceptCall","ForcePlaceCall","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44929eda.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img alt={this.props.name} src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR,\r\n    USER_EDIT,\r\n    USER_SET_LANG,\r\n    USER_SET_WARNING\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false,\r\n    warning: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false, warning: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        case USER_EDIT:\r\n            return { ...state, name: {first: action.payload.firstName, last: action.payload.lastName}, city: action.payload.city }\r\n        case USER_SET_LANG:\r\n            return { ...state, lang: action.payload }\r\n        case USER_SET_WARNING:\r\n            return { ...state, warning: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\nexport const USER_EDIT = 'USER_EDIT'\r\nexport const USER_SET_LANG = 'USER_SET_LANG'\r\nexport const USER_SET_WARNING = 'USER_SET_WARNING'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\nexport const ROOMS_PRELOAD = 'ROOMS_PRELOAD'\r\nexport const ROOMS_SET_MUTED = 'ROOMS_SET_MUTED'\r\nexport const ROOMS_SET_FORCE = 'ROOMS_SET_FORCE'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\nexport const DIALOGS_PRELOAD = 'DIALOGS_PRELOAD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'\r\nexport const CALL_SET_FORCE = 'CALL_SET_FORCE'\r\n\r\n// Slider\r\nexport const SLIDER_SET = 'SLIDER_SET'\r\n\r\n// Ban\r\nexport const BAN_SET = 'BAN_SET'\r\n\r\n// Toasts\r\nexport const TOASTS_ADD = 'TOASTS_ADD'\r\nexport const TOASTS_REMOVE = 'TOASTS_REMOVE'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: [],\r\n    canLoad: false,\r\n    force: false\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true, canLoad: action.payload.length === 20 }\r\n        }\r\n        case ROOMS_PRELOAD:\r\n            return { ...state, rooms: [ ...state.rooms, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false, muted: action.payload.muted} }\r\n        case ROOMS_SET_MUTED:\r\n            return { ...state, activeRoom: {...state.activeRoom, muted: action.payload} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_SET_FORCE:\r\n            return { ...state, force: action.payload }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId,\r\n                    files: message.files.map(item => {return { ...item, file: false}}),\r\n                    sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                    images: message.images.map(item => {return { ...item, file: false}})\r\n                } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: [],\r\n    canLoad: false\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount, canLoad: action.payload.dialogs.length === 20 }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_PRELOAD:\r\n            return { ...state, dialogs: [ ...state.dialogs, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId, \r\n                            files: message.files.map(item => {return { ...item, file: false}}),\r\n                            sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                            images: message.images.map(item => {return { ...item, file: false}})\r\n                         } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA,\r\n    CALL_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio',\r\n    force: {user: false, status: false}\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        case CALL_SET_FORCE:\r\n            return { ...state, force: {user: action.payload.user, status: action.payload.status} }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { \r\n    SLIDER_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    images: [],\r\n    index: 0\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SLIDER_SET: {\r\n            return { ...state, images: action.payload.images, index: action.payload.index }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { \r\n    BAN_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    ban: false,\r\n    date: '',\r\n    numDate: 0\r\n}\r\n\r\nconst ban = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case BAN_SET:\r\n            return { ...state, ban: true, date: action.payload.date, numDate: action.payload.numDate }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default ban","import { \r\n    TOASTS_ADD,\r\n    TOASTS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    toasts: []\r\n}\r\n\r\nconst toasts = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case TOASTS_ADD:\r\n            return { ...state, toasts: [ {...action.payload.toast, toastType: action.payload.toastType}, ...state.toasts ] }\r\n        case TOASTS_REMOVE:\r\n            return { ...state, toasts: [...state.toasts.filter(toast => toast._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default toasts","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\nimport slider from './slider'\r\nimport ban from './ban'\r\nimport toasts from './toasts'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call,\r\n    slider,\r\n    ban,\r\n    toasts\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","export function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\n// const RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        if(localStream) {\r\n            localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: localStream.getAudioTracks()[0].enabled\r\n            })\r\n        }\r\n    },\r\n    toggleMusic() {\r\n        if(remoteStream) {\r\n            remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MUSIC,\r\n                payload: remoteStream.getAudioTracks()[0].enabled\r\n            })\r\n        }\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(!!store.getState().call.status === 'active')\r\n            return \r\n            \r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        try {\r\n            let answer = new RTCSessionDescription({\r\n                type: 'answer',\r\n                sdp: sdpAnswer\r\n            })\r\n            \r\n            WebRtcPeerConnection.setRemoteDescription(answer);\r\n    \r\n            let stream = new MediaStream();\r\n    \r\n            for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                stream.addTrack(sender.track);\r\n            }\r\n    \r\n            remoteStream = stream\r\n    \r\n            store.dispatch({\r\n                type: ROOMS_SET_REMOTE_STREAM,\r\n                payload: stream\r\n            })\r\n    \r\n            speechEvents = hark(localStream, {});\r\n     \r\n            speechEvents.on('speaking', function() {\r\n                SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n            });\r\n        \r\n            speechEvents.on('stopped_speaking', function() {\r\n                SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'\r\nexport const timeStamps = [\r\n    {\r\n        time: 60,\r\n        label: '1 minute'\r\n    },\r\n    {\r\n        time: 1800,\r\n        label: '30 minute'\r\n    },\r\n    {\r\n        time: 3600,\r\n        label: '1 hour'\r\n    },\r\n    {\r\n        time: 86400,\r\n        label: '24 hour'\r\n    },\r\n    {\r\n        time: 604800,\r\n        label: '7 days'\r\n    },\r\n    {\r\n        time: 2419200,\r\n        label: '1 month'\r\n    },\r\n    {\r\n        time: 999999999,\r\n        label: 'Forever'\r\n    },\r\n]","import {urlApi} from '../config'\r\n\r\nconst CTX = new (window.AudioContext || window.webkitAudioContext)()\r\n\r\nlet newMessageSound = new Audio(`${urlApi}/sounds/NewMessage.mp3`)\r\nlet beep = new Audio(`${urlApi}/sounds/Beep.mp3`)\r\nlet rington = new Audio(`${urlApi}/sounds/Rington.mp3`)\r\n\r\nsetInterval(() => {\r\n    CTX.resume().then(() => {})\r\n}, 3000)\r\n\r\nbeep.addEventListener(\"ended\", function() {\r\n    beep.currentTime = 0;\r\n    let promise = beep.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n});\r\n\r\nrington.addEventListener(\"ended\", function() {\r\n    rington.currentTime = 0;\r\n    let promise = rington.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n});\r\n\r\nexport const playNewMessage = () => {\r\n    newMessageSound.currentTime = 0\r\n    let promise = newMessageSound.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n}\r\n\r\nexport const playBeep = () => {\r\n    beep.currentTime = 0\r\n    \r\n    let promise = beep.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n}\r\n\r\nexport const stopBeep = () => {\r\n    beep.currentTime = 0\r\n    beep.pause()\r\n}\r\n\r\nexport const playRington = () => {\r\n    rington.currentTime = 0\r\n    \r\n    let promise = rington.play()\r\n\r\n    if (promise !== undefined) {\r\n        promise.then(_ => {}).catch(error => {console.log(error)})\r\n    }\r\n}\r\n\r\nexport const stopRington = () => {\r\n    rington.currentTime = 0\r\n    rington.pause()\r\n}","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_LEAVE_ROOM,\r\n    USER_SET_WARNING,\r\n    TOASTS_ADD,\r\n    TOASTS_REMOVE\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\nimport {playNewMessage, stopBeep, playRington, stopRington} from './SoundController'\r\n\r\nlet socket = false\r\nlet activeLang = false\r\nlet unmuteTimer = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        if(socket) \r\n            return\r\n\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n\r\n            if(message.user._id !== store.getState().user._id && `/chats/${message.user._id}` !== window.location.pathname) {\r\n                playNewMessage()\r\n\r\n                store.dispatch({\r\n                    type: TOASTS_ADD,\r\n                    payload: {toast: message, toastType: 'message'}\r\n                })\r\n\r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: TOASTS_REMOVE,\r\n                        payload: message._id\r\n                    })\r\n                }, 5000)\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted) {\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            } else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: TOASTS_ADD,\r\n                payload: {toast: notification, toastType: 'notification'}\r\n            })\r\n\r\n            setTimeout(() => {\r\n                store.dispatch({\r\n                    type: TOASTS_REMOVE,\r\n                    payload: notification._id\r\n                })\r\n            }, 5000)\r\n\r\n            playNewMessage()\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n\r\n            store.dispatch({\r\n                type: TOASTS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                playRington()\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n                stopBeep()\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                stopBeep()\r\n                stopRington()\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('muteRoom', ({roomId, muted}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: muted\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if((muted.numDate*1000) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === roomId && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                    }, muted.numDate*1000);\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('unmuteRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: false\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('banRoom', ({roomId, ban}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                WebRtcController.leaveRoom({roomId, lang: store.getState().rooms.activeRoom.lang})\r\n                store.dispatch({\r\n                    type: ROOMS_LEAVE_ROOM\r\n                })\r\n                store.dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {msg: 'you_banned_in_this_room', ban: ban}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendWarning', warning => {\r\n            store.dispatch({\r\n                type: USER_SET_WARNING,\r\n                payload: warning\r\n            })\r\n        })\r\n\r\n        socket.on('ban', async () => {\r\n            window.location.reload()\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogsLoad = (apiToken) => (dispatch) => {\r\n    if(store.getState().dialogs.canLoad) {\r\n        dispatch({\r\n            type: DIALOGS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/dialog/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastDialogId: store.getState().dialogs.dialogs[store.getState().dialogs.dialogs.length-1]._id,\r\n                firstDialogId: store.getState().dialogs.dialogs[0]._id\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dialogs) => {\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n                \r\n                if(existDialog) {\r\n                    dialogs[i] = existDialog\r\n                } else {\r\n                    dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n    \r\n                    if(!dialogs[i].user)\r\n                        dialogs[i].user = dialogs[i].users[0]\r\n    \r\n                    dialogs[i].typers = []\r\n                }\r\n            }\r\n            \r\n            dispatch({\r\n                type: DIALOGS_PRELOAD,\r\n                payload: dialogs\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 1)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","export default {\r\n    ru: {\r\n        settings: 'Настройки',\r\n        change_profile: 'Изменить профиль',\r\n        language: 'Язык',\r\n        logout: 'Выйти',\r\n        back: 'Назад',\r\n        save: 'Сохранить',\r\n        next: 'Продолжить',\r\n        firstName: 'Имя',\r\n        lastName: 'Фамилия',\r\n        city: 'Город',\r\n        last_name_not_empty: 'Фамилия не может быть пустой',\r\n        first_name_not_empty: 'Имя не может быть пустым',\r\n        title_not_empty: 'Заголовок не может быть пустым',\r\n        rooms: 'Комнаты',\r\n        create_room: 'Создать комнату',\r\n        something_goes_wrong: 'Что-то пошло не так...',\r\n        chats: 'Чаты',\r\n        notifications: 'Уведомления',\r\n        contacts: 'Контакты',\r\n        friends: 'Друзья',\r\n        inbox: 'Входящие',\r\n        outbox: 'Исходящие',\r\n        you_dont_have_friends: 'У вас нет друзей, давайте добавим их',\r\n        search: 'Поиск',\r\n        message: 'Сообщение',\r\n        call: 'Позвонить',\r\n        accept: 'Принять',\r\n        decline: 'Отклонить',\r\n        not_indicated: 'Не указано',\r\n        plus_friend: '+ Друг',\r\n        remove: \"Удалить\",\r\n        english: 'Английский',\r\n        russian: 'Русский',\r\n        you: 'Вы',\r\n        write_message: 'Напишите сообщение...',\r\n        show_investments: 'Показать вложения',\r\n        you_sure: 'Вы уверены?',\r\n        delete: 'Удалить',\r\n        delete_room: 'Удалить комнату',\r\n        invite_friends: 'Пригласить друзей',\r\n        edit_room: 'Изменить комнату',\r\n        investments: 'Вложения',\r\n        photos: 'Фотографии',\r\n        sounds: 'Аудио',\r\n        files: 'Файлы',\r\n        online: 'онлайн',\r\n        missed_call: 'Пропущенный звонок',\r\n        outcoming_call: 'Исходящий звонок',\r\n        incoming_call: 'Входящий звонок',\r\n        canceled_call: 'Отменённый звонок',\r\n        select_language: 'Выберите язык',\r\n        users_not_found: 'Пользователи не найдены',\r\n        user_not_found: 'Пользователь не найден',\r\n        reply: 'Ответить',\r\n        forward: 'Переслать',\r\n        title: 'Название',\r\n        new_room: 'Новая комната',\r\n        invite: 'Пригласить',\r\n        private_room: 'Приватная комната',\r\n        start: 'Начать',\r\n        select_users: 'Выберите пользователей',\r\n        new_chat: 'Новый чат',\r\n        invited_you_to_the_room: 'Пригласил(а) вас в комнату',\r\n        accept_your_friend_request: 'Принял(а) ваш запрос в друзья',\r\n        send_you_friend_request: 'Отправил(а) вам запрос в друзья',\r\n        you_are_not_invited: 'Вы не были приглашенны в эту комнату',\r\n        january: 'Январь',\r\n        february: 'Февраль',\r\n        march: 'Март',\r\n        april: 'Апрель',\r\n        may: 'Май',\r\n        june: 'Июнь',\r\n        july: 'Июль',\r\n        august: 'Август',\r\n        september: 'Сентябрь',\r\n        october: 'Октябрь',\r\n        november: 'Ноябрь',\r\n        december: 'Декабрь',\r\n        jan: 'Янв',\r\n        feb: 'Фев',\r\n        mar: 'Мар',\r\n        apr: 'Апр',\r\n        jun: 'Июн',\r\n        jul: 'Июл',\r\n        aug: 'Авг',\r\n        sep: 'Сен',\r\n        oct: 'Окт',\r\n        nov: 'Ноя',\r\n        dec: 'Дек',\r\n        in: 'в',\r\n        yerstaday: 'вчера',\r\n        today: 'сегодня',\r\n        just_now: 'только что',\r\n        here_wiil_placed_your_notifications: 'Здесь будут находиться ваши уведомления',\r\n        create_your_first_room: 'Создайте свою первую комнату в этом языке',\r\n        you_dont_have_chats: 'У вас нет чатов, давайте создадим его',\r\n        write_your_first_message: 'Напишите свое первое сообщение для',\r\n        typing: 'печатает',\r\n        attachment_messages: 'Прикрепленные сообщения',\r\n        messages: 'Сообщения',\r\n        have_max_rooms: 'Создано максимальное кол-во комнат',\r\n        room_exist: 'Комната с таким именем существует',\r\n        have_active_call: 'Имеется активный звонок',\r\n        error: 'Ошибка',\r\n        force_accept_text: 'Если вы примите личный звонок, то ваш звонок в комнате завершится.',\r\n        force_join_text: 'Если вы перейдете в комнату, текущий личный звонок завершится.',\r\n        force_place_text: 'Если вы совершите личный звонок, то ваш звонок в комнате завершится.',\r\n        delete_room_text: 'После удаления вы и присутсвующие в комнате останутся в ней, но больше никто не сможет зайти.',\r\n        close: 'Закрыть',\r\n        user_busy: 'Пользователь занят...',\r\n        cancel_your_call: 'отклонил ваш звонок',\r\n        empty_inv_files: 'Здесь будут находиться файды из этого диалога',\r\n        empty_inv_sounds: 'Здесь будет находиться аудио из этого диалога',\r\n        empty_inv_images: 'Здесь будут находиться изображения из этого диалога',\r\n        you_banned_in_this_room: 'Вы заблокированны в этой комнате',\r\n        to: 'до',\r\n        incoming_request_empty: 'Здесь будут отображаться входящие запросы',\r\n        outgoing_request_empty: 'Здесь будут отображаться исходящие запросы',\r\n        day_1: 'день',\r\n        day_2: 'дня',\r\n        day_5: 'дней',\r\n        minute_1: 'минуту',\r\n        minute_2: 'минуты',\r\n        minute_5: 'минут',\r\n        hour_1: 'час',\r\n        hour_2: 'часа',\r\n        hour_5: 'часов',\r\n        week_1: 'неделю',\r\n        week_2: 'недели',\r\n        week_5: 'недель',\r\n        ago: 'назад',\r\n        first_name_not_empty: 'Имя не должно быть пустым',\r\n        first_name_is_string: 'Имя должно быть строкой',\r\n        first_name_is_min: 'Имя должно содержать минимум 2 символа',\r\n        last_name_not_empty: 'Фамилия не должна быть пустой',\r\n        last_name_is_string: 'Фамилия должно быть строкой',\r\n        last_name_is_min: 'Фамилия должно содержать минимум 2 символа',\r\n        email_is_invalid: 'Email неверный',\r\n        email_not_empty: 'Email не может быть пустым',\r\n        password_is_min: 'Пароль должен содержать минимум 8 символов',\r\n        email_or_password_wrong: 'Email или пароль неверный',\r\n        email_already: 'Email уже занят'   \r\n    },\r\n    en: {\r\n        settings: 'Settings',\r\n        change_profile: 'Change profile',\r\n        language: 'Language',\r\n        logout: 'Logout',\r\n        back: 'Back',\r\n        save: 'Save',\r\n        next: 'Next',\r\n        firstName: 'First name',\r\n        lastName: 'Last name',\r\n        city: 'City',\r\n        last_name_not_empty: 'First name cannot be empty',\r\n        first_name_not_empty: 'Last name cannot be empty',\r\n        title_not_empty: 'Title cannot be empty',\r\n        rooms: 'Rooms',\r\n        create_room: 'Create room',\r\n        something_goes_wrong: 'Something goes wrong...',\r\n        chats: 'Chats',\r\n        notifications: 'Notifications',\r\n        contacts: 'Contacts',\r\n        friends: 'Friends',\r\n        inbox: 'Inbox',\r\n        outbox: 'Outbox',\r\n        you_dont_have_friends: 'You dont have friends, lets add him',\r\n        search: 'Search',\r\n        message: 'Message',\r\n        call: 'Call',\r\n        accept: 'Accept',\r\n        decline: 'Decline',\r\n        not_indicated: 'Not indicated',\r\n        plus_friend: '+ Friend',\r\n        remove: \"Remove\",\r\n        english: 'English',\r\n        russian: 'Russian',\r\n        you: 'You',\r\n        write_message: 'Write message...',\r\n        show_investments: 'Show investments',\r\n        outcoming_call: 'Outcoming call',\r\n        incoming_call: 'Incoming call',\r\n        online: 'online',\r\n        invite: 'Invite',\r\n        delete_room: 'Delete room',\r\n        invite_friends: 'Invite friends',\r\n        edit_room: 'Edit room',\r\n        you_sure: 'You sure?',\r\n        delete: 'Delete',\r\n        investments: 'Investments',\r\n        photos: 'Photos',\r\n        sounds: 'Sounds',\r\n        files: 'Files',\r\n        missed_call: 'Missed call',\r\n        canceled_call: 'Canceled call',\r\n        select_language: 'Select language',\r\n        users_not_found: 'Users not found',\r\n        user_not_found: 'User not found',\r\n        reply: 'Reply',\r\n        forward: 'Forward',\r\n        title: 'Title',\r\n        new_room: 'New room',\r\n        private_room: 'Private room',\r\n        start: 'Start',\r\n        select_users: 'Select users',\r\n        new_chat: 'New chat',\r\n        invited_you_to_the_room: 'Invited you to the room',\r\n        accept_your_friend_request: 'Accept your friend request',\r\n        send_you_friend_request: 'Send you friend request',\r\n        you_are_not_invited: 'You dont have invited in this room',\r\n        january: 'January',\r\n        february: 'February',\r\n        march: 'March',\r\n        april: 'April',\r\n        may: 'May',\r\n        june: 'June',\r\n        july: 'July',\r\n        august: 'August',\r\n        september: 'September',\r\n        october: 'October',\r\n        november: 'November',\r\n        december: 'December',\r\n        jan: 'Jan',\r\n        feb: 'Feb',\r\n        mar: 'Mar',\r\n        apr: 'Apr',\r\n        jun: 'Jun',\r\n        jul: 'Jul',\r\n        aug: 'Aug',\r\n        sep: 'Sep',\r\n        oct: 'Oct',\r\n        nov: 'Nov',\r\n        dec: 'Dec',\r\n        in: 'in',\r\n        yerstaday: 'yerstaday',\r\n        today: 'Today',\r\n        just_now: 'just now',\r\n        here_wiil_placed_your_notifications: 'Here will placed your notifications',\r\n        create_your_first_room: 'Create your first room in this language',\r\n        you_dont_have_chats: 'You dont have chats, lets create new',\r\n        write_your_first_message: 'Write your first message to',\r\n        typing: 'typing',\r\n        attachment_messages: 'Attachment messages',\r\n        messages: 'Messages',\r\n        have_max_rooms: 'Create max limit rooms',\r\n        room_exist: 'A room with that name exists',\r\n        have_active_call: 'Have active call',\r\n        error: 'Error',\r\n        force_accept_text: 'If you accept a personal call, your room call will end.',\r\n        force_join_text: 'If you move to a room, the current personal call ends.',\r\n        force_place_text: 'If you make a personal call, then your call in the room will end.',\r\n        delete_room_text: 'After deleting, you and those present in the room will remain in it, but no one else will be able to enter.',\r\n        close: 'Close',\r\n        user_busy: 'The user is busy...',\r\n        cancel_your_call: 'canceled your call',\r\n        empty_inv_files: 'Here will placed files from this dialog',\r\n        empty_inv_sounds: 'Here will placed sounds from this dialog',\r\n        empty_inv_images: 'Here will placed images from this dialog',\r\n        you_banned_in_this_room: 'You blocked in this room',\r\n        to: 'to',\r\n        incoming_request_empty: 'Incoming requests will be displayed here',\r\n        outgoing_request_empty: 'Outgoing requests will be displayed here',\r\n        day_1: 'day',\r\n        day_2: 'days',\r\n        day_5: 'days',\r\n        minute_1: 'minute',\r\n        minute_2: 'minutes',\r\n        minute_5: 'minutes',\r\n        hour_1: 'hour',\r\n        hour_2: 'hours',\r\n        hour_5: 'hours',\r\n        week_1: 'week',\r\n        week_2: 'weeks',\r\n        week_5: 'weeks',\r\n        ago: 'ago',\r\n        first_name_not_empty: 'First name must not be empty',\r\n        first_name_is_string: 'First name must be a string',\r\n        first_name_is_min: 'First name contain at least 2 characters',\r\n        last_name_not_empty: 'Last name must not be empty',\r\n        last_name_is_string: 'Last name must be a string',\r\n        last_name_is_min: 'Last name contain at least 2 characters',\r\n        email_is_invalid: 'Email is invalid',\r\n        email_not_empty: 'Email must not be empty',\r\n        password_is_min: 'Password must contain at least 8 characters ',\r\n        email_or_password_wrong: 'Email or password wrong',\r\n        email_already: 'Email already uses'   \r\n    }\r\n}","import languages from \"../languages\";\r\nimport store from \"../Redux/store\";\r\n\r\nexport function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].january,\r\n        languages[lang].february,\r\n        languages[lang].march,\r\n        languages[lang].april,\r\n        languages[lang].may,\r\n        languages[lang].june,\r\n        languages[lang].july,\r\n        languages[lang].august,\r\n        languages[lang].september,\r\n        languages[lang].october,\r\n        languages[lang].november,\r\n        languages[lang].december\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && languages[lang].today\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].jan,\r\n        languages[lang].feb,\r\n        languages[lang].mar,\r\n        languages[lang].apr,\r\n        languages[lang].may,\r\n        languages[lang].jun,\r\n        languages[lang].jul,\r\n        languages[lang].aug,\r\n        languages[lang].sep,\r\n        languages[lang].oct,\r\n        languages[lang].nov,\r\n        languages[lang].dec,\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate();\r\n    var month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() + ' in ' + hours + ':' +  minutes : day.toString() + ' in ' + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (\r\n                (diff < 60 && languages[lang].just_now)\r\n                || (diff < 120 && '1 ' + languages[lang].minute_1 + ' ' + languages[lang].ago)\r\n                || (diff < 3600 && Math.floor(diff / 60) + ' ' + declension(Math.ceil(diff / 60), [languages[lang].minute_1, languages[lang].minute_2, languages[lang].minute_5]) + ' ' + languages[lang].ago)\r\n                || (diff < 7200 && '1 ' + languages[lang].hour_1 + ' ' + languages[lang].ago)\r\n                || (diff < 86400 && Math.floor(diff / 3600) + ' ' + declension(Math.ceil(diff / 3600), [languages[lang].hour_1, languages[lang].hour_2, languages[lang].hour_5]) + ' ' + languages[lang].ago)\r\n            )\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + ' ' + declension(Math.ceil(day_diff), [languages[lang].day_1, languages[lang].day_2, languages[lang].day_5]) + ' ' + languages[lang].ago + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + ' ' + declension(Math.ceil(day_diff / 7), [languages[lang].week_1, languages[lang].week_2, languages[lang].week_5]) + ' ' + languages[lang].ago + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}\r\n\r\nfunction declension(n, text_forms) {  \r\n    n = Math.abs(n) % 100; var n1 = n % 10;\r\n    if (n > 10 && n < 20) { return text_forms[2]; }\r\n    if (n1 > 1 && n1 < 5) { return text_forms[1]; }\r\n    if (n1 == 1) { return text_forms[0]; }\r\n    return text_forms[2];\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive(e) {\r\n        let element = document.getElementById(this.props.from)\r\n        if(element) {\r\n            let find = false\r\n            let path = e.path || (e.composedPath && e.composedPath());\r\n            if(path.find(x => x.id === this.props.from)) {\r\n                e.stopPropagation()\r\n                find = true\r\n            }\r\n            \r\n            let rect = element.getBoundingClientRect()\r\n\r\n            let top\r\n            let left\r\n            if(this.props.bottom) {\r\n                top = rect.y + element.clientHeight\r\n                left = rect.x\r\n                if(this.props.right)\r\n                    left = rect.x+element.clientWidth\r\n            }\r\n            else {\r\n                top = rect.y\r\n                left = rect.x+element.clientWidth\r\n            }\r\n            \r\n            this.setState({left, top})\r\n            if((this.props.event === 'click' && (this.state.active || find)) || this.props.event === 'hover')\r\n                this.setState({active: !this.state.active})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).addEventListener('click', this.toggleActive.bind(this))\r\n            document.body.addEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).removeEventListener('click', this.toggleActive.bind(this))\r\n            document.body.removeEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? this.props.right ? 'translateX(-100%)' : 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>{this.props.langProps.you}:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\" style={{color: this.props.lastMessage.type === 'call' ? '#008FF7' : null}}>{this.props.lastMessage.type === 'call' ? this.props.langProps[this.props.lastMessage.text] : this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Photo</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.photos} [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Sound</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.sounds} [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>File</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.files} [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.messagesBlock.getScrollHeight() - (this.messagesBlock.getClientHeight() + this.messagesBlock.getScrollTop())) === 0) {\r\n            this.props.dialogsActions.dialogsLoad(this.props.user.apiToken)\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.chats}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.you_dont_have_chats}</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages)))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../../Redux/constants';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(this.props.call.user) {\r\n                    e.preventDefault()\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_FORCE,\r\n                        payload: this.props.room._id\r\n                    })\r\n                }\r\n            }} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RoomItem)","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nlet unmuteTimer = false\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const roomsLoad = (apiToken, lang) => (dispatch) => {\r\n    if(store.getState().rooms.canLoad) {\r\n        dispatch({\r\n            type: ROOMS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/room/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastRoomId: store.getState().rooms.rooms[store.getState().rooms.rooms.length-1]._id,\r\n                firstRoomId: store.getState().rooms.rooms[0]._id,\r\n                lang\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((rooms) => {\r\n            dispatch({\r\n                type: ROOMS_PRELOAD,\r\n                payload: rooms\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: data.errors[0]\r\n                })\r\n                \r\n                return\r\n            } else {\r\n                let room = data.room\r\n                let muted = data.muted\r\n\r\n                room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n                room.users.map(x => {\r\n                    x.speaking = false\r\n                    return 1\r\n                })\r\n\r\n                setForceTitle(room.title)\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ROOM,\r\n                    payload: {room, canLoad: room.dialog.messages.length === 50, muted}\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if(muted && (new Date(muted.date).getTime() - new Date().getTime()) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === room._id && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                        // console.log(unmuteTimer)\r\n                    }, (new Date(muted.date).getTime() - new Date().getTime()) );\r\n                }\r\n                \r\n                SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n                try {\r\n                    WebRtcController.connectRoom(room._id)\r\n                } catch (err) {\r\n                    SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                    dispatch({\r\n                        type: ROOMS_JOIN_ERROR,\r\n                        payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.roomsBlock.getScrollHeight() - (this.roomsBlock.getClientHeight() + this.roomsBlock.getScrollTop())) === 0) {\r\n            this.props.roomsActions.roomsLoad(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.rooms}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.create_your_first_room}</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.something_goes_wrong}</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title={this.props.langProps.create_room} className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms)))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport store from '../../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../../Redux/constants';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite') {\r\n                    if(this.props.call.user) {\r\n                        store.dispatch({\r\n                            type: ROOMS_SET_FORCE,\r\n                            payload: this.props.notification.room._id\r\n                        })\r\n                    } else {\r\n                        this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                    }\r\n                }\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.accept_your_friend_request}</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.send_you_friend_request}</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        call: state.call,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.notifications}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.here_wiil_placed_your_notifications}</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications)))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <span style={{textDecoration: 'none'}} onClick={() => {this.props.onClick()}}>\r\n                <Button className=\"room-item\">\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600}} name={this.props.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p><span>{this.props.title}</span></p>\r\n                    </div>\r\n                </Button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport LanguageItem from '../Partials/Language/LanguageItem'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../languages'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        this.props.onClick()\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.language}</h2>\r\n\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }} title={this.props.langProps.english} />\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }} title={this.props.langProps.russian} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages)))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: this.props.history.location.pathname.substring(1,5) === 'chat' ? 'messages' : this.props.user.roomLang ? 'rooms' : 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {this.props.dialogs.noReadCount > 0 && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {this.props.notifications.noRead > 0 && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages onClick={() => {this.setState({activeTab: 'rooms'})}} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport store from '../../Redux/store'\r\nimport { BAN_SET } from '../../Redux/constants'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\nimport {Facebook} from '@material-ui/icons';\r\n\r\nconst Vkontakte = ({style}) => {\r\n    return <svg \r\n        style={style}\r\n        aria-aria-hidden=\"true\" \r\n        focusable=\"false\" \r\n        data-prefix=\"fab\" \r\n        data-icon=\"vk\" \r\n        role=\"img\" \r\n        xmlns=\"http://www.w3.org/2000/svg\" \r\n        viewBox=\"0 0 576 512\"\r\n        className=\"svg-inline--fa fa-vk fa-w-18 fa-2x\">\r\n        <path \r\n            fill=\"currentColor\" \r\n            d=\"M545 117.7c3.7-12.5 0-21.7-17.8-21.7h-58.9c-15 0-21.9 7.9-25.6 16.7 0 0-30 73.1-72.4 120.5-13.7 13.7-20 18.1-27.5 18.1-3.7 0-9.4-4.4-9.4-16.9V117.7c0-15-4.2-21.7-16.6-21.7h-92.6c-9.4 0-15 7-15 13.5 0 14.2 21.2 17.5 23.4 57.5v86.8c0 19-3.4 22.5-10.9 22.5-20 0-68.6-73.4-97.4-157.4-5.8-16.3-11.5-22.9-26.6-22.9H38.8c-16.8 0-20.2 7.9-20.2 16.7 0 15.6 20 93.1 93.1 195.5C160.4 378.1 229 416 291.4 416c37.5 0 42.1-8.4 42.1-22.9 0-66.8-3.4-73.1 15.4-73.1 8.7 0 23.7 4.4 58.7 38.1 40 40 46.6 57.9 69 57.9h58.9c16.8 0 25.3-8.4 20.4-25-11.2-34.9-86.9-106.7-90.3-111.5-8.7-11.2-6.2-16.2 0-26.2.1-.1 72-101.3 79.4-135.6z\" class=\"\" />\r\n    </svg>\r\n}\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true, error: false, errors: []})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email.toLowerCase().replace(/\\s+/g, ''),\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    if(data.ban) {\r\n                        store.dispatch({\r\n                            type: BAN_SET,\r\n                            payload: {numDate: data.numDate, date: data.date}\r\n                        })\r\n                    } else {\r\n                        this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                        SocketController.init(data.token)\r\n                    }\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isFetching)\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n            \r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <a className=\"social-auth\" href={`${urlApi}/auth/login_vk?uuid=${randomInteger(0, 9999999)}`}>\r\n                        <Vkontakte style={{width: 24, height: 24, marginLeft: 20, marginRight: 15, color: '#5181b8'}} />\r\n                        Вход через VK\r\n                    </a>\r\n                    <a className=\"social-auth\" href={`${urlApi}/auth/login_fb?uuid=${randomInteger(0, 9999999)}`}>\r\n                        <Facebook style={{marginLeft: 20, marginRight: 15, color: '#4267b2'}} />\r\n                        Вход через FaceBook\r\n                    </a>\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'email').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'password').msg]} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'all').msg]} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Log in</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nfunction randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withCookies(Login)))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true, error: false, errors: []})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email.toLowerCase().replace(/\\s+/g, ''),\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isFetching)\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'email').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'password').msg]} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'all').msg]} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Sign up</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withCookies(Register)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onpause = () => {\r\n            audio.parentElement.className = 'message-sound'\r\n        }\r\n\r\n        audio.onplay = () => {\r\n            audio.parentElement.className = 'message-sound active'\r\n        }\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(document.getElementsByName(this.props.src)) {\r\n            document.getElementsByName(this.props.src).className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) {\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","import { CALL_SET_USER, CALL_SET_STATUS, CALL_SET_FORCE } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\nimport { playBeep, stopBeep, stopRington } from \"../../Controllers/SoundController\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    if(store.getState().rooms.activeRoom) {\r\n        dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user, status: 'force-call'}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: CALL_SET_USER,\r\n            payload: {user, status: 'outcoming'}\r\n        })\r\n\r\n        playBeep()\r\n\r\n        fetch(`${urlApi}/api/call/call`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: user._id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((call) => {\r\n            if(call.error) {\r\n                stopBeep()\r\n                dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: call.error\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    if(store.getState().rooms.activeRoom) {\r\n        dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: store.getState().call.user, status: 'force-accept'}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: CALL_SET_STATUS,\r\n            payload: 'active'\r\n        })\r\n\r\n        fetch(`${urlApi}/api/call/accept`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: store.getState().call.user._id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((call) => {\r\n            if(call.error) {\r\n                dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: call.error\r\n                })\r\n                WebRtcController.stopCall()\r\n\r\n                fetch(`${urlApi}/api/call/stop`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        socketId: SocketController.getSocketId()\r\n                    })\r\n                })\r\n            } else {\r\n                stopRington()\r\n                WebRtcController.call(store.getState().call.user._id)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    stopBeep()\r\n    stopRington()\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\n// import ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n// import urlMetadata from 'url-metadata'\r\n\r\n// let ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n    // urlMetadata(href).then((metadata) => {\r\n    //     console.log(metadata)\r\n    // })\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {this.props.message.user._id !== this.props.user._id && <>{`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}\r\n                            {this.props.message.user._id === this.props.user._id && <>{`${this.props.user.name.first} ${this.props.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}                            \r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\" onClick={(e) => {\r\n                        if(this.props.message.type === 'call' && this.props.message.user._id !== this.props.user._id) {\r\n                            e.stopPropagation()\r\n                            this.props.callActions.call(this.props.message.user, this.props.user.apiToken)\r\n                        }\r\n                    }}>\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.langProps[this.props.message.text]}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.history.push({\r\n                                            search: `?modal=slider`\r\n                                        })\r\n                                        store.dispatch({\r\n                                            type: SLIDER_SET,\r\n                                            payload: {\r\n                                                images,\r\n                                                index: 0\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.history.push({\r\n                                        search: `?modal=slider`\r\n                                    })\r\n                                    store.dispatch({\r\n                                        type: SLIDER_SET,\r\n                                        payload: {\r\n                                            images,\r\n                                            index\r\n                                        }\r\n                                    })\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Message)))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight() + 100 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} {this.props.langProps.typing}</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} {this.props.langProps.typing}</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.write_your_first_message} {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(Dialog))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `${this.props.langProps.investments} [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{this.props.langProps.attachment_messages}</h3>\r\n                        <p className=\"message-text\">{`${this.props.langProps.messages} [${this.props.recentMessages.length}]`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(Attachment)","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst PlaceHolder = withLang(languages)((props) => {\r\n    return <div className=\"placeholder\">{props.langProps.write_message}</div>\r\n})\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <PlaceHolder />}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n\r\n                {!this.props.recentMessages.find(message => message.type === 'call') && <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB', transform: 'scaleX(-1)'}} />\r\n                </Button>}\r\n\r\n                <div className=\"col\"></div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type.toLowerCase() === 'png' || file.type.toLowerCase() === 'jpg' || file.type.toLowerCase() === 'jpeg' || file.type.toLowerCase() === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type.toLowerCase() === 'txt' || file.type.toLowerCase() === 'pdf' || file.type.toLowerCase() === 'docx' || file.type.toLowerCase() === 'zip' || file.type.toLowerCase() === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type.toLowerCase() === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >  \r\n            {this.props.rooms.activeRoom.error.msg === 'dont_have_payment' && <Redirect to=\"/payment\" />}\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">{this.props.langProps.error}</h2>\r\n            <p className=\"modal-text\" style={{marginBottom: !!this.props.rooms.activeRoom.error.ban ? 0 : ''}}>{this.props.langProps[this.props.rooms.activeRoom.error.msg]}</p>\r\n            {!!this.props.rooms.activeRoom.error.ban && <p className=\"modal-text\">{this.props.langProps.to} <span style={{color: '#008FF7'}}>{new Date(this.props.rooms.activeRoom.error.ban.date).toLocaleString()}</span></p>}\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>{this.props.langProps.back}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(RoomJoinError)))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport qs from 'qs'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        minWidth: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab2 = withStyles(fabStylesCustom)(Fab);\r\n\r\nconst Members = withRouter((props) => {\r\n    return <Scrollbars\r\n        renderTrackVertical={() => <div className=\"track-vertical\"/>}\r\n        renderThumbVertical={() => <div className=\"thumb-vertical\"/>}\r\n        className=\"theme-members scroll\"\r\n        autoHide\r\n    >\r\n        {props.users.map((user, index) => \r\n            <div key={index} style={{cursor: 'pointer'}} className=\"member col-6 col-sm-6 col-md-6 col-lg-4 col-xl-3\" onClick={() => {\r\n                props.history.push({\r\n                    search: `?user=${user._id}`\r\n                })\r\n            }}>\r\n                <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                {user.speaking && <span className=\"speaking\"></span>}\r\n                <span className=\"user-name\">{user.name.first} {user.name.last}</span>\r\n            </div>\r\n        )}\r\n    </Scrollbars>\r\n})\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(!!this.props.rooms.activeRoom)\r\n            this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.rooms.activeRoom) {\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className={`col-xl-3 col-lg-6 col-md-6 theme-first-block ${this.state.act === 'chat' ? 'active' : 'hide'}`}>\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            if(this.state.act === 'chat') {\r\n                                this.props.history.push({\r\n                                    search: ``\r\n                                })\r\n                            } else {\r\n                                this.props.history.push('/')\r\n                            }                           \r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} {this.props.langProps.online}</h3>\r\n                        </div>\r\n\r\n                        <CustomFab2 id={'dialog-more-actions-'+this.props.rooms.activeRoom._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab2>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={\r\n                        this.props.rooms.activeRoom.ownerId === this.props.user._id || this.props.user.role === 'admin' || this.props.user.role === 'moder' ? [\r\n                            {text: this.props.langProps.invite_friends, action: () => {\r\n                                this.props.history.push({\r\n                                    search: '?act=invite'\r\n                                })\r\n                            }},\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: this.props.langProps.edit_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=editRoom'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {\r\n                                text: this.props.langProps.delete_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=deleteRoom'\r\n                                    })\r\n                                }\r\n                            }\r\n                        ] : [\r\n                            {\r\n                                text: this.props.langProps.invite_friends, action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=invite'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }}\r\n                        ]} from={'dialog-more-actions-'+this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat \r\n                        messages={this.props.rooms.activeRoom.dialog.messages} \r\n                        type=\"room\" \r\n                        to={this.props.rooms.activeRoom.title} \r\n                        dialogId={this.props.rooms.activeRoom.dialog._id} \r\n                        roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className={`col-xl-9 col-lg-6 col-md-6 theme-screen ${this.state.act === 'chat' ? 'hide' : 'active'}`}>\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option mobile-option`} onClick={() => {this.props.history.push({\r\n                            search: `?act=chat`\r\n                        })}}>\r\n                            {!!this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length && <span style={{right: 0}} className=\"unread-messages-count\">{this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length}</span>}\r\n                            <ChatBubbleOutlineIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        {!!this.props.rooms.activeRoom.muted && <Tooltip title={`Blocked to ${new Date(this.props.rooms.activeRoom.muted.date).toLocaleString()}`} placement=\"top\"><CustomFab className={`media-option reject`}>\r\n                            <MicOffIcon style={{color: '#fff'}} />\r\n                        </CustomFab></Tooltip>}\r\n                        {!this.props.rooms.activeRoom.muted && <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>}\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Room)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ActionMenu from '../../Partials/ActionMenu'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabStyles)(Fab);\r\nconst CustomFab = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 36, \r\n                        height: 36, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info col\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>{this.props.langProps.online}</p>}\r\n                    </div></>\r\n\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                            this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                        }}>\r\n                            <CallIcon style={{color: '#fff'}} />\r\n                        </CallFab>}\r\n                        \r\n                        <CustomFab id={'dialog-more-actions-'+dialog._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={[\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                        ]} from={'dialog-more-actions-'+dialog._id} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>{this.props.langProps.user_not_found}</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog)))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Payment.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        fetch(`${urlApi}/api/payment/get-all`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((tariffs) => {\r\n            this.setState({isFetching: false, tariffs})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    buy(tariffId) {\r\n        this.setState({isFetching: true})\r\n        fetch(`${urlApi}/api/payment/buy`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                tariffId\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((answer) => {\r\n            if(!answer.error) {\r\n                this.setState({isFetching: false})\r\n                this.props.history.push('/')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"payment-page\">\r\n                    <h2 className=\"payment-title\">Hi {this.props.user.name.first}</h2>\r\n                    <p className=\"payment-subtitle\">Pick a plan to continue</p>\r\n\r\n                    <div className=\"payment-tariffs\">\r\n                        {this.state.isFetching && <CircularProgress style={{\r\n                            color: '#fff',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n\r\n                        {!this.state.isFetching && <div className=\"row\">\r\n                            {this.state.tariffs.map(tariff => {\r\n                                return <div className=\"col-12 col-md-6 col-lg-3 col-xl-2 payment-tariff-container\">\r\n                                    <div className=\"payment-tariff\">\r\n                                        <p className=\"payment-tariff-title\">{tariff.title}</p>\r\n                                        <p className=\"payment-tariff-price\">{tariff.price === 0 ? \"Free\" : tariff.price}</p>\r\n\r\n                                        <button className=\"button-gray\" onClick={() => {\r\n                                            this.buy(tariff._id)\r\n                                        }} style={{width: '80%', margin: '0 10% 0 10%'}}>Buy</button>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                        </div>}\r\n                    </div>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Payment))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Ban.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"ban-page\">\r\n                    <p className=\"ban-title\">Ooops...</p>\r\n\r\n                    <p className=\"ban-subtitle\">You have ban to <span style={{color: '#008FF7'}}>{new Date(this.props.ban.date).toLocaleString()}</span></p>\r\n\r\n                    <button className=\"button-blue\" onClick={() => {\r\n                        const { cookies } = this.props;\r\n                        cookies.remove(\"apiToken\", { path: \"/\" });\r\n                        window.location.reload()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>Logout</button>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ban: state.ban,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(withCookies(Payment)))\r\n","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport qs from 'qs'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass AuthSocial extends React.Component {\r\n    state = {\r\n        token: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).token,\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.token) {\r\n            const { cookies } = this.props\r\n            cookies.set('apiToken', this.state.token, { path: '/' })\r\n\r\n            window.location.replace('/')\r\n        } else {\r\n            window.location.replace('/')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <CircularProgress style={{\r\n            color: '#008FF7',\r\n            position: 'absolute',\r\n            left: 0,\r\n            right: 0,\r\n            margin: 'auto',\r\n            top: 'calc(50% - 20px)'\r\n        }} />\r\n    }\r\n}\r\n\r\n\r\nexport default withCookies(withRouter(AuthSocial))","import React from 'react'\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Room from '../Pages/User/Room';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport Payment from '../Pages/User/Payment';\r\nimport Ban from '../Pages/User/Ban';\r\nimport AuthSocial from '../Pages/Auth/AuthSocial';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/auth_social',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Loading...',\r\n        component: () => <AuthSocial />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n    {\r\n        path: '/payment',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Payment />\r\n    },\r\n    {\r\n        path: '/ban',\r\n        exact: true,\r\n        type: 'ban',\r\n        title: '',\r\n        component: () => <Ban />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\n// import {\r\n//     BrowserRouter as Router,\r\n// } from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.you_dont_have_friends}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.users_not_found}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../Redux/constants';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        minHeight             : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: [], isFetching: true})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create', isFetching: false})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n\r\n                if(this.props.call.user) {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_FORCE,\r\n                        payload: room._id\r\n                    })\r\n                } else {\r\n                    this.props.history.push(`/rooms/${room._id}`)\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isFetching) {\r\n            return <Modal\r\n                isOpen={this.props.isOpen}\r\n                onRequestClose={() => {this.props.close()}}\r\n                style={customStylesModalInvite}\r\n                contentLabel=\"Create room\"\r\n            >\r\n                <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />\r\n            </Modal>\r\n        }\r\n\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">{this.props.langProps.new_room}</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder={this.props.langProps.title}\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label={this.props.langProps.private_room}\r\n                    />\r\n                    \r\n                    {!this.state.title.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                    {!!this.state.title.length && <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.next}</button>}\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.start}</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <span style={{cursor: 'pointer', borderRadius: 50}} onClick={() => {\r\n                    if(this.props.user.avatar) {\r\n                        this.props.history.push({\r\n                            search: `?modal=slider`\r\n                        })\r\n                        store.dispatch({\r\n                            type: SLIDER_SET,\r\n                            payload: {\r\n                                images: [{path: this.props.user.avatar.original}],\r\n                                index: 0\r\n                            }\r\n                        })\r\n                    }\r\n                }}><Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                /></span>\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.message}</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            e.preventDefault()\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.call}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.plus_friend}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.accept}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.decline}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.remove}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?mute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicOffIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Mute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unmute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unmute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?banroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unbanroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOpenIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?sendwarning=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <WarningIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Send warning</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?ban=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <BlockIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=settings`\r\n                    })\r\n                }}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.settings}</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.contacts}</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px',\r\n        minHeight: 100\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {!user && this.props.user._id !== this.props.userId && <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />}\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.incoming_request_empty}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n                \r\n                <p>{this.props.langProps.outgoing_request_empty}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.contacts}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>{this.props.langProps.friends}</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>{this.props.langProps.inbox}</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>{this.props.langProps.outbox}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n            {this.state.activeTab === 'outbox' && <Outbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.new_chat}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.invite}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        minHeight              : '245px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        isFetching: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: [], isFetching: true})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, isFetching: false})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isFetching) {\r\n            return <Modal\r\n                isOpen={this.props.isOpen}\r\n                onRequestClose={() => {this.props.close()}}\r\n                style={customStylesModalCreate}\r\n                contentLabel=\"Edit room\"\r\n            >\r\n                <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />\r\n            </Modal>\r\n        }\r\n\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.edit_room}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder={this.props.langProps.title}\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label={this.props.langProps.private_room}\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.save}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.delete_room_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.delete}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.forward}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.outcoming_call}</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.incoming_call}</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <div className={this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && this.props.call.status !== 'active' ? 'pulse-avatar' : ''}>\r\n                        <Avatar \r\n                            style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`, zIndex: 3}} \r\n                            name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                            avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                        />\r\n                    </div>\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">{this.props.call.user.city ? this.props.call.user.city : this.props.langProps.not_indicated}</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.langProps.user_busy} <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>{this.props.langProps.close}</a>\r\n                </div>}\r\n                \r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} {this.props.langProps.cancel_your_call} <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>{this.props.langProps.close}</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'dont_have_payment' && <>\r\n                {this.props.callActions.clear()}\r\n                <Redirect to=\"/payment\" />\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                \r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.error}</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>{this.props.langProps.have_active_call}</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: this.props.index\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        images: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                if(!images.error) {\r\n                    images = images.map(x => x.data)\r\n                    \r\n                    this.setState({images, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.images.map((image, index) => {\r\n                return (\r\n                    <div className=\"investment-image\">\r\n                        <img key={index} alt={image.name} style={{cursor: 'pointer'}} onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?modal=slider`\r\n                            })\r\n                            this.props.dispatch({\r\n                                type: SLIDER_SET,\r\n                                payload: {\r\n                                    images: this.state.images,\r\n                                    index\r\n                                }\r\n                            })\r\n                        }} src={image.path} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.images.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <PhotoLibraryIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_images}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport Audio from '../../Partials/Chat/Audio';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        sounds: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(sounds => {\r\n                if(!sounds.error) {\r\n                    sounds = sounds.map(x => x.data)\r\n                    \r\n                    this.setState({sounds, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.sounds.map((sound, index) => {\r\n                return (\r\n                    <Audio\r\n                        key={index}\r\n                        fileName={sound.name}\r\n                        src={sound.path}\r\n                    />\r\n                )\r\n            })}\r\n            {(!this.state.sounds.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <AudiotrackIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_sounds}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        files: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(files => {\r\n                if(!files.error) {\r\n                    files = files.map(x => x.data)\r\n                    \r\n                    this.setState({files, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340, marginLeft: 15}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)',\r\n                }} />}\r\n            {this.state.files.map((file, index) => {\r\n                return (\r\n                    <div className=\"message-file\" style={{cursor: 'pointer'}} key={index} onClick={(e) => {\r\n                        window.open(file.path, '_self');\r\n                    }}>\r\n                        <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                        <div className=\"message-file-info\">\r\n                            <p className=\"message-file-name\">{file.name}</p>\r\n                            <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                        </div>\r\n                        <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.files.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <FileCopyIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_files}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Images from './investmentsPartials/Images';\r\nimport Sounds from './investmentsPartials/Sounds';\r\nimport Files from './investmentsPartials/Files';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'images'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.investments}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'images' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'images'})}}>{this.props.langProps.photos}</span>\r\n                <span className={this.state.activeTab === 'sounds' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'sounds'})}}>{this.props.langProps.sounds}</span>\r\n                <span className={this.state.activeTab === 'files' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'files'})}}>{this.props.langProps.files}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'images' && <Images />}\r\n            {this.state.activeTab === 'sounds' && <Sounds />}\r\n            {this.state.activeTab === 'files' && <Files />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Settings\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.settings}</h2>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=profile'\r\n                })\r\n            }}>{this.props.langProps.change_profile}</p>\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=language'\r\n                })\r\n            }}>{this.props.langProps.language}</p>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                const { cookies } = this.props;\r\n                cookies.remove(\"apiToken\", { path: \"/\" });\r\n                window.location.reload()\r\n            }}>{this.props.langProps.logout}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport store from '../Redux/store';\r\nimport { USER_EDIT } from '../Redux/constants';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        firstName: this.props.user.name.first,\r\n        lastName: this.props.user.name.last,\r\n        city: this.props.user.city,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/user/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                city: this.state.city\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((user) => {\r\n            if(user.error) {\r\n                this.setState({error: true, errors: user.errors})\r\n            } else {\r\n                store.dispatch({\r\n                    type: USER_EDIT,\r\n                    payload: {\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        city: this.state.city\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.change_profile}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.firstName} \r\n                    onChange={(e) => {this.setState({firstName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.firstName}\r\n                    style={{marginTop: 0}} \r\n                />\r\n                {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.lastName} \r\n                    onChange={(e) => {this.setState({lastName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 0}} \r\n                    placeholder={this.props.langProps.lastName}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.city} \r\n                    onChange={(e) => {this.setState({city: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.city}\r\n                />\r\n\r\n                {(this.state.firstName !== this.props.user.name.first || this.state.lastName !== this.props.user.name.last || this.state.city !== this.props.user.city) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.save}</button>}\r\n                {(this.state.firstName === this.props.user.name.first && this.state.lastName === this.props.user.name.last && this.state.city === this.props.user.city) && <button className=\"button-gray\" onClick={() => {\r\n                        this.props.history.goBack()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_LANG } from '../Redux/constants';\r\nimport { urlApi } from '../config';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    setLang(lang) {\r\n        store.dispatch({\r\n            type: USER_SET_LANG,\r\n            payload: lang\r\n        })\r\n\r\n        fetch(`${urlApi}/api/user/set-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_language}</h2>\r\n\r\n            <p className={`settings-item ${this.props.user.lang === 'en' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'en')\r\n                this.setLang('en')\r\n            }}>{this.props.langProps.english}</p>\r\n            <p className={`settings-item ${this.props.user.lang === 'ru' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'ru')\r\n                this.setLang('ru')\r\n            }}>{this.props.langProps.russian}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Mute</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Mute</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unmute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unmute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unmute</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have mutes rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unmute</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Ban room</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-roomban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            \r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unban room sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unban room</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have ban rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unban</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        warning: ''\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/send-warning`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                warning: this.state.warning,\r\n                userId: this.props.userId,\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Warning sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Send warning</h2>\r\n\r\n            <textarea \r\n                className=\"input-field\"\r\n                onChange={(e) => {\r\n                    this.setState({warning: e.target.value})\r\n                }}\r\n                value={this.state.warning}\r\n            ></textarea>\r\n\r\n            {!!this.state.warning && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Send</button>}\r\n            {!this.state.warning && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_WARNING } from '../Redux/constants';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 999\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass Warning extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Warning\"\r\n        >\r\n            <ReportProblemOutlinedIcon style={{color: '#FF3333', fontSize: 60}} />\r\n\r\n            <h2 className=\"modal-title\">Warning</h2>\r\n\r\n            <p className=\"modal-text\">{this.props.user.warning}</p>\r\n            \r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                store.dispatch({\r\n                    type: USER_SET_WARNING,\r\n                    payload: false\r\n                })\r\n            }}>Close</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Warning))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n        \r\n        this.props.history.push(`/chats/${this.props.call.force.user._id}`)\r\n\r\n        setTimeout(() => {\r\n            this.props.callActions.accept(this.props.user.apiToken)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_accept_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.accept}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        this.props.history.push(`/chats/${this.props.call.force.user._id}`)\r\n        \r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.props.callActions.call(this.props.call.force.user, this.props.user.apiToken)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_place_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.call}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n        let roomId = this.props.rooms.force\r\n        store.dispatch({\r\n            type: ROOMS_SET_FORCE,\r\n            payload: false\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.props.history.push(`/rooms/${roomId}`)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: ROOMS_SET_FORCE,\r\n            payload: false\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_join_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.accept}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Button, Radio, withStyles } from '@material-ui/core'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        time: 0,\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Ban sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Ban</h2>\r\n\r\n            {timeStamps.map((time, index) => \r\n                    <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                        this.setState({time: time.time})\r\n                    }}>\r\n                        <div style={{\r\n                            flexGrow: 1,\r\n                            minWidth: 0,\r\n                            maxWidth: '100%',\r\n                            paddingRight: 10\r\n                        }}>\r\n                            <p><span>{time.label}</span></p>\r\n                        </div>\r\n                        <CustomRadio\r\n                            checked={this.state.time === time.time}\r\n                        />\r\n                    </Button>\r\n            )}\r\n            {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n            {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: `?user=${this.props.userId}`\r\n                })\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { TOASTS_REMOVE } from '../Redux/constants';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nclass Toast extends React.Component {\r\n    render() {\r\n        return <div className=\"bell-toast\" onClick={() => {\r\n            if(this.props.toast.toastType === 'notification') {\r\n                if(this.props.toast.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.toast.room._id}`)\r\n                if(this.props.toast.type === 'accept' || this.props.toast.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.toast.user._id}`\r\n                    })\r\n            }\r\n\r\n            if(this.props.toast.toastType === 'message') {\r\n                if(`/chats/${this.props.toast.user._id}` !== this.props.history.location.pathname)\r\n                    this.props.history.push(`/chats/${this.props.toast.user._id}`)\r\n            }\r\n\r\n            store.dispatch({\r\n                type: TOASTS_REMOVE,\r\n                payload: this.props.toast._id\r\n            })\r\n        }}>\r\n            <span className=\"bell-close\" onClick={(e) => {\r\n                e.stopPropagation()\r\n                store.dispatch({\r\n                    type: TOASTS_REMOVE,\r\n                    payload: this.props.toast._id\r\n                })\r\n            }}>\r\n                <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n            </span>\r\n\r\n            <p className='name'>{this.props.toast.user.name.first} {this.props.toast.user.name.last}</p>\r\n            {this.props.toast.toastType === 'message' && <p className=\"text\">New message!</p>}\r\n            {this.props.toast.toastType === 'notification' && <>\r\n                {this.props.toast.type === 'invite' && <p className=\"text\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.toast.room.title}</span></p>}\r\n                {this.props.toast.type === 'accept' && <p className=\"text\">{this.props.langProps.accept_your_friend_request}</p>}\r\n                {this.props.toast.type === 'request' && <p className=\"text\">{this.props.langProps.send_you_friend_request}&nbsp;<span style={{color: '#008FF7'}}>23232323</span></p>}\r\n            </>}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(withRouter(Toast))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport Toast from './Toast';\r\n\r\nclass Toasts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return !!this.props.toasts.toasts.length && <div className=\"bell-toasts\">\r\n            {this.props.toasts.toasts.map((toast, index) => {\r\n                return <Toast key={index} toast={toast} />\r\n            })}\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toasts: state.toasts,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Toasts)))","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD, SLIDER_SET } from '../Redux/constants';\r\nimport Call from './Call';\r\nimport Slider from '../Partials/Chat/Slider';\r\nimport Investments from './Investments';\r\nimport Settings from './Settings';\r\nimport Profile from './Profile';\r\nimport Language from './Language';\r\nimport Mute from './Mute';\r\nimport Unmute from './Unmute';\r\nimport Banroom from './Banroom';\r\nimport Unbanroom from './Unbanroom';\r\nimport SendWaning from './SendWaning';\r\nimport Warning from './Warning';\r\nimport ForceAcceptCall from './ForceAcceptCall';\r\nimport ForcePlaceCall from './ForcePlaceCall';\r\nimport ForceJoinRoom from './ForceJoinRoom';\r\nimport Ban from './Ban';\r\nimport Toasts from './Toasts';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n        mute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).mute,\r\n        unmute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unmute,\r\n        banroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).banroom,\r\n        unbanroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n        sendwarning: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n        ban: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).ban,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n                mute: qs.parse(location.search, { ignoreQueryPrefix: true }).mute,\r\n                unmute: qs.parse(location.search, { ignoreQueryPrefix: true }).unmute,\r\n                banroom: qs.parse(location.search, { ignoreQueryPrefix: true }).banroom,\r\n                unbanroom: qs.parse(location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n                sendwarning: qs.parse(location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n                ban: qs.parse(location.search, { ignoreQueryPrefix: true }).ban,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {!!this.props.user.warning && <Warning isOpen={!!this.props.user.warning} />}\r\n\r\n            {this.state.mute && this.props.user.role !== 'user' && <Mute userId={this.state.mute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unmute && this.props.user.role !== 'user' && <Unmute userId={this.state.unmute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.banroom && this.props.user.role !== 'user' && <Banroom userId={this.state.banroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.ban && this.props.user.role !== 'user' && <Ban userId={this.state.ban} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unbanroom && this.props.user.role !== 'user' && <Unbanroom userId={this.state.unbanroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.sendwarning && this.props.user.role !== 'user' && <SendWaning userId={this.state.sendwarning} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Settings isOpen={this.state.modal === 'settings'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n            \r\n            {this.state.modal === 'profile' && <Profile isOpen={this.state.modal === 'profile'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.modal === 'language' && <Language isOpen={this.state.modal === 'language'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId  || this.props.user.role === 'admin' || this.props.user.role === 'moder') && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId || this.props.user.role === 'admin' || this.props.user.role === 'moder') && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n            {this.state.modal === 'slider' && !!this.props.slider.images.length && <Slider index={this.props.slider.index} images={this.props.slider.images} close={() => {\r\n                this.props.dispatch({\r\n                    type: SLIDER_SET,\r\n                    payload: {\r\n                        images: [],\r\n                        index: 0\r\n                    }\r\n                })\r\n                this.props.history.goBack()\r\n            }} />}\r\n            \r\n            {this.props.match.params.id && this.state.modal === 'investments' && <Investments \r\n                isOpen={this.props.match.params.id && this.state.modal === 'investments'} \r\n                dialogId={this.props.match.params.id} \r\n                close={() => {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                }}\r\n            />}\r\n\r\n            {!!this.props.rooms.force && <ForceJoinRoom isOpen={true} />}\r\n\r\n            {this.props.call.user && this.props.call.force.status === 'force-accept' && <ForceAcceptCall isOpen={true} />}\r\n            {this.props.call.force.status === 'force-call' && <ForcePlaceCall isOpen={true} />}\r\n\r\n            {this.props.call.user && !this.props.call.force.status && <Call isOpen={true} />}\r\n\r\n            <Toasts />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call,\r\n        slider: state.slider,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nimport store from \"../Redux/store\";\r\nimport { BAN_SET } from \"../Redux/constants\";\r\nimport Ban from \"../Pages/User/Ban\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications, ban, numDate, date}) => {\r\n          if(ban) {\r\n            store.dispatch({\r\n              type: BAN_SET,\r\n              payload: {numDate, date}\r\n            })\r\n          } else {\r\n            SocketController.init(apiToken)\r\n            this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          }\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          localStorage.setItem('drafts', JSON.stringify([]));\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      localStorage.setItem('drafts', JSON.stringify([]));\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n                  case 'ban':\r\n                    return this.props.ban.ban ? <Ban /> : <Redirect\r\n                    to={{\r\n                      pathname: \"/\",\r\n                    }}\r\n                  /> \r\n\r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? this.props.ban.ban ? <Redirect\r\n          to={{\r\n            pathname: \"/ban\",\r\n          }}\r\n        /> : (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ?  this.props.ban.ban ? <Redirect\r\n          to={{\r\n            pathname: \"/ban\",\r\n          }}\r\n        /> : (\r\n            children\r\n          )  : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    ban: state.ban\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MultiLang } from \"react-multi-language\";\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                        <MultiLang lang={this.props.user.isAuth ? this.props.user.lang : 'en'}/>\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}