{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/slider.js","Redux/reducers/ban.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","languages.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Partials/Room/RoomItem.js","Redux/actions/rooms.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Partials/Language/LanguageItem.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Redux/actions/users.js","Redux/actions/call.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Pages/User/Dialog.js","Pages/User/Payment.js","Pages/User/Ban.js","Router/config.js","Pages/NoMatch.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Partials/Chat/Slider.js","Modals/investmentsPartials/Images.js","Modals/investmentsPartials/Sounds.js","Modals/investmentsPartials/Files.js","Modals/Investments.js","Modals/Settings.js","Modals/Profile.js","Modals/Language.js","Modals/Mute.js","Modals/Unmute.js","Modals/Banroom.js","Modals/Unbanroom.js","Modals/SendWaning.js","Modals/Warning.js","Modals/ForceAcceptCall.js","Modals/ForcePlaceCall.js","Modals/ForceJoinRoom.js","Modals/Ban.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","avatar","alt","name","src","min","avatarStyle","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","warning","user","state","action","type","payload","roomLang","first","firstName","last","lastName","city","lang","isFetching","getted","activeRoom","isError","rooms","canLoad","force","length","map","room","_id","title","isPrivate","filter","typers","isLoading","remoteStream","muted","error","users","roomId","userId","dialog","messages","message","_newId","files","item","file","sounds","images","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","index","ban","date","numDate","combineReducers","slider","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","getState","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","timeStamps","time","label","socket","activeLang","unmuteTimer","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","setTimeout","WebRtcController","otherId","id","read","clearTimeout","msg","location","reload","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogsLoad","lastDialogId","firstDialogId","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","append","push","localMessage","text","recentMessages","now","m","socketId","messageRes","errors","toast","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","ru","settings","change_profile","language","logout","back","save","next","last_name_not_empty","first_name_not_empty","title_not_empty","create_room","something_goes_wrong","chats","contacts","inbox","outbox","you_dont_have_friends","search","accept","decline","not_indicated","plus_friend","remove","english","russian","you","write_message","show_investments","you_sure","delete","delete_room","invite_friends","edit_room","investments","photos","missed_call","outcoming_call","incoming_call","canceled_call","select_language","users_not_found","user_not_found","reply","forward","new_room","invite","private_room","start","select_users","new_chat","invited_you_to_the_room","accept_your_friend_request","send_you_friend_request","you_are_not_invited","january","february","march","april","may","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","in","yerstaday","today","just_now","here_wiil_placed_your_notifications","create_your_first_room","you_dont_have_chats","write_your_first_message","attachment_messages","have_max_rooms","room_exist","have_active_call","force_accept_text","force_join_text","force_place_text","delete_room_text","user_busy","cancel_your_call","empty_inv_files","empty_inv_sounds","empty_inv_images","you_banned_in_this_room","to","incoming_request_empty","outgoing_request_empty","day_1","day_2","day_5","minute_1","minute_2","minute_5","hour_1","hour_2","hour_5","week_1","week_2","week_5","ago","en","getHM","hours","getHours","minutes","getMinutes","toString","LastMessageDate","timeR","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","arr","languages","OnlineDate","diff","getTime","getDay","month_diff","isNaN","declension","ceil","n","text_forms","n1","abs","ActionMenu","active","left","top","element","getElementById","from","composedPath","stopPropagation","rect","getBoundingClientRect","bottom","clientHeight","right","clientWidth","setState","event","addEventListener","toggleActive","bind","removeEventListener","transform","actions","Button","key","onClick","DialogItem","randomId","textDecoration","history","pathname","preventDefault","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","myUser","langProps","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","withLang","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","getScrollHeight","getClientHeight","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","contextType","RoomItem","roomsGet","roomsAdd","roomsLoad","lastRoomId","firstRoomId","data","param","Rooms","isOpenCreateRoom","roomsActions","roomsBlock","CircularProgress","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","uploadAvatar","target","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","LanguageItem","UserSidebar","activeTab","substring","show","Login","email","password","token","cookies","set","onSubmit","value","onChange","placeholder","withCookies","Register","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","volume","onpause","parentElement","onplay","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","pause","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","clear","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","isFirst","timeAt","selected","unSelect","onSelect","isRecent","cursor","padding","lineHeight","canSelect","callActions","replace","marginRight","countRecent","image","isBlur","draggable","sound","open","toFixed","openSlider","sliderImages","PureComponent","usersActions","waitActiveUser","zIndex","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","PlaceHolder","InputMessage","inputMessageHeight","items","clipboardData","originalEvent","kind","getAsFile","addFile","test","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","toLowerCase","newText","prevText","customStylesModal","overlay","content","borderRadius","boxShadow","textAlign","RoomJoinError","isOpen","contentLabel","marginBottom","toLocaleString","CustomFab2","Members","srcObject","autoPlay","controls","Room","act","qs","ignoreQueryPrefix","waitSocket","match","params","listen","ownerId","role","Main","order","CallFab","innerWidth","Payment","tariffs","redirect","tariffId","tariff","price","buy","routes","exact","NoMatch","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","waitSearch","Contacts","q","searchResult","onSearch","selectUsers","customStylesModalCreate","customStylesModalInvite","minHeight","justifyContent","CreateRoom","step","onRequestClose","maxLength","FormControlLabel","control","Friends","transition","OtherUser","MyUser","User","Inbox","Outbox","CreateDialog","DeleteRoom","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","justifyItems","alignContent","fullScreen","overlayClassName","Slider","opacity","Images","Sounds","Files","Settings","goBack","setLang","CustomRadio","Radio","selectRoom","selectRoomId","success","limits","Warning","MainModal","modal","mute","unmute","banroom","unbanroom","sendwarning","Mute","Unmute","Banroom","Unbanroom","SendWaning","Profile","Invite","EditRoom","Forward","Investments","ForceJoinRoom","ForceAcceptCall","ForcePlaceCall","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d836291b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img alt={this.props.name} src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR,\r\n    USER_EDIT,\r\n    USER_SET_LANG,\r\n    USER_SET_WARNING\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false,\r\n    warning: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false, warning: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        case USER_EDIT:\r\n            return { ...state, name: {first: action.payload.firstName, last: action.payload.lastName}, city: action.payload.city }\r\n        case USER_SET_LANG:\r\n            return { ...state, lang: action.payload }\r\n        case USER_SET_WARNING:\r\n            return { ...state, warning: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\nexport const USER_EDIT = 'USER_EDIT'\r\nexport const USER_SET_LANG = 'USER_SET_LANG'\r\nexport const USER_SET_WARNING = 'USER_SET_WARNING'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\nexport const ROOMS_PRELOAD = 'ROOMS_PRELOAD'\r\nexport const ROOMS_SET_MUTED = 'ROOMS_SET_MUTED'\r\nexport const ROOMS_SET_FORCE = 'ROOMS_SET_FORCE'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\nexport const DIALOGS_PRELOAD = 'DIALOGS_PRELOAD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'\r\nexport const CALL_SET_FORCE = 'CALL_SET_FORCE'\r\n\r\n// Slider\r\nexport const SLIDER_SET = 'SLIDER_SET'\r\n\r\n// Ban\r\nexport const BAN_SET = 'BAN_SET'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: [],\r\n    canLoad: false,\r\n    force: false\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true, canLoad: action.payload.length === 20 }\r\n        }\r\n        case ROOMS_PRELOAD:\r\n            return { ...state, rooms: [ ...state.rooms, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false, muted: action.payload.muted} }\r\n        case ROOMS_SET_MUTED:\r\n            return { ...state, activeRoom: {...state.activeRoom, muted: action.payload} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_SET_FORCE:\r\n            return { ...state, force: action.payload }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId,\r\n                    files: message.files.map(item => {return { ...item, file: false}}),\r\n                    sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                    images: message.images.map(item => {return { ...item, file: false}})\r\n                } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: [],\r\n    canLoad: false\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount, canLoad: action.payload.dialogs.length === 20 }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_PRELOAD:\r\n            return { ...state, dialogs: [ ...state.dialogs, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId, \r\n                            files: message.files.map(item => {return { ...item, file: false}}),\r\n                            sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                            images: message.images.map(item => {return { ...item, file: false}})\r\n                         } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA,\r\n    CALL_SET_FORCE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio',\r\n    force: {user: false, status: false}\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        case CALL_SET_FORCE:\r\n            return { ...state, force: {user: action.payload.user, status: action.payload.status} }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { \r\n    SLIDER_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    images: [],\r\n    index: 0\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SLIDER_SET: {\r\n            return { ...state, images: action.payload.images, index: action.payload.index }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { \r\n    BAN_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    ban: false,\r\n    date: '',\r\n    numDate: 0\r\n}\r\n\r\nconst ban = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case BAN_SET:\r\n            return { ...state, ban: true, date: action.payload.date, numDate: action.payload.numDate }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default ban","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\nimport slider from './slider'\r\nimport ban from './ban'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call,\r\n    slider,\r\n    ban\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","export function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\n// const RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        if(localStream) {\r\n            localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: localStream.getAudioTracks()[0].enabled\r\n            })\r\n        }\r\n    },\r\n    toggleMusic() {\r\n        if(remoteStream) {\r\n            remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MUSIC,\r\n                payload: remoteStream.getAudioTracks()[0].enabled\r\n            })\r\n        }\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(!!store.getState().call.status === 'active')\r\n            return \r\n            \r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        try {\r\n            let answer = new RTCSessionDescription({\r\n                type: 'answer',\r\n                sdp: sdpAnswer\r\n            })\r\n            \r\n            WebRtcPeerConnection.setRemoteDescription(answer);\r\n    \r\n            let stream = new MediaStream();\r\n    \r\n            for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                stream.addTrack(sender.track);\r\n            }\r\n    \r\n            remoteStream = stream\r\n    \r\n            store.dispatch({\r\n                type: ROOMS_SET_REMOTE_STREAM,\r\n                payload: stream\r\n            })\r\n    \r\n            speechEvents = hark(localStream, {});\r\n     \r\n            speechEvents.on('speaking', function() {\r\n                SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n            });\r\n        \r\n            speechEvents.on('stopped_speaking', function() {\r\n                SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'\r\nexport const timeStamps = [\r\n    {\r\n        time: 60,\r\n        label: '1 minute'\r\n    },\r\n    {\r\n        time: 1800,\r\n        label: '30 minute'\r\n    },\r\n    {\r\n        time: 3600,\r\n        label: '1 hour'\r\n    },\r\n    {\r\n        time: 86400,\r\n        label: '24 hour'\r\n    },\r\n    {\r\n        time: 604800,\r\n        label: '7 days'\r\n    },\r\n    {\r\n        time: 2419200,\r\n        label: '1 month'\r\n    },\r\n    {\r\n        time: 999999999,\r\n        label: 'Forever'\r\n    },\r\n]","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_LEAVE_ROOM,\r\n    USER_SET_WARNING\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = false\r\nlet activeLang = false\r\nlet unmuteTimer = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        if(socket) \r\n            return\r\n\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('muteRoom', ({roomId, muted}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: muted\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if((muted.numDate*1000) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === roomId && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                    }, muted.numDate*1000);\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('unmuteRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: false\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('banRoom', ({roomId, ban}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                WebRtcController.leaveRoom({roomId, lang: store.getState().rooms.activeRoom.lang})\r\n                store.dispatch({\r\n                    type: ROOMS_LEAVE_ROOM\r\n                })\r\n                store.dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {msg: 'you_banned_in_this_room', ban: ban}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendWarning', warning => {\r\n            store.dispatch({\r\n                type: USER_SET_WARNING,\r\n                payload: warning\r\n            })\r\n        })\r\n\r\n        socket.on('ban', async () => {\r\n            window.location.reload()\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogsLoad = (apiToken) => (dispatch) => {\r\n    if(store.getState().dialogs.canLoad) {\r\n        dispatch({\r\n            type: DIALOGS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/dialog/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastDialogId: store.getState().dialogs.dialogs[store.getState().dialogs.dialogs.length-1]._id,\r\n                firstDialogId: store.getState().dialogs.dialogs[0]._id\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dialogs) => {\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n                \r\n                if(existDialog) {\r\n                    dialogs[i] = existDialog\r\n                } else {\r\n                    dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n    \r\n                    if(!dialogs[i].user)\r\n                        dialogs[i].user = dialogs[i].users[0]\r\n    \r\n                    dialogs[i].typers = []\r\n                }\r\n            }\r\n            \r\n            dispatch({\r\n                type: DIALOGS_PRELOAD,\r\n                payload: dialogs\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 1)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","export default {\r\n    ru: {\r\n        settings: 'Настройки',\r\n        change_profile: 'Изменить профиль',\r\n        language: 'Язык',\r\n        logout: 'Выйти',\r\n        back: 'Назад',\r\n        save: 'Сохранить',\r\n        next: 'Продолжить',\r\n        firstName: 'Имя',\r\n        lastName: 'Фамилия',\r\n        city: 'Город',\r\n        last_name_not_empty: 'Фамилия не может быть пустой',\r\n        first_name_not_empty: 'Имя не может быть пустым',\r\n        title_not_empty: 'Заголовок не может быть пустым',\r\n        rooms: 'Комнаты',\r\n        create_room: 'Создать комнату',\r\n        something_goes_wrong: 'Что-то пошло не так...',\r\n        chats: 'Чаты',\r\n        notifications: 'Уведомления',\r\n        contacts: 'Контакты',\r\n        friends: 'Друзья',\r\n        inbox: 'Входящие',\r\n        outbox: 'Исходящие',\r\n        you_dont_have_friends: 'У вас нет друзей, давайте добавим их',\r\n        search: 'Поиск',\r\n        message: 'Сообщение',\r\n        call: 'Позвонить',\r\n        accept: 'Принять',\r\n        decline: 'Отклонить',\r\n        not_indicated: 'Не указано',\r\n        plus_friend: '+ Друг',\r\n        remove: \"Удалить\",\r\n        english: 'Английский',\r\n        russian: 'Русский',\r\n        you: 'Вы',\r\n        write_message: 'Напишите сообщение...',\r\n        show_investments: 'Показать вложения',\r\n        you_sure: 'Вы уверены?',\r\n        delete: 'Удалить',\r\n        delete_room: 'Удалить комнату',\r\n        invite_friends: 'Пригласить друзей',\r\n        edit_room: 'Изменить комнату',\r\n        investments: 'Вложения',\r\n        photos: 'Фотографии',\r\n        sounds: 'Аудио',\r\n        files: 'Файлы',\r\n        online: 'онлайн',\r\n        missed_call: 'Пропущенный звонок',\r\n        outcoming_call: 'Исходящий звонок',\r\n        incoming_call: 'Входящий звонок',\r\n        canceled_call: 'Отменённый звонок',\r\n        select_language: 'Выберите язык',\r\n        users_not_found: 'Пользователи не найдены',\r\n        user_not_found: 'Пользователь не найден',\r\n        reply: 'Ответить',\r\n        forward: 'Переслать',\r\n        title: 'Название',\r\n        new_room: 'Новая комната',\r\n        invite: 'Пригласить',\r\n        private_room: 'Приватная комната',\r\n        start: 'Начать',\r\n        select_users: 'Выберите пользователей',\r\n        new_chat: 'Новый чат',\r\n        invited_you_to_the_room: 'Пригласил(а) вас в комнату',\r\n        accept_your_friend_request: 'Принял(а) ваш запрос в друзья',\r\n        send_you_friend_request: 'Отправил(а) вам запрос в друзья',\r\n        you_are_not_invited: 'Вы не были приглашенны в эту комнату',\r\n        january: 'Январь',\r\n        february: 'Февраль',\r\n        march: 'Март',\r\n        april: 'Апрель',\r\n        may: 'Май',\r\n        june: 'Июнь',\r\n        july: 'Июль',\r\n        august: 'Август',\r\n        september: 'Сентябрь',\r\n        october: 'Октябрь',\r\n        november: 'Ноябрь',\r\n        december: 'Декабрь',\r\n        jan: 'Янв',\r\n        feb: 'Фев',\r\n        mar: 'Мар',\r\n        apr: 'Апр',\r\n        jun: 'Июн',\r\n        jul: 'Июл',\r\n        aug: 'Авг',\r\n        sep: 'Сен',\r\n        oct: 'Окт',\r\n        nov: 'Ноя',\r\n        dec: 'Дек',\r\n        in: 'в',\r\n        yerstaday: 'вчера',\r\n        today: 'сегодня',\r\n        just_now: 'только что',\r\n        here_wiil_placed_your_notifications: 'Здесь будут находиться ваши уведомления',\r\n        create_your_first_room: 'Создайте свою первую комнату в этом языке',\r\n        you_dont_have_chats: 'У вас нет чатов, давайте создадим его',\r\n        write_your_first_message: 'Напишите свое первое сообщение для',\r\n        typing: 'печатает',\r\n        attachment_messages: 'Прикрепленные сообщения',\r\n        messages: 'Сообщения',\r\n        have_max_rooms: 'Создано максимальное кол-во комнат',\r\n        room_exist: 'Комната с таким именем существует',\r\n        have_active_call: 'Имеется активный звонок',\r\n        error: 'Ошибка',\r\n        force_accept_text: 'Если вы примите личный звонок, то ваш звонок в комнате завершится.',\r\n        force_join_text: 'Если вы перейдете в комнату, текущий личный звонок завершится.',\r\n        force_place_text: 'Если вы совершите личный звонок, то ваш звонок в комнате завершится.',\r\n        delete_room_text: 'После удаления вы и присутсвующие в комнате останутся в ней, но больше никто не сможет зайти.',\r\n        close: 'Закрыть',\r\n        user_busy: 'Пользователь занят...',\r\n        cancel_your_call: 'отклонил ваш звонок',\r\n        empty_inv_files: 'Здесь будут находиться файды из этого диалога',\r\n        empty_inv_sounds: 'Здесь будет находиться аудио из этого диалога',\r\n        empty_inv_images: 'Здесь будут находиться изображения из этого диалога',\r\n        you_banned_in_this_room: 'Вы заблокированны в этой комнате',\r\n        to: 'до',\r\n        incoming_request_empty: 'Здесь будут отображаться входящие запросы',\r\n        outgoing_request_empty: 'Здесь будут отображаться исходящие запросы',\r\n        day_1: 'день',\r\n        day_2: 'дня',\r\n        day_5: 'дней',\r\n        minute_1: 'минуту',\r\n        minute_2: 'минуты',\r\n        minute_5: 'минут',\r\n        hour_1: 'час',\r\n        hour_2: 'часа',\r\n        hour_5: 'часов',\r\n        week_1: 'неделю',\r\n        week_2: 'недели',\r\n        week_5: 'недель',\r\n        ago: 'назад',\r\n        first_name_not_empty: 'Имя не должно быть пустым',\r\n        first_name_is_string: 'Имя должно быть строкой',\r\n        first_name_is_min: 'Имя должно содержать минимум 2 символа',\r\n        last_name_not_empty: 'Фамилия не должна быть пустой',\r\n        last_name_is_string: 'Фамилия должно быть строкой',\r\n        last_name_is_min: 'Фамилия должно содержать минимум 2 символа',\r\n        email_is_invalid: 'Email неверный',\r\n        email_not_empty: 'Email не может быть пустым',\r\n        password_is_min: 'Пароль должен содержать минимум 8 символов',\r\n        email_or_password_wrong: 'Email или пароль неверный',\r\n        email_already: 'Email уже занят'   \r\n    },\r\n    en: {\r\n        settings: 'Settings',\r\n        change_profile: 'Change profile',\r\n        language: 'Language',\r\n        logout: 'Logout',\r\n        back: 'Back',\r\n        save: 'Save',\r\n        next: 'Next',\r\n        firstName: 'First name',\r\n        lastName: 'Last name',\r\n        city: 'City',\r\n        last_name_not_empty: 'First name cannot be empty',\r\n        first_name_not_empty: 'Last name cannot be empty',\r\n        title_not_empty: 'Title cannot be empty',\r\n        rooms: 'Rooms',\r\n        create_room: 'Create room',\r\n        something_goes_wrong: 'Something goes wrong...',\r\n        chats: 'Chats',\r\n        notifications: 'Notifications',\r\n        contacts: 'Contacts',\r\n        friends: 'Friends',\r\n        inbox: 'Inbox',\r\n        outbox: 'Outbox',\r\n        you_dont_have_friends: 'You dont have friends, lets add him',\r\n        search: 'Search',\r\n        message: 'Message',\r\n        call: 'Call',\r\n        accept: 'Accept',\r\n        decline: 'Decline',\r\n        not_indicated: 'Not indicated',\r\n        plus_friend: '+ Friend',\r\n        remove: \"Remove\",\r\n        english: 'English',\r\n        russian: 'Russian',\r\n        you: 'You',\r\n        write_message: 'Write message...',\r\n        show_investments: 'Show investments',\r\n        outcoming_call: 'Outcoming call',\r\n        incoming_call: 'Incoming call',\r\n        online: 'online',\r\n        invite: 'Invite',\r\n        delete_room: 'Delete room',\r\n        invite_friends: 'Invite friends',\r\n        edit_room: 'Edit room',\r\n        you_sure: 'You sure?',\r\n        delete: 'Delete',\r\n        investments: 'Investments',\r\n        photos: 'Photos',\r\n        sounds: 'Sounds',\r\n        files: 'Files',\r\n        missed_call: 'Missed call',\r\n        canceled_call: 'Canceled call',\r\n        select_language: 'Select language',\r\n        users_not_found: 'Users not found',\r\n        user_not_found: 'User not found',\r\n        reply: 'Reply',\r\n        forward: 'Forward',\r\n        title: 'Title',\r\n        new_room: 'New room',\r\n        private_room: 'Private room',\r\n        start: 'Start',\r\n        select_users: 'Select users',\r\n        new_chat: 'New chat',\r\n        invited_you_to_the_room: 'Invited you to the room',\r\n        accept_your_friend_request: 'Accept your friend request',\r\n        send_you_friend_request: 'Send you friend request',\r\n        you_are_not_invited: 'You dont have invited in this room',\r\n        january: 'January',\r\n        february: 'February',\r\n        march: 'March',\r\n        april: 'April',\r\n        may: 'May',\r\n        june: 'June',\r\n        july: 'July',\r\n        august: 'August',\r\n        september: 'September',\r\n        october: 'October',\r\n        november: 'November',\r\n        december: 'December',\r\n        jan: 'Jan',\r\n        feb: 'Feb',\r\n        mar: 'Mar',\r\n        apr: 'Apr',\r\n        jun: 'Jun',\r\n        jul: 'Jul',\r\n        aug: 'Aug',\r\n        sep: 'Sep',\r\n        oct: 'Oct',\r\n        nov: 'Nov',\r\n        dec: 'Dec',\r\n        in: 'in',\r\n        yerstaday: 'yerstaday',\r\n        today: 'Today',\r\n        just_now: 'just now',\r\n        here_wiil_placed_your_notifications: 'Here will placed your notifications',\r\n        create_your_first_room: 'Create your first room in this language',\r\n        you_dont_have_chats: 'You dont have chats, lets create new',\r\n        write_your_first_message: 'Write your first message to',\r\n        typing: 'typing',\r\n        attachment_messages: 'Attachment messages',\r\n        messages: 'Messages',\r\n        have_max_rooms: 'Create max limit rooms',\r\n        room_exist: 'A room with that name exists',\r\n        have_active_call: 'Have active call',\r\n        error: 'Error',\r\n        force_accept_text: 'If you accept a personal call, your room call will end.',\r\n        force_join_text: 'If you move to a room, the current personal call ends.',\r\n        force_place_text: 'If you make a personal call, then your call in the room will end.',\r\n        delete_room_text: 'After deleting, you and those present in the room will remain in it, but no one else will be able to enter.',\r\n        close: 'Close',\r\n        user_busy: 'The user is busy...',\r\n        cancel_your_call: 'canceled your call',\r\n        empty_inv_files: 'Here will placed files from this dialog',\r\n        empty_inv_sounds: 'Here will placed sounds from this dialog',\r\n        empty_inv_images: 'Here will placed images from this dialog',\r\n        you_banned_in_this_room: 'You blocked in this room',\r\n        to: 'to',\r\n        incoming_request_empty: 'Incoming requests will be displayed here',\r\n        outgoing_request_empty: 'Outgoing requests will be displayed here',\r\n        day_1: 'day',\r\n        day_2: 'days',\r\n        day_5: 'days',\r\n        minute_1: 'minute',\r\n        minute_2: 'minutes',\r\n        minute_5: 'minutes',\r\n        hour_1: 'hour',\r\n        hour_2: 'hours',\r\n        hour_5: 'hours',\r\n        week_1: 'week',\r\n        week_2: 'weeks',\r\n        week_5: 'weeks',\r\n        ago: 'ago',\r\n        first_name_not_empty: 'First name must not be empty',\r\n        first_name_is_string: 'First name must be a string',\r\n        first_name_is_min: 'First name contain at least 2 characters',\r\n        last_name_not_empty: 'Last name must not be empty',\r\n        last_name_is_string: 'Last name must be a string',\r\n        last_name_is_min: 'Last name contain at least 2 characters',\r\n        email_is_invalid: 'Email is invalid',\r\n        email_not_empty: 'Email must not be empty',\r\n        password_is_min: 'Password must contain at least 8 characters ',\r\n        email_or_password_wrong: 'Email or password wrong',\r\n        email_already: 'Email already uses'   \r\n    }\r\n}","import languages from \"../languages\";\r\nimport store from \"../Redux/store\";\r\n\r\nexport function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].january,\r\n        languages[lang].february,\r\n        languages[lang].march,\r\n        languages[lang].april,\r\n        languages[lang].may,\r\n        languages[lang].june,\r\n        languages[lang].july,\r\n        languages[lang].august,\r\n        languages[lang].september,\r\n        languages[lang].october,\r\n        languages[lang].november,\r\n        languages[lang].december\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && languages[lang].today\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].jan,\r\n        languages[lang].feb,\r\n        languages[lang].mar,\r\n        languages[lang].apr,\r\n        languages[lang].may,\r\n        languages[lang].jun,\r\n        languages[lang].jul,\r\n        languages[lang].aug,\r\n        languages[lang].sep,\r\n        languages[lang].oct,\r\n        languages[lang].nov,\r\n        languages[lang].dec,\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() + ' in ' + hours + ':' +  minutes : day.toString() + ' in ' + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (\r\n                (diff < 60 && languages[lang].just_now)\r\n                || (diff < 120 && '1 ' + languages[lang].minute_1 + ' ' + languages[lang].ago)\r\n                || (diff < 3600 && Math.floor(diff / 60) + ' ' + declension(Math.ceil(diff / 60), [languages[lang].minute_1, languages[lang].minute_2, languages[lang].minute_5]) + ' ' + languages[lang].ago)\r\n                || (diff < 7200 && '1 ' + languages[lang].hour_1 + ' ' + languages[lang].ago)\r\n                || (diff < 86400 && Math.floor(diff / 3600) + ' ' + declension(Math.ceil(diff / 3600), [languages[lang].hour_1, languages[lang].hour_2, languages[lang].hour_5]) + ' ' + languages[lang].ago)\r\n            )\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + ' ' + declension(Math.ceil(day_diff), [languages[lang].day_1, languages[lang].day_2, languages[lang].day_5]) + ' ' + languages[lang].ago + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + ' ' + declension(Math.ceil(day_diff / 7), [languages[lang].week_1, languages[lang].week_2, languages[lang].week_5]) + ' ' + languages[lang].ago + ' ' + languages[lang].in + ' ' + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}\r\n\r\nfunction declension(n, text_forms) {  \r\n    n = Math.abs(n) % 100; var n1 = n % 10;\r\n    if (n > 10 && n < 20) { return text_forms[2]; }\r\n    if (n1 > 1 && n1 < 5) { return text_forms[1]; }\r\n    if (n1 == 1) { return text_forms[0]; }\r\n    return text_forms[2];\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive(e) {\r\n        let element = document.getElementById(this.props.from)\r\n        if(element) {\r\n            let find = false\r\n            let path = e.path || (e.composedPath && e.composedPath());\r\n            if(path.find(x => x.id === this.props.from)) {\r\n                e.stopPropagation()\r\n                find = true\r\n            }\r\n            \r\n            let rect = element.getBoundingClientRect()\r\n\r\n            let top\r\n            let left\r\n            if(this.props.bottom) {\r\n                top = rect.y + element.clientHeight\r\n                left = rect.x\r\n                if(this.props.right)\r\n                    left = rect.x+element.clientWidth\r\n            }\r\n            else {\r\n                top = rect.y\r\n                left = rect.x+element.clientWidth\r\n            }\r\n            \r\n            this.setState({left, top})\r\n            if((this.props.event === 'click' && (this.state.active || find)) || this.props.event === 'hover')\r\n                this.setState({active: !this.state.active})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).addEventListener('click', this.toggleActive.bind(this))\r\n            document.body.addEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).removeEventListener('click', this.toggleActive.bind(this))\r\n            document.body.removeEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? this.props.right ? 'translateX(-100%)' : 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>{this.props.langProps.you}:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\" style={{color: this.props.lastMessage.type === 'call' ? '#008FF7' : null}}>{this.props.lastMessage.type === 'call' ? this.props.langProps[this.props.lastMessage.text] : this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Photo</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.photos} [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Sound</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.sounds} [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>File</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.files} [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.messagesBlock.getScrollHeight() - (this.messagesBlock.getClientHeight() + this.messagesBlock.getScrollTop())) === 0) {\r\n            this.props.dialogsActions.dialogsLoad(this.props.user.apiToken)\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.chats}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.you_dont_have_chats}</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages)))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../../Redux/constants';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(this.props.call.user) {\r\n                    e.preventDefault()\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_FORCE,\r\n                        payload: this.props.room._id\r\n                    })\r\n                }\r\n            }} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RoomItem)","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nlet unmuteTimer = false\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const roomsLoad = (apiToken, lang) => (dispatch) => {\r\n    if(store.getState().rooms.canLoad) {\r\n        dispatch({\r\n            type: ROOMS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/room/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastRoomId: store.getState().rooms.rooms[store.getState().rooms.rooms.length-1]._id,\r\n                firstRoomId: store.getState().rooms.rooms[0]._id,\r\n                lang\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((rooms) => {\r\n            dispatch({\r\n                type: ROOMS_PRELOAD,\r\n                payload: rooms\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: data.errors[0]\r\n                })\r\n                \r\n                return\r\n            } else {\r\n                let room = data.room\r\n                let muted = data.muted\r\n\r\n                room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n                room.users.map(x => {\r\n                    x.speaking = false\r\n                    return 1\r\n                })\r\n\r\n                setForceTitle(room.title)\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ROOM,\r\n                    payload: {room, canLoad: room.dialog.messages.length === 50, muted}\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if(muted && (new Date(muted.date).getTime() - new Date().getTime()) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === room._id && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                        // console.log(unmuteTimer)\r\n                    }, (new Date(muted.date).getTime() - new Date().getTime()) );\r\n                }\r\n                \r\n                SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n                try {\r\n                    WebRtcController.connectRoom(room._id)\r\n                } catch (err) {\r\n                    SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                    dispatch({\r\n                        type: ROOMS_JOIN_ERROR,\r\n                        payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.roomsBlock.getScrollHeight() - (this.roomsBlock.getClientHeight() + this.roomsBlock.getScrollTop())) === 0) {\r\n            this.props.roomsActions.roomsLoad(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.rooms}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.create_your_first_room}</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.something_goes_wrong}</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title={this.props.langProps.create_room} className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms)))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport store from '../../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../../Redux/constants';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite') {\r\n                    if(this.props.call.user) {\r\n                        store.dispatch({\r\n                            type: ROOMS_SET_FORCE,\r\n                            payload: this.props.notification.room._id\r\n                        })\r\n                    } else {\r\n                        this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                    }\r\n                }\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.accept_your_friend_request}</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.send_you_friend_request}</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        call: state.call,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.notifications}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.here_wiil_placed_your_notifications}</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications)))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <span style={{textDecoration: 'none'}} onClick={() => {this.props.onClick()}}>\r\n                <Button className=\"room-item\">\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600}} name={this.props.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p><span>{this.props.title}</span></p>\r\n                    </div>\r\n                </Button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport LanguageItem from '../Partials/Language/LanguageItem'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../languages'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        this.props.onClick()\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.language}</h2>\r\n\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }} title={this.props.langProps.english} />\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }} title={this.props.langProps.russian} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages)))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: this.props.history.location.pathname.substring(1,5) === 'chat' ? 'messages' : this.props.user.roomLang ? 'rooms' : 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.notifications.noRead && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages onClick={() => {this.setState({activeTab: 'rooms'})}} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport store from '../../Redux/store'\r\nimport { BAN_SET } from '../../Redux/constants'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true, error: false, errors: []})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    if(data.ban) {\r\n                        store.dispatch({\r\n                            type: BAN_SET,\r\n                            payload: {numDate: data.numDate, date: data.date}\r\n                        })\r\n                    } else {\r\n                        this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                        SocketController.init(data.token)\r\n                    }\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isFetching)\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n            \r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'email').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'password').msg]} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'all').msg]} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Log in</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withCookies(Login)))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true, error: false, errors: []})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.isFetching)\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'email').msg]} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'password').msg]} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'all').msg]} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Sign up</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withCookies(Register)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onpause = () => {\r\n            audio.parentElement.className = 'message-sound'\r\n        }\r\n\r\n        audio.onplay = () => {\r\n            audio.parentElement.className = 'message-sound active'\r\n        }\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(document.getElementsByName(this.props.src)) {\r\n            document.getElementsByName(this.props.src).className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) {\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","import { CALL_SET_USER, CALL_SET_STATUS, CALL_SET_FORCE } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    if(store.getState().rooms.activeRoom) {\r\n        dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user, status: 'force-call'}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: CALL_SET_USER,\r\n            payload: {user, status: 'outcoming'}\r\n        })\r\n\r\n        fetch(`${urlApi}/api/call/call`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: user._id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((call) => {\r\n            if(call.error) {\r\n                dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: call.error\r\n                })\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    if(store.getState().rooms.activeRoom) {\r\n        dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: store.getState().call.user, status: 'force-accept'}\r\n        })\r\n    } else {\r\n        dispatch({\r\n            type: CALL_SET_STATUS,\r\n            payload: 'active'\r\n        })\r\n\r\n        fetch(`${urlApi}/api/call/accept`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: store.getState().call.user._id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((call) => {\r\n            if(call.error) {\r\n                dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: call.error\r\n                })\r\n                WebRtcController.stopCall()\r\n\r\n                fetch(`${urlApi}/api/call/stop`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        socketId: SocketController.getSocketId()\r\n                    })\r\n                })\r\n            } else {\r\n                WebRtcController.call(store.getState().call.user._id)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\n// import ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n// import urlMetadata from 'url-metadata'\r\n\r\n// let ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n    // urlMetadata(href).then((metadata) => {\r\n    //     console.log(metadata)\r\n    // })\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {this.props.message.user._id !== this.props.user._id && <>{`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}\r\n                            {this.props.message.user._id === this.props.user._id && <>{`${this.props.user.name.first} ${this.props.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}                            \r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\" onClick={(e) => {\r\n                        if(this.props.message.type === 'call' && this.props.message.user._id !== this.props.user._id) {\r\n                            e.stopPropagation()\r\n                            this.props.callActions.call(this.props.message.user, this.props.user.apiToken)\r\n                        }\r\n                    }}>\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.langProps[this.props.message.text]}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.history.push({\r\n                                            search: `?modal=slider`\r\n                                        })\r\n                                        store.dispatch({\r\n                                            type: SLIDER_SET,\r\n                                            payload: {\r\n                                                images,\r\n                                                index: 0\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.history.push({\r\n                                        search: `?modal=slider`\r\n                                    })\r\n                                    store.dispatch({\r\n                                        type: SLIDER_SET,\r\n                                        payload: {\r\n                                            images,\r\n                                            index\r\n                                        }\r\n                                    })\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Message)))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight() + 100 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} {this.props.langProps.typing}</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} {this.props.langProps.typing}</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.write_your_first_message} {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(Dialog))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `${this.props.langProps.investments} [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{this.props.langProps.attachment_messages}</h3>\r\n                        <p className=\"message-text\">{`${this.props.langProps.messages} [${this.props.recentMessages.length}]`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(Attachment)","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst PlaceHolder = withLang(languages)((props) => {\r\n    return <div className=\"placeholder\">{props.langProps.write_message}</div>\r\n})\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <PlaceHolder />}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n\r\n                {!this.props.recentMessages.find(message => message.type === 'call') && <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB', transform: 'scaleX(-1)'}} />\r\n                </Button>}\r\n\r\n                <div className=\"col\"></div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type.toLowerCase() === 'png' || file.type.toLowerCase() === 'jpg' || file.type.toLowerCase() === 'jpeg' || file.type.toLowerCase() === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type.toLowerCase() === 'txt' || file.type.toLowerCase() === 'pdf' || file.type.toLowerCase() === 'docx' || file.type.toLowerCase() === 'zip' || file.type.toLowerCase() === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type.toLowerCase() === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >  \r\n            {this.props.rooms.activeRoom.error.msg === 'dont_have_payment' && <Redirect to=\"/payment\" />}\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">{this.props.langProps.error}</h2>\r\n            <p className=\"modal-text\" style={{marginBottom: !!this.props.rooms.activeRoom.error.ban ? 0 : ''}}>{this.props.langProps[this.props.rooms.activeRoom.error.msg]}</p>\r\n            {!!this.props.rooms.activeRoom.error.ban && <p className=\"modal-text\">{this.props.langProps.to} <span style={{color: '#008FF7'}}>{new Date(this.props.rooms.activeRoom.error.ban.date).toLocaleString()}</span></p>}\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>{this.props.langProps.back}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(RoomJoinError)))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport qs from 'qs'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        minWidth: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab2 = withStyles(fabStylesCustom)(Fab);\r\n\r\nconst Members = withRouter((props) => {\r\n    return <Scrollbars\r\n        renderTrackVertical={() => <div className=\"track-vertical\"/>}\r\n        renderThumbVertical={() => <div className=\"thumb-vertical\"/>}\r\n        className=\"theme-members scroll\"\r\n        autoHide\r\n    >\r\n        {props.users.map((user, index) => \r\n            <div key={index} style={{cursor: 'pointer'}} className=\"member col-6 col-sm-6 col-md-6 col-lg-4 col-xl-3\" onClick={() => {\r\n                props.history.push({\r\n                    search: `?user=${user._id}`\r\n                })\r\n            }}>\r\n                <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                {user.speaking && <span className=\"speaking\"></span>}\r\n                <span className=\"user-name\">{user.name.first} {user.name.last}</span>\r\n            </div>\r\n        )}\r\n    </Scrollbars>\r\n})\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(!!this.props.rooms.activeRoom)\r\n            this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.rooms.activeRoom) {\r\n            return <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className={`col-xl-3 col-lg-6 col-md-6 theme-first-block ${this.state.act === 'chat' ? 'active' : 'hide'}`}>\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            if(this.state.act === 'chat') {\r\n                                this.props.history.push({\r\n                                    search: ``\r\n                                })\r\n                            } else {\r\n                                this.props.history.push('/')\r\n                            }                           \r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} {this.props.langProps.online}</h3>\r\n                        </div>\r\n\r\n                        <CustomFab2 id={'dialog-more-actions-'+this.props.rooms.activeRoom._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab2>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={\r\n                        this.props.rooms.activeRoom.ownerId === this.props.user._id || this.props.user.role === 'admin' || this.props.user.role === 'moder' ? [\r\n                            {text: this.props.langProps.invite_friends, action: () => {\r\n                                this.props.history.push({\r\n                                    search: '?act=invite'\r\n                                })\r\n                            }},\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: this.props.langProps.edit_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=editRoom'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {\r\n                                text: this.props.langProps.delete_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=deleteRoom'\r\n                                    })\r\n                                }\r\n                            }\r\n                        ] : [\r\n                            {\r\n                                text: this.props.langProps.invite_friends, action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=invite'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }}\r\n                        ]} from={'dialog-more-actions-'+this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat \r\n                        messages={this.props.rooms.activeRoom.dialog.messages} \r\n                        type=\"room\" \r\n                        to={this.props.rooms.activeRoom.title} \r\n                        dialogId={this.props.rooms.activeRoom.dialog._id} \r\n                        roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className={`col-xl-9 col-lg-6 col-md-6 theme-screen ${this.state.act === 'chat' ? 'hide' : 'active'}`}>\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option mobile-option`} onClick={() => {this.props.history.push({\r\n                            search: `?act=chat`\r\n                        })}}>\r\n                            {!!this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length && <span style={{right: 0}} className=\"unread-messages-count\">{this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length}</span>}\r\n                            <ChatBubbleOutlineIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        {!!this.props.rooms.activeRoom.muted && <Tooltip title={`Blocked to ${new Date(this.props.rooms.activeRoom.muted.date).toLocaleString()}`} placement=\"top\"><CustomFab className={`media-option reject`}>\r\n                            <MicOffIcon style={{color: '#fff'}} />\r\n                        </CustomFab></Tooltip>}\r\n                        {!this.props.rooms.activeRoom.muted && <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>}\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Room)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ActionMenu from '../../Partials/ActionMenu'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabStyles)(Fab);\r\nconst CustomFab = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 36, \r\n                        height: 36, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info col\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>{this.props.langProps.online}</p>}\r\n                    </div></>\r\n\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                            this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                        }}>\r\n                            <CallIcon style={{color: '#fff'}} />\r\n                        </CallFab>}\r\n                        \r\n                        <CustomFab id={'dialog-more-actions-'+dialog._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={[\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                        ]} from={'dialog-more-actions-'+dialog._id} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>{this.props.langProps.user_not_found}</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog)))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Payment.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        fetch(`${urlApi}/api/payment/get-all`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((tariffs) => {\r\n            this.setState({isFetching: false, tariffs})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    buy(tariffId) {\r\n        this.setState({isFetching: true})\r\n        fetch(`${urlApi}/api/payment/buy`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                tariffId\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((answer) => {\r\n            if(!answer.error) {\r\n                this.setState({isFetching: false})\r\n                this.props.history.push('/')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"payment-page\">\r\n                    <h2 className=\"payment-title\">Hi {this.props.user.name.first}</h2>\r\n                    <p className=\"payment-subtitle\">Pick a plan to continue</p>\r\n\r\n                    <div className=\"payment-tariffs\">\r\n                        {this.state.isFetching && <CircularProgress style={{\r\n                            color: '#fff',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n\r\n                        {!this.state.isFetching && <div className=\"row\">\r\n                            {this.state.tariffs.map(tariff => {\r\n                                return <div className=\"col-12 col-md-6 col-lg-3 col-xl-2 payment-tariff-container\">\r\n                                    <div className=\"payment-tariff\">\r\n                                        <p className=\"payment-tariff-title\">{tariff.title}</p>\r\n                                        <p className=\"payment-tariff-price\">{tariff.price === 0 ? \"Free\" : tariff.price}</p>\r\n\r\n                                        <button className=\"button-gray\" onClick={() => {\r\n                                            this.buy(tariff._id)\r\n                                        }} style={{width: '80%', margin: '0 10% 0 10%'}}>Buy</button>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                        </div>}\r\n                    </div>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Payment))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Ban.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"ban-page\">\r\n                    <p className=\"ban-title\">Ooops...</p>\r\n\r\n                    <p className=\"ban-subtitle\">You have ban to <span style={{color: '#008FF7'}}>{new Date(this.props.ban.date).toLocaleString()}</span></p>\r\n\r\n                    <button className=\"button-blue\" onClick={() => {\r\n                        const { cookies } = this.props;\r\n                        cookies.remove(\"apiToken\", { path: \"/\" });\r\n                        window.location.reload()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>Logout</button>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ban: state.ban,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(withCookies(Payment)))\r\n","import React from 'react'\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Room from '../Pages/User/Room';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport Payment from '../Pages/User/Payment';\r\nimport Ban from '../Pages/User/Ban';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n    {\r\n        path: '/payment',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Payment />\r\n    },\r\n    {\r\n        path: '/ban',\r\n        exact: true,\r\n        type: 'ban',\r\n        title: '',\r\n        component: () => <Ban />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\n// import {\r\n//     BrowserRouter as Router,\r\n// } from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.you_dont_have_friends}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.users_not_found}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../Redux/constants';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        minHeight             : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: [], isFetching: true})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create', isFetching: false})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n\r\n                if(this.props.call.user) {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                    store.dispatch({\r\n                        type: ROOMS_SET_FORCE,\r\n                        payload: room._id\r\n                    })\r\n                } else {\r\n                    this.props.history.push(`/rooms/${room._id}`)\r\n                }\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isFetching) {\r\n            return <Modal\r\n                isOpen={this.props.isOpen}\r\n                onRequestClose={() => {this.props.close()}}\r\n                style={customStylesModalInvite}\r\n                contentLabel=\"Create room\"\r\n            >\r\n                <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />\r\n            </Modal>\r\n        }\r\n\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">{this.props.langProps.new_room}</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder={this.props.langProps.title}\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label={this.props.langProps.private_room}\r\n                    />\r\n                    \r\n                    {!this.state.title.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                    {!!this.state.title.length && <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.next}</button>}\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.start}</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <span style={{cursor: 'pointer', borderRadius: 50}} onClick={() => {\r\n                    if(this.props.user.avatar) {\r\n                        this.props.history.push({\r\n                            search: `?modal=slider`\r\n                        })\r\n                        store.dispatch({\r\n                            type: SLIDER_SET,\r\n                            payload: {\r\n                                images: [{path: this.props.user.avatar.original}],\r\n                                index: 0\r\n                            }\r\n                        })\r\n                    }\r\n                }}><Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                /></span>\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.message}</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            e.preventDefault()\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.call}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.plus_friend}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.accept}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.decline}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.remove}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?mute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicOffIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Mute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unmute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unmute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?banroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unbanroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOpenIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?sendwarning=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <WarningIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Send warning</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?ban=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <BlockIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=settings`\r\n                    })\r\n                }}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.settings}</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.contacts}</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px',\r\n        minHeight: 100\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {!user && this.props.user._id !== this.props.userId && <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />}\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.incoming_request_empty}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n                \r\n                <p>{this.props.langProps.outgoing_request_empty}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.contacts}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>{this.props.langProps.friends}</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>{this.props.langProps.inbox}</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>{this.props.langProps.outbox}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n            {this.state.activeTab === 'outbox' && <Outbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.new_chat}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.invite}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        minHeight              : '245px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        isFetching: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: [], isFetching: true})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, isFetching: false})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        if(this.state.isFetching) {\r\n            return <Modal\r\n                isOpen={this.props.isOpen}\r\n                onRequestClose={() => {this.props.close()}}\r\n                style={customStylesModalCreate}\r\n                contentLabel=\"Edit room\"\r\n            >\r\n                <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />\r\n            </Modal>\r\n        }\r\n\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.edit_room}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder={this.props.langProps.title}\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label={this.props.langProps.private_room}\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.save}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.delete_room_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.delete}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.forward}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.outcoming_call}</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.incoming_call}</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <div className={this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && this.props.call.status !== 'active' ? 'pulse-avatar' : ''}>\r\n                        <Avatar \r\n                            style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`, zIndex: 3}} \r\n                            name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                            avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                        />\r\n                    </div>\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">{this.props.call.user.city ? this.props.call.user.city : this.props.langProps.not_indicated}</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.langProps.user_busy} <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>{this.props.langProps.close}</a>\r\n                </div>}\r\n                \r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} {this.props.langProps.cancel_your_call} <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>{this.props.langProps.close}</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'dont_have_payment' && <>\r\n                {this.props.callActions.clear()}\r\n                <Redirect to=\"/payment\" />\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                \r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.error}</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>{this.props.langProps.have_active_call}</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: this.props.index\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        images: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                if(!images.error) {\r\n                    images = images.map(x => x.data)\r\n                    \r\n                    this.setState({images, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.images.map((image, index) => {\r\n                return (\r\n                    <div className=\"investment-image\">\r\n                        <img key={index} alt={image.name} style={{cursor: 'pointer'}} onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?modal=slider`\r\n                            })\r\n                            this.props.dispatch({\r\n                                type: SLIDER_SET,\r\n                                payload: {\r\n                                    images: this.state.images,\r\n                                    index\r\n                                }\r\n                            })\r\n                        }} src={image.path} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.images.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <PhotoLibraryIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_images}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport Audio from '../../Partials/Chat/Audio';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        sounds: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(sounds => {\r\n                if(!sounds.error) {\r\n                    sounds = sounds.map(x => x.data)\r\n                    \r\n                    this.setState({sounds, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.sounds.map((sound, index) => {\r\n                return (\r\n                    <Audio\r\n                        key={index}\r\n                        fileName={sound.name}\r\n                        src={sound.path}\r\n                    />\r\n                )\r\n            })}\r\n            {(!this.state.sounds.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <AudiotrackIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_sounds}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        files: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(files => {\r\n                if(!files.error) {\r\n                    files = files.map(x => x.data)\r\n                    \r\n                    this.setState({files, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340, marginLeft: 15}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)',\r\n                }} />}\r\n            {this.state.files.map((file, index) => {\r\n                return (\r\n                    <div className=\"message-file\" style={{cursor: 'pointer'}} key={index} onClick={(e) => {\r\n                        window.open(file.path, '_self');\r\n                    }}>\r\n                        <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                        <div className=\"message-file-info\">\r\n                            <p className=\"message-file-name\">{file.name}</p>\r\n                            <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                        </div>\r\n                        <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.files.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <FileCopyIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>{this.props.langProps.empty_inv_files}</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(Images)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Images from './investmentsPartials/Images';\r\nimport Sounds from './investmentsPartials/Sounds';\r\nimport Files from './investmentsPartials/Files';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'images'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.investments}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'images' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'images'})}}>{this.props.langProps.photos}</span>\r\n                <span className={this.state.activeTab === 'sounds' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'sounds'})}}>{this.props.langProps.sounds}</span>\r\n                <span className={this.state.activeTab === 'files' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'files'})}}>{this.props.langProps.files}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'images' && <Images />}\r\n            {this.state.activeTab === 'sounds' && <Sounds />}\r\n            {this.state.activeTab === 'files' && <Files />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Settings\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.settings}</h2>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=profile'\r\n                })\r\n            }}>{this.props.langProps.change_profile}</p>\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=language'\r\n                })\r\n            }}>{this.props.langProps.language}</p>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                const { cookies } = this.props;\r\n                cookies.remove(\"apiToken\", { path: \"/\" });\r\n                window.location.reload()\r\n            }}>{this.props.langProps.logout}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport store from '../Redux/store';\r\nimport { USER_EDIT } from '../Redux/constants';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        firstName: this.props.user.name.first,\r\n        lastName: this.props.user.name.last,\r\n        city: this.props.user.city,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/user/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                city: this.state.city\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((user) => {\r\n            if(user.error) {\r\n                this.setState({error: true, errors: user.errors})\r\n            } else {\r\n                store.dispatch({\r\n                    type: USER_EDIT,\r\n                    payload: {\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        city: this.state.city\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.change_profile}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.firstName} \r\n                    onChange={(e) => {this.setState({firstName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.firstName}\r\n                    style={{marginTop: 0}} \r\n                />\r\n                {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.lastName} \r\n                    onChange={(e) => {this.setState({lastName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 0}} \r\n                    placeholder={this.props.langProps.lastName}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.city} \r\n                    onChange={(e) => {this.setState({city: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.city}\r\n                />\r\n\r\n                {(this.state.firstName !== this.props.user.name.first || this.state.lastName !== this.props.user.name.last || this.state.city !== this.props.user.city) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.save}</button>}\r\n                {(this.state.firstName === this.props.user.name.first && this.state.lastName === this.props.user.name.last && this.state.city === this.props.user.city) && <button className=\"button-gray\" onClick={() => {\r\n                        this.props.history.goBack()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_LANG } from '../Redux/constants';\r\nimport { urlApi } from '../config';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    setLang(lang) {\r\n        store.dispatch({\r\n            type: USER_SET_LANG,\r\n            payload: lang\r\n        })\r\n\r\n        fetch(`${urlApi}/api/user/set-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_language}</h2>\r\n\r\n            <p className={`settings-item ${this.props.user.lang === 'en' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'en')\r\n                this.setLang('en')\r\n            }}>{this.props.langProps.english}</p>\r\n            <p className={`settings-item ${this.props.user.lang === 'ru' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'ru')\r\n                this.setLang('ru')\r\n            }}>{this.props.langProps.russian}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Mute</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Mute</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unmute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unmute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unmute</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have mutes rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unmute</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Ban room</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-roomban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            \r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unban room sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unban room</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have ban rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unban</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\n\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        warning: ''\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/send-warning`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                warning: this.state.warning,\r\n                userId: this.props.userId,\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Warning sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Send warning</h2>\r\n\r\n            <textarea \r\n                className=\"input-field\"\r\n                onChange={(e) => {\r\n                    this.setState({warning: e.target.value})\r\n                }}\r\n                value={this.state.warning}\r\n            ></textarea>\r\n\r\n            {!!this.state.warning && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Send</button>}\r\n            {!this.state.warning && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_WARNING } from '../Redux/constants';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 999\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass Warning extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Warning\"\r\n        >\r\n            <ReportProblemOutlinedIcon style={{color: '#FF3333', fontSize: 60}} />\r\n\r\n            <h2 className=\"modal-title\">Warning</h2>\r\n\r\n            <p className=\"modal-text\">{this.props.user.warning}</p>\r\n            \r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                store.dispatch({\r\n                    type: USER_SET_WARNING,\r\n                    payload: false\r\n                })\r\n            }}>Close</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Warning))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n        \r\n        this.props.history.push(`/chats/${this.props.call.force.user._id}`)\r\n\r\n        setTimeout(() => {\r\n            this.props.callActions.accept(this.props.user.apiToken)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_accept_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.accept}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { CALL_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        this.props.history.push(`/chats/${this.props.call.force.user._id}`)\r\n        \r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.props.callActions.call(this.props.call.force.user, this.props.user.apiToken)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: CALL_SET_FORCE,\r\n            payload: {user: false, status: false}\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_place_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.call}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_FORCE } from '../Redux/constants';\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        maxWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n        let roomId = this.props.rooms.force\r\n        store.dispatch({\r\n            type: ROOMS_SET_FORCE,\r\n            payload: false\r\n        })\r\n\r\n        setTimeout(() => {\r\n            this.props.history.push(`/rooms/${roomId}`)\r\n        }, 250)\r\n    }\r\n\r\n    close() {\r\n        store.dispatch({\r\n            type: ROOMS_SET_FORCE,\r\n            payload: false\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <p>{this.props.langProps.force_join_text}</p>\r\n\r\n            <button className=\"button-blue\" onClick={() => {this.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.accept}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Button, Radio, withStyles } from '@material-ui/core'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        time: 0,\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Ban sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Ban</h2>\r\n\r\n            {timeStamps.map((time, index) => \r\n                    <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                        this.setState({time: time.time})\r\n                    }}>\r\n                        <div style={{\r\n                            flexGrow: 1,\r\n                            minWidth: 0,\r\n                            maxWidth: '100%',\r\n                            paddingRight: 10\r\n                        }}>\r\n                            <p><span>{time.label}</span></p>\r\n                        </div>\r\n                        <CustomRadio\r\n                            checked={this.state.time === time.time}\r\n                        />\r\n                    </Button>\r\n            )}\r\n            {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n            {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: `?user=${this.props.userId}`\r\n                })\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD, SLIDER_SET } from '../Redux/constants';\r\nimport Call from './Call';\r\nimport Slider from '../Partials/Chat/Slider';\r\nimport Investments from './Investments';\r\nimport Settings from './Settings';\r\nimport Profile from './Profile';\r\nimport Language from './Language';\r\nimport Mute from './Mute';\r\nimport Unmute from './Unmute';\r\nimport Banroom from './Banroom';\r\nimport Unbanroom from './Unbanroom';\r\nimport SendWaning from './SendWaning';\r\nimport Warning from './Warning';\r\nimport ForceAcceptCall from './ForceAcceptCall';\r\nimport ForcePlaceCall from './ForcePlaceCall';\r\nimport ForceJoinRoom from './ForceJoinRoom';\r\nimport Ban from './Ban';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n        mute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).mute,\r\n        unmute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unmute,\r\n        banroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).banroom,\r\n        unbanroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n        sendwarning: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n        ban: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).ban,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n                mute: qs.parse(location.search, { ignoreQueryPrefix: true }).mute,\r\n                unmute: qs.parse(location.search, { ignoreQueryPrefix: true }).unmute,\r\n                banroom: qs.parse(location.search, { ignoreQueryPrefix: true }).banroom,\r\n                unbanroom: qs.parse(location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n                sendwarning: qs.parse(location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n                ban: qs.parse(location.search, { ignoreQueryPrefix: true }).ban,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {!!this.props.user.warning && <Warning isOpen={!!this.props.user.warning} />}\r\n\r\n            {this.state.mute && this.props.user.role !== 'user' && <Mute userId={this.state.mute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unmute && this.props.user.role !== 'user' && <Unmute userId={this.state.unmute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.banroom && this.props.user.role !== 'user' && <Banroom userId={this.state.banroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.ban && this.props.user.role !== 'user' && <Ban userId={this.state.ban} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unbanroom && this.props.user.role !== 'user' && <Unbanroom userId={this.state.unbanroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.sendwarning && this.props.user.role !== 'user' && <SendWaning userId={this.state.sendwarning} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Settings isOpen={this.state.modal === 'settings'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n            \r\n            {this.state.modal === 'profile' && <Profile isOpen={this.state.modal === 'profile'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.modal === 'language' && <Language isOpen={this.state.modal === 'language'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId  || this.props.user.role === 'admin' || this.props.user.role === 'moder') && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId || this.props.user.role === 'admin' || this.props.user.role === 'moder') && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n            {this.state.modal === 'slider' && !!this.props.slider.images.length && <Slider index={this.props.slider.index} images={this.props.slider.images} close={() => {\r\n                this.props.dispatch({\r\n                    type: SLIDER_SET,\r\n                    payload: {\r\n                        images: [],\r\n                        index: 0\r\n                    }\r\n                })\r\n                this.props.history.goBack()\r\n            }} />}\r\n            \r\n            {this.props.match.params.id && this.state.modal === 'investments' && <Investments \r\n                isOpen={this.props.match.params.id && this.state.modal === 'investments'} \r\n                dialogId={this.props.match.params.id} \r\n                close={() => {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                }}\r\n            />}\r\n\r\n            {!!this.props.rooms.force && <ForceJoinRoom isOpen={true} />}\r\n\r\n            {this.props.call.user && this.props.call.force.status === 'force-accept' && <ForceAcceptCall isOpen={true} />}\r\n            {this.props.call.force.status === 'force-call' && <ForcePlaceCall isOpen={true} />}\r\n\r\n            {this.props.call.user && !this.props.call.force.status && <Call isOpen={true} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call,\r\n        slider: state.slider\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nimport store from \"../Redux/store\";\r\nimport { BAN_SET } from \"../Redux/constants\";\r\nimport Ban from \"../Pages/User/Ban\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications, ban, numDate, date}) => {\r\n          if(ban) {\r\n            store.dispatch({\r\n              type: BAN_SET,\r\n              payload: {numDate, date}\r\n            })\r\n          } else {\r\n            SocketController.init(apiToken)\r\n            this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          }\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          localStorage.setItem('drafts', JSON.stringify([]));\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      localStorage.setItem('drafts', JSON.stringify([]));\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n                  case 'ban':\r\n                    return this.props.ban.ban ? <Ban /> : <Redirect\r\n                    to={{\r\n                      pathname: \"/\",\r\n                    }}\r\n                  /> \r\n\r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? this.props.ban.ban ? <Redirect\r\n          to={{\r\n            pathname: \"/ban\",\r\n          }}\r\n        /> : (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ?  this.props.ban.ban ? <Redirect\r\n          to={{\r\n            pathname: \"/ban\",\r\n          }}\r\n        /> : (\r\n            children\r\n          )  : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n    ban: state.ban\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MultiLang } from \"react-multi-language\";\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                        <MultiLang lang={this.props.user.isAuth ? this.props.user.lang : 'en'}/>\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}