{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","Partials/Room/RoomItem.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Redux/actions/rooms.js","Redux/actions/users.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/Slider.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Redux/actions/call.js","Pages/User/Dialog.js","Router/config.js","Pages/NoMatch.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","avatar","src","min","avatarStyle","name","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","user","state","action","type","payload","roomLang","isFetching","getted","activeRoom","isError","rooms","map","room","_id","title","isPrivate","filter","typers","canLoad","isLoading","remoteStream","error","users","roomId","userId","dialog","messages","message","_newId","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","combineReducers","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","length","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","mozRTCIceCandidate","RTCIceCandidate","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","lang","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","socket","activeLang","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","getState","setTimeout","WebRtcController","otherId","id","read","last","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","images","files","sounds","append","file","push","localMessage","text","recentMessages","now","m","socketId","messageRes","errors","msg","toast","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","RoomItem","textDecoration","to","Button","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","overflow","index","key","first","getHM","date","time","hours","getHours","minutes","getMinutes","toString","LastMessageDate","getTime","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","OnlineDate","diff","getDay","month_diff","isNaN","ceil","ActionMenu","active","left","top","element","getElementById","from","rect","getBoundingClientRect","bottom","clientHeight","clientWidth","setState","addEventListener","toggleActive","bind","removeEventListener","transform","actions","onClick","DialogItem","randomId","history","location","pathname","preventDefault","myUser","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","right","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","nextProps","nextState","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","search","contextType","roomsGet","roomsAdd","param","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","selected","waitSearch","Contacts","q","searchResult","usersActions","target","value","clearTimeout","test","onChange","onSearch","placeholder","roomsBlock","CircularProgress","selectUsers","customStylesModalCreate","overlay","zIndex","content","marginRight","borderRadius","boxShadow","customStylesModalInvite","justifyContent","padding","CreateRoom","step","roomsActions","isOpen","onRequestClose","contentLabel","onSubmit","marginBottom","maxLength","FormControlLabel","control","label","Friends","Rooms","isOpenCreateRoom","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","uploadAvatar","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","UserSidebar","activeTab","show","Login","email","password","data","cookies","set","token","withCookies","Register","firstName","lastName","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","volume","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","parentElement","pause","stopPropagation","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","unSelect","onSelect","isRecent","cursor","lineHeight","canSelect","replace","countRecent","image","isBlur","openSlider","draggable","alt","sound","open","toFixed","sliderImages","PureComponent","waitActiveUser","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","getClientHeight","getScrollHeight","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","customStylesModal","Slider","opacity","InputMessage","inputMessageHeight","event","items","clipboardData","originalEvent","kind","getAsFile","addFile","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","accept","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","isOpenSlider","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","newText","prevText","textAlign","RoomJoinError","Members","srcObject","autoPlay","controls","Room","waitSocket","match","params","ownerId","Main","order","clear","innerWidth","callActions","routes","exact","NoMatch","transition","OtherUser","MyUser","User","Inbox","Outbox","CreateDialog","DeleteRoom","CallFab","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","muted","fullScreen","overlayClassName","MainModal","act","qs","ignoreQueryPrefix","modal","listen","Invite","EditRoom","Forward","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"ojFAEaA,G,OAAeC,IAAMC,iB,+DCqBnBC,E,uKAhBP,OACI,yBAAKC,UAAU,cAAcC,MAAOC,KAAKC,MAAMF,OAC1CC,KAAKC,MAAMC,QAAU,yBAAKC,IAAKH,KAAKC,MAAMC,OAAOE,IAAKL,MAAOC,KAAKC,MAAMI,YAAaP,UAAU,sBAChG,8BAAOE,KAAKC,MAAMK,KAAKC,eACtBP,KAAKC,MAAMO,QAAU,0BAAMV,UAAU,kBAErCE,KAAKC,MAAMQ,QAAU,oCACK,WAAtBT,KAAKC,MAAMQ,QAAuB,0BAAMX,UAAU,uBAAsB,kBAAC,IAAD,CAAeC,MAAO,CAACW,MAAO,OAAQC,SAAU,OAClG,WAAtBX,KAAKC,MAAMQ,QAAuB,0BAAMX,UAAU,uBAAsB,kBAAC,IAAD,CAAcC,MAAO,CAACW,MAAO,OAAQC,SAAU,OACjG,YAAtBX,KAAKC,MAAMQ,QAAwB,0BAAMX,UAAU,uBAAsB,kBAAC,IAAD,CAASC,MAAO,CAACW,MAAO,OAAQC,SAAU,a,GAXnHhB,IAAMiB,W,8GCErBC,EAAgB,CAClBC,QAAQ,GAmBGC,EAhBF,WAAoC,IAAnCC,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC5C,OAAOA,EAAOC,MACV,ICZkB,aDad,OAAO,uCAAKF,GAAUC,EAAOE,SAA7B,IAAsCL,QAAQ,IAElD,ICdmB,cDef,MAAO,CAAEA,QAAQ,GACrB,ICf6B,wBDgBzB,OAAO,2BAAKE,GAAZ,IAAmBI,SAAUH,EAAOE,UACxC,IChBuB,kBDiBnB,OAAO,2BAAKH,GAAZ,IAAmBd,OAAQe,EAAOE,UACtC,QACI,OAAOH,I,QESbH,EAAgB,CAClBQ,YAAY,EACZC,QAAQ,EACRC,YAAY,EACZC,SAAS,EACTC,MAAO,IAqHIA,EAlHD,WAAoC,IAAnCT,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IDnCiB,YCoCb,OAAO,2BAAKF,GAAZ,IAAmBS,MAAOR,EAAOE,QAASE,YAAY,EAAOC,QAAQ,IAEzE,IDbqB,gBCcjB,OAAO,2BAAKN,GAAZ,IAAmBK,YAAY,EAAMC,QAAQ,EAAOE,SAAS,IAEjE,IDjBuB,kBCkBnB,OAAO,2BAAKR,GAAZ,IAAmBK,YAAY,EAAOC,QAAQ,EAAME,SAAS,IAEjE,ID3CiB,YC4Cb,OAAO,2BAAKR,GAAZ,IAAmBS,MAAM,CAAGR,EAAOE,SAAX,mBAAuBH,EAAMS,UACzD,IDpBuB,kBCqBnB,OAAO,2BAAKT,GAAZ,IAAmBS,MAAOT,EAAMS,MAAMC,KAAI,SAAAC,GAAI,OAC1CV,EAAOE,QAAQS,MAAQD,EAAKC,IAA5B,2BAAuCD,GAAvC,IAA6CE,MAAOZ,EAAOE,QAAQU,MAAOC,UAAWb,EAAOE,QAAQW,YAAaH,OAEzH,IDtByB,oBCuBrB,OAAO,2BAAKX,GAAZ,IAAmBS,MAAM,YAAKT,EAAMS,MAAMM,QAAO,SAAAJ,GAAI,OAAIA,EAAKC,MAAQX,EAAOE,cACjF,IDhDuB,kBCiDnB,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAKN,EAAOE,QAAQQ,MAArB,IAA2BK,OAAQ,GAAIC,QAAShB,EAAOE,QAAQc,QAASC,WAAW,EAAOC,cAAc,MACzI,IDzCwB,mBC0CpB,OAAO,2BAAKnB,GAAZ,IAAmBO,WAAY,CAAEa,MAAOnB,EAAOE,WACnD,IDjCgC,2BCkC5B,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBc,MAAM,YACrDrB,EAAMO,WAAWc,MAAMN,QAAO,SAAAhB,GAC7B,OAAOA,EAAKa,MAAQX,EAAOE,gBAGvC,IDxC+B,0BCyC3B,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBc,MAAM,GAAD,mBAAOrB,EAAMO,WAAWc,OAAxB,CAA+BpB,EAAOE,cACrG,IDrC0B,qBCsCtB,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBM,MAAOZ,EAAOE,QAAQU,MAAOC,UAAWb,EAAOE,QAAQW,cACjH,ID7DwB,mBC8DpB,OAAO,2BAAKd,GAAZ,IAAmBO,YAAY,IACnC,ID9D4B,uBC+DxB,OAAO,2BAAKP,GAAZ,IAAmBS,MAAOT,EAAMS,MAAMC,KAAI,SAAAC,GAAI,OAC1CV,EAAOE,QAAQmB,SAAWX,EAAKC,IAA/B,2BACKD,GADL,IACWU,MAAM,CAAGpB,EAAOE,QAAQJ,MAAnB,mBAA4BY,EAAKU,UACjDV,OAER,IDnE6B,wBCoEzB,OAAO,2BAAKX,GAAZ,IAAmBS,MAAOT,EAAMS,MAAMC,KAAI,SAAAC,GAAI,OAC1CV,EAAOE,QAAQmB,SAAWX,EAAKC,IAA/B,2BACKD,GADL,IACWU,MAAM,YACNV,EAAKU,MAAMN,QAAO,SAAAhB,GACjB,OAAOA,EAAKa,MAAQX,EAAOE,QAAQoB,aAI/CZ,OAER,ID7EyB,oBC8ErB,OAAO,2BAAKX,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAS,GAAD,mBAAOzB,EAAMO,WAAWiB,OAAOC,UAA/B,CAAyCxB,EAAOE,gBACxJ,ID9E6B,wBC+EzB,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IzB,EAAOE,QAAQS,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcR,WAAW,EAAON,IAAKX,EAAOE,QAAQwB,SACpDD,WAER,IDnF2B,sBCoFvB,OAAO,2BAAK1B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IzB,EAAOE,UAAYuB,EAAQd,IAA3B,2BACKc,GADL,IACcR,WAAW,EAAOV,SAAS,IACzCkB,WAER,IDxF0B,qBCyFtB,OAAO,2BAAK1B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IzB,EAAOE,QAAQS,MAAQc,EAAQd,IAA/B,uCACKc,GAAYzB,EAAOE,SADxB,IACiCyB,QAAQ,IACzCF,WAER,ID3F4B,uBC4FxB,OAAO,2BAAK1B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAS,YAC9FzB,EAAMO,WAAWiB,OAAOC,SAASV,QAAO,SAAAW,GACvC,OAAQzB,EAAOE,QAAQ0B,MAAK,SAAAC,GAAC,OAAIA,IAAMJ,EAAQd,iBAI3D,IDpG0B,qBCqGtB,OAAO,2BAAKZ,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC7IA,EAAQK,QAAUL,EAAQ3B,KAAKa,MAAQX,EAAOE,QAE/CuB,EAFA,2BACKA,GADL,IACcK,QAAQ,aAG9B,IDvG2B,sBCwGvB,OAAO,2BAAK/B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC7IA,EAAQK,QAAUL,EAAQ3B,KAAKa,MAAQX,EAAOE,QAE/CuB,EAFA,2BACKA,GADL,IACcK,QAAQ,aAG9B,IDxG+B,0BCyG3B,OAAO,2BAAK/B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBY,aAAclB,EAAOE,YAC/E,ID3GyB,oBC4GrB,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBU,SAAS,EAAOC,WAAW,MACrF,ID9G2B,sBC+GvB,OAAO,2BAAKlB,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBW,WAAW,EAAOD,QAAShB,EAAOE,QAAQc,QAASO,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAS,GAAD,mBAAMxB,EAAOE,QAAQsB,UAArB,YAAkCzB,EAAMO,WAAWiB,OAAOC,iBACrN,IDlHuB,kBCmHnB,OAAO,2BAAKzB,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBS,OAAO,CAAGf,EAAOE,SAAX,mBAAuBH,EAAMO,WAAWS,aACxG,IDnH0B,qBCoHtB,OAAO,2BAAKhB,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBS,OAAO,YAAMhB,EAAMO,WAAWS,OAAOD,QAAO,SAAAhB,GAC9F,OAAOA,EAAKa,MAAQX,EAAOE,gBAEnC,IDnHiC,4BCoH7B,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBc,MAAOrB,EAAMO,WAAWc,MAAMX,KAAI,SAAAX,GAAI,OACxFA,EAAKa,MAAQX,EAAOE,QAAQoB,OAA5B,2BACKxB,GADL,IACWiC,SAAU/B,EAAOE,QAAQ6B,WACpCjC,SAER,QACI,OAAOC,IChJbH,EAAgB,CAClBoC,OAAO,EACPC,SAAS,EACTC,UAAU,GAmBCC,EAhBD,WAAoC,IAAnCpC,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IF+D+B,0BE9D3B,OAAO,2BAAKF,GAAZ,IAAmBiC,MAAOhC,EAAOE,UAErC,IF6D0B,qBE5DtB,OAAO,2BAAKH,GAAZ,IAAmBkC,QAASjC,EAAOE,UAEvC,IF2D2B,sBE1DvB,OAAO,2BAAKH,GAAZ,IAAmBmC,SAAUlC,EAAOE,UAExC,QACI,OAAOH,ICPbH,EAAgB,CAClBQ,YAAY,EACZgC,QAAS,GACTC,gBAAiB,IAyIND,EAtIC,WAAoC,IAAnCrC,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC/C,OAAOA,EAAOC,MACV,IHamB,cGZf,OAAO,2BAAKF,GAAZ,IAAmBqC,QAASpC,EAAOE,QAAQkC,QAAShC,YAAY,EAAOkC,YAAatC,EAAOE,QAAQoC,cAEvG,IHWmB,cGVf,OAAO,2BAAKvC,GAAZ,IAAmBqC,QAAQ,CAAGpC,EAAOE,SAAX,mBAAuBH,EAAMqC,YAC3D,IHcoB,eGbhB,OAAO,2BAAKrC,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQqC,WAAahB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUxB,EAAOE,QAAQsB,SAAUnB,QAAQ,EAAMW,QAAShB,EAAOE,QAAQc,UACtFO,OAER,IHI2B,sBGHvB,OAAO,2BAAKxB,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQqC,WAAahB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAS,GAAD,mBACVD,EAAOC,UADG,CAEbxB,EAAOE,QAAQuB,UAEnBe,YAAaxC,EAAOE,QAAQuB,QAC5BgB,OAAQzC,EAAOE,QAAQuC,OAASlB,EAAOkB,OAAS,EAAIlB,EAAOkB,SAE/DlB,KACFmB,MAAK,SAACC,EAAGC,GACP,OAAKD,EAAEH,aAAeI,EAAEJ,aAGxBG,EAAI,IAAIE,KAAKF,EAAEH,YAAYM,aAC3BF,EAAI,IAAIC,KAAKD,EAAEJ,YAAYM,aAEb,EAAIH,EAAEC,EAAI,EAAI,EALjB,KAMXN,YAAatC,EAAOE,QAAQoC,YAAcvC,EAAMuC,YAAY,EAAIvC,EAAMuC,cAC9E,IHf+B,0BGgB3B,OAAO,2BAAKvC,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQqC,WAAahB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC1CzB,EAAOE,QAAQS,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcR,WAAW,EAAON,IAAKX,EAAOE,QAAQwB,SACpDD,KAEJe,YAAY,2BAAMjB,EAAOiB,aAAd,IAA2BvB,WAAW,MAErDM,OAER,IH1B6B,wBG2BzB,OAAO,2BAAKxB,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQqC,WAAahB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC1CzB,EAAOE,QAAQS,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcR,WAAW,EAAOV,SAAS,IACzCkB,KAEJe,YAAY,2BAAMjB,EAAOiB,aAAd,IAA2BvB,WAAW,EAAOV,SAAS,MAErEgB,OAER,IH9B6B,wBG+BzB,OAAO,2BAAKxB,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoB,SAAWC,EAAOzB,KAAKa,IAAtC,2BACKY,GADL,IACazB,KAAK,2BAAMyB,EAAOzB,MAAd,IAAoBP,OAAQS,EAAOE,QAAQX,OAAQwD,SAAU/C,EAAOE,QAAQ6C,aAC7FxB,OAER,IH3C6B,wBG4CzB,OAAO,2BAAKxB,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQqC,WAAahB,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OACzCA,EAAQK,QAAUL,EAAQ3B,KAAKa,MAAQX,EAAOE,QAAQoB,OAEvDG,EAFA,2BACKA,GADL,IACcK,QAAQ,OAG1BW,OAAQzC,EAAOE,QAAQuC,OAAS,EAAIlB,EAAOkB,OAC3CD,YAAY,2BAAMjB,EAAOiB,aAAd,IAA2BV,QAAQ,MAElDP,KACDe,YAAatC,EAAOE,QAAQoC,YAAcvC,EAAMuC,YAAY,EAAIvC,EAAMuC,cAC7E,IHrD4B,uBGsDxB,OAAO,2BAAKvC,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQqC,WAAahB,EAAOZ,IAAnC,2BACSY,GADT,IACiBC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9CzB,EAAOE,QAAQuB,QAAQd,MAAQc,EAAQd,IAAvC,uCACKc,GAAYzB,EAAOE,QAAQuB,SADhC,IACyCE,QAAQ,IACjDF,KAEJe,YAAaxC,EAAOE,QAAQ8C,SAAf,2BAA+BzB,EAAOiB,aAAgBxC,EAAOE,QAAQuB,SAAYF,EAAOiB,cAEzGjB,OAER,IHhE8B,yBGiE1B,OAAO,2BAAKxB,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQqC,WAAahB,EAAOZ,IAAnC,2BACSY,GADT,IACiBC,SAAS,YAAMD,EAAOC,SAASV,QAAO,SAAAW,GAC/C,OAAQzB,EAAOE,QAAQ+C,WAAWrB,MAAK,SAAAC,GAAC,OAAIA,IAAMJ,EAAQd,WAE9D6B,YAAaxC,EAAOE,QAAQsC,YAC5BC,OAAQzC,EAAOE,QAAQuC,QAAoC,IAA1BzC,EAAOE,QAAQuC,OAAezC,EAAOE,QAAQuC,OAASlB,EAAOkB,SAElGlB,KACFmB,MAAK,SAACC,EAAGC,GACP,OAAKD,EAAEH,aAAeI,EAAEJ,aAGxBG,EAAI,IAAIE,KAAKF,EAAEH,YAAYM,aAC3BF,EAAI,IAAIC,KAAKD,EAAEJ,YAAYM,aAEb,EAAIH,EAAEC,EAAI,EAAI,EALjB,KAMXN,YAAatC,EAAOE,QAAQoC,aAA8C,IAA/BtC,EAAOE,QAAQoC,YAAoBtC,EAAOE,QAAQoC,YAAcvC,EAAMuC,cACzH,IHlF2B,sBGmFvB,OAAO,2BAAKvC,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,UAAYqB,EAAOZ,IAA1B,2BACSY,GADT,IACiBP,SAAS,EAAOC,WAAW,IAC5CM,OAGR,IHxF6B,wBGyFzB,OAAO,2BAAKxB,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQqC,WAAahB,EAAOZ,IAAnC,2BACSY,GADT,IACkBN,WAAW,EAAOD,QAAShB,EAAOE,QAAQc,QAASQ,SAAS,GAAD,mBAAMxB,EAAOE,QAAQsB,UAArB,YAAkCD,EAAOC,aACtHD,OAGR,IHnGyB,oBGoGrB,OAAO,2BAAKxB,GAAZ,IAAmBqC,QAASrC,EAAMqC,QAAQ3B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoB,SAAWC,EAAOzB,KAAKa,IAAtC,2BACKY,GADL,IACa2B,OAAQlD,EAAOE,QAAQgD,SACpC3B,OAER,IHnG2B,sBGoGvB,OAAO,2BAAKxB,GAAZ,IAAmBsC,gBAAiBrC,EAAOE,UAC/C,QACI,OAAOH,ICxIbH,EAAgB,CAClBQ,YAAY,EACZC,QAAQ,EACR8C,cAAc,EACd5C,SAAS,EACTS,SAAS,EACTI,MAAO,GACPgC,QAAS,CACLhC,MAAO,GACPf,QAAQ,EACRW,SAAS,EACTZ,YAAY,GAEhBiD,UAAW,CACPjC,MAAO,GACPf,QAAQ,EACRW,SAAS,EACTZ,YAAY,GAEhBkD,QAAS,CACLlC,MAAO,GACPf,QAAQ,EACRW,SAAS,EACTZ,YAAY,IAiDLI,EA7CD,WAAoC,IAAnCT,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IJYiB,YIXb,OAAO,2BAAKF,GAAZ,IAAmBqB,MAAOpB,EAAOE,QAAQkD,QAASpC,QAAShB,EAAOE,QAAQc,QAASZ,YAAY,EAAOC,QAAQ,IAElH,IJMiB,YILb,OAAO,2BAAKN,GAAZ,IAAmBqB,MAAM,CAAGpB,EAAOE,SAAX,mBAAuBH,EAAMqB,UACzD,IJKgC,2BIJ5B,OAAO,2BAAIrB,GAAX,IAAkBoD,aAAcnD,EAAOE,UAC3C,IJI+B,0BIH3B,OAAO,2BAAKH,GAAZ,IAAmBqB,MAAOrB,EAAMqB,MAAMX,KAAI,SAAAX,GAAI,OAC1CE,EAAOE,QAAQoB,SAAWxB,EAAKa,IAA/B,2BACKb,GADL,IACWyD,aAAcvD,EAAOE,QAAQqD,eAExCzD,OAER,IJDyB,oBIErB,OAAO,2BAAKC,GAAZ,IAAmBqD,QAAQ,2BAAMrD,EAAMqD,SAAb,IAAsBhC,MAAOpB,EAAOE,QAAQkB,MAAOJ,QAAShB,EAAOE,QAAQc,QAASZ,YAAY,EAAOC,QAAQ,MAC7I,IJF2B,sBIGvB,OAAO,2BAAKN,GAAZ,IAAmBsD,UAAU,2BAAMtD,EAAMsD,WAAb,IAAwBjC,MAAOpB,EAAOE,QAAQkB,MAAOJ,QAAShB,EAAOE,QAAQc,QAASZ,YAAY,EAAOC,QAAQ,MACjJ,IJHyB,oBIIrB,OAAO,2BAAKN,GAAZ,IAAmBuD,QAAQ,2BAAMvD,EAAMuD,SAAb,IAAsBlC,MAAOpB,EAAOE,QAAQkB,MAAOJ,QAAShB,EAAOE,QAAQc,QAASZ,YAAY,EAAOC,QAAQ,MAC7I,IJJ4B,uBIKxB,OAAO,2BAAKN,GAAZ,IAAmBqD,QAAQ,2BAAMrD,EAAMqD,SAAb,IAAsBhC,MAAM,YAAMrB,EAAMqD,QAAQhC,MAAMN,QAAO,SAAAhB,GACnF,OAAOE,EAAOE,QAAQoB,SAAWxB,EAAKa,YAE9C,IJP8B,yBIQ1B,OAAO,2BAAKZ,GAAZ,IAAmBsD,UAAU,2BAAMtD,EAAMsD,WAAb,IAAwBjC,MAAM,YAAMrB,EAAMsD,UAAUjC,MAAMN,QAAO,SAAAhB,GACzF,OAAOE,EAAOE,QAAQoB,SAAWxB,EAAKa,YAE9C,IJV4B,uBIWxB,OAAO,2BAAKZ,GAAZ,IAAmBuD,QAAQ,2BAAMvD,EAAMuD,SAAb,IAAsBlC,MAAM,YAAMrB,EAAMuD,QAAQlC,MAAMN,QAAO,SAAAhB,GACnF,OAAOE,EAAOE,QAAQoB,SAAWxB,EAAKa,YAE9C,IJbyB,oBIcrB,OAAO,2BAAKZ,GAAZ,IAAmBqD,QAAQ,2BAAMrD,EAAMqD,SAAb,IAAsBhC,MAAM,CAAGpB,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMqD,QAAQhC,YACnG,IJd2B,sBIevB,OAAO,2BAAKrB,GAAZ,IAAmBsD,UAAU,2BAAMtD,EAAMsD,WAAb,IAAwBjC,MAAM,CAAGpB,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMsD,UAAUjC,YACzG,IJfyB,oBIgBrB,OAAO,2BAAKrB,GAAZ,IAAmBuD,QAAQ,2BAAMvD,EAAMuD,SAAb,IAAsBlC,MAAM,CAAGpB,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMuD,QAAQlC,YACnG,QACI,OAAOrB,IC7EbH,EAAgB,CAClBQ,YAAY,EACZC,QAAQ,EACRC,YAAY,EACZC,SAAS,EACTiD,cAAe,GACff,OAAQ,GAyBGjC,EAtBD,WAAoC,IAAnCT,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC7C,OAAOA,EAAOC,MACV,ILmDyB,oBKlDrB,OAAO,2BAAKF,GAAZ,IAAmByD,cAAexD,EAAOE,QAASE,YAAY,EAAOC,QAAQ,IAEjF,ILiDyB,oBKhDrB,OAAO,2BAAKN,GAAZ,IAAmByD,cAAc,CAAGxD,EAAOE,SAAX,mBAAuBH,EAAMyD,gBAAiBf,OAAQ1C,EAAM0C,OAAO,IACvG,ILgD0B,qBK/CtB,OAAO,2BAAK1C,GAAZ,IAAmByD,cAAezD,EAAMyD,cAAc/C,KAAI,SAAAgD,GAAY,OAClEzD,EAAOE,UAAYuD,EAAa9C,IAAhC,2BACK8C,GADL,IACmB3B,QAAQ,IAC3B2B,KACDhB,OAAQ1C,EAAM0C,OAAS,IAC9B,IL2CiC,4BK1C7B,OAAO,2BAAK1C,GAAZ,IAAmB0C,OAAQzC,EAAOE,UACtC,IL0C4B,uBKzCxB,OAAO,2BAAKH,GAAZ,IAAmByD,cAAc,YAAKzD,EAAMyD,cAAc1C,QAAO,SAAA2C,GAAY,OAAIA,EAAa9C,MAAQX,EAAOE,cACjH,QACI,OAAOH,IC5BbH,EAAgB,CAClBE,MAAM,EACNN,OAAQ,OACR0B,cAAc,EACdiB,MAAO,SAkBIuB,EAfF,WAAoC,IAAnC3D,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC5C,OAAOA,EAAOC,MACV,INkEqB,gBMjEjB,OAAO,2BAAKF,GAAZ,IAAmBD,KAAME,EAAOE,QAAQJ,KAAMN,OAAQQ,EAAOE,QAAQV,SACzE,INiEuB,kBMhEnB,OAAO,2BAAKO,GAAZ,IAAmBP,OAAQQ,EAAOE,UACtC,INgE8B,yBM/D1B,OAAO,2BAAKH,GAAZ,IAAmBmB,aAAclB,EAAOE,UAC5C,IN+DsB,iBM9DlB,OAAO,2BAAKH,GAAZ,IAAmBoC,MAAOnC,EAAOE,UACrC,QACI,OAAOH,ICfJ4D,cAAgB,CAC3B7D,OACAU,QACA2B,QACAC,UACAhB,QACAoC,gBACAE,S,SCZWE,eAAYC,EAAaC,YAAgBC,M,OCHjD,SAASC,GAAc7E,EAAK8E,GAC/B,IAAIC,EAAO/E,EAAMgF,KAAKC,UAAYH,EAAM,EAAI9E,GAC5C,OAAOgF,KAAKE,MAAMH,GAGf,SAASI,GAASC,EAAMC,GAE9B,IADA,IAAIC,EACKC,EAAE,EAAGA,EAAIF,EAAWG,OAAQD,IAChCF,EAAWE,GAAGH,OAASA,IAC1BE,EAAY,cAAgBD,EAAWE,GAAG9D,OAG5CgE,SAAShE,MAAS6D,GAAyB,WAGrC,SAASI,GAAcjE,GAC7BgE,SAAShE,MAAQ,cAAgBA,E,iECZ9BkE,IAAuB,EACvBC,IAAe,EACfC,IAAe,EACfC,IAAc,EACd/D,IAAe,EACfgE,IAAe,EAGbC,KAA8BP,SAASQ,aAGvCC,IAAUF,MAAUG,OAAOC,WAE3BC,GAAQC,mBAAqBH,OAAOG,mBAAqBH,OAAOI,sBAAwBJ,OAAOK,wBAC/FC,GAAwBN,OAAOM,uBAAyBN,OAAOO,0BAA4BP,OAAOM,sBAGlGE,IAFkBR,OAAOS,oBAAsBT,OAAOU,gBAE/B,CACzBC,qBAAqB,EACrBC,qBAAqB,IAEnBC,GAAuB,CACzBF,qBAAqB,EACrBC,qBAAqB,GAGnBE,GAAc,CAChB,WAAc,CACV,CAACC,KAAM,6BACP,CACEA,KAAM,2BACNC,WAAY,kCACZC,SAAU,cAKdC,GAAc,CAChB,WAAc,CACV,CAACH,KAAM,4BACP,CAACA,KAAM,uBACP,CAACA,KAAM,wBACP,CAACA,KAAM,yBACP,CAACA,KAAM,uBACP,CAACA,KAAM,2BACP,CAACA,KAAM,wBACP,CAACA,KAAM,gCACP,CAACA,KAAM,iCACP,CAACA,KAAM,iCACP,CAACA,KAAM,iCACP,CAACA,KAAM,iCACP,CAACA,KAAM,uBACP,CAACA,KAAM,0BACP,CAACA,KAAM,4BACP,CAACA,KAAM,4BACP,CAACA,KAAM,2BACP,CAACA,KAAM,2BACP,CAACA,KAAM,sBACP,CACEA,KAAM,2BACNC,WAAY,kCACZC,SAAU,cAKpB,SAASE,GAAkBC,GAGvB,OAAOA,GAFQ,IAAKpB,OAAOqB,cAAgBrB,OAAOsB,qBAC9BC,+BACCC,QAGzB,IAAMC,GAAWC,UAAUC,cAAgBD,UAAUE,oBAAsBF,UAAUG,iBAAmBH,UAAUI,eAElH,SAASH,GAAa9E,EAAOuE,GACtBvB,IAAQE,GACP2B,UAAUK,aAAaJ,aAAa9E,GAAOmF,MAAK,SAAAR,GAC5CJ,EAASI,MAEZS,OAAM,SAACC,GACJf,GAAkBC,MAGtBK,GACI5E,EACAuE,GACA,WACOvE,EAAMsF,MACLV,GACI,CAACW,OAAO,EAAMD,OAAO,GACrBf,GACA,WACID,GAAkBC,MAI1BD,GAAkBC,MAgBtC,SAASiB,GAAmBC,GACrBA,EAAEC,WACDC,GAAiBC,qBAAqB,CAAC1G,OAAQ0D,GAAc8C,UAAWD,EAAEC,YAIlF,SAASG,GAAY7G,EAAO8G,EAAO9F,GAC/B,GAAGhB,EAAO,OAAO+G,QAAQC,IAAIhH,GAE7B2G,GAAiBM,iBAAiB,CAAC9G,OAAQ0D,GAAcqD,SAAUJ,EAAO9F,UAG9E,SAASmG,GAAmBV,GACrBA,EAAEC,WACDC,GAAiBS,qBAAqB,CAACjH,OAAQ0D,GAAc6C,UAAWD,EAAEC,YAInE,kBAGP5C,GAAYuD,iBAAiB,GAAGC,SAAWxD,GAAYuD,iBAAiB,GAAGC,QAC3EC,GAAMC,SAAS,CACX1I,KVhE2B,0BUiE3BC,QAAS+E,GAAYuD,iBAAiB,GAAGC,WANtC,cAUPvH,GAAasH,iBAAiB,GAAGC,SAAWvH,GAAasH,iBAAiB,GAAGC,QAE7EC,GAAMC,SAAS,CACX1I,KVvEsB,qBUwEtBC,QAASgB,GAAasH,iBAAiB,GAAGC,WAdvC,GAmBE,SAACpH,GACV0D,GAAe1D,EAEf4F,GAAa,CAACS,OAAO,EAAMD,OAAO,IAAQ,SAACX,IACvC7B,GAAc6B,GAEF0B,iBAAiB,GAAGC,SAAU,EAE1C3D,GAAuB,IAAIU,GAAMY,IALiB,qBAO9BU,EAAO8B,aAPuB,IAOlD,2BAAwC,CAAC,IAA9BC,EAA6B,QACpC/D,GAAqBgE,SAASD,EAAO/B,IARS,8BAWlDhC,GAAqBiE,eAAiBpB,GAEtC7C,GAAqBkE,YAAY7C,IAAsBmB,MAAK,SAACW,GACzDnD,GAAqBmE,oBAAoBhB,GA5DzD,SAAqB9G,EAAO8G,GACxB,GAAG9G,EAAO,OAAO+G,QAAQC,IAAIhH,GAE7B2G,GAAiBoB,iBAAiB,CAAC7H,OAAQ0D,GAAcsD,SAAUJ,EAAMkB,MA2D7DC,CAAY,KAAMnB,UAtCnB,eA0CgB,IAAhB5G,EAAe,EAAfA,OAAQgI,EAAO,EAAPA,KACZvE,KACCA,GAAqBwE,QACrBxE,IAAuB,GAGxBC,KACC+C,GAAiByB,UAAU,CAAClI,SAAQgI,SACpCtE,IAAe,GAGhBE,KACCA,GAAY2D,YAAYY,SAAQ,SAASX,GACrCA,EAAMY,UAEVxE,IAAc,GAGf/D,KACCA,GAAa0H,YAAYY,SAAQ,SAASX,GACtCA,EAAMY,UAEVvI,IAAe,GAGhBgE,KACCA,GAAauE,OACbvE,IAAe,GAGnBwD,GAAMC,SAAS,CACX1I,KVpI2B,0BUqI3BC,SAAS,IAGbwI,GAAMC,SAAS,CACX1I,KVxIsB,qBUyItBC,SAAS,KA/EN,GAkFS,SAAC0H,GACjB,GAAGA,EAAEC,UACD,IAAI6B,EAAOC,aAAY,WAChB7E,KACC8E,cAAcF,GACd5E,GAAqB+E,gBAAgBjC,MAE1C,MAzFA,GA4FM,SAACkC,GACd,IAAIC,EAAS,IAAInE,GAAsB,CACnC3F,KAAM,SACNkJ,IAAKW,IAGThF,GAAqBkF,qBAAqBD,GAE1C,IAR4B,EAQxBjD,EAAS,IAAImD,YARW,eAUPnF,GAAqBoF,gBAVd,IAU5B,2BAA0D,CAAC,IAAhDC,EAA+C,QACtDrD,EAAOgC,SAASqB,EAAOtB,QAXC,8BAc5B3H,GAAe4F,EAEf4B,GAAMC,SAAS,CACX1I,KV1N2B,0BU2N3BC,QAAS4G,KAGb5B,GAAekF,KAAKnF,GAAa,KAEpBoF,GAAG,YAAY,WACxBvC,GAAiBwC,iBAAiB,CAACjJ,OAAQ0D,QAG/CG,GAAamF,GAAG,oBAAoB,WAChCvC,GAAiByC,qBAAqB,CAAClJ,OAAQ0D,SAxH5C,GA4HL,SAACzD,GAA4B,IAApBkJ,EAAmB,wDAC9BxF,GAAe1D,EAEf2F,GAAa,CAACS,OAAO,EAAMD,OAAO,IAAO,SAACX,IACtC7B,GAAc6B,GAEC2D,iBAAiB,KAC5BxF,GAAYwF,iBAAiB,GAAGhC,SAAU,GAE9C3D,GAAuB,IAAIU,GAAMgB,IANgB,qBAQ7BM,EAAO8B,aARsB,IAQjD,2BAAwC,CAAC,IAA9BC,EAA6B,QACpC/D,GAAqBgE,SAASD,EAAO/B,IATQ,8BAYjDhC,GAAqBiE,eAAiBT,GAEnCkC,GACC1F,GAAqBkE,YAAYlD,IAAsBwB,MAAK,SAACW,GACzDnD,GAAqBmE,oBAAoBhB,GACzCD,GAAY,KAAMC,EAAO,YAGjCS,GAAMC,SAAS,CACX1I,KV/MuB,0BUgNvBC,SAAS,QArJV,GA0JD,WAUN,GATG4E,KACCA,GAAqBwE,QACrBxE,IAAuB,GAGxBE,KACCA,IAAe,GAGhBC,GAAa,CAAC,IAAD,iBACQA,GAAY2D,aADpB,IACZ,2BAA6C,SACnCa,QAFE,8BAKZxE,IAAc,EAGlB,GAAG/D,GAAc,CAAC,IAAD,iBACOA,GAAa0H,aADpB,IACb,2BAA8C,SACpCa,QAFG,8BAIbvI,IAAe,EACfwH,GAAMC,SAAS,CACX1I,KVtOsB,yBUuOtBC,SAAS,IAIjBwI,GAAMC,SAAS,CACX1I,KV5O0B,yBU6O1BC,SAAS,IAGbwI,GAAMC,SAAS,CACX1I,KVxP2B,0BUyP3BC,SAAS,IAGbwI,GAAMC,SAAS,CACX1I,KV5PsB,qBU6PtBC,SAAS,IAGbwI,GAAMC,SAAS,CACX1I,KVhQuB,sBUiQvBC,SAAS,IAGbwI,GAAMC,SAAS,CACX1I,KV/PkB,iBUgQlBC,QAAS,WA7MN,GAiNO,WACX+E,IACIA,GAAYwF,iBAAiB,KAC5BxF,GAAYwF,iBAAiB,GAAGhC,SAAWxD,GAAYwF,iBAAiB,GAAGhC,QAC3EC,GAAMC,SAAS,CACX1I,KV/Qe,sBUgRfC,QAAS+E,GAAYwF,iBAAiB,GAAGhC,UAG7CX,GAAiB4C,iBAAiB1F,GAAcC,GAAYwF,iBAAiB,GAAGhC,QAAU,QAAU,WA1NrG,GA+NK,YAAwB,IAAtBJ,EAAqB,EAArBA,SAAUlG,EAAW,EAAXA,MACpBuH,EAAOC,aAAY,WAChB7E,KACC8E,cAAcF,GACd5E,GAAqBkF,qBAAqB3B,GAE1CvD,GAAqB6F,aAAa7E,IAAsBwB,MAAK,SAACyC,GAC1DjF,GAAqBmE,oBAAoBc,GACzCjC,GAAiB8C,kBAAkB,CAACtJ,OAAQ0D,GAAc6F,UAAWd,IAErE,IAAIjD,EAAS,IAAImD,YAEjB,GAAG/I,GAAc,CAAC,IAAD,iBACOA,GAAa0H,aADpB,IACb,2BAA8C,SACpCa,QAFG,8BAIbvI,IAAe,EAVkD,qBAahD4D,GAAqBoF,gBAb2B,IAarE,2BAA0D,CAAC,IAAhDC,EAA+C,QACtDrD,EAAOgC,SAASqB,EAAOtB,QAd0C,8BAiBrE3H,GAAe4F,EAEf4B,GAAMC,SAAS,CACX1I,KV7Sc,yBU8SdC,QAAS4G,IAEb4B,GAAMC,SAAS,CACX1I,KVhTM,iBUiTNC,QAASiC,UAItB,MAlQI,GAqQM,SAAC4H,GACd,IAAIL,EAAOC,aAAY,WACnB,GAAG7E,GAAsB,CACrB8E,cAAcF,GACd5E,GAAqBkF,qBAAqBD,GAE1C,IAAIjD,EAAS,IAAImD,YAEjB,GAAG/I,GAAc,CAAC,IAAD,iBACOA,GAAa0H,aADpB,IACb,2BAA8C,SACpCa,QAFG,8BAIbvI,IAAe,EAVE,qBAaA4D,GAAqBoF,gBAbrB,IAarB,2BAA0D,CAAC,IAAhDC,EAA+C,QACtDrD,EAAOgC,SAASqB,EAAOtB,QAdN,8BAiBrB3H,GAAe4F,EAEf4B,GAAMC,SAAS,CACX1I,KV/UkB,yBUgVlBC,QAASgB,QAGlB,MA/RI,GAkSS,SAAC2G,GACjB,GAAGA,EACC,IAAI6B,EAAOC,aAAY,WAChB7E,KACC8E,cAAcF,GACd5E,GAAqB+E,gBAAgBhC,MAE1C,MCjbFiD,GAAS,8BC4ClBC,GAAS,KACTC,IAAa,EAEF,IACXC,KAAM,SAACC,IACHH,GAASI,KAAGL,GAAQ,CAACM,WAAY,CAAC,YAAa,UAAW,kBACnDf,GAAG,WAAW,WACjBU,GAAOM,KAAK,OAAQH,GAEpBI,MAAM,GAAD,OAAIR,GAAJ,mBAA6B,CAC9BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhC5D,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAAmB,IAAjBuE,EAAgB,EAAhBA,KAAMnI,EAAU,EAAVA,KACPmI,GACCP,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQoC,EAAKuI,SAAStL,QAG7B2G,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAwB,EAAlByD,aACVmF,GAAMC,SAAS,CACX1I,KZIC,gBYHDC,QAAS,CAACJ,OAAMN,OAAQ,uBAO5CuL,GAAOV,GAAG,cAAc,SAAA3J,GACpBgI,GAAMC,SAAS,CACX1I,KZhFS,YYiFTC,QAASQ,OAIjBqK,GAAOV,GAAG,YAAY,SAAA3J,GAClBgI,GAAMC,SAAS,CACX1I,KZ9De,kBY+DfC,QAASQ,OAIjBqK,GAAOV,GAAG,cAAc,SAAA3J,GACpBgI,GAAMC,SAAS,CACX1I,KZpEkB,qBYqElBC,QAASQ,OAIjBqK,GAAOV,GAAG,cAAc,SAAAhJ,GACpBqH,GAAMC,SAAS,CACX1I,KZ1EiB,oBY2EjBC,QAASmB,OAIjB0J,GAAOV,GAAG,YAAY,YAAqB,IAAnBhJ,EAAkB,EAAlBA,OAAQvB,EAAU,EAAVA,KAC5B4I,GAAMC,SAAS,CACX1I,KZvGoB,uBYwGpBC,QAAS,CAACmB,SAAQvB,aAI1BiL,GAAOV,GAAG,cAAc,SAACvK,GACrB4I,GAAMC,SAAS,CACX1I,KZ9FuB,0BY+FvBC,QAASJ,OAIjBiL,GAAOV,GAAG,aAAa,YAAuB,IAArBhJ,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC7BoH,GAAMC,SAAS,CACX1I,KZpHqB,wBYqHrBC,QAAS,CAACmB,SAAQC,eAI1ByJ,GAAOV,GAAG,eAAe,SAAC/I,GACtBoH,GAAMC,SAAS,CACX1I,KZ3GwB,2BY4GxBC,QAASoB,OAIjByJ,GAAOV,GAAG,mBAAmB,SAAC5I,GAC1BiH,GAAMC,SAAS,CACX1I,KZjIiB,oBYkIjBC,QAASuB,IAGViH,GAAMwD,WAAW1L,MAAMF,WAAWS,OAAOa,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQ3B,KAAKa,QACzE+H,GAAMC,SAAS,CACX1I,KZ9Hc,qBY+HdC,QAASuB,EAAQ3B,KAAKa,SAKlCoK,GAAOV,GAAG,qBAAqB,SAACpH,GAC5ByF,GAAMC,SAAS,CACX1I,KZzIoB,uBY0IpBC,QAAS+C,OAIjB8H,GAAOV,GAAG,oBAAoB,SAAAhJ,GACvBqH,GAAMwD,WAAW1L,MAAMF,YAAcoI,GAAMwD,WAAW1L,MAAMF,WAAWK,MAAQU,GAC9EqH,GAAMC,SAAS,CACX1I,KZnJc,qBYoJdC,QAASwI,GAAMwD,WAAWpM,KAAKa,SAI3CoK,GAAOV,GAAG,mBAAmB,SAAA5I,GACzBiH,GAAMC,SAAS,CACX1I,KZ3JkB,qBY4JlBC,QAASuB,OAIjBsJ,GAAOV,GAAG,cAAc,SAAAvK,GAChB4I,GAAMwD,WAAW1L,MAAMF,WAAWS,OAAOa,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQb,EAAKa,SAClE+H,GAAMC,SAAS,CACX1I,KZ9JW,kBY+JXC,QAASJ,IAGbqM,YAAW,WACPzD,GAAMC,SAAS,CACX1I,KZnKU,qBYoKVC,QAASJ,EAAKa,QAEnB,UAIXoK,GAAOV,GAAG,iBAAiB,SAAAQ,GACvBuB,GAAiCvB,MAGrCE,GAAOV,GAAG,sBAAsB,SAAAxC,GAC5BuE,GAAoCvE,MAGxCkD,GAAOV,GAAG,gBAAgB,SAAA/I,GACtBoH,GAAMC,SAAS,CACX1I,KZhLyB,4BYiLzBC,QAAS,CAACoB,SAAQS,UAAU,QAIpCgJ,GAAOV,GAAG,oBAAoB,SAAA/I,GAC1BoH,GAAMC,SAAS,CACX1I,KZvLyB,4BYwLzBC,QAAS,CAACoB,SAAQS,UAAU,QAIpCgJ,GAAOV,GAAG,qBAAqB,YAAyB,IAAvB5I,EAAsB,EAAtBA,QAAS4K,EAAa,EAAbA,QAQtC,GAPG3D,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKa,MAAQc,EAAQ3B,KAAKa,QAAQ+H,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKa,MAAQc,EAAQ3B,KAAKa,OAAKuC,QAC1JwF,GAAMC,SAAS,CACX1I,KZ9Ka,oBY+KbC,QAAS,CAACoB,OAAQG,EAAQ3B,KAAKa,IAAKuC,QAAQ,KAIjDwF,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQc,YAAW,CACvE,IAAID,GAAc,EAGdb,EAAQ3B,KAAKa,MAAQ+H,GAAMwD,WAAWpM,KAAKa,KAC1C+H,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQc,YAAUE,SAExEH,GAAc,GAGlBoG,GAAMC,SAAS,CACX1I,KZnMe,sBYoMfC,QAAS,CAACuB,UAASc,SAAUd,EAAQc,SAAUE,OAAQhB,EAAQ3B,KAAKa,MAAQ+H,GAAMwD,WAAWpM,KAAKa,IAAK2B,sBAG3GgJ,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQ+K,MAGf/E,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KACAyB,GADwB,EAAlBgC,aACG,CACTf,YAAaf,EACbd,IAAKc,EAAQc,SACbnB,MAAO,CAACsH,GAAMwD,WAAWpM,KAAMA,GAC/BA,KAAMA,EACNO,QAAQ,EACR6C,QAAQ,EACRT,OAAQ,EACRjB,SAAU,KAEdkH,GAAMC,SAAS,CACX1I,KZhOG,cYiOHC,QAASqB,UAMzBwJ,GAAOV,GAAG,oBAAoB,SAAA5G,GACvBiF,GAAMwD,WAAW1I,cAAcnD,OAC9BqI,GAAMC,SAAS,CACX1I,KZ1Ma,oBY2MbC,QAASuD,IAGbiF,GAAMC,SAAS,CACX1I,KZ7MqB,4BY8MrBC,QAASwI,GAAMwD,WAAW1I,cAAcf,OAAO,OAI3DsI,GAAOV,GAAG,oBAAoB,SAAAiC,GAC1B5D,GAAMC,SAAS,CACX1I,KZrNkB,qBYsNlBC,QAASoM,OAIjBvB,GAAOV,GAAG,sBAAsB,YAAiB,IAAfiC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KAC9B9J,EAASiG,GAAMwD,WAAW1I,cAAcf,OAExC8J,GACA9J,IAEJiG,GAAMC,SAAS,CACX1I,KZhOyB,4BYiOzBC,QAASuC,IAGbiG,GAAMC,SAAS,CACX1I,KZpOoB,uBYqOpBC,QAASoM,OAIjBvB,GAAOV,GAAG,sBAAsB,YAAyB,IAAvB9H,EAAsB,EAAtBA,SAAUjB,EAAY,EAAZA,OACxCoH,GAAMC,SAAS,CACX1I,KZ1QqB,wBY2QrBC,QAAS,CAACqC,WAAUjB,SAAQmB,OAAQnB,IAAWoH,GAAMwD,WAAWpM,KAAKa,IAAK2B,YAAahB,IAAWoH,GAAMwD,WAAWpM,KAAKa,UAIhIoK,GAAOV,GAAG,qBAAqB,YAA0B,IAGjDrH,EAHyBvB,EAAuB,EAAvBA,QAASc,EAAc,EAAdA,SAClCiK,EAAO9D,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ4B,KAAUC,YAItEQ,IADDwJ,GACY/K,EAAQd,MAAQ6L,EAAK7L,IAIpC+H,GAAMC,SAAS,CACX1I,KZtRoB,uBYuRpBC,QAAS,CAACuB,UAASc,WAAUS,iBAIrC+H,GAAOV,GAAG,uBAAuB,YAA+D,IAA7DpH,EAA4D,EAA5DA,WAAYV,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,OAAQH,EAAiB,EAAjBA,YAC1E4F,QAAQC,IAAI7F,GACZoG,GAAMC,SAAS,CACX1I,KZ7RsB,yBY8RtBC,QAAS,CAACqC,WAAUU,aAAYT,cAAaC,SAAQH,oBAI7DyI,GAAOV,GAAG,gBAAgB,SAAA/I,GACnBoH,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKa,MAAQW,OACzDoH,GAAMC,SAAS,CACX1I,KZvSa,oBYwSbC,QAAS,CAACoB,SAAQ4B,QAAQ,KAG9BiJ,YAAW,WACPzD,GAAMC,SAAS,CACX1I,KZ7SS,oBY8STC,QAAS,CAACoB,SAAQ4B,QAAQ,OAE/B,UAIX6H,GAAOV,GAAG,qBAAqB,YAA6B,IAA3B/I,EAA0B,EAA1BA,OAAQiC,EAAkB,EAAlBA,aACrCmF,GAAMC,SAAS,CACX1I,KZ1SuB,0BY2SvBC,QAAS,CAACoB,SAAQiC,kBAGnBmF,GAAMwD,WAAW9K,MAAMkC,QAAQjD,QAC9BqI,GAAMC,SAAS,CACX1I,KZzSgB,uBY0ShBC,QAAS,CAACoB,YAIfoH,GAAMwD,WAAW9K,MAAMiC,UAAUhD,SAC7BqI,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDoH,GAAMC,SAAS,CACX1I,KZ/SW,sBYgTXC,QAAS,CAACJ,KAAM4I,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEgK,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQA,MAGfgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAMyD,EAAkB,EAAlBA,aACVzD,EAAKyD,aAAeA,EACpBmF,GAAMC,SAAS,CACX1I,KZ7UH,YY8UGC,QAASJ,IAEb4I,GAAMC,SAAS,CACX1I,KZtUO,sBYuUPC,QAAS,CAACJ,iBAO9BiL,GAAOV,GAAG,oBAAoB,YAA6B,IAA3B/I,EAA0B,EAA1BA,OAAQiC,EAAkB,EAAlBA,aACpCmF,GAAMC,SAAS,CACX1I,KZzVuB,0BY0VvBC,QAAS,CAACoB,SAAQiC,kBAGnBmF,GAAMwD,WAAW9K,MAAMkC,QAAQjD,QAC9BqI,GAAMC,SAAS,CACX1I,KZxVgB,uBYyVhBC,QAAS,CAACoB,YAIfoH,GAAMwD,WAAW9K,MAAMgC,QAAQ/C,SAC3BqI,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDoH,GAAMC,SAAS,CACX1I,KZ/VS,oBYgWTC,QAAS,CAACJ,KAAM4I,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEgK,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQA,MAGfgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAMyD,EAAkB,EAAlBA,aACVzD,EAAKyD,aAAeA,EACpBmF,GAAMC,SAAS,CACX1I,KZ5XH,YY6XGC,QAASJ,IAEb4I,GAAMC,SAAS,CACX1I,KZtXK,oBYuXLC,QAAS,CAACJ,iBAO9BiL,GAAOV,GAAG,oBAAoB,YAA6B,IAA3B/I,EAA0B,EAA1BA,OAAQiC,EAAkB,EAAlBA,aACpCmF,GAAMC,SAAS,CACX1I,KZxYuB,0BYyYvBC,QAAS,CAACoB,SAAQiC,kBAGnBmF,GAAMwD,WAAW9K,MAAMgC,QAAQ/C,QACV,IAAjBkD,IACCmF,GAAMC,SAAS,CACX1I,KZ1YY,uBY2YZC,QAAS,CAACoB,YAGXoH,GAAMwD,WAAW9K,MAAMiC,UAAUhD,SAC7BqI,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDoH,GAAMC,SAAS,CACX1I,KZ5YC,oBY6YDC,QAAS,CAACJ,KAAM4I,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEgK,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQA,MAGfgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAMyD,EAAkB,EAAlBA,aACVzD,EAAKyD,aAAeA,EACpBmF,GAAMC,SAAS,CACX1I,KZ3aX,YY4aWC,QAASJ,IAEb4I,GAAMC,SAAS,CACX1I,KZnaH,oBYoaGC,QAAS,CAACJ,eAQ/B4I,GAAMwD,WAAW9K,MAAMkC,QAAQjD,QAA2B,IAAjBkD,GACxCmF,GAAMC,SAAS,CACX1I,KZjbgB,uBYkbhBC,QAAS,CAACoB,YAIfoH,GAAMwD,WAAW9K,MAAMiC,UAAUhD,QAA2B,IAAjBkD,GAC1CmF,GAAMC,SAAS,CACX1I,KZzbkB,yBY0blBC,QAAS,CAACoB,eAKtByJ,GAAOV,GAAG,gBAAgB,SAAA/I,GACtBgK,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQA,MAGfgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAwB,EAAlByD,aACVmF,GAAMC,SAAS,CACX1I,KZ3bS,gBY4bTC,QAAS,CAACJ,OAAMN,OAAQ,oBAKpCuL,GAAOV,GAAG,sBAAsB,SAAA/I,GACzBoH,GAAMwD,WAAWxI,KAAK5D,MAAQ4I,GAAMwD,WAAWxI,KAAK5D,KAAKa,MAAQW,IAChEoH,GAAMC,SAAS,CACX1I,KZncW,kBYocXC,QAAS,WAEbkM,GAAsB9K,GAAQ,OAItCyJ,GAAOV,GAAG,sBAAsB,SAAAxC,GACzBa,GAAMwD,WAAWxI,KAAK5D,MACrBsM,GAAoCvE,MAI5CkD,GAAOV,GAAG,gBAAgB,SAAA/I,GACnBoH,GAAMwD,WAAWxI,KAAK5D,MAAQ4I,GAAMwD,WAAWxI,KAAK5D,KAAKa,MAAQW,IAC5B,cAAjCoH,GAAMwD,WAAWxI,KAAKlE,QACrBkJ,GAAMC,SAAS,CACX1I,KZpdO,kBYqdPC,QAAS,aAGmB,aAAjCwI,GAAMwD,WAAWxI,KAAKlE,QACrBkJ,GAAMC,SAAS,CACX1I,KZ3dK,gBY4dLC,QAAS,CAACJ,MAAM,EAAON,OAAQ,UAGH,WAAjCkJ,GAAMwD,WAAWxI,KAAKlE,SACrBkJ,GAAMC,SAAS,CACX1I,KZjeK,gBYkeLC,QAAS,CAACJ,MAAM,EAAON,OAAQ,UAGnC4M,UAKZrB,GAAOV,GAAG,gBAAgB,YAAwB,IAAtBhC,EAAqB,EAArBA,SAAUlG,EAAW,EAAXA,MAC/BuG,GAAMwD,WAAWxI,KAAK5D,MACrBsM,GAAgC,CAAC/D,WAAUlG,aAInD4I,GAAOV,GAAG,iBAAiB,SAAAlB,GACpBT,GAAMwD,WAAWxI,KAAK5D,MACrBsM,GAAiCjD,MAIzC4B,GAAOV,GAAG,oBAAoB,YAAsB,IAApB/I,EAAmB,EAAnBA,OAAQa,EAAW,EAAXA,MACjCuG,GAAMwD,WAAWxI,KAAK5D,MAAQ4I,GAAMwD,WAAWxI,KAAK5D,KAAKa,MAAQW,GAChEoH,GAAMC,SAAS,CACX1I,KZtfU,iBYufVC,QAASiC,QAKzBsK,YAAa,WACT,OAAO1B,GAAOuB,IAElBI,SAAU,SAAArD,GACH2B,IACCD,GAAOM,KAAK,YAAahC,GAE7B0B,GAAOM,KAAK,WAAYhC,GACxB2B,GAAa3B,GAEjBsD,WAAY,YAAmB,IAAjBjM,EAAgB,EAAhBA,KAAM2I,EAAU,EAAVA,KAChB0B,GAAOM,KAAK,aAAc,CAAC3K,OAAM2I,UAErCuD,SAAU,YAAqB,IAAnBvL,EAAkB,EAAlBA,OAAQgI,EAAU,EAAVA,KAChB0B,GAAOM,KAAK,WAAY,CAAChK,SAAQgI,OAAM/H,OAAQoH,GAAMwD,WAAWpM,KAAKa,OAEzE4I,UAAW,YAAqB,IAAnBlI,EAAkB,EAAlBA,OAAQgI,EAAU,EAAVA,KACjB0B,GAAOM,KAAK,YAAa,CAAChK,SAAQgI,UAEtCwD,gBAAiB,YAAwB,IAAtBxL,EAAqB,EAArBA,OAAQI,EAAa,EAAbA,QACvBsJ,GAAOM,KAAK,kBAAmB,CAAChK,SAAQI,aAE5CqL,WAAY,SAACzL,GACT0J,GAAOM,KAAK,aAAchK,IAI9B0G,qBAAsB,YAA0B,IAAxB1G,EAAuB,EAAvBA,OAAQwG,EAAe,EAAfA,UAC5BkD,GAAOM,KAAK,mBAAoB,CAAChK,SAAQwG,eAE7CqB,iBAAkB,YAAyB,IAAvB7H,EAAsB,EAAtBA,OAAQgH,EAAc,EAAdA,SACxB0C,GAAOM,KAAK,eAAgB,CAAChK,SAAQgH,cAEzCiC,iBAAkB,YAAe,IAAbjJ,EAAY,EAAZA,OAChB0J,GAAOM,KAAK,eAAgBhK,IAEhCkJ,qBAAsB,YAAe,IAAblJ,EAAY,EAAZA,OACpB0J,GAAOM,KAAK,mBAAoBhK,IAEpC0L,aAAc,SAACV,EAAS/K,GACpByJ,GAAOM,KAAK,eAAgB,CAACgB,UAAS/K,YAI1C8G,iBAAkB,YAAgC,IAA9B9G,EAA6B,EAA7BA,OAAQ+G,EAAqB,EAArBA,SAAUlG,EAAW,EAAXA,MAClC4I,GAAOM,KAAK,eAAgB,CAAC/J,SAAQ+G,WAAUlG,WAEnDyI,kBAAmB,YAA0B,IAAxBtJ,EAAuB,EAAvBA,OAAQuJ,EAAe,EAAfA,UACzBE,GAAOM,KAAK,gBAAiB,CAAC/J,SAAQuJ,eAE1CtC,qBAAsB,YAA0B,IAAxBjH,EAAuB,EAAvBA,OAAQuG,EAAe,EAAfA,UAC5BkD,GAAOM,KAAK,mBAAoB,CAAC/J,SAAQuG,eAE7C6C,iBAAkB,SAACpJ,EAAQa,GACvB4I,GAAOM,KAAK,mBAAoB,CAAC/J,SAAQa,Y,SClnBpC6K,GAAa,SAAC9B,GAAD,OAAc,SAACvC,GACrC2C,MAAM,GAAD,OAAIR,GAAJ,uBAAiC,CAClCS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhC5D,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAClF,GACH,IADgB,IAAD,WACNsC,GACL,IAAIuI,EAAcvE,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQyB,EAAQsC,GAAG/D,OAE/EsM,EACC7K,EAAQsC,GAAKuI,GAEb7K,EAAQsC,GAAG5E,KAAOsC,EAAQsC,GAAGtD,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ+H,GAAMwD,WAAWpM,KAAKa,OAE/EyB,EAAQsC,GAAG5E,OACXsC,EAAQsC,GAAG5E,KAAOsC,EAAQsC,GAAGtD,MAAM,IAEvCgB,EAAQsC,GAAG3D,OAAS,KAXnB2D,EAAI,EAAGA,EAAItC,EAAQuC,OAAQD,IAAM,EAAjCA,GAeTiE,EAAS,CACL1I,KbVe,caWfC,QAASkC,SAKR8K,GAAY,SAAC5L,EAAQ4J,GAAT,OAAsB,SAACvC,GAC5C2C,MAAM,GAAD,OAAIR,GAAJ,mBAA6B,CAC9BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,aAGPgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAAyB,IAAvB/F,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACRD,EAAOJ,MA0BPwH,EAAS,CACL1I,KbxDW,cayDXC,QARS,CACTG,QAAQ,EACR8M,YAAY,EACZrN,KAAM,CAACa,IAAKW,OAtBhBC,EAAOzB,KAAOyB,EAAOH,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ+H,GAAMwD,WAAWpM,KAAKa,OAEvEY,EAAOzB,OACPyB,EAAOzB,KAAOyB,EAAOH,MAAM,IAE/BG,EAAO2B,QAAS,EAEhB3B,EAAOlB,QAAS,EAEhBkB,EAAOC,SAAWA,EAAS4L,UAC3B7L,EAAOiB,aAAc,EACrBjB,EAAOP,QAA8B,KAApBQ,EAASmD,OAC1BpD,EAAON,WAAY,EAEnB0H,EAAS,CACL1I,Kb7CW,ca8CXC,QAASqB,UAiBZ8L,GAAa,SAAC/L,EAAQ4J,GAAT,OAAsB,SAACvC,GAC7C2C,MAAM,GAAD,OAAIR,GAAJ,mBAA6B,CAC9BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,aAGPgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAAyB,IAAvB/F,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACZD,EAAOC,SAAWA,EAAS4L,UAE3BzE,EAAS,CACL1I,Kb3EgB,ea4EhBC,QAAS,CAACqC,SAAUhB,EAAOZ,IAAKa,SAAUD,EAAOC,SAAUR,QAA6B,KAApBQ,EAASmD,eAK5E2I,GAAe,SAAChM,EAAQ4J,GAAT,OAAsB,SAACvC,GAC/C2C,MAAM,GAAD,OAAIR,GAAJ,wBAAkC,CACnCS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,aAGPgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAAyB,IAAvB/H,EAAsB,EAAtBA,OAAQwD,EAAc,EAAdA,SACZ4F,EAAS,CACL1I,Kb1FyB,wBa2FzBC,QAAS,CAACoB,SAAQ/B,SAAQwD,mBAKzBwK,GAAa,SAAC/L,GAAD,OAAc,SAACmH,GACrCA,EAAS,CACL1I,KbjG2B,sBakG3BC,QAASsB,MAIJgM,GAAc,SAAC/L,EAASyJ,GAAV,OAAuB,SAACvC,GAO/C,IANA,IAAI8E,EAAW,IAAIC,SACf/M,EAAMqD,GAAc,EAAG,KACvB2J,EAAS,GACTC,EAAQ,GACRC,EAAS,GAEJnJ,EAAI,EAAGA,EAAIjD,EAAQkM,OAAOhJ,OAAQD,IACvC+I,EAASK,OAAO,SAASpJ,EAAGjD,EAAQkM,OAAOjJ,GAAGqJ,MAC9CtM,EAAQkM,OAAOjJ,GAAGqJ,MAAO,EACzBJ,EAAOK,KAAKvM,EAAQkM,OAAOjJ,IAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAIjD,EAAQmM,MAAMjJ,OAAQD,IACtC+I,EAASK,OAAO,QAAQpJ,EAAGjD,EAAQmM,MAAMlJ,GAAGqJ,MAC5CtM,EAAQmM,MAAMlJ,GAAGqJ,MAAO,EACxBH,EAAMI,KAAKvM,EAAQmM,MAAMlJ,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAIjD,EAAQoM,OAAOlJ,OAAQD,IACvC+I,EAASK,OAAO,SAASpJ,EAAGjD,EAAQoM,OAAOnJ,GAAGqJ,MAC9CtM,EAAQoM,OAAOnJ,GAAGqJ,MAAO,EACzBF,EAAOG,KAAKvM,EAAQoM,OAAOnJ,IAG/B,IAAIuJ,EAAe,CACftN,MACAb,KAAM4I,GAAMwD,WAAWpM,KACvBoO,KAAMzM,EAAQyM,KACdP,SACAE,SACAD,QACA3M,WAAW,EACXV,SAAS,EACTuB,QAAQ,EACRqM,eAAgB1M,EAAQ0M,eACxBrL,UAAWD,KAAKuL,MAChBnO,KAAM,WAGV0I,EAAS,CACL1I,Kb1J2B,sBa2J3BC,QAAS,CAACuB,QAASwM,EAAc1L,SAAUd,EAAQc,YAGvD,IAAI4L,EAAiB,GAErB1M,EAAQ0M,eAAe1N,KAAI,SAAA4N,GACvBF,EAAeH,KAAKK,EAAE1N,QAG1Bc,EAAQ0M,eAAiBA,EACzB1M,EAAQ6M,SAAWxG,GAAiB2E,cAEpCgB,EAASK,OAAO,OAAQrM,EAAQyM,MAChCT,EAASK,OAAO,iBAAkBrM,EAAQ0M,gBAC1CV,EAASK,OAAO,WAAYrM,EAAQc,UACpCkL,EAASK,OAAO,SAAUrM,EAAQH,QAClCmM,EAASK,OAAO,WAAYhG,GAAiB2E,eAE7CnB,MAAM,GAAD,OAAIR,GAAJ,4BAAsC,CACnCS,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2B,IAETnG,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAiH,GACF,GAAGA,EAAWpN,MAOV,MANgC,aAA7BoN,EAAWC,OAAO,GAAGC,KACpBC,KAAMvN,MAAM,8BAA+B,CACvCwN,SAAUD,KAAME,SAASC,aAI1BlG,EAAS,CACZ1I,Kb9LiB,wBa+LjBC,QAAS,CAACS,MAAK4B,SAAUd,EAAQc,YAGzCoG,EAAS,CACL1I,KbpMuB,0BaqMvBC,QAAS,CAACS,MAAKe,OAAQ6M,EAAW5N,IAAK4B,SAAUd,EAAQc,eAGhEgF,OAAM,WACHoB,EAAS,CACL1I,KbzMqB,wBa0MrBC,QAAS,CAACS,MAAK4B,SAAUd,EAAQc,iBAKpCuM,GAAc,SAACrN,EAASyJ,GAAV,OAAuB,SAACvC,GAW/C,IAVA,IAAI8E,EAAW,IAAIC,SAEfC,EAAS,GACTC,EAAQ,GACRC,EAAS,GAETkB,EAAY,GACZC,EAAW,GACXC,EAAY,GAEPvK,EAAI,EAAGA,EAAIjD,EAAQkM,OAAOhJ,OAAQD,IACpCjD,EAAQkM,OAAOjJ,GAAGqJ,MACjBN,EAASK,OAAO,SAASpJ,EAAGjD,EAAQkM,OAAOjJ,GAAGqJ,MAE9CJ,EAAOK,KAAKvM,EAAQkM,OAAOjJ,KAE3BqK,EAAUf,KAAKvM,EAAQkM,OAAOjJ,GAAG4H,IAIzC,IAAK,IAAI5H,EAAI,EAAGA,EAAIjD,EAAQmM,MAAMjJ,OAAQD,IACnCjD,EAAQmM,MAAMlJ,GAAGqJ,MAChBN,EAASK,OAAO,QAAQpJ,EAAGjD,EAAQmM,MAAMlJ,GAAGqJ,MAE5CH,EAAMI,KAAKvM,EAAQmM,MAAMlJ,KAEzBsK,EAAShB,KAAKvM,EAAQmM,MAAMlJ,GAAG4H,IAIvC,IAAK,IAAI5H,EAAI,EAAGA,EAAIjD,EAAQoM,OAAOlJ,OAAQD,IACpCjD,EAAQoM,OAAOnJ,GAAGqJ,MACjBN,EAASK,OAAO,SAASpJ,EAAGjD,EAAQoM,OAAOnJ,GAAGqJ,MAE9CF,EAAOG,KAAKvM,EAAQoM,OAAOnJ,KAE3BuK,EAAUjB,KAAKvM,EAAQoM,OAAOnJ,GAAG4H,IAIzC,IAAI2B,EAAe,CACftN,IAAKc,EAAQd,IACbb,KAAM4I,GAAMwD,WAAWpM,KACvBoO,KAAMzM,EAAQyM,KACdP,OAAQlM,EAAQkM,OAChBE,OAAQpM,EAAQoM,OAChBD,MAAOnM,EAAQmM,MACf3M,WAAW,EACXV,SAAS,EACT4N,eAAgB1M,EAAQ0M,gBAGxB3B,EAAO9D,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQc,YAAUf,SAASkH,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQc,YAAUf,SAASmD,OAAO,GAElLgE,EAAS,CACL1I,KbnQ4B,uBaoQ5BC,QAAS,CACLuB,QAASwM,EACT1L,SAAUd,EAAQc,SAClBS,SAAUwJ,EAAK7L,MAAQc,EAAQd,OAIvC,IAAIwN,EAAiB,GAErB1M,EAAQ0M,eAAe1N,KAAI,SAAA4N,GACvBF,EAAeH,KAAKK,EAAE1N,QAG1Bc,EAAQ0M,eAAiBA,EACzB1M,EAAQ6M,SAAWxG,GAAiB2E,cAEpCgB,EAASK,OAAO,MAAOrM,EAAQd,KAC/B8M,EAASK,OAAO,OAAQrM,EAAQyM,MAChCT,EAASK,OAAO,iBAAkBrM,EAAQ0M,gBAC1CV,EAASK,OAAO,SAAUrM,EAAQH,QAClCmM,EAASK,OAAO,WAAYrM,EAAQc,UACpCkL,EAASK,OAAO,WAAYhG,GAAiB2E,eAC7CgB,EAASK,OAAO,YAAaiB,GAC7BtB,EAASK,OAAO,YAAamB,GAC7BxB,EAASK,OAAO,WAAYkB,GAE5B1D,MAAM,GAAD,OAAIR,GAAJ,4BAAsC,CACnCS,OAAQ,OACRC,QAAS,CACLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2B,IAETnG,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAiH,GACF,GAAGA,EAAWpN,MAMV,MALgC,aAA7BoN,EAAWC,OAAO,GAAGC,KACpBC,KAAMvN,MAAM,8BAA+B,CACvCwN,SAAUD,KAAME,SAASC,aAG1BlG,EAAS,CACZ1I,KblTiB,wBamTjBC,QAAS,CAACS,IAAKc,EAAQd,IAAK4B,SAAUd,EAAQc,YAGtDoG,EAAS,CACL1I,KbxTuB,0BayTvBC,QAAS,CAACS,IAAKc,EAAQd,IAAKe,OAAQD,EAAQd,IAAK4B,SAAUd,EAAQc,eAG1EgF,OAAM,WACHoB,EAAS,CACL1I,Kb7TqB,wBa8TrBC,QAAS,CAACS,IAAKc,EAAQd,IAAK4B,SAAUd,EAAQc,iBAKjD2M,GAAe,SAAC,EAA6BhE,GAA9B,IAAE3I,EAAF,EAAEA,SAAUjB,EAAZ,EAAYA,OAAQ+K,EAApB,EAAoBA,QAApB,OAA2C,SAAC1D,GACpE,IAAIuG,EAAexG,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAL,GAAM,OAAIA,EAAOZ,MAAQ4B,KAAUf,SAASV,QAAO,SAAAe,GAAC,OAAKA,EAAEC,QAAUD,EAAE/B,KAAKa,MAAQW,KAE7I6K,YAAW,WACF+C,EAAavK,QACdgE,EAAS,CACL1I,KbxUqB,wBayUrBC,QAAS,CAACqC,WAAUjB,OAAQ+K,EAAS5J,QAAQ,EAAMH,aAAa,OAGzE,KAEE4M,EAAavK,QACd2G,MAAM,GAAD,OAAIR,GAAJ,6BAAuC,CACpCS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBzJ,WACA8J,UACAiC,SAAUxG,GAAiB2E,kBAGlCnF,OACAC,OAAM,iBAMN4H,GAAmB,SAAC1N,EAASyJ,GAAV,OAAuB,SAACvC,GACpD,IAAIpG,EAAWd,EAAQc,SACnBkL,EAAW,IAAIC,SACfC,EAAS,GAETM,EAAe,CACftN,IAAKc,EAAQd,IACbb,KAAM4I,GAAMwD,WAAWpM,KACvBoO,KAAMzM,EAAQyM,KACdP,OAAQlM,EAAQkM,OAChBE,OAAQ,GACRD,MAAO,GACP3M,WAAW,EACXV,SAAS,EACT4N,eAAgB1M,EAAQ0M,eACxBrL,UAAWD,KAAKuL,MAChBnO,KAAM,WAGV0I,EAAS,CACL1I,KbnX8B,yBaoX9BC,QAAS,CAACqC,WAAUU,WAAY,CAACxB,EAAQd,KAAM6B,aAAa,KAGhEmG,EAAS,CACL1I,Kb/X2B,sBagY3BC,QAAS,CAACuB,QAASwM,EAAc1L,SAAUd,EAAQc,YAGvD,IAAK,IAAImC,EAAI,EAAGA,EAAIjD,EAAQkM,OAAOhJ,OAAQD,IACvC+I,EAASK,OAAO,SAASpJ,EAAGjD,EAAQkM,OAAOjJ,GAAGqJ,MAE9CJ,EAAOK,KAAKvM,EAAQkM,OAAOjJ,GAAGH,MAGlC,IAAI4J,EAAiB,GAErB1M,EAAQ0M,eAAe1N,KAAI,SAAA4N,GACvBF,EAAeH,KAAKK,EAAE1N,QAG1Bc,EAAQ0M,eAAiBA,EACzB1M,EAAQ6M,SAAWxG,GAAiB2E,cAEpCgB,EAASK,OAAO,OAAQrM,EAAQyM,MAChCT,EAASK,OAAO,iBAAkBrM,EAAQ0M,gBAC1CV,EAASK,OAAO,SAAUrM,EAAQH,QAClCmM,EAASK,OAAO,WAAYrM,EAAQc,UACpCkL,EAASK,OAAO,WAAYhG,GAAiB2E,eAE7CnB,MAAM,GAAD,OAAIR,GAAJ,4BAAsC,CACnCS,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2B,IAETnG,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAiH,GACF,GAAGA,EAAWpN,MACV,OAAOwH,EAAS,CACZ1I,KbnaiB,wBaoajBC,QAAS,CAACS,IAAKc,EAAQd,IAAK4B,SAAUd,EAAQc,YAGtDoG,EAAS,CACL1I,KbzauB,0Ba0avBC,QAAS,CAACS,IAAKc,EAAQd,IAAKe,OAAQ6M,EAAW5N,IAAK4B,SAAUd,EAAQc,eAG7EgF,OAAM,WACHoB,EAAS,CACL1I,Kb9aqB,wBa+arBC,QAAS,CAACS,IAAKc,EAAQd,IAAK4B,SAAUd,EAAQc,iBAKjD6M,GAAgB,SAAC,EAAqClE,GAAtC,IAAE3I,EAAF,EAAEA,SAAU8J,EAAZ,EAAYA,QAASgD,EAArB,EAAqBA,eAArB,OAAmD,SAAC1G,GAC7E,IAKInG,EALAS,EAAa,GACjBoM,EAAe5O,KAAI,SAAA4N,GACfpL,EAAW+K,KAAKK,EAAE1N,QAMlB6B,KADDkG,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ4B,OAAemG,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ4B,KAAUf,SAASmD,SAC7H+D,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ4B,KAAUf,SAASV,QAAO,SAAAe,GAAC,OAAKoB,EAAWrB,MAAK,SAAA0N,GAAC,OAAIA,IAAMzN,EAAElB,UAAM4O,MAI1I5G,EAAS,CACL1I,Kb7b8B,yBa8b9BC,QAAS,CAACqC,WAAUU,aAAYT,iBAGpC8I,MAAM,GAAD,OAAIR,GAAJ,8BAAwC,CACrCS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBzJ,WACA8J,UACApJ,aACAqL,SAAUxG,GAAiB2E,kBAGlCnF,OACAC,OAAM,iBAKFiI,GAAqB,SAAC7O,EAAK4B,GAAN,OAAmB,SAACoG,GAClD,IAEInG,EAFAS,EAAa,CAACtC,GAId6B,KADDkG,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ4B,OAAemG,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ4B,KAAUf,SAASmD,SAC7H+D,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ4B,KAAUf,SAASV,QAAO,SAAAe,GAAC,OAAKoB,EAAWrB,MAAK,SAAA0N,GAAC,OAAIA,IAAMzN,EAAElB,UAAM4O,MAI1I5G,EAAS,CACL1I,Kb/d8B,yBage9BC,QAAS,CAACqC,WAAUU,aAAYT,mBAI3BiN,GAAe,SAAC,EAAYvE,GAAb,IAAE3I,EAAF,EAAEA,SAAF,OAA0B,SAACoG,GACnD,IAAInG,EAAckG,GAAMwD,WAAW9J,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ4B,KAAUf,SAAS,GAE1FmH,EAAS,CACL1I,Kbve2B,sBawe3BC,QAASqC,IAGb+I,MAAM,GAAD,OAAIR,GAAJ,6BAAuC,CACpCS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBzJ,WACAmN,cAAelN,EAAY7B,QAGlC2G,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAA9F,GACFmH,EAAS,CACL1I,KbzfqB,wBa0frBC,QAAS,CAACqC,WAAWf,SAAUA,EAAS4L,UAAWpM,QAA8B,KAArBQ,EAASmD,aAG5E4C,OAAM,iB,kDCzgBAoI,G,uKAvBP,OACI,kBAAC,KAAD,CAAM7Q,MAAO,CAAC8Q,eAAgB,QAASC,GAAE,iBAAY9Q,KAAKC,MAAM0B,KAAKC,MACjE,kBAACmP,GAAA,EAAD,CAAQjR,UAAU,YAAY+B,MAAK,eAAU7B,KAAKC,MAAM0B,KAAKE,QACzD,kBAAC,EAAD,CAAQ9B,MAAO,CAACiR,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIvQ,SAAU,GAAIwQ,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAM0B,KAAKjB,MAAzB,MAAoCJ,KAAMN,KAAKC,MAAM0B,KAAKE,MAAMwP,OAAO,KAC7K,yBAAKtR,MAAO,CACRuR,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,2BAAIvR,KAAKC,MAAM0B,KAAKG,WAAa,kBAAC,KAAD,MAAqB,8BAAO9B,KAAKC,MAAM0B,KAAKE,QAC7E,yBAAK/B,UAAU,QAAQC,MAAO,CAACyR,SAAU,WACpCxR,KAAKC,MAAM0B,KAAKU,MAAMX,KAAI,SAACX,EAAM0Q,GAAP,OACvB,kBAAC,EAAD,CAAQC,IAAKD,EAAOvR,SAAQa,EAAKb,QAASa,EAAKb,OAAgBH,MAAO,CAACiR,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIvQ,SAAU,EAAGyQ,gBAAgB,OAAD,OAASrQ,EAAKL,MAAd,MAAyBJ,KAAMS,EAAKT,KAAKqR,MAAMN,OAAO,GAAGtQ,EAAKT,KAAKmN,KAAK4D,OAAO,gB,GAfnO1R,IAAMiB,W,gECZtB,SAASgR,GAAMC,GAClB,IAAIC,EAAO,IAAIhO,KAAK+N,GAEhBE,EAAQD,EAAKE,WACbC,EAAUH,EAAKI,aASnB,OAPkC,IAA9BD,EAAQE,WAAWvM,SACnBqM,EAAU,IAAMA,GAEY,IAA5BF,EAAMI,WAAWvM,SACjBmM,EAAQ,IAAMA,GAGXA,EAAQ,IAAME,EA6ClB,SAASG,GAAgBN,GAC5B,IAEIC,GAFAD,EAAO,IAAIhO,KAAKgO,IAEHE,WACbC,EAAUH,EAAKI,aAEc,GAA7BD,EAAQE,WAAWvM,SACnBqM,EAAU,IAAMA,GAEW,GAA3BF,EAAMI,WAAWvM,SACjBmM,EAAQ,IAAMA,IAGJ,IAAIjO,MAAQuO,UAAYP,EAAKO,UAA3C,IACIC,GAAW,IAAIxO,MAAOyO,UAAYT,EAAKS,UACvCC,GAAY,IAAI1O,MAAO2O,cAAgBX,EAAKW,cAC5CC,EAAOZ,EAAKW,cACZE,EAAQb,EAAKc,WAAW,EACxBC,EAAMf,EAAKS,UAEf,GAAIC,EAAY,EACZ,OACIE,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAaU,EAAIV,YA4B9C,OAPoB,GAAZG,GACCP,EAAQ,IAAOE,GAEH,IAAbK,GAAkB,aACJ,IAAdE,GAAmBK,EAAM,IAtBzB,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAUuCF,EAAM,GAM9C,SAASG,GAAWhB,GACvB,IAEIC,GAFAD,EAAO,IAAIhO,KAAKgO,IAEHE,WACbC,EAAUH,EAAKI,aAEc,GAA7BD,EAAQE,WAAWvM,SACnBqM,EAAU,IAAMA,GAEW,GAA3BF,EAAMI,WAAWvM,SACjBmM,EAAQ,IAAMA,GAGlB,IAAIgB,IAAU,IAAIjP,MAAQuO,UAAYP,EAAKO,WAAa,IACpDC,GAAW,IAAIxO,MAAOkP,SAAWlB,EAAKkB,SACnCC,GAAc,IAAInP,MAAO8O,WAAW,GAAMd,EAAKc,WAAW,GAC7DF,EAAOZ,EAAKW,cACZE,EAAQb,EAAKc,WAAW,EACxBC,EAAMf,EAAKS,UAEf,OAAIW,MAAMZ,IAAaA,EAAW,GAAKW,GAAc,EAE7CP,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAR,OAAyCJ,EAAQ,IAAOE,EAAUY,EAAIV,WAAJU,OAAqCd,EAAQ,IAAOE,GAOvH,GAAZK,KAEKS,EAAO,GAAM,WACVA,EAAO,KAAO,iBACdA,EAAO,MAAQ3N,KAAKE,MAAMyN,EAAO,IAAlB3N,gBACf2N,EAAO,MAAQ,cACfA,EAAO,OAAS3N,KAAKE,MAAMyN,EAAO,MAAlB3N,eAGZ,GAAZkN,GAAiB,gBAAiCP,EAAQ,IAAOE,GACjEK,EAAW,GAAKA,kBAA2DP,EAAQ,IAAOE,GAC1FK,EAAW,IAAMlN,KAAK+N,KAAKb,EAAW,GAArBlN,iBAA2E2M,EAAQ,IAAOE,E,wFClGxGmB,G,4MAhDXpS,MAAQ,CACJqS,QAAQ,EACRC,KAAM,EACNC,IAAK,G,6DAIL,IAGIA,EACAD,EAJAE,EAAU3N,SAAS4N,eAAezT,KAAKC,MAAMyT,MAC7CC,EAAOH,EAAQI,wBAIhB5T,KAAKC,MAAM4T,QACVN,EAAMI,EAAKpD,EAAIiD,EAAQM,aACvBR,EAAOK,EAAK7Q,IAGZyQ,EAAMI,EAAKpD,EACX+C,EAAOK,EAAK7Q,EAAE0Q,EAAQO,aAG1B/T,KAAKgU,SAAS,CAACV,OAAMC,QACrBvT,KAAKgU,SAAS,CAACX,QAASrT,KAAKgB,MAAMqS,W,0CAInCxN,SAAS4N,eAAezT,KAAKC,MAAMyT,MAAMO,iBAAiB,aAAcjU,KAAKkU,aAAaC,KAAKnU,OAC/F6F,SAAS4N,eAAezT,KAAKC,MAAMyT,MAAMO,iBAAiB,aAAcjU,KAAKkU,aAAaC,KAAKnU,S,6CAI/F6F,SAAS4N,eAAezT,KAAKC,MAAMyT,MAAMU,oBAAoB,aAAcpU,KAAKkU,aAAaC,KAAKnU,OAClG6F,SAAS4N,eAAezT,KAAKC,MAAMyT,MAAMU,oBAAoB,aAAcpU,KAAKkU,aAAaC,KAAKnU,S,+BAIlG,OACI,yBAAKD,MAAO,CAACuT,KAAMtT,KAAKgB,MAAMsS,KAAMC,IAAKvT,KAAKgB,MAAMuS,IAAKc,UAAWrU,KAAKC,MAAM4T,OAAS,OAAS,MAAO/T,UAAS,gCAA2BE,KAAKgB,MAAMqS,OAAS,SAAW,KACvK,yBAAKvT,UAAS,eACTE,KAAKC,MAAMqU,QAAQ5S,KAAI,SAACT,EAAQwQ,GAC7B,OAAOxQ,EAAS,kBAAC8P,GAAA,EAAD,CAAQW,IAAKD,EAAO8C,QAAS,WAAOtT,EAAOA,UAAWnB,UAAU,iBAAiBmB,EAAOkO,MAAiB,c,GAzCxHxP,IAAMiB,WCgBzB4T,G,4MACFxT,MAAQ,CACJyT,SAAUxP,GAAc,EAAG,M,uDAGrB,IAAD,OACL,OACI,kBAAC,KAAD,CAASlF,MAAO,CAAC8Q,eAAgB,QAAS0D,QAAS,SAAC1L,GAC7C,iBAAU,EAAK5I,MAAMc,KAAKa,OAAU,EAAK3B,MAAMyU,QAAQC,SAASC,UAC/D/L,EAAEgM,kBACP/U,UAAU,cAAcgR,GAAE,iBAAY9Q,KAAKC,MAAMc,KAAKa,MACrD,kBAACmP,GAAA,EAAD,CAAQjR,UAAS,eACb,kBAAC,EAAD,CACII,SAAQF,KAAKC,MAAMc,KAAKb,QAASF,KAAKC,MAAMc,KAAKb,OACjDM,OAAQR,KAAKC,MAAMc,KAAKP,OACxBT,MAAO,CAACiR,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIvQ,SAAU,GAAIwQ,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAMc,KAAKL,MAAzB,MAC9FJ,KAAMN,KAAKC,MAAMc,KAAKT,KAAKqR,MAAMN,OAAO,GAAKrR,KAAKC,MAAMc,KAAKT,KAAKmN,KAAK4D,OAAO,KAGlF,yBAAKtR,MAAO,CACRuR,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAEd,uBAAGzR,UAAU,aAAY,wCAAUE,KAAKC,MAAMc,KAAKT,KAAKqR,MAA/B,YAAwC3R,KAAKC,MAAMc,KAAKT,KAAKmN,SACpFzN,KAAKC,MAAMkE,QAAU,uBAAGrE,UAAU,gBAC/BE,KAAKC,MAAMwD,YAAY1C,KAAKa,MAAQ5B,KAAKC,MAAM6U,OAAOlT,KAAO,0BAAM7B,MAAO,CAACW,MAAO,YAArB,YAC7DV,KAAKC,MAAMwD,YAAY0L,MAAQ,0BAAMrP,UAAU,WAAWE,KAAKC,MAAMwD,YAAY0L,OAEhFnP,KAAKC,MAAMwD,YAAY0L,MACgB,IAAzCnP,KAAKC,MAAMwD,YAAYmL,OAAOhJ,QAC1B,oCAAE,0BAAO9F,UAAU,UAAUC,MAAO,CAACW,MAAO,YAAaV,KAAKC,MAAMwD,YAAYmL,OAAO,GAAGtO,QAG5FN,KAAKC,MAAMwD,YAAY0L,MACzBnP,KAAKC,MAAMwD,YAAYmL,OAAOhJ,OAAS,GACnC,oCAAE,0BAAO9F,UAAU,UAAUC,MAAO,CAACW,MAAO,YAA1C,iEAAmEV,KAAKC,MAAMwD,YAAYmL,OAAOhJ,OAAjG,OAGJ5F,KAAKC,MAAMwD,YAAY0L,OACxBnP,KAAKC,MAAMwD,YAAYmL,OAAOhJ,QACU,IAAzC5F,KAAKC,MAAMwD,YAAYqL,OAAOlJ,QAC1B,oCAAE,0BAAO9F,UAAU,UAAUC,MAAO,CAACW,MAAO,YAAaV,KAAKC,MAAMwD,YAAYqL,OAAO,GAAGxO,QAG5FN,KAAKC,MAAMwD,YAAY0L,OACxBnP,KAAKC,MAAMwD,YAAYmL,OAAOhJ,QAC/B5F,KAAKC,MAAMwD,YAAYqL,OAAOlJ,OAAS,GACnC,oCAAE,0BAAM9F,UAAU,UAAUC,MAAO,CAACW,MAAO,YAAzC,mCAA6DV,KAAKC,MAAMwD,YAAYqL,OAAOlJ,OAA3F,OAGJ5F,KAAKC,MAAMwD,YAAY0L,OACxBnP,KAAKC,MAAMwD,YAAYmL,OAAOhJ,SAC9B5F,KAAKC,MAAMwD,YAAYqL,OAAOlJ,QACS,IAAxC5F,KAAKC,MAAMwD,YAAYoL,MAAMjJ,QACzB,oCAAE,0BAAM9F,UAAU,UAAUC,MAAO,CAACW,MAAO,YAAaV,KAAKC,MAAMwD,YAAYoL,MAAM,GAAGvO,QAG1FN,KAAKC,MAAMwD,YAAY0L,OACxBnP,KAAKC,MAAMwD,YAAYmL,OAAOhJ,SAC9B5F,KAAKC,MAAMwD,YAAYqL,OAAOlJ,QAC/B5F,KAAKC,MAAMwD,YAAYoL,MAAMjJ,OAAS,GAClC,oCAAE,0BAAM9F,UAAU,UAAUC,MAAO,CAACW,MAAO,YAAzC,mCAA6DV,KAAKC,MAAMwD,YAAYoL,MAAMjJ,OAA1F,OAGJ5F,KAAKC,MAAMwD,YAAY0L,OACxBnP,KAAKC,MAAMwD,YAAYmL,OAAOhJ,SAC9B5F,KAAKC,MAAMwD,YAAYqL,OAAOlJ,SAC9B5F,KAAKC,MAAMwD,YAAYoL,MAAMjJ,UAC5B5F,KAAKC,MAAMwD,YAAY2L,eAAexJ,QACpC,oCAAE,0BAAM9F,UAAU,UAAUC,MAAO,CAACW,MAAO,YAAzC,wBAA2EV,KAAKC,MAAMwD,YAAY2L,eAAexJ,OAAjH,OAGT5F,KAAKC,MAAMkE,QAAU,uBAAGrE,UAAU,uBAAb,WAE1B,yBAAKA,UAAU,eACX,0BAAMA,UAAU,WAAWsS,GAAgBpS,KAAKC,MAAMwD,YAAYM,YAClE,kBAAC,sBAAD,CACJgR,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,KAClBjV,KAAKC,MAAMwD,YAAY1C,KAAKa,MAAQ5B,KAAKC,MAAM6U,OAAOlT,MAAQ5B,KAAKC,MAAMwD,YAAYjC,SAAWxB,KAAKC,MAAMwD,YAAYvB,WAAc,kBAAC,KAAD,CAAkBnC,MAAO,CAACmV,UAAW,EAAGvU,SAAU,GAAID,MAAO,aAClMV,KAAKC,MAAMwD,YAAY1C,KAAKa,MAAQ5B,KAAKC,MAAM6U,OAAOlT,MAAQ5B,KAAKC,MAAMwD,YAAYjC,UAAYxB,KAAKC,MAAMwD,YAAYvB,YAAclC,KAAKC,MAAMwD,YAAYV,QAAW,kBAAC,KAAD,CAAUhD,MAAO,CAACmV,UAAW,EAAGvU,SAAU,GAAID,MAAO,aAC7NV,KAAKC,MAAMwD,YAAY1C,KAAKa,MAAQ5B,KAAKC,MAAM6U,OAAOlT,MAAQ5B,KAAKC,MAAMwD,YAAYjC,UAAYxB,KAAKC,MAAMwD,YAAYvB,WAAalC,KAAKC,MAAMwD,YAAYV,QAAW,kBAAC,KAAD,CAAahD,MAAO,CAACmV,UAAW,EAAGvU,SAAU,GAAID,MAAO,aAC/NV,KAAKC,MAAMwD,YAAY1C,KAAKa,MAAQ5B,KAAKC,MAAM6U,OAAOlT,OAAS5B,KAAKC,MAAMyD,QAAW,0BAAM5D,UAAU,yBAAyBE,KAAKC,MAAMyD,QACzI1D,KAAKC,MAAMwD,YAAY1C,KAAKa,MAAQ5B,KAAKC,MAAM6U,OAAOlT,MAAQ5B,KAAKC,MAAMyD,QAAW,0BAAM3D,MAAO,CAACmR,OAAQ,MAC1GlR,KAAKC,MAAMwD,YAAY1C,KAAKa,MAAQ5B,KAAKC,MAAM6U,OAAOlT,MAAQ5B,KAAKC,MAAMwD,YAAYvB,WAAalC,KAAKC,MAAMwD,YAAYjC,SAAY,oCACnI,kBAAC,GAAD,CAAY8S,QAAS,CACjB,CAACnF,KAAM,QAASlO,OAAQ,WACpB,IAAIyB,EAAU,EAAKzC,MAAMwD,YACzBf,EAAQH,OAAS,EAAKtC,MAAMc,KAAKa,IACjCc,EAAQc,SAAW,EAAKvD,MAAMuD,SAC9B,EAAKvD,MAAMkV,eAAe/E,iBAAiB1N,EAAS,EAAKzC,MAAM6U,OAAO3I,YAE1E,CAACgD,KAAM,SAAUlO,OAAQ,WACrB,EAAKhB,MAAMkV,eAAe1E,mBAAmB,EAAKxQ,MAAMwD,YAAY7B,IAAK,EAAK3B,MAAMuD,aAEzFkQ,KAAM,yBAAyB1T,KAAKgB,MAAMyT,WAC7C,kBAAC,KAAD,CAAkB3U,UAAU,QAAQyN,GAAI,yBAAyBvN,KAAKgB,MAAMyT,SAAU1U,MAAO,CAACmV,UAAW,EAAGvU,SAAU,GAAID,MAAO,sB,GAnGpIf,IAAMiB,WAyHhBwU,oBAZS,SAAApU,GACpB,MAAO,CACH8T,OAAQ9T,EAAMD,SAItB,SAA4B6I,GACxB,MAAO,CACHuL,eAAgBE,YAAmBF,EAAgBvL,MAI5CwL,CAA6CE,aAAWd,K,qBC/GjEe,GAAYC,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,UACjBxB,SAAU,WACViE,OAAQ,GACR8B,MAAO,GACP,UAAW,CACPvE,gBAAiB,eAKXoE,CAAsBI,MAElCC,G,4MAGF7U,MAAQ,CACJ8U,YAAY,EACZC,UAAW,G,kEAIX/V,KAAKgW,QAAQC,cAAa,K,iCAQvBjW,KAAKgB,MAAM+U,UAAY/V,KAAKkW,cAAcC,eACtCnW,KAAKgB,MAAM8U,YACV9V,KAAKgU,SAAS,CAAC8B,YAAY,IAE3B9V,KAAKgB,MAAM8U,YACX9V,KAAKgU,SAAS,CAAC8B,YAAY,IAGnC9V,KAAKgU,SAAS,CAAC+B,UAAW/V,KAAKkW,cAAcC,mB,4CAG3BC,EAAWC,GAC7B,OAAGA,EAAUN,YAAc/V,KAAKgB,MAAM+U,Y,6CAQtC/V,KAAKgW,QAAQC,cAAa,K,+BAGpB,IC1EsBzC,ED0EvB,OACL,OACI,oCACI,yBAAK1T,UAAU,qCAAqCC,MAAO,CAACyR,SAAU,WAClE,wBAAI1R,UAAU,iBAAd,SAEA,kBAAC,aAAD,CACIwW,IAAK,SAACA,GAAS,EAAKJ,cAAgBI,GACpCC,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV2W,SAAU,WAAO,EAAKA,YACtB1W,MAAO,CAACmR,OAAQ,qBAChBwF,UAAQ,GAEP1W,KAAKC,MAAMoD,QAAQhC,aCzFRmS,EDyFkC,yBAAK1T,UAAU,aACzD,kBAAC6W,GAAA,EAAD,CAAUC,QAAQ,SAASC,MAAO,GAAI3F,OAAQ,KAC9C,kBAACyF,GAAA,EAAD,CAAUC,QAAQ,OAAO7W,MAAO,CAAC+W,WAAY,GAAIC,KAAM,UC1FxE,oCACFvD,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,IDkFgBxT,KAAKC,MAAMoD,QAAQA,QAAQ3B,KAAI,SAACc,EAAQiP,GACrC,OAAOjP,EAAOiB,aACV,kBAAC,GAAD,CAAYiO,IAAKD,EAAOjO,SAAUhB,EAAOZ,IAAKuC,OAAQ3B,EAAO2B,OAAQT,OAAQlB,EAAOkB,OAAQD,YAAajB,EAAOiB,YAAa1C,KAAMyB,EAAOzB,YAKpJf,KAAKC,MAAMoD,QAAQA,QAAQR,MAAK,SAAAC,GAAC,OAAIA,EAAEW,gBAAgB,yBAAK3D,UAAU,cACpE,kBAAC,KAAD,CAAgBC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAEnF,oEAGJ,kBAACC,GAAA,EAAD,CAASrV,MAAM,gBAAgB/B,UAAS,2BAAsBE,KAAKgB,MAAM8U,WAAa,SAAW,IAAMqB,UAAU,OAC7G,kBAAC5B,GAAD,CAAW7U,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,WAC9D,EAAKtU,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,mBAGZ,kBAAC,IAAD,c,GA9EL3X,IAAMiB,WAAvBiV,GACK0B,YAAc7X,EAoGV0V,oBAdS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,MACb4B,QAASrC,EAAMqC,YAIvB,SAA4BuG,GACxB,MAAO,CACHuL,eAAgBE,YAAmBF,EAAgBvL,MAI5CwL,CAA6CE,aAAWO,K,0CEhH1D2B,GAAW,SAACrL,EAAU7B,GAAX,OAAoB,SAACV,GACzCA,EAAS,CACL1I,KpBKqB,kBoBFzBqL,MAAM,GAAD,OAAIR,GAAJ,qBAA+B,CAChCS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB3C,WAGP/B,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAC9G,GACHmI,EAAS,CACL1I,KpBrCa,YoBsCbC,QAASM,IAGbsH,GAAiB4E,SAASrD,MAE7B9B,OAAM,SAACC,GACJmB,EAAS,CACL1I,KpBrBmB,yBoB0BlBuW,GAAW,SAAA9V,GAAI,OAAI,SAACiI,GAC7BA,EAAS,CACL1I,KpBnDiB,YoBoDjBC,QAASQ,MAIJkM,GAAW,SAAC,GAAD,IAAEN,EAAF,EAAEA,GAAIpB,EAAN,EAAMA,SAAN,OAAoB,SAACvC,GACzC2C,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CACxBS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBM,KACAgC,SAAUxG,GAAiB2E,kBAGlCnF,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAA5G,GACF,GAAGA,EAAKS,MAQJ,OAPA0D,GAAc,cAEd8D,EAAS,CACL1I,KpB/DY,mBoBgEZC,QAASQ,EAAK8N,OAAO,KAM7B9N,EAAKa,OAAOC,SAAWd,EAAKa,OAAOC,SAAS4L,UAE5C1M,EAAKU,MAAMX,KAAI,SAAAoB,GACXA,EAAEE,UAAW,KAGjB8C,GAAcnE,EAAKE,OAEnB+H,EAAS,CACL1I,KpBxFe,kBoByFfC,QAAS,CAACQ,OAAMM,QAAyC,KAAhCN,EAAKa,OAAOC,SAASmD,UAGlDmD,GAAiB8E,SAAS,CAACvL,OAAQX,EAAKC,IAAK0I,KAAM3I,EAAK2I,OAExD,IACI+C,GAA6B1L,EAAKC,KACpC,MAAO6G,GACLM,GAAiByB,UAAU,CAAClI,OAAQX,EAAKC,IAAK0I,KAAM3I,EAAK2I,OACzDV,EAAS,CACL1I,KpB1FY,mBoB2FZC,QAAS,CAACuW,MAAO,MAAOhI,IAAK,8BAIxClH,OAAM,SAACC,GACJmB,EAAS,CACL1I,KpBjGgB,mBoBkGhBC,QAAS,CAACuW,MAAO,MAAOhI,IAAK,+BAKhClF,GAAY,SAAClI,EAAQgI,GAAT,OAAkB,SAACV,GACxCyD,GAA2B,CAAC/K,SAAQgI,SACpCV,EAAS,CACL1I,KpBlHwB,uBoBsHnBuN,GAAc,SAAC/L,EAASyJ,GAAV,OAAuB,SAACvC,GAO/C,IANA,IAAI8E,EAAW,IAAIC,SACf/M,EAAMqD,GAAc,EAAG,KACvB2J,EAAS,GACTC,EAAQ,GACRC,EAAS,GAEJnJ,EAAI,EAAGA,EAAIjD,EAAQkM,OAAOhJ,OAAQD,IACvC+I,EAASK,OAAO,SAASpJ,EAAGjD,EAAQkM,OAAOjJ,GAAGqJ,MAC9CtM,EAAQkM,OAAOjJ,GAAGqJ,MAAO,EACzBJ,EAAOK,KAAKvM,EAAQkM,OAAOjJ,IAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAIjD,EAAQmM,MAAMjJ,OAAQD,IACtC+I,EAASK,OAAO,QAAQpJ,EAAGjD,EAAQmM,MAAMlJ,GAAGqJ,MAC5CtM,EAAQmM,MAAMlJ,GAAGqJ,MAAO,EACxBH,EAAMI,KAAKvM,EAAQmM,MAAMlJ,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAIjD,EAAQoM,OAAOlJ,OAAQD,IACvC+I,EAASK,OAAO,SAASpJ,EAAGjD,EAAQoM,OAAOnJ,GAAGqJ,MAC9CtM,EAAQoM,OAAOnJ,GAAGqJ,MAAO,EACzBF,EAAOG,KAAKvM,EAAQoM,OAAOnJ,IAG/B,IAAIuJ,EAAe,CACftN,MACAb,KAAM4I,GAAMwD,WAAWpM,KACvBoO,KAAMzM,EAAQyM,KACdP,SACAE,SACAD,QACA3M,WAAW,EACXV,SAAS,EACTuB,QAAQ,EACRqM,eAAgB1M,EAAQ0M,eACxBrL,UAAWD,KAAKuL,MAChBnO,KAAM,WAGV0I,EAAS,CACL1I,KpB5JyB,oBoB6JzBC,QAAS+N,IAGb,IAAIE,EAAiB,GAErB1M,EAAQ0M,eAAe1N,KAAI,SAAA4N,GACvBF,EAAeH,KAAKK,EAAE1N,QAG1Bc,EAAQ0M,eAAiBA,EACzB1M,EAAQ6M,SAAWxG,GAAiB2E,cAEpCgB,EAASK,OAAO,OAAQrM,EAAQyM,MAChCT,EAASK,OAAO,iBAAkBrM,EAAQ0M,gBAC1CV,EAASK,OAAO,SAAUrM,EAAQJ,QAClCoM,EAASK,OAAO,WAAYrM,EAAQc,UACpCkL,EAASK,OAAO,WAAYhG,GAAiB2E,eAG7CnB,MAAM,GAAD,OAAIR,GAAJ,0BAAoC,CACjCS,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2B,IAETnG,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAiH,GACF,GAAGA,EAAWpN,MAMV,MALgC,aAA7BoN,EAAWC,OAAO,GAAGC,KACpBC,KAAMvN,MAAM,8BAA+B,CACvCwN,SAAUD,KAAME,SAASC,aAG1BlG,EAAS,CACZ1I,KpBhMe,sBoBiMfC,QAASS,IAGjBgI,EAAS,CACL1I,KpBtMqB,wBoBuMrBC,QAAS,CAACS,MAAKe,OAAQ6M,EAAW5N,UAGzC4G,OAAM,WACHoB,EAAS,CACL1I,KpB3MmB,sBoB4MnBC,QAASS,SAKZmO,GAAc,SAACrN,EAASyJ,GAAV,OAAuB,SAACvC,GAW/C,IAVA,IAAI8E,EAAW,IAAIC,SAEfC,EAAS,GACTC,EAAQ,GACRC,EAAS,GAETkB,EAAY,GACZC,EAAW,GACXC,EAAY,GAEPvK,EAAI,EAAGA,EAAIjD,EAAQkM,OAAOhJ,OAAQD,IACpCjD,EAAQkM,OAAOjJ,GAAGqJ,MACjBN,EAASK,OAAO,SAASpJ,EAAGjD,EAAQkM,OAAOjJ,GAAGqJ,MAE9CJ,EAAOK,KAAKvM,EAAQkM,OAAOjJ,KAE3BqK,EAAUf,KAAKvM,EAAQkM,OAAOjJ,GAAG4H,IAIzC,IAAK,IAAI5H,EAAI,EAAGA,EAAIjD,EAAQmM,MAAMjJ,OAAQD,IACnCjD,EAAQmM,MAAMlJ,GAAGqJ,MAChBN,EAASK,OAAO,QAAQpJ,EAAGjD,EAAQmM,MAAMlJ,GAAGqJ,MAE5CH,EAAMI,KAAKvM,EAAQmM,MAAMlJ,KAEzBsK,EAAShB,KAAKvM,EAAQmM,MAAMlJ,GAAG4H,IAIvC,IAAK,IAAI5H,EAAI,EAAGA,EAAIjD,EAAQoM,OAAOlJ,OAAQD,IACpCjD,EAAQoM,OAAOnJ,GAAGqJ,MACjBN,EAASK,OAAO,SAASpJ,EAAGjD,EAAQoM,OAAOnJ,GAAGqJ,MAE9CF,EAAOG,KAAKvM,EAAQoM,OAAOnJ,KAE3BuK,EAAUjB,KAAKvM,EAAQoM,OAAOnJ,GAAG4H,IAIzC,IAAI2B,EAAe,CACftN,IAAKc,EAAQd,IACbb,KAAM4I,GAAMwD,WAAWpM,KACvBoO,KAAMzM,EAAQyM,KACdP,OAAQlM,EAAQkM,OAChBE,OAAQpM,EAAQoM,OAChBD,MAAOnM,EAAQmM,MACf3M,WAAW,EACXV,SAAS,EACT4N,eAAgB1M,EAAQ0M,gBAG5BxF,EAAS,CACL1I,KpBtQ0B,qBoBuQ1BC,QAAS+N,IAGb,IAAIE,EAAiB,GAErB1M,EAAQ0M,eAAe1N,KAAI,SAAA4N,GACvBF,EAAeH,KAAKK,EAAE1N,QAG1Bc,EAAQ0M,eAAiBA,EACzB1M,EAAQ6M,SAAWxG,GAAiB2E,cACpChL,EAAQJ,OAASqH,GAAMwD,WAAW1L,MAAMF,WAAWK,IAEnD8M,EAASK,OAAO,MAAOrM,EAAQd,KAC/B8M,EAASK,OAAO,OAAQrM,EAAQyM,MAChCT,EAASK,OAAO,iBAAkBrM,EAAQ0M,gBAC1CV,EAASK,OAAO,SAAUrM,EAAQJ,QAClCoM,EAASK,OAAO,WAAYrM,EAAQc,UACpCkL,EAASK,OAAO,WAAYhG,GAAiB2E,eAC7CgB,EAASK,OAAO,YAAaiB,GAC7BtB,EAASK,OAAO,YAAamB,GAC7BxB,EAASK,OAAO,WAAYkB,GAE5B1D,MAAM,GAAD,OAAIR,GAAJ,0BAAoC,CACjCS,OAAQ,OACRC,QAAS,CACLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2B,IAETnG,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAiH,GACF,GAAGA,EAAWpN,MAMV,MALgC,aAA7BoN,EAAWC,OAAO,GAAGC,KACpBC,KAAMvN,MAAM,8BAA+B,CACvCwN,SAAUD,KAAME,SAASC,aAG1BlG,EAAS,CACZ1I,KpB/Se,sBoBgTfC,QAASuB,EAAQd,MAGzBgI,EAAS,CACL1I,KpBrTqB,wBoBsTrBC,QAAS,CAACS,IAAKc,EAAQd,IAAKe,OAAQD,EAAQd,UAGnD4G,OAAM,WACHoB,EAAS,CACL1I,KpB1TmB,sBoB2TnBC,QAASuB,EAAQd,WAKpByO,GAAgB,SAAC,EAA0BlE,GAA3B,IAAE7J,EAAF,EAAEA,OAAQgO,EAAV,EAAUA,eAAV,OAAwC,SAAC1G,GAClE,IAAI1F,EAAa,GACjBoM,EAAe5O,KAAI,SAAA4N,GACfpL,EAAW+K,KAAKK,EAAE1N,QAGtBgI,EAAS,CACL1I,KpBnU4B,uBoBoU5BC,QAAS+C,IAGbqI,MAAM,GAAD,OAAIR,GAAJ,4BAAsC,CACnCS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB3K,SACA4B,aACAqL,SAAUxG,GAAiB2E,kBAGlCnF,OACAC,OAAM,iBAKFiI,GAAqB,SAAC7O,GAAD,OAAS,SAACgI,GACxCA,EAAS,CACL1I,KpB5V4B,uBoB6V5BC,QAAS,CAACS,OAILwO,GAAmB,SAAC1N,EAASyJ,GAAV,OAAuB,SAACvC,GACpD,IAAI8E,EAAW,IAAIC,SACfC,EAAS,GAETM,EAAe,CACftN,IAAKc,EAAQd,IACbb,KAAM4I,GAAMwD,WAAWpM,KACvBoO,KAAMzM,EAAQyM,KACdP,OAAQlM,EAAQkM,OAChBE,OAAQ,GACRD,MAAO,GACP3M,WAAW,EACXV,SAAS,EACT4N,eAAgB1M,EAAQ0M,eACxBrL,UAAWD,KAAKuL,MAChBnO,KAAM,WAGV0I,EAAS,CACL1I,KpBpX4B,uBoBqX5BC,QAAS,CAACuB,EAAQd,OAGtBgI,EAAS,CACL1I,KpB/XyB,oBoBgYzBC,QAAS+N,IAGb,IAAK,IAAIvJ,EAAI,EAAGA,EAAIjD,EAAQkM,OAAOhJ,OAAQD,IACvC+I,EAASK,OAAO,SAASpJ,EAAGjD,EAAQkM,OAAOjJ,GAAGqJ,MAE9CJ,EAAOK,KAAKvM,EAAQkM,OAAOjJ,GAAGH,MAGlC,IAAI4J,EAAiB,GAErB1M,EAAQ0M,eAAe1N,KAAI,SAAA4N,GACvBF,EAAeH,KAAKK,EAAE1N,QAG1Bc,EAAQ0M,eAAiBA,EACzB1M,EAAQ6M,SAAWxG,GAAiB2E,cAEpCgB,EAASK,OAAO,OAAQrM,EAAQyM,MAChCT,EAASK,OAAO,iBAAkBrM,EAAQ0M,gBAC1CV,EAASK,OAAO,SAAUrM,EAAQJ,QAClCoM,EAASK,OAAO,WAAYrM,EAAQc,UACpCkL,EAASK,OAAO,WAAYhG,GAAiB2E,eAE7CnB,MAAM,GAAD,OAAIR,GAAJ,0BAAoC,CACjCS,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2B,IAETnG,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAiH,GACF5F,EAAS,CACL1I,KpBnaqB,wBoBoarBC,QAAS,CAACS,IAAKc,EAAQd,IAAKe,OAAQ6M,EAAW5N,UAGtD4G,OAAM,WACHoB,EAAS,CACL1I,KpBxamB,sBoByanBC,QAASuB,EAAQd,WAKpBuO,GAAe,SAAC,EAA4BhE,GAA7B,IAAE3I,EAAF,EAAEA,SAAUjB,EAAZ,EAAYA,OAAQD,EAApB,EAAoBA,OAApB,OAA0C,SAACsH,GACnE,IAAIuG,EAAexG,GAAMwD,WAAW1L,MAAMF,WAAWiB,OAAOC,SAASV,QAAO,SAAAe,GAAC,OAAKA,EAAEC,QAAUD,EAAE/B,KAAKa,MAAQW,KAE7G6K,YAAW,WACF+C,EAAavK,QACdgE,EAAS,CACL1I,KpB/amB,sBoBgbnBC,QAASoB,MAGlB,KAEE4N,EAAavK,QACd2G,MAAM,GAAD,OAAIR,GAAJ,2BAAqC,CAClCS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBzJ,WACAlB,aAGPiG,OACAC,OAAM,iBAMNkI,GAAe,SAAC,EAA4BvE,GAA7B,IAAE3I,EAAF,EAAEA,SAAF,EAAYjB,OAAZ,EAAoBD,OAApB,OAA0C,SAACsH,GACnE,IAAInG,EAAckG,GAAMwD,WAAW1L,MAAMF,WAAWiB,OAAOC,SAAS,GAEpEmH,EAAS,CACL1I,KpBzcyB,sBoB4c7B0I,EAAS,CACL1I,KpB9c2B,sBoB+c3BC,QAAS,CAACsB,SAAU,GAAIR,SAAS,KAGrCsK,MAAM,GAAD,OAAIR,GAAJ,2BAAqC,CAClCS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBzJ,WACAmN,cAAelN,EAAY7B,QAGlC2G,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAA9F,GACFmH,EAAS,CACL1I,KpBjemB,sBoBkenBC,QAAS,CAACsB,SAAUA,EAAS4L,UAAWpM,QAA8B,KAArBQ,EAASmD,aAGjE4C,OAAM,iB,qBC3eFmP,GAAU,SAACpV,EAAQ4J,GAAT,OAAsB,SAACvC,GAC1C2C,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQA,MAGfgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAMyD,EAAkB,EAAlBA,aACVzD,EAAKyD,aAAeA,EACpBoF,EAAS,CACL1I,KrBoBa,YqBnBbC,QAASJ,SAKR6W,GAAa,SAACzL,GAAD,OAAc,SAACvC,GACrC2C,MAAM,GAAD,OAAIR,GAAJ,yBAAmC,CACpCS,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhC5D,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAClE,GACH,IAAIhC,EAAQ,GAEZgC,EAAQ3C,KAAI,SAAAX,GACRsB,EAAM4M,KAAKlO,EAAK8W,cAGpBjO,EAAS,CACL1I,KrBAqB,oBqBCrBC,QAAS,CAACkB,QAAOJ,QAA0B,KAAjBI,EAAMuD,eAK/BkS,GAAe,SAAC3L,GAAD,OAAc,SAACvC,GACvC2C,MAAM,GAAD,OAAIR,GAAJ,2BAAqC,CACtCS,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhC5D,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAClE,GACH,IAAIhC,EAAQ,GAEZgC,EAAQ3C,KAAI,SAAAX,GACRsB,EAAM4M,KAAKlO,EAAK8W,cAGpBjO,EAAS,CACL1I,KrBvBuB,sBqBwBvBC,QAAS,CAACkB,QAAOJ,QAA0B,KAAjBI,EAAMuD,eAK/BmS,GAAa,SAAC5L,GAAD,OAAc,SAACvC,GACrC2C,MAAM,GAAD,OAAIR,GAAJ,yBAAmC,CACpCS,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhC5D,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAClE,GACH,IAAIhC,EAAQ,GAEZgC,EAAQ3C,KAAI,SAAAX,GACRsB,EAAM4M,KAAKlO,EAAK8W,cAGpBjO,EAAS,CACL1I,KrB9CqB,oBqB+CrBC,QAAS,CAACkB,QAAOJ,QAA0B,KAAjBI,EAAMuD,eAK/BoS,GAAW,SAAC3T,GAAD,OAAa,SAACuF,GAElC,IADA,IAAIqO,EAAa,GACRtS,EAAI,EAAGA,EAAItB,EAAQuB,OAAQD,IAAK,CACrC,IAAI5E,EAAOsD,EAAQsB,GAAGkS,UAEtB9W,EAAKyD,aAAeH,EAAQsB,GAAGlF,OAE/BwX,EAAWhJ,KAAKlO,GAGpB6I,EAAS,CACL1I,KrBlEiB,YqBmEjBC,QAAS,CAACkD,QAAS4T,EAAYhW,QAA+B,KAAtBgW,EAAWrS,YAI9CsS,GAAkB,SAAC3V,GAAD,OAAY,SAACqH,GACxCA,EAAS,CACL1I,KrB3EgC,2BqB4EhCC,QAASoB,MAIJ4V,GAAc,SAAC5V,EAAQ4J,GAAT,OAAsB,SAACvC,GAC9C2C,MAAM,GAAD,OAAIR,GAAJ,qBAA+B,CAChCS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,aAGPgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAC/D,GACHoF,EAAS,CACL1I,KrB9F2B,0BqB+F3BC,QAAS,CAACoB,SAAQiC,kBAGnBmF,GAAMwD,WAAW9K,MAAMkC,QAAQjD,SAC3BqI,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDqH,EAAS,CACL1I,KrB3Fa,oBqB4FbC,QAAS,CAACJ,KAAM4I,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEgK,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQA,MAGfgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAMyD,EAAkB,EAAlBA,aACVzD,EAAKyD,aAAeA,EACpBoF,EAAS,CACL1I,KrB1HC,YqB2HDC,QAASJ,IAEb6I,EAAS,CACL1I,KrBlHS,oBqBmHTC,QAAS,CAACJ,mBAQrBqX,GAAgB,SAAC7V,EAAQ4J,GAAT,OAAsB,SAACvC,GAChD2C,MAAM,GAAD,OAAIR,GAAJ,4BAAsC,CACvCS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,aAGPgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAC/D,GACHoF,EAAS,CACL1I,KrBpJ2B,0BqBqJ3BC,QAAS,CAACoB,SAAQiC,kBAGnBmF,GAAMwD,WAAW9K,MAAMiC,UAAUhD,QAChCsI,EAAS,CACL1I,KrBpJsB,yBqBqJtBC,QAAS,CAACoB,YAIfoH,GAAMwD,WAAW9K,MAAMgC,QAAQ/C,SAC3BqI,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDqH,EAAS,CACL1I,KrB1Ja,oBqB2JbC,QAAS,CAACJ,KAAM4I,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEgK,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQA,MAGfgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAMyD,EAAkB,EAAlBA,aACVzD,EAAKyD,aAAeA,EACpBoF,EAAS,CACL1I,KrBvLC,YqBwLDC,QAASJ,IAEb6I,EAAS,CACL1I,KrBjLS,oBqBkLTC,QAAS,CAACJ,mBAQrBsX,GAAgB,SAAC9V,EAAQ4J,GAAT,OAAsB,SAACvC,GAChD2C,MAAM,GAAD,OAAIR,GAAJ,4BAAsC,CACvCS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,aAGPgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAC/D,GACHoF,EAAS,CACL1I,KrBjN2B,0BqBkN3BC,QAAS,CAACoB,SAAQiC,kBAGnBmF,GAAMwD,WAAW9K,MAAMgC,QAAQ/C,QACV,IAAjBkD,IACCoF,EAAS,CACL1I,KrBnNgB,uBqBoNhBC,QAAS,CAACoB,YAGXoH,GAAMwD,WAAW9K,MAAMiC,UAAUhD,SAC7BqI,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDqH,EAAS,CACL1I,KrBtNO,sBqBuNPC,QAAS,CAACJ,KAAM4I,GAAMwD,WAAW9K,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEgK,MAAM,GAAD,OAAIR,GAAJ,iBAA2B,CAC5BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQA,MAGfgG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAA2B,IAAzBxH,EAAwB,EAAxBA,KAAMyD,EAAkB,EAAlBA,aACVzD,EAAKyD,aAAeA,EACpBoF,EAAS,CACL1I,KrBpPP,YqBqPOC,QAASJ,IAEb6I,EAAS,CACL1I,KrB7OG,sBqB8OHC,QAAS,CAACJ,eAQ/B4I,GAAMwD,WAAW9K,MAAMkC,QAAQjD,QAA2B,IAAjBkD,GACxCoF,EAAS,CACL1I,KrB1PoB,uBqB2PpBC,QAAS,CAACoB,YAIfoH,GAAMwD,WAAW9K,MAAMiC,UAAUhD,QAA2B,IAAjBkD,GAC1CoF,EAAS,CACL1I,KrBlQsB,yBqBmQtBC,QAAS,CAACoB,iBCtSpB+V,GAAiB9C,cAfA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACFhV,MAAO,UACPuW,QAAS,OACT,YAAa,CACTvW,MAAO,UACP6X,OAAQ,QAEZ,UAAW,CACPnH,gBAAiB,gBAGzBoH,QAAS,MAGUhD,CAA2BiD,MAE5CC,G,uKACQ,IAAD,OACL,OACI,kBAAC3H,GAAA,EAAD,CAAQjR,UAAS,YAAeyU,QAAS,WAAO,EAAKtU,MAAMsU,QAAQ,EAAKtU,MAAMc,KAAKa,OAC/E,kBAAC,EAAD,CACA1B,SAAQF,KAAKC,MAAMc,KAAKb,QAASF,KAAKC,MAAMc,KAAKb,OACjDH,MAAO,CAACiR,SAAU,GAAIE,OAAQ,GAAIvQ,SAAU,GAAIwQ,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAMc,KAAKL,MAAzB,MAChFJ,KAAMN,KAAKC,MAAMc,KAAKT,KAAKqR,MAAMN,OAAO,GAAKrR,KAAKC,MAAMc,KAAKT,KAAKmN,KAAK4D,OAAO,KAE9E,yBAAKtR,MAAO,CAACkX,QAAS,OAAQ0B,SAAU,OAAQ9B,MAAO,sBACnD,uBAAG/W,UAAU,aAAb,UAA6BE,KAAKC,MAAMc,KAAKT,KAAKqR,MAAlD,YAA2D3R,KAAKC,MAAMc,KAAKT,KAAKmN,QAC9EzN,KAAKC,MAAMc,KAAKP,QAAU,uBAAGV,UAAU,gBAAgBgT,GAAW9S,KAAKC,MAAMc,KAAKiD,WACnFhE,KAAKC,MAAMc,KAAKP,QAAU,uBAAGV,UAAU,eAAeC,MAAO,CAACW,MAAO,YAA3C,WAGV,WAApBV,KAAKC,MAAMiB,MAAqB,kBAACoX,GAAD,CAAgBE,QAASxY,KAAKC,MAAM2Y,gB,GAf9DjZ,IAAMiB,WA2BdwU,gBANS,SAAApU,GACpB,MAAO,CACH8T,OAAQ9T,EAAMD,QAIPqU,CAAyBE,aAAWoD,K,WCvC/CG,IAAa,EAEXC,G,4MACF9X,MAAQ,CACJ+X,EAAG,GACHC,aAAc,I,kEAIVhZ,KAAKC,MAAMoC,MAAMgC,QAAQ/C,QACzBtB,KAAKC,MAAMgZ,aAAarB,WAAW5X,KAAKC,MAAMc,KAAKoL,Y,mEAQlDtD,GAAI,IAAD,OACJkQ,EAAIlQ,EAAEqQ,OAAOC,MACjBnZ,KAAKgU,SAAS,CAAC+E,MAEZF,IACCO,aAAaP,IAEZE,EAAEnT,QAAU,KAAKyT,KAAKN,KACvBF,GAAazL,YAAW,WACpBb,MAAM,GAAD,OAAIR,GAAJ,oBAA8B,CAC/BS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAY,EAAK1M,MAAMc,KAAKoL,WAE7CY,KAAMC,KAAKC,UAAU,CACjB8L,EAAG,EAAK/X,MAAM+X,MAGrBxQ,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAyQ,GACF,EAAKhF,SAAS,CAACgF,sBAEpB,MAGHD,EAAEnT,QACF5F,KAAKgU,SAAS,CAACgF,aAAc,O,+BAG3B,IAAD,OACL,OAAO,oCACH,2BAAO9X,KAAK,OAAOiY,MAAOnZ,KAAKgB,MAAM+X,EAAGO,SAAU,SAACzQ,GAAO,EAAK0Q,SAAS1Q,IAAK/I,UAAU,uBAAuB0Z,YAAY,YAExHxZ,KAAKgB,MAAMgY,aAAapT,SAAW5F,KAAKgB,MAAM+X,EAAEnT,QAAU,kBAAC,aAAD,CACxD0Q,IAAK,SAACA,GAAS,EAAKmD,WAAanD,GACjCC,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV2W,SAAU,WAAO,EAAKA,YACtB1W,MAAO,CAACmR,OAAQ,KAChBwF,UAAQ,GAEP1W,KAAKC,MAAMoC,MAAMgC,QAAQhD,YAAc,kBAACqY,GAAA,EAAD,CAAkB3Z,MAAO,CACzDW,MAAO,UACPkP,SAAU,WACV0D,KAAM,EACNqC,MAAO,EACPqB,OAAQ,OACRzD,IAAK,sBAEZvT,KAAKC,MAAMoC,MAAMgC,QAAQhC,MAAMX,KAAI,SAACX,EAAM0Q,GACvC,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAOvQ,KAAM,EAAKjB,MAAMiB,KAAM0X,SAA8B,WAApB,EAAK3Y,MAAMiB,QAAsB,EAAKjB,MAAM0Z,YAAY9W,MAAK,SAAAC,GAAC,OAAIA,IAAM/B,EAAKa,OAAc2S,QAAS,SAAChH,GAAQ,EAAKtN,MAAMsU,QAAQhH,IAAMxM,KAAMA,QAGxMf,KAAKC,MAAMoC,MAAMgC,QAAQhC,MAAMuD,SAAW5F,KAAKC,MAAMoC,MAAMgC,QAAQhD,YAAe,yBAAKvB,UAAU,cAChG,kBAAC,KAAD,CAAWC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAE9E,uEAIJjX,KAAKgB,MAAMgY,aAAapT,UAAY5F,KAAKgB,MAAM+X,EAAEnT,SAAW,kBAAC,aAAD,CAC5D0Q,IAAK,SAACA,GAAS,EAAKmD,WAAanD,GACjCC,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV2W,SAAU,WAAO,EAAKA,YACtB1W,MAAO,CAACmR,OAAQ,KAChBwF,UAAQ,GAUP1W,KAAKgB,MAAMgY,aAAatX,KAAI,SAACX,EAAM0Q,GAChC,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAOvQ,KAAM,EAAKjB,MAAMiB,KAAM0X,SAA8B,WAApB,EAAK3Y,MAAMiB,QAAsB,EAAKjB,MAAM0Z,YAAY9W,MAAK,SAAAC,GAAC,OAAIA,IAAM/B,EAAKa,OAAc2S,QAAS,SAAChH,GAAQ,EAAKtN,MAAMsU,QAAQhH,IAAMxM,KAAMA,QAGxMf,KAAKgB,MAAMgY,aAAapT,QAAW,yBAAK9F,UAAU,cACjD,kBAAC,KAAD,CAAWC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAE9E,qD,GAzGGtX,IAAMiB,WA6HdwU,oBAbS,SAAApU,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACHqP,aAAc5D,YAAmB4D,EAAcrP,MAIxCwL,CAA6CE,aAAWwD,KC9HjEc,GAA0B,CAC5BC,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,qCAI1BC,GAA0B,CAC5BN,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,cACxB5F,SAAwB,QACxBoJ,QAAwB,WAkB1B/B,GAAiB9C,cAdA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACFhV,MAAO,UACP,YAAa,CACTA,MAAO,UACP6X,OAAQ,QAEZ,UAAW,CACPnH,gBAAiB,gBAGzBoH,QAAS,MAGUhD,CAA2BiD,MAE5C6B,G,4MACFtZ,MAAQ,CACJa,MAAO,GACPC,WAAW,EACXyY,KAAM,SACNZ,YAAa,GACbvX,OAAO,EACPqN,OAAQ,I,uDAGH5G,GAAI,IAAD,OACR7I,KAAKgU,SAAS,CAAC5R,OAAO,EAAOqN,OAAQ,KACrC5G,EAAEgM,iBAEFtI,MAAM,GAAD,OAAIR,GAAJ,oBAA8B,CAC/BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAY3M,KAAKC,MAAMc,KAAKoL,WAE7CY,KAAMC,KAAKC,UAAU,CACjBpL,MAAO7B,KAAKgB,MAAMa,MAClBC,UAAW9B,KAAKgB,MAAMc,UACtBwI,KAAMtK,KAAKC,MAAMc,KAAKK,SACtBuY,YAAa3Z,KAAKgB,MAAM2Y,gBAG/BpR,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAC5G,GACAA,EAAKS,MACJ,EAAK4R,SAAS,CAAC5R,OAAO,EAAMqN,OAAQ9N,EAAK8N,OAAQ8K,KAAM,YAEvD,EAAKta,MAAMua,aAAa/C,SAAS9V,GACjCoH,GAAiB6E,WAAW,CAACjM,OAAM2I,KAAM,EAAKrK,MAAMc,KAAKK,WACzD,EAAKnB,MAAMyU,QAAQzF,KAAnB,iBAAkCtN,EAAKC,Y,+BAKzC,IAAD,OACL,OAAO,kBAAC,KAAD,CACH6Y,OAAQza,KAAKC,MAAMwa,OACnBC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAA2B,WAApBC,KAAKgB,MAAMuZ,KAAoBX,GAA0BO,GAChEQ,aAAa,eAEQ,WAApB3a,KAAKgB,MAAMuZ,MAAqB,wBAAIza,UAAU,eAAd,YACZ,WAApBE,KAAKgB,MAAMuZ,MAAqB,wBAAIza,UAAU,eAAd,gBAEjC,0BAAMC,MAAO,CAACkX,QAAS,YAAa2D,SAAU,SAAC/R,GAAO,EAAK+R,SAAS/R,KAC3C,WAApB7I,KAAKgB,MAAMuZ,MAAqB,oCAC7B,2BACIpB,MAAOnZ,KAAKgB,MAAMa,MAClByX,SAAU,SAACzQ,GAAO,EAAKmL,SAAS,CAACnS,MAAOgH,EAAEqQ,OAAOC,SACjDrZ,UAAU,cACVoB,KAAK,OACLnB,MAAO,CAAC8a,aAAc,IACtBrB,YAAY,QACZsB,UAAW,KAEd9a,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,UAAhBA,EAAMzB,UAAsB,0BAAM5X,UAAU,qBACxEE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,UAAhBA,EAAMzB,SAAmBhI,KAG9D,kBAACqL,GAAA,EAAD,CACIC,QACI,kBAAC,GAAD,CACIxC,QAASxY,KAAKgB,MAAMc,UACpBwX,SAAU,WAAO,EAAKtF,SAAS,CAAClS,WAAY,EAAKd,MAAMc,eAG/D/B,MAAO,CAACW,MAAO,WACfua,MAAM,kBAGV,4BAAQnb,UAAU,cAAcyU,QAAS,WAAO,EAAKP,SAAS,CAACuG,KAAM,YAAaxa,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAA3H,SAGiB,WAApBlV,KAAKgB,MAAMuZ,MAAqB,oCAC7B,kBAACW,GAAD,CAAS3G,QAAS,SAAChH,GACX,EAAKvM,MAAM2Y,YAAY9W,MAAK,SAAAC,GAAC,OAAIA,IAAMyK,KAGvC,EAAKyG,SAAS,CAAC2F,YAAY,YAAK,EAAK3Y,MAAM2Y,YAAY5X,QAAO,SAAAe,GAAC,OAAIA,IAAMyK,QAFzE,EAAKyG,SAAS,CAAC2F,YAAY,CAAEpM,GAAH,mBAAU,EAAKvM,MAAM2Y,iBAGpDzY,KAAM,SAAUyY,YAAa3Z,KAAKgB,MAAM2Y,cAE3C,4BAAQ7Z,UAAU,cAAcyU,QAAS,WAAO,EAAKP,SAAS,CAACuG,KAAM,YAAaxa,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAA3H,QACA,4BAAQpV,UAAU,cAAcoB,KAAK,SAASnB,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAAvF,gB,GAxFKvV,IAAMiB,WA2GhBwU,oBAZS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACH4Q,aAAcnF,YAAmBmF,EAAc5Q,MAIxCwL,CAA6CE,aAAWgF,K,qBC7JjE/E,GAAYC,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,UACjBxB,SAAU,WACViE,OAAQ,GACR8B,MAAO,GACP,UAAW,CACPvE,gBAAiB,eAKXoE,CAAsBI,MAElCuF,G,4MAGFna,MAAQ,CACJoa,kBAAkB,EAClBrF,UAAW,EACXD,YAAY,G,kEAIZ9V,KAAKgW,QAAQC,cAAa,GAEtBjW,KAAKC,MAAMwB,MAAMH,QACjBtB,KAAKC,MAAMua,aAAahD,SAASxX,KAAKC,MAAMc,KAAKoL,SAAUnM,KAAKC,MAAMc,KAAKK,Y,iCAK5EpB,KAAKgB,MAAM+U,UAAY/V,KAAKyZ,WAAWtD,eACnCnW,KAAKgB,MAAM8U,YACV9V,KAAKgU,SAAS,CAAC8B,YAAY,IAE3B9V,KAAKgB,MAAM8U,YACX9V,KAAKgU,SAAS,CAAC8B,YAAY,IAGnC9V,KAAKgU,SAAS,CAAC+B,UAAW/V,KAAKyZ,WAAWtD,mB,4CAGxBC,EAAWC,GAC7B,OAAGA,EAAUN,YAAc/V,KAAKgB,MAAM+U,Y,6CAQtC/V,KAAKgW,QAAQC,cAAa,K,+BAGpB,IAAD,OACL,OACI,oCACI,yBAAKnW,UAAU,qCAAqCC,MAAO,CAACyR,SAAU,WAClE,wBAAI1R,UAAU,iBAAd,SAEA,kBAAC,aAAD,CACIwW,IAAK,SAACA,GAAS,EAAKmD,WAAanD,GACjCC,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV2W,SAAU,WAAO,EAAKA,YACtB1W,MAAO,CAACmR,OAAQ,qBAChBwF,UAAQ,GAEP1W,KAAKC,MAAMwB,MAAMJ,YAAc,kBAACqY,GAAA,EAAD,CAAkB3Z,MAAO,CACrDW,MAAO,UACPkP,SAAU,WACV0D,KAAM,EACNqC,MAAO,EACPqB,OAAQ,OACRzD,IAAK,sBAERvT,KAAKC,MAAMwB,MAAMA,MAAMC,KAAI,SAACC,EAAM8P,GAC/B,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAO9P,KAAMA,SAKtC3B,KAAKC,MAAMwB,MAAMJ,aAAerB,KAAKC,MAAMwB,MAAMD,UAAYxB,KAAKC,MAAMwB,MAAMA,MAAMmE,QAAU,yBAAK9F,UAAU,cAC3G,kBAAC,IAAD,CAAUC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAE7E,wEAGFjX,KAAKC,MAAMwB,MAAMJ,YAAcrB,KAAKC,MAAMwB,MAAMD,SAAW,yBAAK1B,UAAU,cACxE,kBAAC,KAAD,CAAaC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAEhF,gIAEA,4BAAQ1C,QAAS,WAAO,EAAKtU,MAAMua,aAAahD,SAAS,EAAKvX,MAAMc,KAAKoL,SAAU,EAAKlM,MAAMc,KAAKK,WAAYtB,UAAU,cAAcoB,KAAK,SAASnB,MAAO,CAAC8W,MAAO,gBAApK,UAGJ,kBAACK,GAAA,EAAD,CAASrV,MAAM,cAAc/B,UAAS,2BAAsBE,KAAKgB,MAAM8U,WAAa,SAAW,IAAMqB,UAAU,OAC3G,kBAAC,GAAD,CAAWzW,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,WAC9D,EAAKtU,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,mBAGZ,kBAAC,IAAD,c,GA3FR3X,IAAMiB,WAApBua,GACK5D,YAAc7X,EAgHV0V,oBAbS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BmI,GACxB,MAAO,CACH4Q,aAAcnF,YAAmBmF,EAAc5Q,MAIxCwL,CAA6CE,aAAW6F,KCjJ1DE,GAAmB,SAAClP,GAAD,OAAc,SAACvC,GAC3C2C,MAAM,GAAD,OAAIR,GAAJ,6BAAuC,CACxCS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAGhC5D,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAC9D,GACHmF,EAAS,CACL1I,K1BmDqB,oB0BlDrBC,QAASsD,SAKR6W,GAAmB,SAAC/N,EAAIpB,GAAL,OAAkB,SAACvC,GAC/CA,EAAS,CACL1I,K1B6C0B,qB0B5C1BC,QAASoM,IAGbhB,MAAM,GAAD,OAAIR,GAAJ,0BAAoC,CACrCS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBM,KACAgC,SAAUxG,GAAiB2E,oBCrBjC6N,G,4MACFva,MAAQ,CACJyT,SAAUxP,GAAc,EAAG,M,uDAGrB,IAAD,OACL,OACI,kBAAC8L,GAAA,EAAD,CAAQjR,UAAS,cAAiByU,QAAS,WACnC,EAAKtU,MAAMyE,aAAa3B,QACxB,EAAK9C,MAAMub,qBAAqBF,iBAAiB,EAAKrb,MAAMyE,aAAa9C,IAAK,EAAK3B,MAAMc,KAAKoL,UAE9D,WAAjC,EAAKlM,MAAMyE,aAAaxD,MACvB,EAAKjB,MAAMyU,QAAQzF,KAAnB,iBAAkC,EAAKhP,MAAMyE,aAAa/C,KAAKC,MAC/B,WAAjC,EAAK3B,MAAMyE,aAAaxD,MAAsD,YAAjC,EAAKjB,MAAMyE,aAAaxD,MACpE,EAAKjB,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAO,SAAD,OAAW,EAAKrX,MAAMyE,aAAa3D,KAAKa,SAGtD,kBAAC,EAAD,CACA1B,SAAQF,KAAKC,MAAMyE,aAAa3D,KAAKb,QAASF,KAAKC,MAAMyE,aAAa3D,KAAKb,OAC3EO,OAAQT,KAAKC,MAAMyE,aAAaxD,KAChCnB,MAAO,CAACiR,SAAU,GAAIC,SAAU,GAAIC,OAAQ,GAAIvQ,SAAU,GAAIwQ,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAMyE,aAAa3D,KAAKL,MAAtC,MAC9FJ,KAAMN,KAAKC,MAAMyE,aAAa3D,KAAKT,KAAKqR,MAAMN,OAAO,GAAKrR,KAAKC,MAAMyE,aAAa3D,KAAKT,KAAKmN,KAAK4D,OAAO,KAExG,yBAAKtR,MAAO,CACJuR,SAAU,EACVN,SAAU,EACVC,SAAU,OACVM,aAAc,KAElB,uBAAGzR,UAAU,aAAY,wCAAUE,KAAKC,MAAMyE,aAAa3D,KAAKT,KAAKqR,MAA5C,YAAqD3R,KAAKC,MAAMyE,aAAa3D,KAAKT,KAAKmN,QAE9E,WAAjCzN,KAAKC,MAAMyE,aAAaxD,MAAqB,uBAAGpB,UAAU,gBAAe,0BAAMA,UAAU,WAAhB,8BAAuD,0BAAMC,MAAO,CAACW,MAAO,YAAaV,KAAKC,MAAMyE,aAAa/C,KAAKE,SAC9J,WAAjC7B,KAAKC,MAAMyE,aAAaxD,MAAqB,uBAAGpB,UAAU,gBAAe,0BAAMA,UAAU,WAAhB,+BACxC,YAAjCE,KAAKC,MAAMyE,aAAaxD,MAAsB,uBAAGpB,UAAU,gBAAe,0BAAMA,UAAU,WAAhB,6BAE/E,yBAAKA,UAAU,eACX,0BAAMA,UAAU,WAAWsS,GAAgBpS,KAAKC,MAAMyE,aAAaX,YACnE,kBAAC,sBAAD,CACIgR,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MAClBjV,KAAKC,MAAMyE,aAAa3B,QAAU,0BAAMhD,MAAO,CAAC0b,WAAY,UAAUzK,SAAU,GAAGE,OAAQ,GAAIgE,UAAW,GAAIpV,UAAU,iC,GA1CvHH,IAAMiB,WA8DtBwU,oBAZS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACH4R,qBAAsBnG,YAAmBmG,EAAsB5R,MAIxDwL,CAA6CE,aAAWiG,KCpEjEG,G,kLAIE1b,KAAKgW,QAAQC,cAAa,GAEtBjW,KAAKC,MAAMwE,cAAcnD,QACzBtB,KAAKC,MAAMub,qBAAqBH,iBAAiBrb,KAAKC,MAAMc,KAAKoL,Y,6CAKrEnM,KAAKgW,QAAQC,cAAa,K,+BAGpB,IAAD,OACL,OACI,oCACI,yBAAKnW,UAAU,sCACX,wBAAIA,UAAU,iBAAd,iBAEA,kBAAC,aAAD,CACIwW,IAAK,SAACA,GAAS,EAAKmD,WAAanD,GACjCC,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVC,MAAO,CAACmR,OAAQ,qBAChBwF,UAAQ,GAEP1W,KAAKC,MAAMwE,cAAcpD,YAAc,kBAACqY,GAAA,EAAD,CAAkB3Z,MAAO,CAC7DW,MAAO,UACPkP,SAAU,WACV0D,KAAM,EACNqC,MAAO,EACPqB,OAAQ,OACRzD,IAAK,sBAERvT,KAAKC,MAAMwE,cAAcA,cAAc/C,KAAI,SAACgD,EAAc+M,GACvD,OACI,kBAAC,GAAD,CAAkBC,IAAKD,EAAO/M,aAAcA,SAKtD1E,KAAKC,MAAMwE,cAAcpD,aAAcrB,KAAKC,MAAMwE,cAAcA,cAAcmB,QAAU,yBAAK9F,UAAU,cACrG,kBAAC,IAAD,CAAuBC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAE1F,yE,GA/CItX,IAAMiB,WAA5B8a,GACKnE,YAAc7X,EAmEV0V,oBAbS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZ0D,cAAezD,EAAMyD,kBAI7B,SAA4BmF,GACxB,MAAO,CACH4R,qBAAsBnG,YAAmBmG,EAAsB5R,MAIxDwL,CAA6CE,aAAWoG,KCpE1DC,GAAY,SAAC5a,EAAMsC,EAASE,EAAaqY,EAAqBzP,GAAlD,OAA+D,SAACvC,GACrF7I,EAAKoL,SAAWA,EAEhBvC,EAAS,CACL1I,K7BhBkB,a6BiBlBC,QAASJ,IAGb,IAAK,IAAI4E,EAAI,EAAGA,EAAItC,EAAQuC,OAAQD,IAChCtC,EAAQsC,GAAG5E,KAAOsC,EAAQsC,GAAGtD,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ+H,GAAMwD,WAAWpM,KAAKa,OAE/EyB,EAAQsC,GAAG5E,OACXsC,EAAQsC,GAAG5E,KAAOsC,EAAQsC,GAAGtD,MAAM,IAEvCgB,EAAQsC,GAAGxB,QAAS,EACpBd,EAAQsC,GAAGrE,QAAS,EACpB+B,EAAQsC,GAAGzD,WAAY,EAEpBmB,EAAQsC,GAAGlC,cACVJ,EAAQsC,GAAGlC,YAAYvB,WAAY,EACnCmB,EAAQsC,GAAGlC,YAAYjC,SAAU,GAGlC6B,EAAQsC,GAAGlC,aAAeJ,EAAQsC,GAAGlC,YAAY1C,KAAKa,MAAQ+H,GAAMwD,WAAWpM,KAAKa,MACnFyB,EAAQsC,GAAGjC,OAAS,GAG5BkG,EAAS,CACL1I,K7BHmB,c6BInBC,QAAS,CAACkC,UAASE,iBAGvBqG,EAAS,CACL1I,K7B2BiC,4B6B1BjCC,QAASya,MAIJC,GAAa,kBAAM,SAACjS,GAC7BA,EAAS,CACL1I,K7BnDmB,kB6BuDd4a,GAAiB,SAACxR,GAAD,OAAU,SAACV,GACrCA,EAAS,CACL1I,K7BxD6B,wB6ByD7BC,QAASmJ,MAIJyR,GAAe,SAAClT,EAAGsD,GAAJ,OAAiB,SAACvC,GAC1C,GAAGf,EAAEqQ,OAAOrK,MAAM,GAAI,CAClB,IAAIG,EAAO,CACPxJ,MAAOe,OAAOyV,KAAOzV,OAAO0V,WAAWC,gBAAgB,IAAIC,KAAK,CAACtT,EAAEqQ,OAAOrK,MAAM,IAAK,CAAC3N,KAAM2H,EAAEqQ,OAAOrK,MAAM,GAAG3N,QAC9G8N,KAAMnG,EAAEqQ,OAAOrK,MAAM,GACrBvO,KAAMuI,EAAEqQ,OAAOrK,MAAM,GAAGvO,KACxBY,KAAM2H,EAAEqQ,OAAOrK,MAAM,GAAGvO,KAAK8b,MAAM,KAAK5L,MACxC4G,KAAMvO,EAAEqQ,OAAOrK,MAAM,GAAGuI,KAAO,KAG/B1I,EAAW,IAAIC,SACnBD,EAASK,OAAO,SAAUC,EAAKA,MAE/BzC,MAAM,GAAD,OAAIR,GAAJ,2BAAqC,CACtCS,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYR,IAE7BY,KAAM2B,IAETnG,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAA8T,GACCA,EAAIja,OACsB,aAAtBia,EAAI5M,OAAO,GAAGC,KACbC,KAAMvN,MAAM,8BAA+B,CACvCwN,SAAUD,KAAME,SAASC,aAIrClG,EAAS,CACL1I,K7B5Fe,kB6B6FfC,QAAS,CAACmb,SAAUtN,EAAKxJ,KAAMpF,IAAK4O,EAAKxJ,WAGhDgD,OAAM,WACHmH,KAAMvN,MAAM,uBAAwB,CAChCwN,SAAUD,KAAME,SAASC,mBCzFnCyM,G,kLAIEvc,KAAKgW,QAAQC,cAAa,K,6CAI1BjW,KAAKgW,QAAQC,cAAa,K,qCAGf3L,GACXtK,KAAKC,MAAMuc,YAAYV,eAAexR,GAEtCtK,KAAKC,MAAMyU,QAAQzF,KAAK,KAExBjP,KAAKC,MAAMua,aAAahD,SAASxX,KAAKC,MAAMc,KAAKoL,SAAU7B,GAE3DvB,GAAiB4E,SAASrD,GAE1BiC,MAAM,GAAD,OAAIR,GAAJ,8BAAwC,CACzCS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAY3M,KAAKC,MAAMc,KAAKoL,WAE7CY,KAAMC,KAAKC,UAAU,CACjB3C,a,+BAKF,IAAD,OACL,OACI,oCACI,yBAAKxK,UAAU,sCACX,wBAAIA,UAAU,iBAAd,YAEA,0BAAMC,MAAO,CAACW,MAAoC,QAA7BV,KAAKC,MAAMc,KAAKK,SAAqB,MAAQ,QAASmT,QAAS,WAChF,EAAKuH,eAAe,SADxB,WAGA,0BAAM/b,MAAO,CAACW,MAAoC,QAA7BV,KAAKC,MAAMc,KAAKK,SAAqB,MAAQ,QAASmT,QAAS,WAChF,EAAKuH,eAAe,SADxB,iB,GA1CInc,IAAMiB,WAAxB2b,GACKhF,YAAc7X,EA+DV0V,oBAbS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACH4S,YAAanH,YAAmBmH,EAAa5S,GAC7C4Q,aAAcnF,YAAmBmF,EAAc5Q,MAIxCwL,CAA6CE,aAAWiH,KC5DjEE,G,4MACFzb,MAAQ,CACJ0b,UAAW,a,uDAGL,IAAD,OACL,OAAO1c,KAAKC,MAAM0c,MACd,oCACI,yBAAK7c,UAAU,0CACX,4BACI,wBAAIyU,QAAS,WACT,EAAKtU,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAO,SAAD,OAAW,EAAKrX,MAAMc,KAAKa,SAEtC,kBAAC,EAAD,CAAQ1B,SAAQF,KAAKC,MAAMc,KAAKb,QAASF,KAAKC,MAAMc,KAAKb,OAAgBH,MAAO,CAAC8W,MAAO,GAAI3F,OAAQ,GAAIvQ,SAAU,GAAIwQ,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAMc,KAAKL,MAAzB,MAAoCJ,KAAMN,KAAKC,MAAMc,KAAKT,KAAKqR,MAAMN,OAAO,GAAKrR,KAAKC,MAAMc,KAAKT,KAAKmN,KAAK4D,OAAO,MAC3Q,wBAAItR,MAAO,CAAC6P,SAAU,YAAa9P,UAAS,UAA8B,aAAzBE,KAAKgB,MAAM0b,UAA2B,SAAW,IAAMnI,QAAS,WAAO,EAAKP,SAAS,CAAC0I,UAAW,eAC9I,kBAAC,IAAD,CAAuB3c,MAAO,CAACW,MAAO,eACnCV,KAAKC,MAAMoD,QAAQE,aAAe,0BACjCzD,UAAU,wBACVC,MAAO,CACHwT,IAAK,GACLoC,MAAO,MACPtB,UAAW,kBACXjD,gBAAiB,YAEvBpR,KAAKC,MAAMoD,QAAQE,cAEzB,wBAAIzD,UAAS,UAA8B,UAAzBE,KAAKgB,MAAM0b,UAAwB,SAAW,IAAMnI,QAAS,WAAO,EAAKP,SAAS,CAAC0I,UAAW,YAAY,kBAAC,IAAD,CAAU3c,MAAO,CAACW,MAAO,cACrJ,wBAAIX,MAAO,CAAC6P,SAAU,YAAa9P,UAAS,UAA8B,kBAAzBE,KAAKgB,MAAM0b,UAAgC,SAAW,IAAMnI,QAAS,WAAO,EAAKP,SAAS,CAAC0I,UAAW,oBACnJ,kBAAC,IAAD,CAAuB3c,MAAO,CAACW,MAAO,eACnCV,KAAKC,MAAMwE,cAAcf,QAAU,0BAClC5D,UAAU,wBACVC,MAAO,CACHwT,IAAK,GACLoC,MAAO,MACPtB,UAAW,kBACXjD,gBAAiB,YAEvBpR,KAAKC,MAAMwE,cAAcf,SAE/B,wBAAI5D,UAAS,UAA8B,cAAzBE,KAAKgB,MAAM0b,UAA4B,SAAW,IAAMnI,QAAS,WAAO,EAAKP,SAAS,CAAC0I,UAAW,gBAAgB,kBAAC,IAAD,CAAc3c,MAAO,CAACW,MAAO,gBAI/I,aAAzBV,KAAKgB,MAAM0b,WAA4B,kBAAC,GAAD,MACd,UAAzB1c,KAAKgB,MAAM0b,WAAyB,kBAAC,GAAD,MACX,kBAAzB1c,KAAKgB,MAAM0b,WAAiC,kBAAC,GAAD,MACnB,cAAzB1c,KAAKgB,MAAM0b,WAA6B,kBAAC,GAAD,W,GA/C/B/c,IAAMiB,WA6DjBwU,gBARS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZsC,QAASrC,EAAMqC,QACfoB,cAAezD,EAAMyD,iBAId2Q,CAAyBE,aAAWmH,K,oBC7D7CG,I,mNACF5b,MAAQ,CACJ6b,MAAO,GACPC,SAAU,GACV1a,OAAO,EACPqN,OAAQ,GACRpO,YAAY,G,uDAGPwH,GAAI,IAAD,OACRA,EAAEgM,iBAEC7U,KAAKgB,MAAM6b,OAAS7c,KAAKgB,MAAM8b,WAC9B9c,KAAKgU,SAAS,CAAC3S,YAAY,IAE3BkL,MAAM,GAAD,OAAIR,GAAJ,eAAyB,CAC1BS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBM,KAAMC,KAAKC,UAAU,CACjB4P,MAAO7c,KAAKgB,MAAM6b,MAClBC,SAAU9c,KAAKgB,MAAM8b,aAG5BvU,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAwU,GACCA,EAAK3a,MACJ,EAAK4R,SAAS,CAAC5R,OAAO,EAAMqN,OAAQsN,EAAKtN,UAErB,EAAKxP,MAAjB+c,QACAC,IAAI,WAAYF,EAAKG,MAAO,CAAE1X,KAAM,MAE5C,EAAKvF,MAAMuc,YAAYb,UAAUoB,EAAKhc,KAAMgc,EAAK1Z,QAAS0Z,EAAKxZ,YAAawZ,EAAKnB,oBAAqBmB,EAAKG,OAE3GnU,GAAiBmD,KAAK6Q,EAAKG,QAG/B,EAAKlJ,SAAS,CAAC3S,YAAY,U,+BAK7B,IAAD,OACL,OACI,yBAAKvB,UAAU,cACX,wBAAIA,UAAU,QACV,0BAAMC,MAAO,CAACW,MAAO,YAArB,QACA,0BAAMX,MAAO,CAACW,MAAO,YAArB,SAGJ,0BAAMka,SAAU,SAAC/R,GAAO,EAAK+R,SAAS/R,IAAK/I,UAAU,QACjD,2BAAOqZ,MAAOnZ,KAAKgB,MAAM6b,MAAOvD,SAAU,SAACzQ,GAAO,EAAKmL,SAAS,CAAC6I,MAAOhU,EAAEqQ,OAAOC,SAAUrZ,UAAU,cAAcoB,KAAK,OAAOZ,KAAK,QAAQkZ,YAAY,WACvJxZ,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,UAAhBA,EAAMzB,UAAsB,0BAAM5X,UAAU,qBACxEE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,UAAhBA,EAAMzB,SAAmBhI,KAG9D,2BAAOyJ,MAAOnZ,KAAKgB,MAAM8b,SAAUxD,SAAU,SAACzQ,GAAO,EAAKmL,SAAS,CAAC8I,SAAUjU,EAAEqQ,OAAOC,SAAUrZ,UAAU,cAAcoB,KAAK,WAAWZ,KAAK,WAAWkZ,YAAY,yCACpKxZ,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,aAAhBA,EAAMzB,UAAyB,0BAAM5X,UAAU,qBAC3EE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,aAAhBA,EAAMzB,SAAsBhI,KAGhE1P,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,QAAhBA,EAAMzB,UAAoB,0BAAM3X,MAAO,CAACmV,UAAW,IAAKpV,UAAU,qBAC9FE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,QAAhBA,EAAMzB,SAAiBhI,KAG5D,4BAAQxO,KAAK,SAASpB,UAAU,eAAhC,kCAEA,uBAAGA,UAAU,YAAb,oBAAyC,kBAAC,KAAD,CAAMgR,GAAG,aAAT,kB,GArEzCnR,IAAMiB,YAwFXwU,oBAZS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACH4S,YAAanH,YAAmBmH,EAAa5S,MAItCwL,CAA6C+H,aAAYP,KCxFlEQ,G,4MACFpc,MAAQ,CACJqc,UAAW,GACXC,SAAU,GACVT,MAAO,GACPC,SAAU,GACV1a,OAAO,EACPqN,OAAQ,GACRpO,YAAY,G,uDAGPwH,GAAI,IAAD,OACRA,EAAEgM,iBAEC7U,KAAKgB,MAAM6b,OAAS7c,KAAKgB,MAAM8b,WAC9B9c,KAAKgU,SAAS,CAAC3S,YAAY,IAE3BkL,MAAM,GAAD,OAAIR,GAAJ,kBAA4B,CAC7BS,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBM,KAAMC,KAAKC,UAAU,CACjBoQ,UAAWrd,KAAKgB,MAAMqc,UACtBC,SAAUtd,KAAKgB,MAAMsc,SACrBT,MAAO7c,KAAKgB,MAAM6b,MAClBC,SAAU9c,KAAKgB,MAAM8b,aAG5BvU,MAAK,SAAAqE,GAAQ,OAAIA,EAASC,UAC1BtE,MAAK,SAAAwU,GACCA,EAAK3a,MACJ,EAAK4R,SAAS,CAAC5R,OAAO,EAAMqN,OAAQsN,EAAKtN,UAErB,EAAKxP,MAAjB+c,QACAC,IAAI,WAAYF,EAAKG,MAAO,CAAE1X,KAAM,MAE5C,EAAKvF,MAAMuc,YAAYb,UAAUoB,EAAKhc,KAAMgc,EAAK1Z,QAAS0Z,EAAKxZ,YAAawZ,EAAKnB,oBAAqBmB,EAAKG,OAE3GnU,GAAiBmD,KAAK6Q,EAAKG,QAG/B,EAAKlJ,SAAS,CAAC3S,YAAY,U,+BAK7B,IAAD,OACL,OACI,yBAAKvB,UAAU,cACX,wBAAIA,UAAU,QACV,0BAAMC,MAAO,CAACW,MAAO,YAArB,QACA,0BAAMX,MAAO,CAACW,MAAO,YAArB,SAGJ,0BAAMka,SAAU,SAAC/R,GAAO,EAAK+R,SAAS/R,IAAK/I,UAAU,QACjD,2BAAOqZ,MAAOnZ,KAAKgB,MAAMqc,UAAW/D,SAAU,SAACzQ,GAAO,EAAKmL,SAAS,CAACqJ,UAAWxU,EAAEqQ,OAAOC,SAAUrZ,UAAU,cAAcoB,KAAK,OAAOZ,KAAK,YAAYkZ,YAAY,eACnKxZ,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,cAAhBA,EAAMzB,UAA0B,0BAAM5X,UAAU,qBAC5EE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,cAAhBA,EAAMzB,SAAuBhI,KAGlE,2BAAOyJ,MAAOnZ,KAAKgB,MAAMsc,SAAUhE,SAAU,SAACzQ,GAAO,EAAKmL,SAAS,CAACsJ,SAAUzU,EAAEqQ,OAAOC,SAAUrZ,UAAU,cAAcoB,KAAK,OAAOZ,KAAK,WAAWkZ,YAAY,cAChKxZ,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,aAAhBA,EAAMzB,UAAyB,0BAAM5X,UAAU,qBAC3EE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,aAAhBA,EAAMzB,SAAsBhI,KAGjE,2BAAOyJ,MAAOnZ,KAAKgB,MAAM6b,MAAOvD,SAAU,SAACzQ,GAAO,EAAKmL,SAAS,CAAC6I,MAAOhU,EAAEqQ,OAAOC,SAAUrZ,UAAU,cAAcoB,KAAK,OAAOZ,KAAK,QAAQkZ,YAAY,WACvJxZ,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,UAAhBA,EAAMzB,UAAsB,0BAAM5X,UAAU,qBACxEE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,UAAhBA,EAAMzB,SAAmBhI,KAG9D,2BAAOyJ,MAAOnZ,KAAKgB,MAAM8b,SAAUxD,SAAU,SAACzQ,GAAO,EAAKmL,SAAS,CAAC8I,SAAUjU,EAAEqQ,OAAOC,SAAUrZ,UAAU,cAAcoB,KAAK,WAAWZ,KAAK,WAAWkZ,YAAY,yCACpKxZ,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,aAAhBA,EAAMzB,UAAyB,0BAAM5X,UAAU,qBAC3EE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,aAAhBA,EAAMzB,SAAsBhI,KAGhE1P,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,QAAhBA,EAAMzB,UAAoB,0BAAM3X,MAAO,CAACmV,UAAW,IAAKpV,UAAU,qBAC9FE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,QAAhBA,EAAMzB,SAAiBhI,KAG5D,4BAAQxO,KAAK,SAASpB,UAAU,eAAhC,gHAEA,uBAAGA,UAAU,YAAb,yBAA8C,kBAAC,KAAD,CAAMgR,GAAG,UAAT,iB,GAnF3CnR,IAAMiB,WAsGdwU,oBAZS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACH4S,YAAanH,YAAmBmH,EAAa5S,MAItCwL,CAA6C+H,aAAYC,K,+MC/GpEG,IAAwB,EA2JbC,G,4MAxJXxc,MAAQ,CACJyc,SAAU,QACV9U,OAAO,EACP8L,SAAUxP,GAAc,EAAG,M,kEAGV,IAAD,SACZyY,EAAY7X,SAAS8X,kBAAkB3d,KAAKC,MAAME,KADtC,eAGCud,GAHD,IAGhB,IAAI,EAAJ,qBAA4B,CAAC,IAArB/U,EAAoB,QACxBA,EAAMiV,OAAS,GACf5d,KAAKgU,SAAS,CAACrL,UACf,OANY,8BASJ9C,SAAS4N,eAAezT,KAAKgB,MAAMyT,UAEzCoJ,iBAAmB,WACrB,EAAKC,iB,oCAKT,SAASC,EAAQC,GACb,OAAQA,EAAI,GAAM,IAAMA,EAAIA,EAGhC,IALU,EAKNN,EAAY7X,SAAS8X,kBAAkB3d,KAAKC,MAAME,KAElD8d,EAAI,EAPE,eASOP,GATP,IASV,IAAI,EAAJ,qBAA4B,CACxBO,EADwB,QACdR,SACV,OAXM,8BAcVzd,KAAKgU,SAAS,CAACyJ,SAAUM,EAAQG,SAAUD,EAAK,KAAS,IAAMF,EAAQG,SAAUD,EAAK,S,6CAInFV,IACCvd,KAAKme,YAENne,KAAKgB,MAAM2H,QACV3I,KAAKgB,MAAM2H,MAAMyV,cAActe,UAAY,gBAC3CE,KAAKgB,MAAM2H,MAAM0V,W,gCAIfxV,GACNA,EAAEyV,kBAEF,IAAIC,EAAa1Y,SAAS2Y,uBAAuB,0BAEjDxe,KAAKme,YALI,qBAOSI,GAPT,IAOT,2BAA8B,CAAC,IAAtB5V,EAAqB,QAC1BA,EAAMyV,cAActe,UAAY,gBAChC6I,EAAM0V,SATD,8BAYT,IAZS,EAYLX,EAAY7X,SAAS8X,kBAAkB3d,KAAKC,MAAME,KAZ7C,eAcQud,GAdR,IAcT,IAAI,EAAJ,qBAA4B,CAAC,IAArB/U,EAAoB,QACxBA,EAAMyV,cAActe,UAAY,uBAChC6I,EAAM8V,QAhBD,8BAmBTze,KAAK0e,e,0CAGW7V,GAChBA,EAAEyV,kBAEF,IAHmB,EAGf1O,EAAkC,IAAvB/G,EAAE8V,YAAYC,OAAe5e,KAAK6e,WAAW9K,YACxDjC,EAAO9R,KAAKgB,MAAM2H,MAAM8U,SAAW,IAAM7N,EAEzC8N,EAAY7X,SAAS8X,kBAAkB3d,KAAKC,MAAME,KANnC,eAQFud,GARE,IAQnB,IAAI,EAAJ,qBAA4B,SAClBoB,YAAchN,GATL,8BAYnB,IAZmB,EAYfiN,EAAYlZ,SAAS8X,kBAAkB3d,KAAKC,MAAME,IAAI,UAZvC,eAcF4e,GAdE,IAcnB,IAAI,EAAJ,qBAA4B,SAClBhf,MAAM8W,MAAS,IAAI7W,KAAKgB,MAAM2H,MAAMmW,YAAY9e,KAAKgB,MAAM2H,MAAM8U,SAAU,KAflE,iC,mCAmBT,IAAD,OACTF,GAAwB3S,aAAY,WAChC,IADsC,EAClCmU,EAAYlZ,SAAS8X,kBAAkB,EAAK1d,MAAME,IAAI,UADpB,eAGrB4e,GAHqB,IAGtC,IAAI,EAAJ,qBAA4B,SAClBhf,MAAM8W,MAAS,IAAI,EAAK7V,MAAM2H,MAAMmW,YAAY,EAAK9d,MAAM2H,MAAM8U,SAAU,KAJ/C,iCAMvC,O,kCAIH5S,cAAc0S,M,wCAGA1U,GACd,IADiB,EACb+G,EAAkC,IAAvB/G,EAAE8V,YAAYC,OAAe5e,KAAK6e,WAAW9K,YACxDjC,EAAO9R,KAAKgB,MAAM2H,MAAM8U,SAAW,IAAM7N,EAEzCmP,EAAYlZ,SAAS8X,kBAAkB3d,KAAKC,MAAME,IAAI,UAJzC,eAMA4e,GANA,IAMjB,IAAI,EAAJ,qBAA4B,SAClBhf,MAAM8W,MAAS,IAAI/E,EAAK9R,KAAKgB,MAAM2H,MAAM8U,SAAU,KAP5C,iC,gCAWX5U,GACH0U,IACCvd,KAAKme,YAETtV,EAAEyV,kBAEF,IANS,EAMLZ,EAAY7X,SAAS8X,kBAAkB3d,KAAKC,MAAME,KAN7C,eAQQud,GARR,IAQT,IAAI,EAAJ,qBAA4B,CAAC,IAArB/U,EAAoB,QACxBA,EAAMyV,cAActe,UAAY,gBAChC6I,EAAM0V,SAVD,iC,+BAcH,IAAD,OACL,OAAO,yBAAKve,UAAU,iBAClB,2BAAOA,UAAS,yBAA4ByN,GAAIvN,KAAKgB,MAAMyT,SAAUnU,KAAMN,KAAKC,MAAME,IAAKA,IAAKH,KAAKC,MAAME,MAC3G,0BAAML,UAAU,OAAOyU,QAAS,SAAC1L,GAAO,EAAKmW,UAAUnW,KAAK,kBAAC,KAAD,CAAe9I,MAAO,CAACW,MAAO,cAC1F,0BAAMZ,UAAU,QAAQyU,QAAS,SAAC1L,GAAO,EAAKoW,UAAUpW,KAAK,kBAAC,KAAD,CAAW9I,MAAO,CAACW,MAAO,cACvF,yBAAKZ,UAAU,sBACX,uBAAGA,UAAU,uBAAuBE,KAAKC,MAAMif,UAC/C,uBAAGpf,UAAU,2BAA2BE,KAAKgB,MAAMyc,WAGvD,yBAAK3d,UAAU,sBACXwW,IAAK,SAACA,GAAS,EAAKuI,WAAavI,GACjC6I,YAAa,SAACtW,GAAO,EAAKuW,kBAAkBvW,IAC5CwW,aAAc,WAAO,EAAKlB,aAC1BmB,aAAc,WAAO,EAAKZ,cAC1BnK,QAAS,SAAC1L,GAAO,EAAK0W,oBAAoB1W,KAE1C,0BAAM/I,UAAU,iBAAiBwW,IAAK,SAACA,GAAS,EAAKkJ,MAAQlJ,GAAMhW,KAAMN,KAAKC,MAAME,IAAM,iB,GAnJtFR,IAAMiB,W,qBCwBpB6e,GAAqB,SAACC,EAAMvQ,EAAMuC,GAOpC,OACI,uBAAGgO,KAAMA,EAAMnL,QAAS,SAAC1L,GAAOA,EAAEyV,mBAAoB5M,IAAKA,EAAKwH,OAAO,SAASyG,IAAI,uBACnFxQ,IAKHyQ,G,4MACF5e,MAAQ,CACJyT,SAAUxP,GAAc,EAAG,M,uDAGrB,IAAD,OACD4a,GAAgB,EAChBC,GAAW,EAEf,GAAG9f,KAAKC,MAAMwC,SAASzC,KAAKC,MAAMwR,MAAM,GAAI,CACxC,IAAIsO,EAAQ,IAAIjc,KAAK9D,KAAKC,MAAMyC,QAAQqB,WACpCic,EAAQ,IAAIlc,KAAK9D,KAAKC,MAAMwC,SAASzC,KAAKC,MAAMwR,MAAM,GAAG1N,WAGzDgc,EAAMtN,gBAAkBuN,EAAMvN,eAC9BsN,EAAMnN,aAAeoN,EAAMpN,YAC3BmN,EAAMxN,YAAcyN,EAAMzN,YAE1BsN,GAAgB,GAGJza,KAAK6a,IAAIF,EAAQC,GAAS,KAE3B,IACXF,GAAW,GAInB,IAAII,EACElgB,KAAKC,MAAMwC,SAASzC,KAAKC,MAAMwR,MAAM,IACvCzR,KAAKC,MAAMwC,SAASzC,KAAKC,MAAMwR,MAAM,GAAG1Q,KAAKa,MAAQ5B,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAC5E5B,KAAKC,MAAMwC,SAASzC,KAAKC,MAAMwR,MAAM,IAAOqO,EAGjD,OAAQ,oCACHD,GAAiB,yBAAK/f,UAAU,gBpBnEtC,SAAgB+R,GACnB,IAAIC,EAAO,IAAIhO,KAAK+N,GAEhBS,GAAW,IAAIxO,MAAOyO,UAAYT,EAAKS,UACvCC,GAAY,IAAI1O,MAAO2O,cAAgBX,EAAKW,cAC5CC,EAAOZ,EAAKW,cACZE,EAAQb,EAAKc,WAAW,EACxBC,EAAMf,EAAKS,UAEf,OAAIC,EAAY,EAERE,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAaU,EAAIV,aAqBzB,IAAbG,EAAkB,QAEL,IAAbA,GAAkB,cACJ,IAAdE,GAAmBK,EAAM,IArBzB,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YASuCF,EAAM,GoB8BQwN,CAAO,IAAIrc,KAAK9D,KAAKC,MAAMyC,QAAQqB,aAEpF,yBACIjE,UAAS,kBAAaE,KAAKC,MAAM2Y,SAAW,WAAa,IACzDrE,QAAS,SAAC1L,GACH,EAAK5I,MAAMyC,QAAQR,WAAa,EAAKjC,MAAMyC,QAAQlB,UAGnD,EAAKvB,MAAM2Y,SACV,EAAK3Y,MAAMmgB,SAAS,EAAKngB,MAAMyC,QAAQd,KAEvC,EAAK3B,MAAMogB,SAAS,EAAKpgB,MAAMyC,WAGvC3C,MAAO,CACH0b,WAAYzb,KAAKC,MAAMqgB,SAAW,OAAUtgB,KAAKC,MAAMyC,QAAQR,WAAalC,KAAKC,MAAMyC,QAAQlB,QAAW,OAAUxB,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,KAAQ5B,KAAKC,MAAMyC,QAAQK,OAAsB,GAAZ,UACzMwd,OAASvgB,KAAKC,MAAMyC,QAAQR,WAAalC,KAAKC,MAAMyC,QAAQlB,QAAW,UAAY,GACnF6Y,QAASra,KAAKC,MAAMqgB,SAAW,mBAAqB,MAInDJ,GAAWL,KAAmB7f,KAAKC,MAAMqgB,UAC1C,0BAAMvgB,MAAO,CAACmR,OAAQ,eAAgBqD,QAAS,SAAC1L,GAC5CA,EAAEyV,kBACF,EAAKre,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAO,SAAD,OAAW,EAAKrX,MAAMyC,QAAQ3B,KAAKa,SAG7C,kBAAC,EAAD,CACI7B,MAAO,CAAC8W,MAAO,GAAI3F,OAAQ,GAAIvQ,SAAU,GAAI6f,WAAY,OAAQrP,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAMyC,QAAQ3B,KAAKL,MAAjC,MACjGJ,KAAMN,KAAKC,MAAMyC,QAAQ3B,KAAKT,KAAKqR,MAAMN,OAAO,GAAGrR,KAAKC,MAAMyC,QAAQ3B,KAAKT,KAAKmN,KAAK4D,OAAO,GAC5FnR,OAAQF,KAAKC,MAAMc,KAAKa,MAAQ5B,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAM5B,KAAKC,MAAMc,KAAKb,QAASF,KAAKC,MAAMc,KAAKb,SAAiBF,KAAKC,MAAMyC,QAAQ3B,KAAKb,QAASF,KAAKC,MAAMyC,QAAQ3B,KAAKb,WAMvLggB,IAAYL,IAAkB7f,KAAKC,MAAMqgB,UAC3C,yBAAKvgB,MAAO,CAAC8W,MAAO,OAGrB7W,KAAKC,MAAMyC,QAAQR,YAAclC,KAAKC,MAAMyC,QAAQlB,SAAYxB,KAAKC,MAAMwgB,WAAa,0BAAM3gB,UAAS,2BAAsBE,KAAKC,MAAM2Y,SAAW,SAAW,KACjK,kBAAC,sBAAD,CACI7D,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,KACvBjV,KAAKC,MAAM2Y,UAAY,kBAAC,KAAD,CAAW7Y,MAAO,CACtCW,MAAO,OACPC,SAAU,GACViP,SAAU,WACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRmD,OAAQ,YAMhB,yBAAKlX,UAAU,gBAENogB,GAAWL,IACZ,wBAAItL,QAAS,SAAC1L,GACVA,EAAEyV,kBACF,EAAKre,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAO,SAAD,OAAW,EAAKrX,MAAMyC,QAAQ3B,KAAKa,QAE9C9B,UAAU,YAAYC,MAAO,CAACW,MAAOV,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,IAAM,UAAY,KAL1G,UAMQ5B,KAAKC,MAAMyC,QAAQ3B,KAAKT,KAAKqR,MANrC,YAM8C3R,KAAKC,MAAMyC,QAAQ3B,KAAKT,KAAKmN,MAN3E,IAMmF,0BAAM3N,UAAU,WAAW8R,GAAM5R,KAAKC,MAAMyC,QAAQqB,aAI1I/D,KAAKC,MAAMyC,QAAQyM,MAAQ,uBAAGrP,UAAU,gBACrC,kBAAC,KAAD,CAAS2f,mBAAoBA,IACI,YAA5Bzf,KAAKC,MAAMyC,QAAQxB,MAAsB,oCACrClB,KAAKC,MAAMyC,QAAQyM,KAAKuR,QAAQ,UAAW,IACvCA,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAEjBA,QAAQ,mCAAoC,IAC5CA,QAAQ,oBAAqB,SAIT,SAA5B1gB,KAAKC,MAAMyC,QAAQxB,MAAmB,oCAClClB,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,KAAO,kBAAC,KAAD,CAAc7B,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqZ,YAAa,KAC1Hha,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,KAAO,kBAAC,KAAD,CAAkB7B,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqZ,YAAa,KAC9Hha,KAAKC,MAAMyC,QAAQyM,UAK7BnP,KAAKC,MAAMyC,QAAQ0M,eAAexJ,QAAU5F,KAAKC,MAAM0gB,YAAc,GAAK,uBAAG7gB,UAAU,gBAAb,+BAChDE,KAAKC,MAAMyC,QAAQ0M,eAAexJ,OADc,QAI1E5F,KAAKC,MAAMyC,QAAQkM,OAAOhJ,QAAU,yBAAK9F,UAAU,kBACjDE,KAAKC,MAAMyC,QAAQkM,OAAOlN,KAAI,SAACkf,EAAOnP,EAAO7C,GAC1C,IAAIiI,EACAgK,GAAS,EAWb,OARIhK,EADDjI,EAAOhJ,QAAU,GAAuB,IAAlBgJ,EAAOhJ,QACV,IAAV6L,EAAc,OAEd,MAGT7C,EAAOhJ,OAAS,GAAe,IAAV6L,IACpBoP,GAAS,GAEVpP,EAAQ,EACA,KAERoP,EACQ,yBAAKnP,IAAKD,EAAO3R,UAAU,QAAQC,MAAO,CAAC8W,UAC9C,yBAAK/W,UAAU,aAAayU,QAAS,SAAC1L,GAClCA,EAAEyV,kBACF,EAAKre,MAAM6gB,WAAWlS,KAEtB,yCAAWA,EAAOhJ,OAAO,IACzB,yBAAKmb,UAAU,QAAQrP,IAAKD,EAAOtR,IAAKygB,EAAMpb,KAAMwb,IAAKJ,EAAMtgB,SAInE,yBAAKoR,IAAKD,EAAO3R,UAAU,QAAQC,MAAO,CAAC8W,UAC/C,yBAAKkK,UAAU,QAAQxM,QAAS,SAAC1L,GAC7BA,EAAEyV,kBACF,EAAKre,MAAM6gB,WAAWlS,IACvBzO,IAAKygB,EAAMpb,KAAMwb,IAAKJ,EAAMtgB,cAKxCN,KAAKC,MAAMyC,QAAQoM,OAAOlJ,QAAU,yBAAK9F,UAAU,kBACjDE,KAAKC,MAAMyC,QAAQoM,OAAOpN,KAAI,SAACuf,EAAOxP,EAAO7C,GAC1C,OAAO,kBAAC,GAAD,CACH8C,IAAKD,EACLyN,SAAU+B,EAAM3gB,KAChBH,IAAK8gB,EAAMzb,aAMpBxF,KAAKC,MAAMyC,QAAQmM,MAAMjJ,QAAU,yBAAK9F,UAAU,iBAChDE,KAAKC,MAAMyC,QAAQmM,MAAMnN,KAAI,SAACsN,EAAMyC,EAAO7C,GACxC,OAAO,yBAAK9O,UAAU,eAAe4R,IAAKD,EAAO8C,QAAS,SAAC1L,GACvDA,EAAEyV,kBACF/X,OAAO2a,KAAKlS,EAAKxJ,KAAM,WAEvB,kBAAC,KAAD,CAA6B1F,UAAU,YAAYC,MAAO,CAACW,MAAO,aAClE,yBAAKZ,UAAU,qBACX,uBAAGA,UAAU,qBAAqBkP,EAAK1O,MACvC,uBAAGR,UAAU,qBAAqBkP,EAAKoI,KAAO,KAAOpI,EAAKoI,KAAO,KAAM+J,QAAQ,GAAK,MAAQ/b,KAAK+N,KAAKnE,EAAKoI,MAAQ,QAEvH,kBAAC,KAAD,CAAYtX,UAAU,gBAAgBC,MAAO,CAACW,MAAO,oBAM9DV,KAAKC,MAAMyC,QAAQ0M,eAAexJ,QAAU5F,KAAKC,MAAM0gB,YAAc,GAAK,yBAAK7gB,UAAU,kBACvFE,KAAKC,MAAMyC,QAAQ0M,eAAe1N,KAAI,SAACgB,EAAS+O,EAAOhP,GACpD,OAAO,kBAAC,GAAD,CAAkBke,YAAa,EAAK1gB,MAAM0gB,YAAY,EAAGL,UAAU,EAAMD,SAAU,aAAUS,WAAY,SAACM,GAAkB,EAAKnhB,MAAM6gB,WAAWM,IAAgB1P,IAAKD,EAAO/O,QAASA,EAASD,SAAUA,EAAUgP,MAAOA,UAK5OzR,KAAKC,MAAMqgB,UAAY,yBAAKxgB,UAAU,kBACpC,kBAAC,sBAAD,CACIiV,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MACtBjV,KAAKC,MAAMwgB,YAAczgB,KAAKC,MAAMyC,QAAQR,YAAclC,KAAKC,MAAMyC,QAAQlB,SAAWxB,KAAKC,MAAMyC,QAAQE,QAAU,kBAAC,KAAD,CAAkB7C,MAAO,CAACW,MAAO,gBAG9JV,KAAKC,MAAMqgB,UAAY,yBAAKxgB,UAAU,kBACpC,kBAAC,sBAAD,CACIiV,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MAClBjV,KAAKC,MAAMwgB,WAAazgB,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,KAAO5B,KAAKC,MAAMyC,QAAQR,WAAa,kBAAC,KAAD,CAAkBnC,MAAO,CAACW,MAAO,cAEhJV,KAAKC,MAAMwgB,WAAazgB,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,MAAQ5B,KAAKC,MAAMyC,QAAQR,YAAclC,KAAKC,MAAMyC,QAAQlB,UAAYxB,KAAKC,MAAMyC,QAAQK,QAAU,kBAAC,KAAD,CAAUhD,MAAO,CAACW,MAAO,cACtMV,KAAKC,MAAMwgB,WAAazgB,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,MAAO5B,KAAKC,MAAMyC,QAAQR,YAAclC,KAAKC,MAAMyC,QAAQlB,SAAWxB,KAAKC,MAAMyC,QAAQK,QAAU,kBAAC,KAAD,CAAahD,MAAO,CAACW,MAAO,cACvMV,KAAKC,MAAMwgB,WAAazgB,KAAKC,MAAMyC,QAAQ3B,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,MAAO5B,KAAKC,MAAMyC,QAAQR,WAAalC,KAAKC,MAAMyC,QAAQlB,SAAU,oCAC9I,kBAAC,GAAD,CAAY8S,QAAS,CACjB,CAACnF,KAAM,QAASlO,OAAQ,WACpB,EAAKhB,MAAMmQ,iBAAiB,EAAKnQ,MAAMyC,WAE3C,CAACyM,KAAM,SAAUlO,OAAQ,WACrB,EAAKhB,MAAMwQ,mBAAmB,EAAKxQ,MAAMyC,QAAQd,QAEtD8R,KAAM,yBAAyB1T,KAAKgB,MAAMyT,WAC7C,kBAAC,KAAD,CAAkB3U,UAAU,QAAQyN,GAAI,yBAAyBvN,KAAKgB,MAAMyT,SAAU1U,MAAO,CAACW,MAAO,sB,GAvO3Gf,IAAM0hB,eA6PbjM,oBAbS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BmI,GACxB,MAAO,CACHqP,aAAc5D,YAAmB4D,EAAcrP,MAIxCwL,CAA6CE,aAAWsK,K,0CC9RjExZ,KAA8BP,SAASQ,aAGvCC,IAAUF,MAAUG,OAAOC,WAE7B8a,IAAiB,EAgBf/L,GAAYC,cAdA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,OACjBxB,SAAU,WACVlP,MAAO,UACPmT,OAAQ,GACR8B,MAAO,GACPmE,OAAQ,EACR,UAAW,CACP1I,gBAAiB,YAKXoE,CAAsBI,MAElC2L,G,4MACFvgB,MAAQ,CACJwgB,iBAAiB,EACjBC,YAAY,EACZ1L,UAAW,G,+DAIR/V,KAAKkW,gBACD5P,IAAUF,GACTpG,KAAKkW,cAAcwL,KAAK3L,UAAY,IAEpC/V,KAAKkW,cAAcwL,KAAKC,OAAO,CAC3BpO,IAAK,IACLD,KAAM,EACNsO,SAAU,c,6CAOtBrb,OAAO6N,oBAAoB,OAAQpU,KAAK6hB,SAAS1N,KAAKnU,OACtDuG,OAAO6N,oBAAoB,YAAapU,KAAK8hB,UAAU3N,KAAKnU,S,kCAGnD,IACLqT,EADI,OAGJA,IADDrT,KAAKkW,eAAiBlW,KAAKkW,cAAcC,eAAiBnW,KAAKkW,cAAc6L,kBAAoB/hB,KAAKkW,cAAc8L,oBAMnHhiB,KAAKgB,MAAMygB,YAAcpO,GAAYrT,KAAKC,MAAMgiB,OAAOrc,SACpD0b,IACClI,aAAakI,IAEjBthB,KAAKC,MAAMkQ,eACXnQ,KAAKgU,SAAS,CAACyN,YAAY,IAE3BH,GAAiBlU,YAAW,WACxB,EAAK4G,SAAS,CAACyN,YAAY,MAC5B,Q,iCAKPzhB,KAAKgU,SAAS,CAACyN,YAAY,M,0CAI3Blb,OAAO0N,iBAAiB,OAAQjU,KAAK6hB,SAAS1N,KAAKnU,OACnDuG,OAAO0N,iBAAiB,YAAajU,KAAK8hB,UAAU3N,KAAKnU,OAEtDA,KAAKkW,gBACJlW,KAAKkW,cAAcwL,KAAK3L,UAAY,O,yCAIzBmM,GAEXA,EAAUzf,SAASmD,OAAS5F,KAAKC,MAAMwC,SAASmD,QAChDoH,KAAKC,UAAUiV,EAAUzf,SAAS,MAAQuK,KAAKC,UAAUjN,KAAKC,MAAMwC,SAAS,MAC3EzC,KAAKkW,cAAc8L,kBAAoBhiB,KAAKkW,cAAc6L,kBAAoB/hB,KAAKkW,cAAcC,eAAkBnW,KAAKkW,cAAc6L,kBAAkB,GAC1JG,EAAUzf,SAASyf,EAAUzf,SAASmD,OAAO,GAAG7E,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,OAE1E5B,KAAKgB,MAAMygB,YACVzhB,KAAKC,MAAMkQ,eAGfnQ,KAAKmiB,iBAEFniB,KAAKgB,MAAMwgB,iBACVxhB,KAAKgU,SAAS,CAACwN,iBAAiB,KAGrCxU,KAAKC,UAAUiV,EAAUzf,SAAS,MAAQuK,KAAKC,UAAUjN,KAAKC,MAAMwC,SAAS,KAC5EzC,KAAKkW,cAAcH,UAAU/V,KAAKkW,cAAc8L,kBAAoBhiB,KAAKgB,MAAM+U,a,4CAIjEK,EAAWC,GAC7B,OAAGA,EAAUN,YAAc/V,KAAKgB,MAAM+U,Y,iCAQtC/V,KAAKgU,SAAS,CAAC+B,UAAW/V,KAAKkW,cAAc8L,kBAAoBhiB,KAAKkW,cAAcC,iBACjFnW,KAAKkW,cAAcC,eAAiBnW,KAAKkW,cAAc6L,kBAAoB/hB,KAAKkW,cAAc8L,kBAAoB,IAC7GhiB,KAAKgB,MAAMwgB,iBACXxhB,KAAKgU,SAAS,CAACwN,iBAAiB,IAEjCxhB,KAAKgB,MAAMwgB,kBACVxhB,KAAKgU,SAAS,CAACwN,iBAAiB,IAC3BxhB,KAAKC,MAAMgiB,OAAOrc,QACnB5F,KAAKC,MAAMkQ,gBAKA,SAApBnQ,KAAKC,MAAMiB,MAAmBlB,KAAKC,MAAMwB,MAAMF,WAAWU,SAAWjC,KAAKkW,cAAcC,eAAiB,KACxGnW,KAAKC,MAAMyQ,eAGQ,WAApB1Q,KAAKC,MAAMiB,MAAqBlB,KAAKC,MAAMuC,OAAOP,SAAWjC,KAAKkW,cAAcC,eAAiB,KAChGnW,KAAKC,MAAMyQ,iB,mCAOf,OAAiD,IAA9C1Q,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO4D,OAC3B5F,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO,GAAG1B,KAAKqR,MAGL,IAA9C3R,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO4D,OAC5B,GAAN,OAAU5F,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO,GAAG1B,KAAKqR,MAArD,mBAAgE3R,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO,GAAG1B,KAAKqR,OAGzG,GAAN,OAAU3R,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO,GAAG1B,KAAKqR,MAArD,mBAAgE3R,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO4D,OAAO,K,+BAGpG,IAAD,OACL,OACI,yBAAK9F,UAAU,eACX,kBAAC,aAAD,CACI2W,SAAU,WAAO,EAAKA,YACtBH,IAAK,SAACA,GAAS,EAAKJ,cAAgBI,GACpCC,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,gBACV4W,UAAQ,IAEe,SAApB1W,KAAKC,MAAMiB,MAAmBlB,KAAKC,MAAMwB,MAAMF,WAAWW,WAAmC,WAApBlC,KAAKC,MAAMiB,MAAqBlB,KAAKC,MAAMuC,OAAON,YAAe,yBAAKpC,UAAU,kBACxJ,kBAAC4Z,GAAA,EAAD,CAAkB3Z,MAAO,CACrBW,MAAO,cAGdV,KAAKC,MAAMwC,SAASf,KAAI,SAACgB,EAAS+O,EAAOhP,GACtC,OAAO,kBAAC,GAAD,CACHke,YAAa,EACbL,UAAU,EACVQ,WAAY,SAACM,GAAkB,EAAKnhB,MAAM6gB,WAAWM,IACrDxI,SAAU,EAAK3Y,MAAMmP,eAAevM,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQd,OAChE6e,YAAa,EAAKxgB,MAAMmP,eAAexJ,OACvC8L,IAAKD,EACLhB,mBAAoB,SAAC7O,GAAS,EAAK3B,MAAMwQ,mBAAmB7O,IAC5DwO,iBAAkB,SAAC1N,GAAa,EAAKzC,MAAMmQ,iBAAiB1N,IAC5D+O,MAAOA,EACP/O,QAASA,EACTD,SAAUA,EACV4d,SAAU,SAAC3d,GAAa,EAAKzC,MAAMogB,SAAS3d,IAC5C0d,SAAU,SAAC7S,GAAQ,EAAKtN,MAAMmgB,SAAS7S,SAI1B,SAApBvN,KAAKC,MAAMiB,MAAmB,yBAAKpB,UAAU,mBACvCE,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO4D,QAAU,uBAAG9F,UAAU,UAAUE,KAAKoiB,aAA5B,YAC9CpiB,KAAKC,MAAMwB,MAAMF,WAAWS,OAAO4D,QAAU,uBAAG7F,MAAO,CAACmR,OAAQ,OAGjD,WAApBlR,KAAKC,MAAMiB,MAAqB,yBAAKpB,UAAU,iBAC3CE,KAAKC,MAAMkE,QAAU,uBAAGrE,UAAU,UAAUE,KAAKC,MAAMoiB,SAAlC,YACpBriB,KAAKC,MAAMkE,QAAU,uBAAGpE,MAAO,CAACmR,OAAQ,QAIlD,kBAAC,GAAD,CAAWpR,UAAS,2BAAsBE,KAAKgB,MAAMwgB,gBAAkB,SAAW,IAAM9gB,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,WAAO,EAAK4N,qBACpJniB,KAAKC,MAAMgiB,OAAOrc,QAAU,0BAAM9F,UAAU,yBAAyBE,KAAKC,MAAMgiB,OAAOrc,QAC1F,kBAAC,KAAD,CAAgB7F,MAAO,CAACW,MAAO,cAGd,WAApBV,KAAKC,MAAMiB,MAAqBlB,KAAKC,MAAMqiB,SAAW,kBAAC5I,GAAA,EAAD,CAAkB3Z,MAAO,CAC5EW,MAAO,UACPkP,SAAU,WACV0D,KAAM,EACNqC,MAAO,EACPqB,OAAQ,OACRzD,IAAK,uBAGNvT,KAAKC,MAAMwC,SAASmD,SAAW5F,KAAKC,MAAMqiB,SAAY,yBAAKxiB,UAAU,cACpE,kBAAC,KAAD,CAAUC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAE7E,0DAAgCjX,KAAKC,MAAM6Q,U,GA7L1CnR,IAAMiB,WA2MZwU,gBAPS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,SAIN2T,CAAyBmM,I,yCCpOlC9B,GAAqB,SAACC,EAAMvQ,EAAMuC,GAAb,OACvB,uBAAGgO,KAAMA,EAAMnL,QAAS,SAAC1L,GAAOA,EAAEyV,mBAAoB5M,IAAKA,EAAKwH,OAAO,SAASyG,IAAI,uBACjFxQ,IA4EQoT,G,uKAvED,IAAD,OACL,OACI,yBAAKziB,UAAU,uBACRE,KAAKC,MAAMmP,eAAexJ,QAAU,yBAAK9F,UAAU,sBAClD,kBAACiR,GAAA,EAAD,CAAQjR,UAAU,oBAAoBC,MAAO,CAAC8W,MAAO,IAAKtC,QAAS,WAAO,EAAKtU,MAAMuiB,2BACjF,kBAAC,KAAD,CAAWziB,MAAO,CAACW,MAAO,cAGQ,IAArCV,KAAKC,MAAMmP,eAAexJ,QAAe,yBAAK9F,UAAU,sBACrD,wBAAIA,UAAU,aAAd,UAA8BE,KAAKC,MAAMmP,eAAe,GAAGrO,KAAKT,KAAKqR,MAArE,YAA8E3R,KAAKC,MAAMmP,eAAe,GAAGrO,KAAKT,KAAKmN,MAArH,IAA6H,0BAAM3N,UAAU,WAAW8R,GAAM5R,KAAKC,MAAMmP,eAAe,GAAGrL,aAC3L,uBAAGjE,UAAU,gBAAe,kBAAC,KAAD,CAAS2f,mBAAoBA,IACrDzf,KAAKC,MAAMmP,eAAe,GAAGD,KAC7BnP,KAAKC,MAAMmP,eAAe,GAAGD,KAD7B,4DAEInP,KAAKC,MAAMmP,eAAe,GAAGR,OAAOhJ,OACpC5F,KAAKC,MAAMmP,eAAe,GAAGP,MAAMjJ,OACnC5F,KAAKC,MAAMmP,eAAe,GAAGN,OAAOlJ,OACpC5F,KAAKC,MAAMmP,eAAe,GAAGA,eAAexJ,OALhD,QAWP5F,KAAKC,MAAMmP,eAAexJ,OAAS,GAAI,yBAAK9F,UAAU,sBACnD,wBAAIA,UAAU,aAAd,uBACA,uBAAGA,UAAU,gBAAb,UAAgCE,KAAKC,MAAMmP,eAAexJ,OAA1D,kBAIL5F,KAAKC,MAAM2O,OAAOhJ,QAAU,yBAAK9F,UAAU,oBACzCE,KAAKC,MAAM2O,OAAOlN,KAAI,SAACkf,EAAOnP,EAAO7C,GAClC,OAAO,yBAAK8C,IAAKD,EAAO3R,UAAU,kBAAkBC,MAAO,CAACia,YAAapL,EAAO6C,EAAM,GAAK,EAAI,IAC3F,0BAAM3R,UAAU,mBAAmByU,QAAS,WAAO,EAAKtU,MAAMwiB,YAAY7B,EAAMrT,MAC5E,kBAAC,KAAD,CAAWxN,MAAO,CAACW,MAAO,WAE9B,yBAAKP,IAAKygB,EAAMpb,KAAMwb,IAAI,kBAKnChhB,KAAKC,MAAM6O,OAAOlJ,QAAU,yBAAK9F,UAAU,oBACzCE,KAAKC,MAAM6O,OAAOpN,KAAI,SAACuf,EAAOxP,EAAO3C,GAClC,OAAO,yBAAK4C,IAAKD,EAAO3R,UAAU,mBAC9B,kBAACiR,GAAA,EAAD,CAAQjR,UAAU,oBAAoBC,MAAO,CAACiR,SAAU,IAAKuD,QAAS,WAAO,EAAKtU,MAAMyiB,YAAYzB,EAAM1T,MACtG,kBAAC,KAAD,CAAWxN,MAAO,CAACW,MAAO,cAG9B,kBAAC,KAAD,CAAeX,MAAO,CAACW,MAAO,aAE9B,uBAAGZ,UAAU,yBAAyBmhB,EAAM3gB,aAKrDN,KAAKC,MAAM4O,MAAMjJ,QAAU,yBAAK9F,UAAU,oBACxCE,KAAKC,MAAM4O,MAAMnN,KAAI,SAACsN,EAAMyC,EAAO5C,GAChC,OAAO,yBAAK6C,IAAKD,EAAO3R,UAAU,mBAC9B,kBAACiR,GAAA,EAAD,CAAQjR,UAAU,oBAAoBC,MAAO,CAACiR,SAAU,IAAKuD,QAAS,WAAO,EAAKtU,MAAM0iB,WAAW3T,EAAKzB,MACpG,kBAAC,KAAD,CAAWxN,MAAO,CAACW,MAAO,cAG9B,kBAAC,KAAD,CAA6BX,MAAO,CAACW,MAAO,aAE5C,uBAAGZ,UAAU,yBAAyBkP,EAAK1O,gB,GA/D9CX,IAAMiB,W,0CCTzBgiB,I,QAAoB,CACtB/I,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxBwG,QAAwB,IACxBL,YAAwB,OACxB3F,UAAwB,wBACxBoH,WAAwB,sBACxBlD,OAAwB,OACxB1B,MAAO,OACP3F,OAAQ,WA0CD2R,G,4MApCX7hB,MAAQ,CACJyQ,MAAO,G,uDAGD,IAAD,OACL,OAAO,kBAAC,KAAD,CACHgJ,QAAQ,EACRC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAAO6iB,GACPjI,aAAa,UAEb,yBAAK7a,UAAU,eAAeyU,QAAS,WACnC,EAAKtU,MAAMsK,UAEX,kBAAC,KAAD,CAAWxK,MAAO,CAACW,MAAO,OAAQC,SAAU,GAAImiB,QAAS,OAG5D9iB,KAAKC,MAAM2O,OAAO5O,KAAKgB,MAAMyQ,MAAM,IAAM,yBAAK3R,UAAU,cAAcyU,QAAS,WAC5E,EAAKP,SAAS,CAACvC,MAAO,EAAKzQ,MAAMyQ,MAAM,MAEvC,kBAAC,KAAD,CAAoB1R,MAAO,CAACW,MAAO,OAAQC,SAAU,GAAImiB,QAAS,OAGtE,yBAAKhjB,UAAU,yBAAyByU,QAAS,WAAO,EAAKtU,MAAMsK,UAC/D,yBAAKzK,UAAU,eAAeK,IAAKH,KAAKC,MAAM2O,OAAO5O,KAAKgB,MAAMyQ,OAAOjM,KAAMwb,IAAI,qBAGpFhhB,KAAKC,MAAM2O,OAAO5O,KAAKgB,MAAMyQ,MAAM,IAAM,yBAAK3R,UAAU,cAAcyU,QAAS,WAC5E,EAAKP,SAAS,CAACvC,MAAO,EAAKzQ,MAAMyQ,MAAM,MAEvC,kBAAC,KAAD,CAAkB1R,MAAO,CAACW,MAAO,OAAQC,SAAU,GAAImiB,QAAS,Y,GA/B3DnjB,IAAMiB,W,0CCoIZmiB,G,4MA3JX/hB,MAAQ,CACJgiB,mBAAoB,EACpB7T,KAAM,I,sDAGFA,GACJnP,KAAKgU,SAAS,CAAC7E,W,8BAGX8T,GAGJ,IAFA,IAAIC,GAASD,EAAME,eAAiBF,EAAMG,cAAcD,eAAeD,MAE9DzR,EAAQ,EAAGA,EAAQyR,EAAMtd,OAAQ6L,IACtC,GAA0B,SAAtByR,EAAMzR,GAAO4R,KAAiB,CAC9B,IAAIrU,EAAOkU,EAAMzR,GAAO6R,YAExBtjB,KAAKC,MAAMsjB,QAAQvU,GAAM,M,2CAM9BhP,KAAKC,MAAM2C,SACN,KAAKyW,KAAKrZ,KAAKgB,MAAMmO,OAAUnP,KAAKC,MAAMujB,uBAAuB5d,QAAW5F,KAAKC,MAAM2O,OAAOhJ,QAAW5F,KAAKC,MAAM4O,MAAMjJ,QAAW5F,KAAKC,MAAM6O,OAAOlJ,QACvJ5F,KAAKC,MAAMwjB,uB,+BAKb,IAAD,OACL,OACI,yBAAK3jB,UAAS,uBAAkBE,KAAKC,MAAMyjB,OAAS,GAAI,WACpD,kBAACC,GAAA,EAAD,CAAYC,UAAW,QAAS9jB,UAAU,iBACtC,kBAAC,KAAD,CAAgBC,MAAO,CAACsU,UAAW,gBAAiB3T,MAAO,aAE3D,2BACIQ,KAAK,OACL2iB,UAAQ,EACRvK,SAAU,SAACzQ,GAAO,EAAK5I,MAAMsjB,QAAQ1a,IACrC0E,GAAG,aACHxN,MAAO,CAACkX,QAAS,QACjB6M,OAAO,qJAIf,8BAAUhkB,UAAU,oBAAoByN,GAAG,gBAAgBwW,QAAS,SAAClb,GAAO,EAAKkb,QAAQlb,IACrFmb,UAAW,SAACnb,IACS,KAAdA,EAAEob,SAAmB,EAAKhkB,MAAM2C,QAAW,EAAK5B,MAAMmO,KAAKvJ,QAC1D,EAAK3F,MAAMikB,qBAGG,KAAdrb,EAAEob,SAAmBpb,EAAEsb,YACvBtb,EAAEgM,kBACC,KAAKwE,KAAK,EAAKrY,MAAMmO,OAAW,EAAKlP,MAAMujB,uBAAuB5d,QAAa,EAAK3F,MAAM2O,OAAOhJ,QAAY,EAAK3F,MAAM4O,MAAMjJ,QAAY,EAAK3F,MAAM6O,OAAOlJ,UACvJ,EAAK3F,MAAM2C,QAKX,EAAK3C,MAAMmkB,gBAAgB,EAAKpjB,MAAMmO,MACtC,EAAK6E,SAAS,CAAC7E,KAAM,OALrB,EAAKlP,MAAMwO,YAAY,EAAKzN,MAAMmO,MAClC,EAAK6E,SAAS,CAAC7E,KAAM,MAMNtJ,SAAS4N,eAAe,iBAC9B1T,MAAMskB,UAAY,UAI3CC,QAAS,WACL,IAAIC,EAAe1e,SAAS4N,eAAe,iBAC3C8Q,EAAaxkB,MAAMmR,OAAS,MAC5BqT,EAAaxkB,MAAMmR,OAAUqT,EAAaC,aAAc,KAErDD,EAAaC,aAAe,IAC3BD,EAAaxkB,MAAMskB,UAAY,QAE/BE,EAAaxkB,MAAMskB,UAAaE,EAAaC,aAAc,MAGnElL,SAAU,SAACzQ,GACP,EAAK5I,MAAMkE,OAAO0E,EAAEqQ,OAAOC,MAAO,EAAKnY,MAAMmO,MAC7C,EAAK6E,SAAS,CAAC7E,KAAMtG,EAAEqQ,OAAOC,SAElCA,MAAOnZ,KAAKgB,MAAMmO,QAGpBnP,KAAKgB,MAAMmO,MAAQ,yBAAKrP,UAAU,eAAf,qBAEnBE,KAAKC,MAAM2C,QAAU,kBAAC,sBAAD,CACnBmS,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,MACrB,KAAKoE,KAAKrZ,KAAKgB,MAAMmO,SAAWnP,KAAKC,MAAM4O,MAAMjJ,UAAY5F,KAAKC,MAAM2O,OAAOhJ,UAAW5F,KAAKC,MAAM6O,OAAOlJ,UAAY5F,KAAKC,MAAMujB,uBAAuB5d,SAAW,kBAAC+d,GAAA,EAAD,CAAYpP,QAAS,WACrL,EAAKtU,MAAMwO,YAAY,EAAKzN,MAAMmO,MAClC,EAAK6E,SAAS,CAAC7E,KAAM,KACFtJ,SAAS4N,eAAe,iBAC9B1T,MAAMskB,UAAY,QAChCvkB,UAAU,oBACb,kBAAC,KAAD,CAAUC,MAAO,CAACW,MAAO,eAIhCV,KAAKC,MAAM2C,QAAU,kBAAC,sBAAD,CAClBmS,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,KAEpBjI,KAAKC,UAAU,CACXkC,KAAMnP,KAAKC,MAAM8P,YAAYZ,KAC7BP,OAAQ5O,KAAKC,MAAM8P,YAAYnB,OAC/BE,OAAQ9O,KAAKC,MAAM8P,YAAYjB,OAC/BD,MAAO7O,KAAKC,MAAM8P,YAAYlB,MAC9B2U,uBAAwBxjB,KAAKC,MAAM8P,YAAYX,mBAEnDpC,KAAKC,UAAU,CACXkC,KAAMnP,KAAKgB,MAAMmO,KACjBP,OAAQ5O,KAAKC,MAAM2O,OACnBE,OAAQ9O,KAAKC,MAAM6O,OACnBD,MAAO7O,KAAKC,MAAM4O,MAClB2U,uBAAwBxjB,KAAKC,MAAMujB,0BAChC,kBAACG,GAAA,EAAD,CAAYrN,IAAK,SAACmO,GACrBA,GACAA,EAAK1kB,MAAM2kB,YAAY,eAAgB,IAAK,cAGhDnQ,QAAS,WACL,EAAKtU,MAAMmkB,gBAAgB,EAAKpjB,MAAMmO,MACtC,EAAK6E,SAAS,CAAC7E,KAAM,KACFtJ,SAAS4N,eAAe,iBAC9B1T,MAAMskB,UAAY,QAChCvkB,UAAU,oBACb,kBAAC,KAAD,CAAkBC,MAAO,CAACW,MAAO,cAGrC,kBAACijB,GAAA,EAAD,CAAYrN,IAAK,SAACmO,GACVA,GACAA,EAAK1kB,MAAM2kB,YAAY,cAAe,IAAK,cAG/CnQ,QAAS,WACL,EAAKtU,MAAMwjB,oBACQ5d,SAAS4N,eAAe,iBAC9B1T,MAAMskB,UAAY,QAChCvkB,UAAU,oBACb,kBAAC,KAAD,CAAWC,MAAO,CAACW,MAAO,eAIlC,kBAAC,KAAD,CAAqBikB,cAAY,EAACC,SAAU,SAAC/N,EAAOmM,GAChD,EAAKhP,SAAS,CAACgP,+B,GArJRrjB,IAAMiB,W,qBCA3BikB,G,4MACF7jB,MAAQ,CACJgiB,mBAAoB,G,uDAGd,IAAD,OACL,OACI,yBAAKljB,UAAU,gBACX,kBAACiR,GAAA,EAAD,CAAQjR,UAAU,YAAYyU,QAAS,WAAO,EAAKtU,MAAM6kB,+BAAzD,SAIA,kBAAC/T,GAAA,EAAD,CAAQjR,UAAU,cAAcyU,QAAS,WAAO,EAAKtU,MAAM8kB,gCAA3D,WAIA,yBAAKjlB,UAAU,QAIbE,KAAKC,MAAMmP,eAAe,GAAGrO,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,KAA6C,SAAtC5B,KAAKC,MAAMmP,eAAe,GAAGlO,MAAwD,IAArClB,KAAKC,MAAMmP,eAAexJ,QAAiB,kBAACmL,GAAA,EAAD,CAAQjR,UAAU,mBAAmByU,QAAS,WACxM,EAAKtU,MAAM+kB,mBAEX,kBAAC,KAAD,CAAkBjlB,MAAO,CAACW,MAAO,eAGnCV,KAAKC,MAAMmP,eAAevM,MAAK,SAAAH,GAAO,OAAIA,EAAQ3B,KAAKa,MAAQ,EAAK3B,MAAMc,KAAKa,QAAQ,kBAACmP,GAAA,EAAD,CAAQjR,UAAU,qBAAqByU,QAAS,WACrI,EAAKtU,MAAMoQ,kBAEX,kBAAC,KAAD,CAAmBtQ,MAAO,CAACW,MAAO,cAGtC,kBAACqQ,GAAA,EAAD,CAAQjR,UAAU,oBAAoByU,QAAS,WAC3C,EAAKtU,MAAMglB,kCAEX,kBAAC,KAAD,CAAWllB,MAAO,CAACW,MAAO,mB,GAnCjBf,IAAMiB,WA+CpBwU,gBANS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,QAILqU,CAAyByP,ICvCpCK,IAAe,EAGbC,G,kDACF,WAAYllB,GAAQ,IAAD,8BACf,cAAMA,IAIVe,MAAQ,CACJoO,eAAgB,GAChBoU,uBAAwB,EAAKvjB,MAAMoD,QAAQC,gBAC3CwL,OAAQ,GACRD,MAAO,GACPD,OAAQ,GACRoU,mBAAoB,EACpBoC,cAAc,EACdhE,aAAc,GACdxe,QAAQ,EACRmN,YAAa,GACbsV,WAAW,EACXC,MAAM,GAjBS,EAoBnBC,QAAU5lB,IAAM6lB,YApBG,EAqBnBC,YAAc,EArBK,EAgDnBC,WAAa,SAAC7c,GACVA,EAAEgM,iBACFhM,EAAEyV,mBAlDa,EAqDnBqH,aAAe,SAAC9c,GACZA,EAAEgM,iBACFhM,EAAEyV,kBACF,EAAKmH,cACD5c,EAAE+c,aAAa1C,OAASra,EAAE+c,aAAa1C,MAAMtd,OAAS,GACtD,EAAKoO,SAAS,CAACsR,MAAM,KA1DV,EA8DnBO,cAAgB,SAAChd,GACbA,EAAEgM,iBACFhM,EAAEyV,kBACF,EAAKmH,cACoB,IAArB,EAAKA,aACL,EAAKzR,SAAS,CAACsR,MAAM,KAnEV,EAuEnBQ,WAAa,SAACjd,GACVA,EAAEgM,iBACFhM,EAAEyV,kBACF,EAAKtK,SAAS,CAACsR,MAAM,IACjBzc,EAAE+c,aAAa/W,OAAShG,EAAE+c,aAAa/W,MAAMjJ,OAAS,IACxD,EAAKmgB,gBAAgBld,EAAE+c,aAAa/W,OACpChG,EAAE+c,aAAaI,YACf,EAAKP,YAAc,IA9EN,EAkFnBM,gBAAkB,SAAClX,GACf,IAAK,IAAIlJ,EAAI,EAAGA,EAAIkJ,EAAMjJ,OAAQD,IAC9B,EAAK4d,QAAQ1U,GAAO,GAAO,IAlF/B,EAAK0V,aAAe5kB,IAAM6lB,YAFX,E,gEAwBVxlB,KAAKC,MAAMoD,QAAQC,gBAAgBsC,QACpC5F,KAAKC,MAAMkV,eAAe3G,WAAW,IAGzC,IAAIyX,EAAMjmB,KAAKulB,QAAQW,QACvBD,EAAIhS,iBAAiB,YAAajU,KAAK2lB,cACvCM,EAAIhS,iBAAiB,YAAajU,KAAK6lB,eACvCI,EAAIhS,iBAAiB,WAAYjU,KAAK0lB,YACtCO,EAAIhS,iBAAiB,OAAQjU,KAAK8lB,YAElC,IAAIK,EAAM,eAAOnZ,KAAKoZ,MAAMC,aAAaC,QAAQ,YAE9CH,EAAO,SAASnmB,KAAKC,MAAMuD,WAC1BxD,KAAKukB,aAAa2B,QAAQK,QAAQJ,EAAO,SAASnmB,KAAKC,MAAMuD,a,6CAIjE,IAAIyiB,EAAMjmB,KAAKulB,QAAQW,QACvBD,EAAI7R,oBAAoB,YAAapU,KAAK2lB,cAC1CM,EAAI7R,oBAAoB,YAAapU,KAAK6lB,eAC1CI,EAAI7R,oBAAoB,WAAYpU,KAAK0lB,YACzCO,EAAI7R,oBAAoB,OAAQpU,KAAK8lB,c,kCA2C7B3W,GACR,GAAG,KAAKkK,KAAKlK,IAAWnP,KAAKgB,MAAMwiB,uBAAuB5d,QAAY5F,KAAKgB,MAAM4N,OAAOhJ,QAAY5F,KAAKgB,MAAM6N,MAAMjJ,QAAW5F,KAAKgB,MAAM8N,OAAOlJ,OAAQ,CACtJ,IAAIugB,EAAM,eAAOnZ,KAAKoZ,MAAMC,aAAaC,QAAQ,YAGjD,OAFAH,EAAO,SAASnmB,KAAKC,MAAMuD,UAAY,GACvC6iB,aAAaG,QAAQ,SAAUxZ,KAAKC,UAAUkZ,IACtCnmB,KAAKC,MAAMiB,MACf,IAAK,OACDlB,KAAKC,MAAMua,aAAa/L,YAAY,CAChCU,KAAMA,EACN7M,OAAQtC,KAAKC,MAAMqC,OACnBsM,OAAQ5O,KAAKgB,MAAM4N,OACnBC,MAAO7O,KAAKgB,MAAM6N,MAClBC,OAAQ9O,KAAKgB,MAAM8N,OACnBtL,SAAUxD,KAAKC,MAAMuD,SACrB4L,eAAgBpP,KAAKgB,MAAMwiB,wBAC5BxjB,KAAKC,MAAMc,KAAKoL,UACnB,MACJ,IAAK,SACDnM,KAAKC,MAAMkV,eAAe1G,YAAY,CAClCU,KAAMA,EACN5M,OAAQvC,KAAKC,MAAMsC,OACnBqM,OAAQ5O,KAAKgB,MAAM4N,OACnBC,MAAO7O,KAAKgB,MAAM6N,MAClBC,OAAQ9O,KAAKgB,MAAM8N,OACnBtL,SAAUxD,KAAKC,MAAMuD,SACrB4L,eAAgBpP,KAAKgB,MAAMwiB,wBAC5BxjB,KAAKC,MAAMc,KAAKoL,UAM3BnM,KAAKgU,SAAS,CAACwP,uBAAwB,GAAI5U,OAAQ,GAAIE,OAAQ,GAAID,MAAO,KAC1E7O,KAAKukB,aAAa2B,QAAQK,QAAQ,O,sCAI1BpX,GACZ,GAAG,KAAKkK,KAAKlK,IAAWnP,KAAKgB,MAAMwiB,uBAAuB5d,QAAY5F,KAAKgB,MAAM4N,OAAOhJ,QAAY5F,KAAKgB,MAAM8N,OAAOlJ,QAAY5F,KAAKgB,MAAM6N,MAAMjJ,OAAQ,CACvJ,OAAQ5F,KAAKC,MAAMiB,MACf,IAAK,OACDlB,KAAKC,MAAMua,aAAazK,YAAY,CAChCnO,IAAK5B,KAAKgB,MAAM+O,YAAYnO,IAC5BuN,KAAMA,EACN7M,OAAQtC,KAAKC,MAAMqC,OACnBsM,OAAQ5O,KAAKgB,MAAM4N,OACnBC,MAAO7O,KAAKgB,MAAM6N,MAClBC,OAAQ9O,KAAKgB,MAAM8N,OACnBtL,SAAUxD,KAAKC,MAAMuD,SACrB4L,eAAgBpP,KAAKgB,MAAMwiB,wBAC5BxjB,KAAKC,MAAMc,KAAKoL,UACnB,MACJ,IAAK,SACDnM,KAAKC,MAAMkV,eAAepF,YAAY,CAClCnO,IAAK5B,KAAKgB,MAAM+O,YAAYnO,IAC5BuN,KAAMA,EACN5M,OAAQvC,KAAKC,MAAMsC,OACnBqM,OAAQ5O,KAAKgB,MAAM4N,OACnBC,MAAO7O,KAAKgB,MAAM6N,MAClBC,OAAQ9O,KAAKgB,MAAM8N,OACnBtL,SAAUxD,KAAKC,MAAMuD,SACrB4L,eAAgBpP,KAAKgB,MAAMwiB,wBAC5BxjB,KAAKC,MAAMc,KAAKoL,UAM5BnM,KAAKyjB,uB,sCAKR,OAAQzjB,KAAKC,MAAMiB,MACf,IAAK,OACDlB,KAAKC,MAAMua,aAAanK,cAAc,CAClC/N,OAAQtC,KAAKC,MAAMqC,OACnBgO,eAAgBtQ,KAAKgB,MAAMoO,gBAC5BpP,KAAKC,MAAMc,KAAKoL,UACnB,MACJ,IAAK,SACDnM,KAAKC,MAAMkV,eAAe9E,cAAc,CACpC/C,QAAStN,KAAKC,MAAMsC,OACpBiB,SAAUxD,KAAKC,MAAMuD,SACrB8M,eAAgBtQ,KAAKgB,MAAMoO,gBAC5BpP,KAAKC,MAAMc,KAAKoL,UAM3BnM,KAAKgU,SAAS,CAAC5E,eAAgB,O,uCAGlB1M,GACb,OAAQ1C,KAAKC,MAAMiB,MACf,IAAK,OACDwB,EAAQJ,OAAStC,KAAKC,MAAMwB,MAAMF,WAAWK,IAC7Cc,EAAQc,SAAWxD,KAAKC,MAAMuD,SAC9BxD,KAAKC,MAAMua,aAAapK,iBAAiB1N,EAAS1C,KAAKC,MAAMc,KAAKoL,UAClE,MACJ,IAAK,SACDzJ,EAAQH,OAASvC,KAAKC,MAAMsC,OAC5BG,EAAQc,SAAWxD,KAAKC,MAAMuD,SAC9BxD,KAAKC,MAAMkV,eAAe/E,iBAAiB1N,EAAS1C,KAAKC,MAAMc,KAAKoL,a,yCAO7DvK,GACf,OAAQ5B,KAAKC,MAAMiB,MACf,IAAK,OACDlB,KAAKC,MAAMua,aAAa/J,mBAAmB7O,GAC3C,MACJ,IAAK,SACD5B,KAAKC,MAAMkV,eAAe1E,mBAAmB7O,EAAK5B,KAAKC,MAAMuD,a,mDAQrExD,KAAKgU,SAAS,CACVwP,uBAAwBxjB,KAAKgB,MAAMoO,eACnCA,eAAgB,O,oDAKpBpP,KAAKC,MAAMkV,eAAe3G,WAAWxO,KAAKgB,MAAMoO,gBAChDpP,KAAKgU,SAAS,CACV5E,eAAgB,O,sDAKpBpP,KAAKgU,SAAS,CACV5E,eAAgB,O,uCAKpBpP,KAAKukB,aAAa2B,QAAQK,QAAQvmB,KAAKgB,MAAMoO,eAAe,GAAGD,MAE/DnP,KAAKgB,MAAMoO,eAAe,GAAGR,OAAOlN,KAAI,SAACoB,EAAG6C,GACxC7C,EAAEyK,GAAK5H,KAEX3F,KAAKgB,MAAMoO,eAAe,GAAGN,OAAOpN,KAAI,SAACoB,EAAG6C,GACxC7C,EAAEyK,GAAK5H,KAEX3F,KAAKgB,MAAMoO,eAAe,GAAGP,MAAMnN,KAAI,SAACoB,EAAG6C,GACvC7C,EAAEyK,GAAK5H,KAGX3F,KAAKgU,SAAS,CACVpF,OAAQ5O,KAAKgB,MAAMoO,eAAe,GAAGR,OACrCE,OAAQ9O,KAAKgB,MAAMoO,eAAe,GAAGN,OACrCD,MAAO7O,KAAKgB,MAAMoO,eAAe,GAAGP,MACpCO,eAAgB,GAChBoU,uBAAwBxjB,KAAKgB,MAAMoO,eAAe,GAAGA,eACrDxM,QAAQ,EACRmN,YAAa/P,KAAKgB,MAAMoO,eAAe,O,2CAIzB,IAAD,OACbqX,EAAgBzmB,KAAKC,MAAMwC,SAASikB,QAAQrY,UAAUxL,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKa,MAAQ,EAAK3B,MAAMc,KAAKa,OAEnG6kB,EAAc7X,OAAOlN,KAAI,SAACoB,EAAG6C,GACzB7C,EAAEyK,GAAK5H,KAEX8gB,EAAc3X,OAAOpN,KAAI,SAACoB,EAAG6C,GACzB7C,EAAEyK,GAAK5H,KAEX8gB,EAAc5X,MAAMnN,KAAI,SAACoB,EAAG6C,GACxB7C,EAAEyK,GAAK5H,KAGR8gB,IACCzmB,KAAKukB,aAAa2B,QAAQK,QAAQE,EAActX,MAChDnP,KAAKgU,SAAS,CACVpF,OAAQ6X,EAAc7X,OACtBE,OAAQ2X,EAAc3X,OACtBD,MAAO4X,EAAc5X,MACrBO,eAAgB,GAChBoU,uBAAwBiD,EAAcrX,eACtCxM,QAAQ,EACRmN,YAAa0W,O,0CAMrBzmB,KAAKukB,aAAa2B,QAAQK,QAAQ,IAClCvmB,KAAKgU,SAAS,CACVpF,OAAQ,GACRE,OAAQ,GACRD,MAAO,GACPO,eAAgB,GAChBoU,uBAAwB,GACxB5gB,QAAQ,EACRmN,YAAa,O,qCAIL,IAAD,OAIX,OAHGmV,IACC9L,aAAa8L,IAETllB,KAAKC,MAAMiB,MACf,IAAK,OACDgkB,GAAe9X,YAAW,WACtB,EAAKnN,MAAMua,aAAarK,aAAa,CACjC3M,SAAU,EAAKvD,MAAMuD,SACrBlB,OAAQ,EAAKrC,MAAMqC,OACnBC,OAAQ,EAAKtC,MAAMc,KAAKa,KACzB,EAAK3B,MAAMc,KAAKoL,YACpB,KACH,MACJ,IAAK,SACD+Y,GAAe9X,YAAW,WACtB,EAAKnN,MAAMkV,eAAehF,aAAa,CACnC3M,SAAU,EAAKvD,MAAMuD,SACrB8J,QAAS,EAAKrN,MAAMsC,OACpBA,OAAQ,EAAKtC,MAAMc,KAAKa,KACzB,EAAK3B,MAAMc,KAAKoL,YACpB,Q,qCAQX,OAAQnM,KAAKC,MAAMiB,MACf,IAAK,OACDlB,KAAKC,MAAMua,aAAa9J,aAAa,CAAClN,SAAUxD,KAAKC,MAAMuD,UAAWxD,KAAKC,MAAMc,KAAKoL,UACtF,MACJ,IAAK,SACDnM,KAAKC,MAAMkV,eAAezE,aAAa,CAAClN,SAAUxD,KAAKC,MAAMuD,UAAWxD,KAAKC,MAAMc,KAAKoL,a,8BAO5FtD,GAAiC,IAA9B8d,EAA6B,wDAAdrB,EAAc,wDAChCxW,EAAM,YAAO9O,KAAKgB,MAAM8N,QACxBD,EAAK,YAAO7O,KAAKgB,MAAM6N,OACvBD,EAAM,YAAO5O,KAAKgB,MAAM4N,QAExBgY,EAAU9X,EAAOlJ,OAASiJ,EAAMjJ,OAASgJ,EAAOhJ,OAEpD,IAAI+gB,IAAUrB,EAAM,CAChB,IAAK,IAAI3f,EAAI,EAAGA,EAAIkD,EAAEqQ,OAAOrK,MAAMjJ,OAAQD,IAAK,CAC5C,GAAGihB,EAAU,EAAG,CACZjX,KAAMvN,MAAM,6BAA8B,CACtCwN,SAAUD,KAAME,SAASC,aAE7B,MAGJ,IAAId,EAAO,CACPxJ,MAAOe,OAAOyV,KAAOzV,OAAO0V,WAAWC,gBAAgB,IAAIC,KAAK,CAACtT,EAAEqQ,OAAOrK,MAAMlJ,IAAK,CAACzE,KAAM2H,EAAEqQ,OAAOrK,MAAMlJ,GAAGzE,QAC9G8N,KAAMnG,EAAEqQ,OAAOrK,MAAMlJ,GACrBrF,KAAMuI,EAAEqQ,OAAOrK,MAAMlJ,GAAGrF,KACxBY,KAAM2H,EAAEqQ,OAAOrK,MAAMlJ,GAAGrF,KAAK8b,MAAM,KAAK5L,MACxC4G,KAAMvO,EAAEqQ,OAAOrK,MAAMlJ,GAAGyR,KAAO,KAGlB,QAAdpI,EAAK9N,MAAgC,QAAd8N,EAAK9N,MAAgC,SAAd8N,EAAK9N,MAAiC,QAAd8N,EAAK9N,OAC1E8N,EAAKzB,GAAKqB,EAAOhJ,OACjBgJ,EAAOK,KAAKD,IAGC,QAAdA,EAAK9N,MAAgC,QAAd8N,EAAK9N,MAAgC,SAAd8N,EAAK9N,MAAiC,QAAd8N,EAAK9N,MAAgC,QAAd8N,EAAK9N,OACjG8N,EAAKzB,GAAKsB,EAAMjJ,OAChBiJ,EAAMI,KAAKD,IAGE,QAAdA,EAAK9N,OACJ8N,EAAKzB,GAAKuB,EAAOlJ,OACjBkJ,EAAOG,KAAKD,IAGhB4X,IAGJ/d,EAAEqQ,OAAOC,MAAQ,KAGrB,GAAGwN,EACC,GAAGC,EAAU,EACTjX,KAAMvN,MAAM,4BAA6B,CACrCwN,SAAUD,KAAME,SAASC,iBAE1B,CACH,IAAId,EAAO,CACPzB,GAAIqB,EAAOhJ,OACXJ,MAAOe,OAAOyV,KAAOzV,OAAO0V,WAAWC,gBAAgB,IAAIC,KAAK,CAACtT,GAAI,CAAC3H,KAAM2H,EAAE3H,QAC9E8N,KAAMnG,EACNvI,KAAMuI,EAAEvI,KACRY,KAAM2H,EAAEvI,KAAK8b,MAAM,KAAK5L,OAG5B5B,EAAOK,KAAKD,GAIpB,GAAGsW,EACC,IAAK,IAAI3f,EAAI,EAAGA,EAAIkD,EAAEjD,OAAQD,IAAK,CAC/B,GAAGihB,EAAU,EAAG,CACZjX,KAAMvN,MAAM,4BAA6B,CACrCwN,SAAUD,KAAME,SAASC,aAE7B,MAGJ,IAAId,EAAO,CACPxJ,MAAOe,OAAOyV,KAAOzV,OAAO0V,WAAWC,gBAAgB,IAAIC,KAAK,CAACtT,EAAElD,IAAK,CAACzE,KAAM2H,EAAElD,GAAGzE,QACpF8N,KAAMnG,EAAElD,GACRrF,KAAMuI,EAAElD,GAAGrF,KACXY,KAAM2H,EAAElD,GAAGrF,KAAK8b,MAAM,KAAK5L,MAC3B4G,KAAMvO,EAAElD,GAAGyR,KAAO,KAGL,QAAdpI,EAAK9N,MAAgC,QAAd8N,EAAK9N,MAAgC,SAAd8N,EAAK9N,MAAiC,QAAd8N,EAAK9N,OAC1E8N,EAAKzB,GAAKqB,EAAOhJ,OACjBgJ,EAAOK,KAAKD,IAGC,QAAdA,EAAK9N,MAAgC,QAAd8N,EAAK9N,MAAgC,SAAd8N,EAAK9N,MAAiC,QAAd8N,EAAK9N,MAAgC,QAAd8N,EAAK9N,OACjG8N,EAAKzB,GAAKsB,EAAMjJ,OAChBiJ,EAAMI,KAAKD,IAGE,QAAdA,EAAK9N,OACJ8N,EAAKzB,GAAKuB,EAAOlJ,OACjBkJ,EAAOG,KAAKD,IAGhB4X,IAIR5mB,KAAKgU,SAAS,CAAClF,SAAQD,QAAOD,a,4CAGZwH,EAAWC,GAC7B,OAAGrW,KAAKgB,MAAMqkB,YAAchP,EAAUgP,Y,6BAOnCwB,EAASC,GAAW,IAAD,OACtB,GAAGD,EAAUC,IAAa9mB,KAAKgB,MAAM4B,QAC9B5C,KAAKgB,MAAMqkB,UAAW,CAGrB,OAFArlB,KAAKgU,SAAS,CAACqR,WAAW,IAElBrlB,KAAKC,MAAMiB,MACf,IAAK,OACD6H,GAAiBgF,WAAW/N,KAAKC,MAAMwB,MAAMF,WAAWK,KACxD,MACJ,IAAK,SACDmH,GAAiBiF,aAAahO,KAAKC,MAAMsC,OAAQvC,KAAKC,MAAMc,KAAKa,KAMzEwL,YAAW,WACP,EAAK4G,SAAS,CAACqR,WAAW,MAC3B,MAIX,IAAIrlB,KAAKgB,MAAM4B,OAAQ,CACnB,IAAIujB,EAAM,eAAOnZ,KAAKoZ,MAAMC,aAAaC,QAAQ,YACjDH,EAAO,SAASnmB,KAAKC,MAAMuD,UAAYqjB,EACnCV,EAAO,SAASnmB,KAAKC,MAAMuD,WAAc,KAAK6V,KAAK8M,EAAO,SAASnmB,KAAKC,MAAMuD,mBACvE2iB,EAAO,SAASnmB,KAAKC,MAAMuD,UACtC6iB,aAAaG,QAAQ,SAAUxZ,KAAKC,UAAUkZ,O,+BAI5C,IAAD,SACL,OACA,oCACI,yBAAKrmB,UAAU,mBAAmBwW,IAAKtW,KAAKulB,SACvCvlB,KAAKgB,MAAMskB,MACR,yBAAKxlB,UAAU,2BACX,yBAAKA,UAAU,cACX,kBAAC,KAAD,CAA6BC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAEhG,iEAKXjX,KAAKgB,MAAMokB,cAAgB,kBAAC,GAAD,CAAQxW,OAAQ5O,KAAKgB,MAAMogB,aAAc7W,MAAO,WAAO,EAAKyJ,SAAS,CAACoR,cAAc,EAAOhE,aAAc,QAErI,kBAAC,GAAD,CACI1Q,aAAc,WAAO,EAAKA,gBAC1BN,iBAAkB,SAAC1N,GAAa,EAAK0N,iBAAiB1N,IACtD+N,mBAAoB,SAAC7O,GAAS,EAAK6O,mBAAmB7O,IACtDa,SAAUzC,KAAKC,MAAMwC,SACrBqO,GAAI9Q,KAAKC,MAAM6Q,GACftO,OAAQxC,KAAKC,MAAMuC,OACnB6f,SAAUriB,KAAKC,MAAMoiB,SACrBle,OAAQnE,KAAKC,MAAMkE,OACnBme,QAAStiB,KAAKC,MAAMqiB,QACpBphB,KAAMlB,KAAKC,MAAMiB,KACjB+gB,OAAQjiB,KAAKC,MAAMwC,SAASV,QAAO,SAAAe,GAAC,OAAKA,EAAEC,QAAUD,EAAE/B,KAAKa,MAAQ,EAAK3B,MAAMc,KAAKa,OACpFwN,eAAgBpP,KAAKgB,MAAMoO,eAC3B0R,WAAY,SAACM,GAAkB,EAAKpN,SAAS,CAACoN,eAAcgE,cAAc,KAC1E/E,SAAU,SAAC3d,GACP,EAAKsR,SAAS,CAAC5E,eAAe,GAAD,mBAAM,EAAKpO,MAAMoO,gBAAjB,CAAiC1M,OAElE0d,SAAU,SAAC7S,GACP,EAAKyG,SAAS,CAAC5E,eAAe,YACvB,EAAKpO,MAAMoO,eAAerN,QAAO,SAAAW,GAChC,OAAOA,EAAQd,MAAQ2L,SAInC4C,aAAc,WACV,EAAKA,kBAIb,kBAAC,sBAAD,CACI4E,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,QACpBjV,KAAKgB,MAAMwiB,uBAAuB5d,UAAY5F,KAAKgB,MAAM4N,OAAOhJ,UAAY5F,KAAKgB,MAAM8N,OAAOlJ,UAAY5F,KAAKgB,MAAM6N,MAAMjJ,SAC3H,kBAAC,GAAD,CACIgJ,OAAQ5O,KAAKgB,MAAM4N,OACnBQ,eAAgBpP,KAAKgB,MAAMwiB,uBAC3B3U,MAAO7O,KAAKgB,MAAM6N,MAClBC,OAAQ9O,KAAKgB,MAAM8N,OACnB0T,uBAAwB,WACpB,EAAKxO,SAAS,CAACwP,uBAAwB,MAE3Cf,YAAa,SAAClV,GACV,EAAKyG,SAAS,CAACpF,OAAO,YACf,EAAK5N,MAAM4N,OAAO7M,QAAO,SAAA6e,GACxB,OAAOA,EAAMrT,KAAOA,SAIhCmV,YAAa,SAACnV,GACV,EAAKyG,SAAS,CAAClF,OAAO,YACf,EAAK9N,MAAM8N,OAAO/M,QAAO,SAAAkf,GACxB,OAAOA,EAAM1T,KAAOA,SAIhCoV,WAAY,SAACpV,GACT,EAAKyG,SAAS,CAACnF,MAAM,YACd,EAAK7N,MAAM6N,MAAM9M,QAAO,SAAAiN,GACvB,OAAOA,EAAKzB,KAAOA,YAQ3C,kBAAC,IAAD,GACImW,QAAS1jB,KAAKgB,MAAMoO,eAAexJ,OACnC0Q,IAAKtW,KAAKukB,aACVd,kBAAmB,WAAO,EAAKA,qBAC/B7gB,OAAQ5C,KAAKgB,MAAM4B,OACnBmN,YAAa/P,KAAKgB,MAAM+O,YACxBqU,gBAAiB,SAACjV,GAAU,EAAKiV,gBAAgBjV,KANrD,oCAOuB,WAAO,EAAKsU,uBAPnC,wBAQYzjB,KAAKgB,MAAM4N,QARvB,wBASY5O,KAAKgB,MAAM8N,QATvB,uBAUW9O,KAAKgB,MAAM6N,OAVtB,wCAW4B7O,KAAKgB,MAAMwiB,wBAXvC,8BAYiB,SAACrU,GAAU,EAAKV,YAAYU,MAZ7C,yBAaY,SAAC0X,EAASC,GAAc,EAAK3iB,OAAO0iB,EAASC,MAbzD,0BAca,SAACje,EAAG8d,GAAW,EAAKpD,QAAQ1a,EAAG8d,MAd5C,qCAewB,WAAO,EAAKzC,wBAfpC,MAkBGlkB,KAAKgB,MAAMoO,eAAexJ,QACzB,kBAAC,GAAD,CACIkf,2BAA4B,WAAO,EAAKA,8BACxCG,8BAA+B,WAAO,EAAKA,iCAC3CF,4BAA6B,WAAO,EAAKA,+BACzC1U,cAAe,WAAO,EAAKA,iBAC3BjB,eAAgBpP,KAAKgB,MAAMoO,eAC3B4V,eAAgB,WAAO,EAAKA,0B,GA3kBjCrlB,IAAMiB,WAkmBVwU,oBAfS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,MACb4B,QAASrC,EAAMqC,YAIvB,SAA4BuG,GACxB,MAAO,CACH4Q,aAAcnF,YAAmBmF,EAAc5Q,GAC/CuL,eAAgBE,YAAmBF,EAAgBvL,MAI5CwL,CAA6C+P,IChnBtDvC,GAAoB,CACtB/I,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,uBAErB2I,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxB6M,UAAwB,WAI1BC,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACHvM,OAAQza,KAAKC,MAAMwa,OACnB1a,MAAO6iB,GACPjI,aAAa,mBAEb,kBAAC,KAAD,CAAkB5a,MAAO,CAACW,MAAO,UAAWC,SAAU,MACtD,wBAAIb,UAAU,eAAd,SACA,uBAAGA,UAAU,cAAcE,KAAKC,MAAMwB,MAAMF,WAAWa,MAAMsN,KAC7D,4BAAQ5P,UAAU,cAAcoB,KAAK,SAASnB,MAAO,CAAC8W,MAAO,eAAgBtC,QAAS,WAClF,EAAKtU,MAAMyU,QAAQzF,KAAK,OAD5B,a,GAVgBtP,IAAMiB,WAuBnBwU,gBANS,SAAApU,GACpB,MAAO,CACHS,MAAOT,EAAMS,SAIN2T,CAAyBE,aAAW0R,K,+DChB7CzR,GAAYC,cAXA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,OACjB1Q,MAAO,UACPoZ,OAAQ,EACR,UAAW,CACP1I,gBAAiB,YAKXoE,CAAsBI,MAElCqR,G,uKAEE,OAAO,kBAAC,aAAD,CACH1Q,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,uBACV4W,UAAQ,GAEP1W,KAAKC,MAAMoC,MAAMX,KAAI,SAACX,EAAM0Q,GAAP,OAClB,yBAAKC,IAAKD,EAAO3R,UAAU,UACvB,kBAAC,EAAD,CAAQO,YAAa,CAAC4Z,aAAc,GAAI/Z,SAAQa,EAAKb,QAASa,EAAKb,OAAgBI,KAAMS,EAAKT,KAAKqR,MAAMN,OAAO,GAAGtQ,EAAKT,KAAKmN,KAAK4D,OAAO,GAAItR,MAAO,CAACY,SAAU,GAAIsZ,aAAc,EAAGpD,MAAO,OAAQ3F,OAAQ,OAAQE,gBAAgB,OAAD,OAASrQ,EAAKL,MAAd,QACjOK,EAAKiC,UAAY,0BAAMlD,UAAU,sB,GAXhCH,IAAMiB,WAkBtBsK,G,kLAEElL,KAAK2I,MAAMue,UAAYlnB,KAAKC,MAAM8H,S,+BAG5B,IAAD,OACL,OAAO,2BAAOuO,IAAK,SAAAA,GAAQ,EAAK3N,MAAQ2N,GAAMvW,MAAO,CAACkX,QAAS,QAASkQ,UAAQ,EAACC,UAAQ,Q,GANvEznB,IAAM0hB,eAU1BgG,G,kLAGmB,IAAD,OAChBrnB,KAAKgW,QAAQC,cAAa,GAE1B,IAAIqR,EAAa1c,aAAY,WACtB7B,GAAiB2E,gBAChB,EAAKzN,MAAMua,aAAa3M,SAAS,CAACN,GAAI,EAAKtN,MAAMsnB,MAAMC,OAAOja,GAAIpB,SAAU,EAAKlM,MAAMc,KAAKoL,WAC5FtB,cAAcyc,MAEnB,O,6CAKHtnB,KAAKC,MAAMua,aAAahQ,UAAUxK,KAAKC,MAAMwB,MAAMF,WAAWK,IAAK5B,KAAKC,MAAMwB,MAAMF,WAAW+I,Q,+BAGzF,IAAD,OACL,OAAGtK,KAAKC,MAAMwB,MAAMF,YAAcvB,KAAKC,MAAMwB,MAAMF,WAAWa,MACnD,kBAAC,GAAD,CAAeqY,QAAQ,IAG3Bza,KAAKC,MAAMwB,MAAMF,YACpB,oCACKvB,KAAKC,MAAMwB,MAAMF,WAAWY,cAAgB,kBAAC,GAAD,CAAa4F,OAAQ/H,KAAKC,MAAMwB,MAAMF,WAAWY,eAC9F,yBAAKrC,UAAU,8BACX,yBAAKA,UAAU,gBACX,kBAAC6jB,GAAA,EAAD,CAAY7jB,UAAU,WAAWyU,QAAS,WACtC,EAAKtU,MAAMyU,QAAQzF,KAAK,OAExB,kBAAC,KAAD,CAAetO,SAAS,QAAQZ,MAAO,CAACW,MAAO,cAGnD,yBAAKZ,UAAU,aAAayN,GAAIvN,KAAKC,MAAMwB,MAAMF,WAAWK,KACxD,wBAAI9B,UAAU,eAAeE,KAAKC,MAAMwB,MAAMF,WAAWM,OACzD,wBAAI/B,UAAU,wBAAwBE,KAAKC,MAAMwB,MAAMF,WAAWc,MAAMuD,OAAS,EAAjF,YAGJ,kBAAC,GAAD,CACI0O,QACItU,KAAKC,MAAMwB,MAAMF,WAAWkmB,UAAYznB,KAAKC,MAAMc,KAAKa,IAAM,CAC1D,CAACuN,KAAM,iBAAkBlO,OAAQ,WAC7B,EAAKhB,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,kBAGhB,CACInI,KAAM,YACNlO,OAAQ,WACJ,EAAKhB,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,oBAIpB,CACInI,KAAM,cACNlO,OAAQ,WACJ,EAAKhB,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,uBAIpB,CACA,CACInI,KAAM,iBAAkBlO,OAAQ,WAC5B,EAAKhB,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,mBAK5B5D,KAAM1T,KAAKC,MAAMwB,MAAMF,WAAWK,IAClCiS,QAAQ,KAKhB,yBAAK/T,UAAU,iBACX,kBAAC,GAAD,CAAM2C,SAAUzC,KAAKC,MAAMwB,MAAMF,WAAWiB,OAAOC,SAAUvB,KAAK,OAAO4P,GAAI9Q,KAAKC,MAAMwB,MAAMF,WAAWM,MAAO2B,SAAUxD,KAAKC,MAAMwB,MAAMF,WAAWiB,OAAOZ,IAAKU,OAAQtC,KAAKC,MAAMwB,MAAMF,WAAWK,QAK9M,yBAAK9B,UAAU,2CACVE,KAAKC,MAAMwB,MAAMF,YAAc,kBAAC,GAAD,CAASc,MAAOrC,KAAKC,MAAMwB,MAAMF,WAAWc,QAE5E,yBAAKvC,UAAU,iBACX,kBAAC,GAAD,CAAWA,UAAS,uBAAkBE,KAAKC,MAAMmD,MAAMH,MAAQ,SAAW,IAAMsR,QAAS,WAAOlH,OAC5F,kBAAC,KAAD,CAAStN,MAAO,CAACW,MAAOV,KAAKC,MAAMmD,MAAMH,MAAQ,OAAS,cAE9D,kBAAC,GAAD,CAAWnD,UAAS,uBAAkBE,KAAKC,MAAMmD,MAAMF,QAAU,GAAK,UAAYqR,QAAS,WAAOlH,OAC9F,kBAAC,KAAD,CAActN,MAAO,CAACW,MAAOV,KAAKC,MAAMmD,MAAMF,QAAU,UAAY,WAExE,kBAAC,GAAD,CAAWpD,UAAS,sBAAyByU,QAAS,WAAO,EAAKtU,MAAMyU,QAAQzF,KAAK,OACjF,kBAAC,KAAD,CAAalP,MAAO,CAACW,MAAO,kB,GAhGrCf,IAAMiB,WAAnBymB,GACK9P,YAAc7X,EAsHV0V,oBAdS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,MACb2B,MAAOpC,EAAMoC,UAIrB,SAA4BwG,GACxB,MAAO,CACH4Q,aAAcnF,YAAmBmF,EAAc5Q,MAIxCwL,CAA6CE,aAAW+R,KC3JjEK,IAFYlS,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,UACjBxB,SAAU,WACViE,OAAQ,GACR8B,MAAO,GACP,UAAW,CACPvE,gBAAiB,eAKXoE,CAAsBI,M,4MAKpC5U,MAAQ,CACJ8U,YAAY,EACZC,UAAW,G,kEAIX/V,KAAKgW,QAAQC,cAAa,K,iCAIvBjW,KAAKgB,MAAM+U,UAAY/V,KAAKkW,cAAcC,eACtCnW,KAAKgB,MAAM8U,YACV9V,KAAKgU,SAAS,CAAC8B,YAAY,IAE3B9V,KAAKgB,MAAM8U,YACX9V,KAAKgU,SAAS,CAAC8B,YAAY,IAGnC9V,KAAKgU,SAAS,CAAC+B,UAAW/V,KAAKkW,cAAcC,mB,4CAG3BC,EAAWC,GAC7B,OAAGA,EAAUN,YAAc/V,KAAKgB,MAAM+U,Y,6CAQtC/V,KAAKgW,QAAQC,cAAa,K,+BAI1B,OACI,oCACI,yBAAKnW,UAAU,WAAWC,MAAO,CAAC4nB,MAAO,KACzC,yBAAK7nB,UAAU,WAAWC,MAAO,CAAC4nB,MAAO,U,GAxCtChoB,IAAMiB,YAAnB8mB,GACKnQ,YAAc7X,EA6CzB,IAQe0V,gBARS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,MACb4B,QAASrC,EAAMqC,WAIR+R,CAAyBsS,ICjF3B/iB,GAAO,SAAC5D,EAAMoL,GAAP,OAAoB,SAACvC,GACrCA,EAAS,CACL1I,K7C0EqB,gB6CzErBC,QAAS,CAACJ,OAAMN,OAAQ,eAG5B8L,MAAM,GAAD,OAAIR,GAAJ,kBAA4B,CAC7BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBM,GAAIxM,EAAKa,IACT2N,SAAUxG,GAAiB2E,kBAGlCnF,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAC5D,GACAA,EAAKvC,OACJwH,EAAS,CACL1I,K7CuDe,kB6CtDfC,QAASwD,EAAKvC,aAMjB0hB,GAAS,SAAC3X,GAAD,OAAc,SAACvC,GACjCA,EAAS,CACL1I,K7C8CuB,kB6C7CvBC,QAAS,WAEbkM,GAAsB1D,GAAMwD,WAAWxI,KAAK5D,KAAKa,KAEjD2K,MAAM,GAAD,OAAIR,GAAJ,oBAA8B,CAC/BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjB1K,OAAQoH,GAAMwD,WAAWxI,KAAK5D,KAAKa,IACnC2N,SAAUxG,GAAiB2E,kBAIlCnF,MAAK,SAAC5D,SAKE+F,GAAO,SAAC3J,EAAMoL,GAAP,OAAoB,SAACvC,GACrCyD,KAEAzD,EAAS,CACL1I,K7CkBqB,gB6CjBrBC,QAAS,CAACJ,MAAM,EAAON,OAAQ,UAGnC8L,MAAM,GAAD,OAAIR,GAAJ,kBAA4B,CAC7BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,IAE7BY,KAAMC,KAAKC,UAAU,CACjBsC,SAAUxG,GAAiB2E,kBAIlCnF,MAAK,SAAC5D,SAKEijB,GAAQ,kBAAM,SAAChe,GACxBA,EAAS,CACL1I,K7CLqB,gB6CMrBC,QAAS,CAACJ,MAAM,EAAON,OAAQ,Y,0CChDjC8U,GAAYC,cAjBA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,UACjB1Q,MAAO,OACPoZ,OAAQ,EACRjD,MAAO,GACP3F,OAAQ,GACRgJ,UAAW,iBACXpD,WAAY,OACZkD,YAAa,OACb,UAAW,CACP5I,gBAAiB,UACjB8I,UAAW,YAKL1E,CAAsBI,MAElC2L,G,4MAGFvgB,MAAQ,CACJ8U,YAAY,EACZC,UAAW,G,kEAGM,IAAD,OAChB/V,KAAKgW,QAAQC,cAAa,GAEvB1P,OAAOshB,WAAa,KACnB7nB,KAAKgW,QAAQC,cAAa,GAE1BjW,KAAKC,MAAMoD,QAAQA,QAAQR,MAAK,SAAAL,GAAM,OAAIA,EAAOzB,KAAKa,MAAQ,EAAK3B,MAAMsnB,MAAMC,OAAOja,OAGtFvN,KAAKC,MAAMkV,eAAe5G,aAAavO,KAAKC,MAAMsnB,MAAMC,OAAOja,GAAIvN,KAAKC,MAAMc,KAAKoL,UAC/EnM,KAAKC,MAAMoD,QAAQA,QAAQR,MAAK,SAAAL,GAAM,OAAIA,EAAOzB,KAAKa,MAAQ,EAAK3B,MAAMsnB,MAAMC,OAAOja,MAAIjM,QAC1FtB,KAAKC,MAAMkV,eAAe7G,WAAWtO,KAAKC,MAAMsnB,MAAMC,OAAOja,GAAIvN,KAAKC,MAAMc,KAAKoL,WAJrFnM,KAAKC,MAAMkV,eAAehH,UAAUnO,KAAKC,MAAMsnB,MAAMC,OAAOja,GAAIvN,KAAKC,MAAMc,KAAKoL,Y,6CASpFnM,KAAKgW,QAAQC,cAAa,K,+BAGpB,IAAD,OACDzT,EAASxC,KAAKC,MAAMoD,QAAQA,QAAQR,MAAK,SAAAL,GAAM,OAAIA,EAAOzB,KAAKa,MAAQ,EAAK3B,MAAMsnB,MAAMC,OAAOja,MAEnG,OACI,oCACK/K,IAAWA,EAAO4L,YAAc,oCAAE,yBAAKtO,UAAU,2CAA2CC,MAAO,CAAC4nB,MAAO,IACpG,kBAAChE,GAAA,EAAD,CAAY7jB,UAAU,WAAWyU,QAAS,WACtC,EAAKtU,MAAMyU,QAAQzF,KAAK,OAExB,kBAAC,KAAD,CAAetO,SAAS,QAAQZ,MAAO,CAACW,MAAO,cAEtD,oCAAE,yBAAKX,MAAO,CAACkX,QAAS,YAAa1C,QAAS,WAC1C,EAAKtU,MAAMyU,QAAQzF,KAAK,CACrBqI,OAAO,SAAD,OAAW9U,EAAOzB,KAAKa,SAEjC,kBAAC,EAAD,CAAQ7B,MAAO,CACf8W,MAAO,GACP3F,OAAQ,GACRvQ,SAAU,GACVwQ,WAAY,IACZC,gBAAgB,OAAD,OAAS5O,EAAOzB,KAAKL,MAArB,MAEnBJ,KAAMkC,EAAOzB,KAAKT,KAAKqR,MAAMN,OAAO,GAAK7O,EAAOzB,KAAKT,KAAKmN,KAAK4D,OAAO,GACtEnR,SAAQsC,EAAOzB,KAAKb,QAASsC,EAAOzB,KAAKb,UAEzC,yBAAKJ,UAAU,YAAYyU,QAAS,WAChC,EAAKtU,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAO,SAAD,OAAW9U,EAAOzB,KAAKa,SAGjC,uBAAG9B,UAAU,aAAb,UAA6B0C,EAAOzB,KAAKT,KAAKqR,MAA9C,YAAuDnP,EAAOzB,KAAKT,KAAKmN,QACtEjL,EAAOzB,KAAKP,QAAU,uBAAGV,UAAU,gBAAgBgT,GAAWtQ,EAAOzB,KAAKiD,WAC3ExB,EAAOzB,KAAKP,QAAU,uBAAGV,UAAU,eAAeC,MAAO,CAACW,MAAO,YAA3C,YAG1B8B,EAAOzB,KAAKa,MAAQ5B,KAAKC,MAAMc,KAAKa,KAAkC,SAA3B5B,KAAKC,MAAM0E,KAAKlE,QAAqB,kBAAC,GAAD,CAAWC,MAAM,UAAU0W,KAAK,QAAQC,aAAW,OAAO9C,QAAS,WAChJ,EAAKtU,MAAM6nB,YAAYnjB,KAAKnC,EAAOzB,KAAM,EAAKd,MAAMc,KAAKoL,YAEzD,kBAAC,KAAD,CAAUpM,MAAO,CAACW,MAAO,YAGjC,yBAAKZ,UAAU,6BAA6BC,MAAO,CAAC4nB,MAAO,IACvD,kBAAC,GAAD,CACIllB,SAAUD,EAAOC,SACjB6f,QAAS9f,IAAWA,EAAOlB,OAC3BJ,KAAK,SACLmhB,SAAU7f,EAAOzB,KAAKT,KAAKqR,MAC3BxN,OAAQ3B,EAAO2B,OACf5B,OAAQC,EAAOzB,KAAKa,IACpBkP,GAAItO,EAAOzB,KAAKT,KAAKqR,MACrBnO,SAAUhB,EAAOZ,IACjBY,OAAQA,MAIfA,GAAUA,EAAO4L,YAAc,oCAC5B,yBAAKtO,UAAU,6BAA6BC,MAAO,CAAC4nB,MAAO,KAC3D,yBAAK7nB,UAAU,6BAA6BC,MAAO,CAAC4nB,MAAO,IACvD,yBAAK7nB,UAAU,cACX,kBAAC,KAAD,CAAYC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAE/E,qD,GAxFPtX,IAAM0hB,eAArBE,GACKhK,YAAc7X,EAgHV0V,oBAhBS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZsC,QAASrC,EAAMqC,QACfsB,KAAM3D,EAAM2D,SAIpB,SAA4BiF,GACxB,MAAO,CACHuL,eAAgBE,YAAmBF,EAAgBvL,GACnDqP,aAAc5D,YAAmB4D,EAAcrP,GAC/Cke,YAAazS,YAAmByS,EAAale,MAItCwL,CAA6CE,aAAWiM,KC/FxDwG,GA7CA,CACX,CACIviB,KAAM,SACNwiB,OAAO,EACP9mB,KAAM,OACNW,MAAO,qEACP+hB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACIpe,KAAM,YACNwiB,OAAO,EACP9mB,KAAM,OACNW,MAAO,qEACP+hB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACIpe,KAAM,IACNwiB,OAAO,EACP9mB,KAAM,OACNW,MAAO,OACP+hB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACIpe,KAAM,aACNwiB,OAAO,EACP9mB,KAAM,OACNW,MAAO,YACP+hB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACIpe,KAAM,aACNwiB,OAAO,EACP9mB,KAAM,OACNW,MAAO,GACP+hB,UAAW,kBAAM,kBAAC,GAAD,CAAQlS,IAAKnL,OAAOoO,SAASC,aAElD,CACIpP,KAAM,aACNwiB,OAAO,EACP9mB,KAAM,OACNW,MAAO,GACP+hB,UAAW,kBAAM,kBAAC,GAAD,SCxCVqE,G,uKANP,OACI,Q,GAHUtoB,IAAMiB,W,8HCkCtB2U,GAAYC,cAhBA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,UACjB8I,UAAW,iBACX,UAAW,CACP9I,gBAAiB,WAErB,cAAe,CACX1Q,MAAO,kBAEX,QAAS,CACLwnB,WAAY,iBAKN1S,CAAsBI,MAElCuS,G,uKACQ,IAAD,OACL,OAAO,oCACC,kBAAC,EAAD,CACIpoB,MAAO,CAAC8W,MAAO,GAAI3F,OAAQ,GAAIvQ,SAAU,GAAI6f,WAAY,OAAQrP,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAMc,KAAKL,MAAzB,MACjGJ,KAAMN,KAAKC,MAAMc,KAAKT,KAAKqR,MAAMN,OAAO,GAAGrR,KAAKC,MAAMc,KAAKT,KAAKmN,KAAK4D,OAAO,GAC5EnR,SAAQF,KAAKC,MAAMc,KAAKb,QAASF,KAAKC,MAAMc,KAAKb,SAGrD,uBAAGJ,UAAU,qBAAqBE,KAAKC,MAAMc,KAAKT,KAAKqR,MAAvD,IAA+D3R,KAAKC,MAAMc,KAAKT,KAAKmN,MACpF,uBAAG3N,UAAU,qBAAb,UAEA,oCACI,yBAAKA,UAAU,YACX,kBAAC,KAAD,CAASC,MAAO,CAAC8Q,eAAgB,QAAS0D,QAAS,SAAC1L,GAC7C,iBAAU,EAAK5I,MAAMc,KAAKa,OAAU,EAAK3B,MAAMyU,QAAQC,SAASC,UAC/D/L,EAAEgM,kBACP/U,UAAU,cAAcgR,GAAE,iBAAY9Q,KAAKC,MAAMc,KAAKa,MACrD,kBAAC,GAAD,CAAWlB,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,cAC9D,kBAAC,KAAD,CAA+BxU,MAAO,CAACW,MAAO,eAGtD,uCAGwB,SAA3BV,KAAKC,MAAM0E,KAAKlE,QAAqB,yBAAKX,UAAU,YACjD,kBAAC,KAAD,CAASC,MAAO,CAAC8Q,eAAgB,QAAS0D,QAAS,SAAC1L,GAChD,EAAK5I,MAAM6nB,YAAYnjB,KAAK,EAAK1E,MAAMc,KAAM,EAAKd,MAAM6U,OAAO3I,WAChErM,UAAU,cAAcgR,GAAE,iBAAY9Q,KAAKC,MAAMc,KAAKa,MACrD,kBAAC,GAAD,CAAWlB,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,cAC9D,kBAAC,KAAD,CAAUxU,MAAO,CAACW,MAAO,eAGjC,oCAG8B,IAAjCV,KAAKC,MAAMc,KAAKyD,cAAsB,yBAAK1E,UAAU,YAClD,kBAAC,GAAD,CAAWY,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,WAC9D,EAAKtU,MAAMgZ,aAAad,YAAY,EAAKlY,MAAMsC,OAAQ,EAAKtC,MAAM6U,OAAO3I,YAEzE,kBAAC,KAAD,CAAuBpM,MAAO,CAACW,MAAO,cAE1C,wCAG8B,IAAjCV,KAAKC,MAAMc,KAAKyD,cAAsB,yBAAK1E,UAAU,YAClD,kBAAC,GAAD,CAAWY,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,WAC9D,EAAKtU,MAAMgZ,aAAab,cAAc,EAAKnY,MAAMsC,OAAQ,EAAKtC,MAAM6U,OAAO3I,YAE3E,kBAAC,KAAD,CAAmBpM,MAAO,CAACW,MAAO,cAEtC,uCAG+B,IAAjCV,KAAKC,MAAMc,KAAKyD,cAAuD,IAAjCxE,KAAKC,MAAMc,KAAKyD,eAAuB,yBAAK1E,UAAU,YAC1F,kBAAC,GAAD,CAAWY,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,WAC9D,EAAKtU,MAAMgZ,aAAaZ,cAAc,EAAKpY,MAAMsC,OAAQ,EAAKtC,MAAM6U,OAAO3I,YAE3E,kBAAC,KAAD,CAAmBpM,MAAO,CAACW,MAAO,cAEtC,uCAG8B,IAAjCV,KAAKC,MAAMc,KAAKyD,cAAsB,yBAAK1E,UAAU,YAClD,kBAAC,GAAD,CAAWY,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,WAC9D,EAAKtU,MAAMgZ,aAAaZ,cAAc,EAAKpY,MAAMsC,OAAQ,EAAKtC,MAAM6U,OAAO3I,YAE3E,kBAAC,KAAD,CAA2BpM,MAAO,CAACW,MAAO,cAE9C,4C,GArEAf,IAAMiB,WA2FfwU,oBAfS,SAAApU,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbyS,OAAQ9T,EAAMD,KACd4D,KAAM3D,EAAM2D,SAIpB,SAA4BiF,GACxB,MAAO,CACHqP,aAAc5D,YAAmB4D,EAAcrP,GAC/Cke,YAAazS,YAAmByS,EAAale,MAItCwL,CAA6CE,aAAW6S,K,oFChGjE5S,GAAYC,cAhBA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,UACjB8I,UAAW,iBACX,UAAW,CACP9I,gBAAiB,WAErB,cAAe,CACX1Q,MAAO,kBAEX,QAAS,CACLwnB,WAAY,iBAKN1S,CAAsBI,MAElCwS,G,4MACFpnB,MAAQ,CACJ0b,UAAW,Q,uDAGL,IAAD,OACL,OAAO,oCACH,2BAAO3c,MAAO,CAACwgB,OAAQ,WAAYzgB,UAAU,iBACzC,kBAAC,EAAD,CACIC,MAAO,CAAC8W,MAAO,GAAI3F,OAAQ,GAAIvQ,SAAU,GAAI6f,WAAY,OAAQrP,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAMc,KAAKL,MAAzB,MACjGJ,KAAMN,KAAKC,MAAMc,KAAKT,KAAKqR,MAAMN,OAAO,GAAGrR,KAAKC,MAAMc,KAAKT,KAAKmN,KAAK4D,OAAO,GAC5EnR,SAAQF,KAAKC,MAAMc,KAAKb,QAASF,KAAKC,MAAMc,KAAKb,SAErD,kBAAC,KAAD,CAAeJ,UAAU,qBAAqBC,MAAO,CAACW,MAAO,UAC7D,yBAAKZ,UAAU,6BACf,2BACIoB,KAAK,OACLoY,SAAU,SAACzQ,GAAO,EAAK5I,MAAMuc,YAAYT,aAAalT,EAAG,EAAK5I,MAAMc,KAAKoL,WACzEoB,GAAG,eACHxN,MAAO,CAACkX,QAAS,QACjB6M,OAAO,0BAIf,uBAAGhkB,UAAU,qBAAqBE,KAAKC,MAAMc,KAAKT,KAAKqR,MAAvD,IAA+D3R,KAAKC,MAAMc,KAAKT,KAAKmN,MACpF,uBAAG3N,UAAU,qBAAb,UAEA,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAWY,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,cAC9D,kBAAC,KAAD,CAAsBxU,MAAO,CAACW,MAAO,cAEzC,wCAGJ,yBAAKZ,UAAU,YACX,kBAAC,GAAD,CAAWY,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,WAC9D,EAAKtU,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAO,sBAGX,kBAAC,KAAD,CAAkBvX,MAAO,CAACW,MAAO,cAErC,wCAGJ,yBAAKZ,UAAU,YACX,kBAAC,GAAD,CAAWY,MAAM,UAAU0W,KAAK,QAAQC,aAAW,MAAM9C,QAAS,cAC9D,kBAAC,KAAD,CAAuBxU,MAAO,CAACW,MAAO,cAE1C,0C,GAjDKf,IAAMiB,WAqEZwU,oBAdS,SAAApU,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACHqP,aAAc5D,YAAmB4D,EAAcrP,GAC/C4S,YAAanH,YAAmBmH,EAAa5S,MAItCwL,CAA6CE,aAAW8S,KC5FjExF,GAAoB,CACtB/I,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,UAI1BwR,G,kLACmB,IAAD,OACZroB,KAAKC,MAAMoC,MAAMA,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ,EAAK3B,MAAMsC,WAAWvC,KAAKC,MAAMc,KAAKa,MAAQ5B,KAAKC,MAAMsC,QAC1GvC,KAAKC,MAAMgZ,aAAatB,QAAQ3X,KAAKC,MAAMsC,OAAQvC,KAAKC,MAAMc,KAAKoL,Y,+BAIjE,IAAD,OACDpL,EAAOf,KAAKC,MAAMoC,MAAMA,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ,EAAK3B,MAAMsC,UACvE,OAAO,kBAAC,KAAD,CACHkY,QAAQ,EACRC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAAO6iB,GACPjI,aAAa,QAEZ5Z,GACG,kBAAC,GAAD,CAAWwB,OAAQvC,KAAKC,MAAMsC,OAAQxB,KAAMA,IAG/Cf,KAAKC,MAAMc,KAAKa,MAAQ5B,KAAKC,MAAMsC,QAChC,kBAAC,GAAD,W,GApBG5C,IAAMiB,WAuCVwU,oBAbS,SAAApU,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACHqP,aAAc5D,YAAmB4D,EAAcrP,MAIxCwL,CAA6CE,aAAW+S,KCnEjEvP,G,kLAEM9Y,KAAKC,MAAMoC,MAAMiC,UAAUhD,QAC3BtB,KAAKC,MAAMgZ,aAAanB,aAAa9X,KAAKC,MAAMc,KAAKoL,Y,mEAQnD,IAAD,OACL,OAAO,kBAAC,aAAD,CACHmK,IAAK,SAACA,GAAS,EAAKmD,WAAanD,GACjCC,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV2W,SAAU,WAAO,EAAKA,YACtB1W,MAAO,CAACmR,OAAQ,KAChBwF,UAAQ,GAEP1W,KAAKC,MAAMoC,MAAMiC,UAAUjD,YAAc,kBAACqY,GAAA,EAAD,CAAkB3Z,MAAO,CAC3DW,MAAO,UACPkP,SAAU,WACV0D,KAAM,EACNqC,MAAO,EACPqB,OAAQ,OACRzD,IAAK,sBAEZvT,KAAKC,MAAMoC,MAAMiC,UAAUjC,MAAMX,KAAI,SAACX,EAAM0Q,GACzC,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAO1Q,KAAMA,QAGjCf,KAAKC,MAAMoC,MAAMiC,UAAUjC,MAAMuD,SAAW5F,KAAKC,MAAMoC,MAAMiC,UAAUjD,YAAe,yBAAKvB,UAAU,cACpG,kBAAC,KAAD,CAAWC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAE9E,6E,GArCOtX,IAAMiB,WAwDdwU,oBAbS,SAAApU,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACHqP,aAAc5D,YAAmB4D,EAAcrP,MAIxCwL,CAA6CE,aAAWwD,KCxDjEA,G,kLAEM9Y,KAAKC,MAAMoC,MAAMkC,QAAQjD,QACzBtB,KAAKC,MAAMgZ,aAAalB,WAAW/X,KAAKC,MAAMc,KAAKoL,Y,mEAQjD,IAAD,OACL,OAAO,kBAAC,aAAD,CACHmK,IAAK,SAACA,GAAS,EAAKmD,WAAanD,GACjCC,oBAAqB,SAAAtW,GAAK,OAAI,yBAAKH,UAAU,oBAC7C0W,oBAAqB,SAAAvW,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV2W,SAAU,WAAO,EAAKA,YACtB1W,MAAO,CAACmR,OAAQ,KAChBwF,UAAQ,GAEP1W,KAAKC,MAAMoC,MAAMkC,QAAQlD,YAAc,kBAACqY,GAAA,EAAD,CAAkB3Z,MAAO,CACzDW,MAAO,UACPkP,SAAU,WACV0D,KAAM,EACNqC,MAAO,EACPqB,OAAQ,OACRzD,IAAK,sBAEZvT,KAAKC,MAAMoC,MAAMkC,QAAQlC,MAAMX,KAAI,SAACX,EAAM0Q,GACvC,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAO1Q,KAAMA,QAGjCf,KAAKC,MAAMoC,MAAMkC,QAAQlC,MAAMuD,SAAW5F,KAAKC,MAAMoC,MAAMkC,QAAQlD,YAAe,yBAAKvB,UAAU,cAChG,kBAAC,KAAD,CAAWC,MAAO,CAACW,MAAO,UAAWC,SAAU,GAAIqW,OAAQ,SAAUC,QAAS,WAE9E,6E,GArCOtX,IAAMiB,WAwDdwU,oBAbS,SAAApU,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACHqP,aAAc5D,YAAmB4D,EAAcrP,MAIxCwL,CAA6CE,aAAWwD,KCzDjE8J,GAAoB,CACtB/I,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,cACxB5F,SAAwB,QACxBoJ,QAAwB,WAI1BvB,G,4MACF9X,MAAQ,CACJ0b,UAAW,W,uDAGL,IAAD,OACL,OAAO,kBAAC,KAAD,CACHjC,OAAQza,KAAKC,MAAMwa,OACnBC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAAO6iB,GACPjI,aAAa,YAEb,wBAAI7a,UAAU,eAAd,YAEA,yBAAKA,UAAU,iBACX,0BAAMA,UAAoC,YAAzBE,KAAKgB,MAAM0b,UAA0B,SAAW,GAAInI,QAAS,WAAO,EAAKP,SAAS,CAAC0I,UAAW,cAA/G,WACA,0BAAM5c,UAAoC,UAAzBE,KAAKgB,MAAM0b,UAAwB,SAAW,GAAInI,QAAS,WAAO,EAAKP,SAAS,CAAC0I,UAAW,YAA7G,SACA,0BAAM5c,UAAoC,WAAzBE,KAAKgB,MAAM0b,UAAyB,SAAW,GAAInI,QAAS,WAAO,EAAKP,SAAS,CAAC0I,UAAW,aAA9G,WAGsB,YAAzB1c,KAAKgB,MAAM0b,WAA2B,kBAACxB,GAAD,CAAS3G,QAAS,SAAChH,GACtD,EAAKtN,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAO,SAAD,OAAW/J,MAEtBrM,KAAM,WACiB,UAAzBlB,KAAKgB,MAAM0b,WAAyB,kBAAC4L,GAAD,MACX,WAAzBtoB,KAAKgB,MAAM0b,WAA0B,kBAAC6L,GAAD,W,GA1B3B5oB,IAAMiB,WA4CdwU,oBAbS,SAAApU,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACHqP,aAAc5D,YAAmB4D,EAAcrP,MAIxCwL,CAA6CE,aAAWwD,KCtEjE8J,GAAoB,CACtB/I,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,cACxB5F,SAAwB,QACxBoJ,QAAwB,WAI1BmO,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACH/N,OAAQza,KAAKC,MAAMwa,OACnBC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAAO6iB,GACPjI,aAAa,eAEb,wBAAI7a,UAAU,eAAd,YAEA,kBAACob,GAAD,CAAS3G,QAAS,SAAChH,GACf,EAAKtN,MAAMyU,QAAQzF,KAAnB,iBAAkC1B,Y,GAXvB5N,IAAMiB,WA6BlBwU,oBAZS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B6I,GACxB,MAAO,CACH4Q,aAAcnF,YAAmBmF,EAAc5Q,MAIxCwL,CAA6CE,aAAWkT,KCzDjErO,GAA0B,CAC5BN,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,cACxB5F,SAAwB,QACxBoJ,QAAwB,WAI1BC,G,4MACFtZ,MAAQ,CACJ2Y,YAAa,GACbvX,OAAO,EACPqN,OAAQ,I,uDAGH5G,GAAI,IAAD,OACRA,EAAEgM,iBAEFtI,MAAM,GAAD,OAAIR,GAAJ,oBAA8B,CAC/BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAY3M,KAAKC,MAAMc,KAAKoL,WAE7CY,KAAMC,KAAKC,UAAU,CACjBM,GAAIvN,KAAKC,MAAMwB,MAAMF,WAAWK,IAChC+X,YAAa3Z,KAAKgB,MAAM2Y,gBAG/BpR,MAAK,WACF,EAAKyL,SAAS,CAAC2F,YAAa,KAC5BhK,aAAM,iBAAkB,CACpBC,SAAUD,KAAME,SAASC,aAE7B,EAAK7P,MAAMsK,a,+BAIT,IAAD,OACL,OAAO,kBAAC,KAAD,CACHkQ,OAAQza,KAAKC,MAAMwa,OACnBC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAAOoa,GACPQ,aAAa,eAEb,wBAAI7a,UAAU,eAAd,gBAEA,0BAAMC,MAAO,CAACkX,QAAS,YAAa2D,SAAU,SAAC/R,GAAO,EAAK+R,SAAS/R,KAChE,kBAACqS,GAAD,CAAS3G,QAAS,SAAChH,GACX,EAAKvM,MAAM2Y,YAAY9W,MAAK,SAAAC,GAAC,OAAIA,IAAMyK,KAGvC,EAAKyG,SAAS,CAAC2F,YAAY,YAAK,EAAK3Y,MAAM2Y,YAAY5X,QAAO,SAAAe,GAAC,OAAIA,IAAMyK,QAFzE,EAAKyG,SAAS,CAAC2F,YAAY,CAAEpM,GAAH,mBAAU,EAAKvM,MAAM2Y,iBAGpDzY,KAAM,SAAUyY,YAAa3Z,KAAKgB,MAAM2Y,eAEzC3Z,KAAKgB,MAAM2Y,YAAY/T,QAAU,4BAAQ9F,UAAU,cAAcyU,QAAS,WAAO,EAAKtU,MAAMsK,SAAUxK,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAA9G,UAChClV,KAAKgB,MAAM2Y,YAAY/T,QAAU,4BAAQ9F,UAAU,cAAcoB,KAAK,SAASnB,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAAvF,gB,GAjD3BvV,IAAMiB,WAoEhBwU,oBAbS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BmI,GACxB,MAAO,CACH4Q,aAAcnF,YAAmBmF,EAAc5Q,MAIxCwL,CAA6CE,aAAWgF,KClGjEV,GAA0B,CAC5BC,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,qCAkB1B5B,GAAiB9C,cAdA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACFhV,MAAO,UACP,YAAa,CACTA,MAAO,UACP6X,OAAQ,QAEZ,UAAW,CACPnH,gBAAiB,gBAGzBoH,QAAS,MAGUhD,CAA2BiD,MAE5C6B,G,4MACFtZ,MAAQ,CACJa,MAAO,EAAK5B,MAAMwB,MAAMF,WAAWM,MACnCC,UAAW,EAAK7B,MAAMwB,MAAMF,WAAWO,UACvCM,OAAO,EACPqN,OAAQ,I,uDAGH5G,GAAI,IAAD,OACR7I,KAAKgU,SAAS,CAAC5R,OAAO,EAAOqN,OAAQ,KACrC5G,EAAEgM,iBAEFtI,MAAM,GAAD,OAAIR,GAAJ,kBAA4B,CAC7BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAY3M,KAAKC,MAAMc,KAAKoL,WAE7CY,KAAMC,KAAKC,UAAU,CACjBM,GAAIvN,KAAKC,MAAMwB,MAAMF,WAAWK,IAChCC,MAAO7B,KAAKgB,MAAMa,MAClBC,UAAW9B,KAAKgB,MAAMc,cAG7ByG,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,SAAC5G,GACAA,EAAKS,MACJ,EAAK4R,SAAS,CAAC5R,OAAO,EAAMqN,OAAQ9N,EAAK8N,SAEzC,EAAKxP,MAAMsK,a,+BAKb,IAAD,OACL,OAAO,kBAAC,KAAD,CACHkQ,OAAQza,KAAKC,MAAMwa,OACnBC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAAO6Z,GACPe,aAAa,aAEb,wBAAI7a,UAAU,eAAd,aAEA,0BAAMC,MAAO,CAACkX,QAAS,YAAa2D,SAAU,SAAC/R,GAAO,EAAK+R,SAAS/R,KAChE,2BACIsQ,MAAOnZ,KAAKgB,MAAMa,MAClByX,SAAU,SAACzQ,GAAO,EAAKmL,SAAS,CAACnS,MAAOgH,EAAEqQ,OAAOC,SACjDrZ,UAAU,cACVoB,KAAK,OACLnB,MAAO,CAAC8a,aAAc,IACtBrB,YAAY,QACZsB,UAAW,KAEd9a,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,UAAhBA,EAAMzB,UAAsB,0BAAM5X,UAAU,qBACxEE,KAAKgB,MAAMyO,OAAO5M,MAAK,SAAAsW,GAAK,MAAoB,UAAhBA,EAAMzB,SAAmBhI,KAG9D,kBAACqL,GAAA,EAAD,CACIC,QACI,kBAAC,GAAD,CACIxC,QAASxY,KAAKgB,MAAMc,UACpBwX,SAAU,WAAO,EAAKtF,SAAS,CAAClS,WAAY,EAAKd,MAAMc,eAG/D/B,MAAO,CAACW,MAAO,WACfua,MAAM,kBAGTjb,KAAKgB,MAAMa,QAAU7B,KAAKC,MAAMwB,MAAMF,WAAWM,OAAS7B,KAAKgB,MAAMc,YAAc9B,KAAKC,MAAMwB,MAAMF,WAAWO,WAAa,4BAAQhC,UAAU,cAAcyU,QAAS,WAClK,EAAKtU,MAAMsK,SACZxK,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAFiF,SAI3HlV,KAAKgB,MAAMa,QAAU7B,KAAKC,MAAMwB,MAAMF,WAAWM,OAAS7B,KAAKgB,MAAMc,YAAc9B,KAAKC,MAAMwB,MAAMF,WAAWO,YAAc,4BAAQhC,UAAU,cAAcoB,KAAK,SAASnB,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAAvF,c,GAzEtHvV,IAAMiB,WA4FhBwU,oBAbS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BmI,GACxB,MAAO,CACH4Q,aAAcnF,YAAmBmF,EAAc5Q,MAIxCwL,CAA6CE,aAAWgF,KC5IjEV,GAA0B,CAC5BC,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxB0B,SAAwB,SAI1B8P,G,yKACU,IAAD,OACPlc,MAAM,GAAD,OAAIR,GAAJ,oBAA8B,CAC/BS,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAY3M,KAAKC,MAAMc,KAAKoL,WAE7CY,KAAMC,KAAKC,UAAU,CACjBM,GAAIvN,KAAKC,MAAMwB,MAAMF,WAAWK,QAGvC2G,MAAK,WACF,EAAKtI,MAAMsK,a,+BAIT,IAAD,OACL,OAAO,kBAAC,KAAD,CACHkQ,OAAQza,KAAKC,MAAMwa,OACnBC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAAO6Z,GACPe,aAAa,eAEb,wBAAI7a,UAAU,cAAcC,MAAO,CAAC8W,MAAO,SAA3C,aAEA,4BAAQ/W,UAAU,cAAcyU,QAAS,WAAO,EAAKtU,MAAMsK,SAAUxK,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAA9G,QACA,4BAAQpV,UAAU,cAAcyU,QAAS,WAAO,EAAKqG,YAAa7a,MAAO,CAAC8W,MAAO,cAAe3B,UAAW,IAA3G,e,GA5BavV,IAAMiB,WAwChBwU,gBAPS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,SAIN2T,CAAyBE,aAAWmT,KCvD7CtO,GAA0B,CAC5BN,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,cACxB5F,SAAwB,QACxBoJ,QAAwB,WAI1BC,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACHG,OAAQza,KAAKC,MAAMwa,OACnBC,eAAgB,WAAO,EAAKza,MAAMsK,SAClCxK,MAAOoa,GACPQ,aAAa,oBAEb,wBAAI7a,UAAU,eAAd,oBAEA,kBAACob,GAAD,CAAS3G,QAAS,SAAChH,GACf,EAAKtN,MAAMyU,QAAQzF,KAAnB,iBAAkC1B,Y,GAXzB5N,IAAMiB,WA8BhBwU,I,GAAAA,gBAbS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BmI,GACxB,MAAO,CACH4Q,aAAcnF,YAAmBmF,EAAc5Q,MAIxCwL,CAA6CE,aAAWgF,K,oFCvBjEoO,GAAUlT,cA/BM,SAAAC,GAAK,MAAK,CAC5BC,KAAM,CACFtE,gBAAiB,UACjB1Q,MAAO,OACPoZ,OAAQ,EACRjD,MAAO,GACP3F,OAAQ,GACRgJ,UAAW,iBACXlD,OAAQ,QACR,UAAW,CACP5F,gBAAiB,UACjB8I,UAAW,YAoBP1E,CAA0BI,MACpC+S,GAAYnT,cAjBM,SAAAC,GAAK,MAAK,CAC9BC,KAAM,CACFtE,gBAAiB,UACjB1Q,MAAO,OACPoZ,OAAQ,EACRjD,MAAO,GACP3F,OAAQ,GACRgJ,UAAW,iBACXlD,OAAQ,QACR,UAAW,CACP5F,gBAAiB,UACjB8I,UAAW,YAML1E,CAA4BI,MAcxCL,GAAYC,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFtE,gBAAiB,UACjB1Q,MAAO,UACPoZ,OAAQ,EACR9C,OAAQ,kBACR,UAAW,CACP5F,gBAAiB,eAKXoE,CAAsBI,MAElCgN,GAAoB,CACtB/I,QAAS,CACLjK,SAAU,QACV2D,IAAK,EACLD,KAAM,EACNqC,MAAO,EACP9B,OAAQ,EACRzC,gBAAiB,sBACjB0I,OAAQ,GAEZC,QAAU,CACNxG,IAAwB,MACxBD,KAAwB,MACxBqC,MAAwB,OACxB9B,OAAwB,OACxB7C,SAAwB,QACxBgJ,YAAwB,OACxB3F,UAAwB,wBACxB4F,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,cACxB5F,SAAwB,QACxBoJ,QAAwB,WAI1BuO,GAA0B,CAC5B/O,QAAS,CACLjK,SAAU,QACViH,MAAO,cACP3F,OAAQ,cACRqC,IAAK,GACLD,KAAM,QACNqC,MAAO,GACPmE,OAAQ,GAEZC,QAAU,CACNxB,OAAQ,OACRvH,SAAwB,QACxBE,OAAQ,cACR+I,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,cACxB5F,SAAwB,QACxBoJ,QAAwB,SACxBzK,SAAU,UAIZiZ,GAAoC,CACtChP,QAAS,CACLjK,SAAU,QACViH,MAAO,OACP3F,OAAQ,QACRqC,IAAK,EACLD,KAAM,EACNwG,OAAQ,GAEZC,SAAO,IACHxB,OAAQ,OACRvH,SAAwB,OACxBE,OAAQ,QACR+I,aAAwB,OACxBC,UAAwB,mCACxBjD,QAAwB,OACxBmD,eAAwB,SACxBzB,SAAwB,OACxB9B,MAAwB,cACxB5F,SAAwB,QACxBoJ,QAAwB,SACxBzK,SAAU,QACVkZ,WAAY,UAbT,iCAca,UAdb,+BAeW,UAfX,+BAgBW,UAhBX,KAoBL5d,G,kLAEElL,KAAK2I,MAAMue,UAAYlnB,KAAKC,MAAM8H,OACV,UAArB/H,KAAKC,MAAMmD,QACVpD,KAAK0I,MAAMwe,UAAYlnB,KAAKC,MAAM8H,U,+BAGhC,IAAD,OACL,OAAO,oCACH,2BAAOuO,IAAK,SAAAA,GAAQ,EAAK3N,MAAQ2N,GAAMvW,MAAO,CAACkX,QAAS,QAASkQ,UAAQ,EAACC,UAAQ,IAC5D,UAArBpnB,KAAKC,MAAMmD,OAAqB,2BAAOtD,UAAU,cAAcwW,IAAK,SAAAA,GAAQ,EAAK5N,MAAQ4N,GAAM6Q,UAAQ,EAAC4B,OAAK,S,GAVhGppB,IAAM0hB,eAe1BmH,G,4MACFxnB,MAAQ,CACJgoB,YAAY,G,uDAEN,IAAD,OACL,OAAO,kBAAC,KAAD,CACHvO,OAAQza,KAAKC,MAAMwa,OACnBC,eAAgB,WACkB,cAA3B,EAAKza,MAAM0E,KAAKlE,QAAqD,aAA3B,EAAKR,MAAM0E,KAAKlE,QACzD,EAAKR,MAAM6nB,YAAYF,SAG/B7nB,MAAkC,WAA3BC,KAAKC,MAAM0E,KAAKlE,OAAsBT,KAAKgB,MAAMgoB,WAAaH,GAAoCD,GAA0BhG,GACnIjI,aAAa,OACbsO,iBAAiB,cAEhBjpB,KAAKC,MAAM0E,KAAKxC,cAAgB,kBAAC,GAAD,CAAaiB,MAAOpD,KAAKC,MAAM0E,KAAKvB,MAAOsO,IAAK1R,KAAKC,MAAM0E,KAAKxC,aAAaoL,GAAGvN,KAAKC,MAAM0E,KAAKvB,MAAO2E,OAAQ/H,KAAKC,MAAM0E,KAAKxC,eACpI,UAA3BnC,KAAKC,MAAM0E,KAAKlE,QAAsB,qCACN,cAA3BT,KAAKC,MAAM0E,KAAKlE,QAAqD,SAA3BT,KAAKC,MAAM0E,KAAKlE,QAAgD,aAA3BT,KAAKC,MAAM0E,KAAKlE,SAA0B,wBAAIV,MAAO,CAAC8W,MAAO,QAAS/W,UAAU,eAAtC,kBAC/F,aAA3BE,KAAKC,MAAM0E,KAAKlE,QAAyB,wBAAIV,MAAO,CAAC8W,MAAO,QAAS/W,UAAU,eAAtC,iBAEf,UAA1BE,KAAKC,MAAM0E,KAAKvB,OAAqB,oCAClC,kBAAC,EAAD,CACIrD,MAAO,CAAC8W,MAAO,GAAI3F,OAAQ,GAAIvQ,SAAU,GAAI6f,WAAY,OAAQrP,WAAY,IAAKC,gBAAgB,OAAD,OAASpR,KAAKC,MAAM0E,KAAK5D,KAAKL,MAA9B,MACjGJ,KAAMN,KAAKC,MAAM0E,KAAK5D,KAAKT,KAAKqR,MAAMN,OAAO,GAAGrR,KAAKC,MAAM0E,KAAK5D,KAAKT,KAAKmN,KAAK4D,OAAO,GACtFnR,SAAQF,KAAKC,MAAM0E,KAAK5D,KAAKb,QAASF,KAAKC,MAAM0E,KAAK5D,KAAKb,SAG/D,uBAAGJ,UAAU,qBAAqBE,KAAKC,MAAM0E,KAAK5D,KAAKT,KAAKqR,MAA5D,IAAoE3R,KAAKC,MAAM0E,KAAK5D,KAAKT,KAAKmN,MAC9F,uBAAG3N,UAAU,qBAAb,WAGuB,UAA1BE,KAAKC,MAAM0E,KAAKvB,OAAqB,oCAClC,yBAAKrD,MAAO,CAACmR,OAAQlR,KAAKgB,MAAMgoB,WAAa,oBAAsB,IAAKnS,MAAO,WAGvD,SAA3B7W,KAAKC,MAAM0E,KAAKlE,QAAgD,aAA3BT,KAAKC,MAAM0E,KAAKlE,QAAyB,yBAAKV,MAAO,CAAC8W,MAAO,OAAQkQ,UAAW,SAAU7R,UAAW,GAAI2F,aAAc,KAC7H,WAA3B7a,KAAKC,MAAM0E,KAAKlE,QAAuB,oCACpC,kBAAC,GAAD,CAAWX,UAAS,uBAAkBE,KAAKC,MAAMmD,MAAMH,MAAQ,GAAK,UAAYsR,QAAS,WAAOlH,OAC5F,kBAAC,KAAD,CAAYtN,MAAO,CAACW,MAAOV,KAAKC,MAAMmD,MAAMH,MAAQ,UAAY,WAEpE,kBAAC,GAAD,CAAWnD,UAAS,uBAAkBE,KAAKC,MAAMmD,MAAMF,QAAU,GAAK,UAAYqR,QAAS,WAAOlH,OAC9F,kBAAC,KAAD,CAActN,MAAO,CAACW,MAAOV,KAAKC,MAAMmD,MAAMF,QAAU,UAAY,WAExE,kBAAC,GAAD,CAAWpD,UAAS,uBAAkBE,KAAKC,MAAMmD,MAAMD,SAAW,SAAW,IAAMoR,QAAS,WAAOlH,OAC/F,kBAAC,KAAD,CAAsBtN,MAAO,CAACW,MAAOV,KAAKC,MAAMmD,MAAMD,SAAW,OAAS,cAE9E,kBAAC,GAAD,CAAWrD,UAAS,uBAAkBE,KAAKgB,MAAMgoB,WAAa,SAAW,IAAMzU,QAAS,WAAO,EAAKP,SAAS,CAACgV,YAAa,EAAKhoB,MAAMgoB,gBAChIhpB,KAAKgB,MAAMgoB,YAAc,kBAAC,KAAD,CAAgBjpB,MAAO,CAACW,MAAO,aACzDV,KAAKgB,MAAMgoB,YAAc,kBAAC,KAAD,CAAoBjpB,MAAO,CAACW,MAAO,YAIzC,aAA3BV,KAAKC,MAAM0E,KAAKlE,QAAyB,kBAACioB,GAAD,CAAShoB,MAAM,UAAU0W,KAAK,QAAQC,aAAW,OAAO9C,QAAS,WACvG,EAAKtU,MAAM6nB,YAAYhE,OAAO,EAAK7jB,MAAMc,KAAKoL,YAE9C,kBAAC,KAAD,CAAUpM,MAAO,CAACW,MAAO,WAG7B,kBAACioB,GAAD,CAAWjoB,MAAM,UAAU0W,KAAK,QAAQC,aAAW,OAAO9C,QAAS,WAC/D,EAAKtU,MAAM6nB,YAAYpd,KAAK,EAAKzK,MAAM0E,KAAK5D,KAAM,EAAKd,MAAMc,KAAKoL,YAElE,kBAAC,KAAD,CAAapM,MAAO,CAACW,MAAO,YAIR,SAA3BV,KAAKC,MAAM0E,KAAKlE,QAAqB,yBAAKV,MAAO,CAAC8W,MAAO,OAAQkQ,UAAW,SAAU7R,UAAW,GAAI2F,aAAc,GAAIna,MAAO,UAAWC,SAAU,KAA9G,uBACd,6BAAS,uBAAGZ,MAAO,CAACW,MAAO,UAAW6f,OAAQ,WAAYhM,QAAS,WAAO,EAAKtU,MAAM6nB,YAAYF,UAAxF,UAGL,aAA3B5nB,KAAKC,MAAM0E,KAAKlE,QAAyB,yBAAKV,MAAO,CAAC8W,MAAO,OAAQkQ,UAAW,SAAU7R,UAAW,GAAI2F,aAAc,GAAIna,MAAO,UAAWC,SAAU,KACnJX,KAAKC,MAAM0E,KAAK5D,KAAKT,KAAKqR,MADW,uBACe,6BAAS,uBAAG5R,MAAO,CAACW,MAAO,UAAW6f,OAAQ,WAAYhM,QAAS,WAAO,EAAKtU,MAAM6nB,YAAYF,UAAxF,WAG1C,UAA3B5nB,KAAKC,MAAM0E,KAAKlE,QAAsB,oCACnC,kBAAC,KAAD,CAAkBV,MAAO,CAACW,MAAO,UAAWC,SAAU,MACtD,wBAAIb,UAAU,cAAcC,MAAO,CAAC8W,MAAO,SAA3C,SACA,uBAAG/W,UAAU,aAAaC,MAAO,CAAC8W,MAAO,OAAQkQ,UAAW,WAA5D,0B,GA7EWpnB,IAAMiB,WAiGlBwU,oBAdS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZ4D,KAAM3D,EAAM2D,KACZvB,MAAOpC,EAAMoC,UAIrB,SAA4BwG,GACxB,MAAO,CACHke,YAAazS,YAAmByS,EAAale,MAItCwL,CAA6CE,aAAWkT,KC1PjEU,G,4MACFloB,MAAQ,CACJmoB,IAAKC,KAAGhD,MAAM,EAAKnmB,MAAM0U,SAAS2C,OAAQ,CAAE+R,mBAAmB,IAAQF,IACvEpoB,KAAMqoB,KAAGhD,MAAM,EAAKnmB,MAAM0U,SAAS2C,OAAQ,CAAE+R,mBAAmB,IAAQtoB,KACxEuoB,MAAOF,KAAGhD,MAAM,EAAKnmB,MAAM0U,SAAS2C,OAAQ,CAAE+R,mBAAmB,IAAQC,O,kEAGxD,IAAD,OAChBtpB,KAAKC,MAAMyU,QAAQ6U,QAAO,SAAC5U,GACvB,EAAKX,SAAS,CACVmV,IAAKC,KAAGhD,MAAMzR,EAAS2C,OAAQ,CAAE+R,mBAAmB,IAAQF,IAC5DpoB,KAAMqoB,KAAGhD,MAAMzR,EAAS2C,OAAQ,CAAE+R,mBAAmB,IAAQtoB,KAC7DuoB,MAAOF,KAAGhD,MAAMzR,EAAS2C,OAAQ,CAAE+R,mBAAmB,IAAQC,a,+BAKhE,IAAD,OACL,OAAO,oCACH,kBAAC,GAAD,CAAY7O,OAA2B,YAAnBza,KAAKgB,MAAMmoB,IAAmB5e,MAAO,WACrD,EAAKtK,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,QAIhB,kBAAC,GAAD,CAAcmD,OAA2B,YAAnBza,KAAKgB,MAAMmoB,IAAmB5e,MAAO,WACvD,EAAKtK,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,QAIftX,KAAKgB,MAAMD,MAAQ,kBAAC,GAAD,CAAMwB,OAAQvC,KAAKgB,MAAMD,KAAMwJ,MAAO,WACtD,EAAKtK,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,QAIhB,kBAAC,GAAD,CAAUmD,OAA6B,aAArBza,KAAKgB,MAAMsoB,MAAsB/e,MAAO,WACtD,EAAKtK,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,QAIhB,kBAACkS,GAAD,CAAQ/O,OAA2B,WAAnBza,KAAKgB,MAAMmoB,KAAoBnpB,KAAKC,MAAMwB,MAAMF,WAAYgJ,MAAO,WAC/E,EAAKtK,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,QAII,aAAnBtX,KAAKgB,MAAMmoB,KAAsBnpB,KAAKC,MAAMwB,MAAMF,YAAevB,KAAKC,MAAMc,KAAKa,MAAQ5B,KAAKC,MAAMwB,MAAMF,WAAWkmB,SAAY,kBAACgC,GAAD,CAAUhP,OAA2B,aAAnBza,KAAKgB,MAAMmoB,KAAsBnpB,KAAKC,MAAMwB,MAAMF,WAAYgJ,MAAO,WACrN,EAAKtK,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,QAII,eAAnBtX,KAAKgB,MAAMmoB,KAAwBnpB,KAAKC,MAAMwB,MAAMF,YAAevB,KAAKC,MAAMc,KAAKa,MAAQ5B,KAAKC,MAAMwB,MAAMF,WAAWkmB,SAAY,kBAAC,GAAD,CAAYhN,OAA2B,eAAnBza,KAAKgB,MAAMmoB,KAAwBnpB,KAAKC,MAAMwB,MAAMF,WAAYgJ,MAAO,WAC3N,EAAKtK,MAAMyU,QAAQzF,KAAK,CACpBqI,OAAQ,QAIhB,kBAACoS,GAAD,CAASjP,SAAUza,KAAKC,MAAMoD,QAAQC,gBAAgBsC,OAAQ2E,MAAO,SAAC9J,GAClE,EAAKR,MAAM2J,SAAS,CAChB1I,K7D/Be,sB6DgCfC,QAAS,QAIpBnB,KAAKC,MAAM0E,KAAK5D,MAAQ,kBAAC,GAAD,CAAM0Z,QAAQ,S,GApEvB9a,IAAMiB,WAkFfwU,gBATS,SAAApU,GACpB,MAAO,CACHS,MAAOT,EAAMS,MACbV,KAAMC,EAAMD,KACZsC,QAASrC,EAAMqC,QACfsB,KAAM3D,EAAM2D,QAILyQ,CAAyBE,aAAW4T,KClF7CS,G,4MACJ3oB,MAAQ,CACN4oB,UAAU,G,EAyEZC,aAAe,YAA4B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,6BACxC,OACE,kBAAC,KAAD,iBACMA,EADN,CAEEC,OAAQ,kBACN,EAAK/pB,MAAMc,KAAKD,OACb,oCACEgpB,EACD,kBAAC,GAAD,OAGF,kBAAC,KAAD,CACEhZ,GAAI,CACF8D,SAAU,iB,EASxBqV,UAAY,YAA4B,IAAzBH,EAAwB,EAAxBA,SAAaC,EAAW,6BACrC,OACE,kBAAC,KAAD,iBACMA,EADN,CAEEC,OAAQ,kBACL,EAAK/pB,MAAMc,KAAKD,OAGf,kBAAC,KAAD,CACEgQ,GAAI,CACF8D,SAAU,OAJdkV,O,kEAlGW,IAAD,OAClB9pB,KAAKC,MAAMyU,QAAQ6U,QAAO,WACxBhkB,GAAS,EAAKtF,MAAMyU,QAAQC,SAASC,SAAUmT,OAGjDxiB,GAASvF,KAAKC,MAAMyU,QAAQC,SAASC,SAAUmT,IAL7B,IAQd5b,EADgBnM,KAAKC,MAAjB+c,QACekN,IAAI,YAEvB/d,EACFI,MAAM,GAAD,OAAIR,GAAJ,gBAA0B,CAC7BS,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYR,MAG1B5D,MAAK,SAACqE,GAAD,OAAcA,EAASC,UAC5BtE,MAAK,YAAwD,IAAtDxH,EAAqD,EAArDA,KAAMsC,EAA+C,EAA/CA,QAASE,EAAsC,EAAtCA,YAAaqY,EAAyB,EAAzBA,oBAClC7S,GAAiBmD,KAAKC,GACtB,EAAKlM,MAAMuc,YAAYb,UAAU5a,EAAMsC,EAASE,EAAaqY,EAAqBzP,GAClF,EAAK6H,SAAS,CAAC4V,UAAU,OAE1BphB,OAAM,WACL,EAAKwL,SAAS,CAAC4V,UAAU,OAG7B5pB,KAAKgU,SAAS,CAAC4V,UAAU,M,+BAInB,IAAD,OACP,OAAO5pB,KAAKgB,MAAM4oB,UAAa,oCAC7B,kBAAC,KAAD,KACK7B,GAAOrmB,KAAI,SAACyoB,EAAO1Y,GAChB,OAAQ0Y,EAAMjpB,MACV,IAAK,OACD,OAAO,kBAAC,EAAK+oB,UAAN,CACHvY,IAAKD,EACLjM,KAAM2kB,EAAM3kB,KACZwiB,MAAOmC,EAAMnC,OAEb,kBAACmC,EAAMvG,UAAP,OAGR,IAAK,OACD,OAAO,kBAAC,EAAKiG,aAAN,CACHnY,IAAKD,EACLjM,KAAM2kB,EAAM3kB,KACZwiB,MAAOmC,EAAMnC,OAEb,kBAACmC,EAAMvG,UAAP,OAGR,QACI,OAAO,MAQnB,kBAAC,KAAD,CAAOA,UAAWqE,W,GAtEJtoB,IAAMiB,WAkIfwU,oBAbS,SAACpU,GACvB,MAAO,CACLD,KAAMC,EAAMD,SAIhB,SAA4B6I,GAC1B,MAAO,CACL4S,YAAanH,YAAmBmH,EAAa5S,GAC7CqP,aAAc5D,YAAmB4D,EAAcrP,MAIpCwL,CAGb+H,aAAY7H,aAAWqU,MC3InBS,G,kDACF,WAAYnqB,GAAQ,IAAD,8BACf,cAAMA,IACDgW,aAAe,SAACkD,GACjB,EAAKnF,SAAS,CAACqW,WAAYlR,KAG/B,EAAKnY,MAAQ,CACTqpB,YAAY,EACZpU,aAAc,EAAKA,cARR,E,qDAef,OACI,kBAACvW,EAAa4qB,SAAd,CAAuBnR,MAAOnZ,KAAKgB,OAC/B,yBAAKlB,UAAU,mBACX,yBAAKA,UAAU,OACVE,KAAKC,MAAMc,KAAKD,QAAU,kBAAC,GAAD,CAAa6b,KAAM3c,KAAKgB,MAAMqpB,aACzD,kBAAC,GAAD,a,GArBN1qB,IAAMiB,WAmCTwU,gBANS,SAAApU,GACpB,MAAO,CACHD,KAAMC,EAAMD,QAILqU,CAAyBgV,ICpCpBG,QACW,cAA7BhkB,OAAOoO,SAAS6V,UAEe,UAA7BjkB,OAAOoO,SAAS6V,UAEhBjkB,OAAOoO,SAAS6V,SAASjD,MACvB,2D,eCONkD,KAAMC,cAAc,SAEpBC,IAASX,OACL,kBAACY,GAAA,EAAD,KACI,kBAAC,IAAD,CAAUjhB,MAAOA,IACb,kBAAC,KAAD,KACI,kBAAC,GAAD,MACA,kBAAC,KAAD,SAIZ9D,SAAS4N,eAAe,SD+FtB,kBAAmBxL,WACrBA,UAAU4iB,cAAcC,MACrBviB,MAAK,SAAAwiB,GACJA,EAAaC,gBAEdxiB,OAAM,SAAApG,GACL+G,QAAQ/G,MAAMA,EAAMM,a","file":"static/js/main.47757cbf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_DELETE,\r\n    ROOMS_EDIT,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: []\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: []\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_GET,\r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio'\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","import { push } from 'react-router-redux';\r\n\r\nexport function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import adapter from 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\nconst RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n\r\n    function onerror(e) {\r\n        console.log(JSON.stringify(e, null, '\\t'));\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        let answer = new RTCSessionDescription({\r\n            type: 'answer',\r\n            sdp: sdpAnswer\r\n        })\r\n        \r\n        WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n        let stream = new MediaStream();\r\n\r\n        for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n            stream.addTrack(sender.track);\r\n        }\r\n\r\n        remoteStream = stream\r\n\r\n        store.dispatch({\r\n            type: ROOMS_SET_REMOTE_STREAM,\r\n            payload: stream\r\n        })\r\n\r\n        speechEvents = hark(localStream, {});\r\n \r\n        speechEvents.on('speaking', function() {\r\n            SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n        });\r\n    \r\n        speechEvents.on('stopped_speaking', function() {\r\n            SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n        });\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = null\r\nlet activeLang = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","export function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && 'Today'\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes : day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (\r\n                (diff < 60 && 'just now')\r\n                || (diff < 120 && \"1 \" + 'minute' + \" \" + 'ago' + \"\")\r\n                || (diff < 3600 && Math.floor(diff / 60) + \" \" + 'minutes' + \" \" + 'ago' + \"\")\r\n                || (diff < 7200 && \"1 \" + 'hour' + \" \" + 'ago' + \"\")\r\n                || (diff < 86400 && Math.floor(diff / 3600) + \" \" + 'hours' + \" \" + 'ago')\r\n            )\r\n        )\r\n        || (day_diff == 1 && 'yerstaday' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + \" \" + 'days' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + \" \" + 'weeks' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive() {\r\n        let element = document.getElementById(this.props.from)\r\n        let rect = element.getBoundingClientRect()\r\n\r\n        let top\r\n        let left\r\n        if(this.props.bottom) {\r\n            top = rect.y + element.clientHeight\r\n            left = rect.x\r\n        }\r\n        else {\r\n            top = rect.y\r\n            left = rect.x+element.clientWidth\r\n        }\r\n        \r\n        this.setState({left, top})\r\n        this.setState({active: !this.state.active})\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>You:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\">{this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.images[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Фотографии [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.sounds[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Аудио [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.files[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Файлы [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Chats</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>You dont have chats, lets create new</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(room => {\r\n            if(room.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: room.errors[0]\r\n                })\r\n                \r\n                return\r\n            }\r\n\r\n            room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n            room.users.map(x => {\r\n                x.speaking = false\r\n            })\r\n\r\n            setForceTitle(room.title)\r\n\r\n            dispatch({\r\n                type: ROOMS_JOIN_ROOM,\r\n                payload: {room, canLoad: room.dialog.messages.length === 50}\r\n            })\r\n            \r\n            SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n            try {\r\n                WebRtcController.connectRoom(room._id)\r\n            } catch (err) {\r\n                SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                })\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","import { \r\n    USERS_ADD,\r\n    USERS_GET,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder=\"Search\" />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>You dont have friends, lets add him</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Users not found</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create'})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n                this.props.history.push(`/rooms/${room._id}`)\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">New room</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">Select users</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder=\"Title\"\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'title').msg} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label=\"Private theme\"\r\n                    />\r\n\r\n                    <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>Next</button>\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Start</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Modal\r\nimport ModalCreateRoom from '../Modals/CreateRoom'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Rooms</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Create your first room in this language</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Что то пошло не так...</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create room\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"content\">Invited you to the room&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"content\">Accept your friend request</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"content\">Send you friend request</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Notifications</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Here will placed your notifications</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.history.push('/')\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Language</h2>\r\n\r\n                    <span style={{color: this.props.user.roomLang === 'eng' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }}>English</span>\r\n                    <span style={{color: this.props.user.roomLang === 'rus' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }}>Russian</span>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.notifications.noRead && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(this.state.audio) {\r\n            this.state.audio.parentElement.className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) { \r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound active'\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\nimport ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nlet ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span>\r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.text}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.openSlider(images)\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.openSlider(images)\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Message))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, LinearProgress, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getClientHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight()/3 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} typing</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} typing</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Write your first message to {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialog)","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `Вложения [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">Attachment messages</h3>\r\n                        <p className=\"message-text\">{`${this.props.recentMessages.length} messages`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attachment","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: 0\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <div className=\"placeholder\">Write message...</div>}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    Reply\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    Forward\r\n                </Button>\r\n\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport Slider from './Slider'\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\nlet waitDraft = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isOpenSlider: false,\r\n        sliderImages: [],\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = ''\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.isOpenSlider && <Slider images={this.state.sliderImages} close={() => {this.setState({isOpenSlider: false, sliderImages: []})}} />}\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    openSlider={(sliderImages) => {this.setState({sliderImages, isOpenSlider: true})}}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\">{this.props.rooms.activeRoom.error.msg}</p>\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Members extends React.Component {\r\n    render() {\r\n        return <Scrollbars\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"theme-members scroll\"\r\n            autoHide\r\n        >\r\n            {this.props.users.map((user, index) => \r\n                <div key={index} className=\"member\">\r\n                    <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                    {user.speaking && <span className=\"speaking\"></span>}\r\n                </div>\r\n            )}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6\">\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\" id={this.props.rooms.activeRoom._id}>\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} online</h3>\r\n                        </div>\r\n\r\n                        <ActionMenu \r\n                            actions={\r\n                                this.props.rooms.activeRoom.ownerId === this.props.user._id ? [\r\n                                    {text: 'Invite friends', action: () => {\r\n                                        this.props.history.push({\r\n                                            search: '?act=invite'\r\n                                        })\r\n                                    }},\r\n                                    {\r\n                                        text: 'Edit room',\r\n                                        action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=editRoom'\r\n                                            })\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: 'Delete room',\r\n                                        action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=deleteRoom'\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                ] : [\r\n                                    {\r\n                                        text: 'Invite friends', action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=invite'\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                ]} \r\n                            from={this.props.rooms.activeRoom._id} \r\n                            bottom={true} \r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat messages={this.props.rooms.activeRoom.dialog.messages} type=\"room\" to={this.props.rooms.activeRoom.title} dialogId={this.props.rooms.activeRoom.dialog._id} roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6 theme-screen\">\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Room))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../../Partials/Loading'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","import { CALL_SET_USER, CALL_SET_STATUS } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user, status: 'outcoming'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/call`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id: user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((call) => {\r\n        if(call.error) {\r\n            dispatch({\r\n                type: CALL_SET_STATUS,\r\n                payload: call.error\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_STATUS,\r\n        payload: 'active'\r\n    })\r\n    WebRtcController.call(store.getState().call.user._id)\r\n\r\n    fetch(`${urlApi}/api/call/accept`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: store.getState().call.user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 32, \r\n                        height: 32, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                    </div></>\r\n\r\n                    {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CustomFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CustomFab>}\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>User not found</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog))\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Room from '../Pages/User/Room';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport { randomInteger } from '../Controllers/FunctionsController';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport CallIcon from '@material-ui/icons/Call';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">Moscow</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>Message</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>Call</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>+ Friend</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Accept</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Decline</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Remove</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PermMediaOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">Moscow</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Settings</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Contacts</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <PermMediaOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Media</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px'\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Incoming requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Outgoing requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">Contacts</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>Friends</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>Inbox</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>Outbox</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox />}\r\n            {this.state.activeTab === 'outbox' && <Outbox />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">New chat</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">Select users</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>Back</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Invite</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">Edit room</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder=\"Title\"\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.state.errors.find(value => value.param === 'title').msg} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label=\"Private theme\"\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>Back</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Save</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>You sure?</h2>\r\n            \r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>Delete</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(DeleteRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">Forward messages</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">Outcoming call</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">Incoming call</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <Avatar \r\n                        style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`}} \r\n                        name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                        avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                    />\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">Moscow</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    The line is busy... <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} canceled your call <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>Error</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>have_active_call</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog))","// App\r\nimport React from 'react'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD } from '../Redux/constants';\r\nimport Call from './Call';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n        {this.props.call.user && <Call isOpen={true} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications}) => {\r\n          SocketController.init(apiToken)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}