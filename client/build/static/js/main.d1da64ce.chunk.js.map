{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","Partials/Room/RoomItem.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Redux/actions/rooms.js","Redux/actions/users.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/Slider.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Pages/User/Dialog.js","Router/config.js","Pages/NoMatch.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","name","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","user","state","action","type","payload","roomLang","isFetching","getted","activeRoom","isError","rooms","map","room","_id","title","isPrivate","filter","typers","canLoad","isLoading","remoteStream","error","users","roomId","userId","dialog","messages","message","_newId","isEdit","find","x","isRead","speaking","micOn","musicOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","combineReducers","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","min","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","length","document","setForceTitle","WebRtcPeerConnection","activeRoomId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraints","mozRTCIceCandidate","RTCIceCandidate","offerToReceiveAudio","offerToReceiveVideo","options","iceServers","urls","credential","username","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","getAudioTracks","enabled","store","dispatch","addStream","onicecandidate","createOffer","then","offer","setLocalDescription","console","log","sendRoomOfferSdp","offerSdp","sdp","onRoomOffer","mediaDevices","audio","video","catch","err","lang","close","leaveRoom","stop","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","forEach","sender","addTrack","track","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","urlApi","socket","activeLang","init","apiToken","io","transports","emit","getState","setTimeout","answerSdp","WebRtcController","otherId","fetch","method","headers","Accept","Authorization","body","JSON","stringify","response","json","id","read","last","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","images","files","sounds","append","file","push","localMessage","text","recentMessages","now","m","socketId","messageRes","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","RoomItem","textDecoration","to","Button","width","height","fontWeight","backgroundColor","charAt","index","key","first","getHM","date","time","hours","getHours","minutes","getMinutes","toString","LastMessageDate","getTime","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","OnlineDate","diff","getDay","month_diff","isNaN","ceil","ActionMenu","active","left","top","element","getElementById","from","rect","getBoundingClientRect","bottom","clientHeight","clientWidth","setState","addEventListener","toggleActive","bind","removeEventListener","transform","actions","onClick","DialogItem","randomId","history","location","pathname","preventDefault","myUser","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","position","right","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","search","contextType","roomsGet","roomsAdd","errors","param","msg","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","CustomCheckbox","border","checked","Checkbox","UserItem","minWidth","flexWrap","selected","waitSearch","Contacts","q","searchResult","usersActions","target","value","clearTimeout","test","onChange","onSearch","placeholder","roomsBlock","CircularProgress","selectUsers","customStylesModalCreate","overlay","zIndex","content","marginRight","borderRadius","boxShadow","customStylesModalInvite","justifyContent","maxWidth","padding","CreateRoom","step","roomsActions","isOpen","onRequestClose","contentLabel","onSubmit","marginBottom","maxLength","FormControlLabel","control","label","Friends","Rooms","isOpenCreateRoom","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","Languages","userActions","UserSidebar","activeTab","show","Login","email","password","data","cookies","set","token","withCookies","Register","firstName","lastName","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","src","volume","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","parentElement","pause","stopPropagation","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","setInterval","clearInterval","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","unSelect","onSelect","isRecent","cursor","lineHeight","canSelect","replace","countRecent","image","isBlur","openSlider","draggable","alt","sound","open","toFixed","sliderImages","PureComponent","waitActiveUser","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","getClientHeight","getScrollHeight","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","customStylesModal","Slider","opacity","InputMessage","inputMessageHeight","event","items","clipboardData","originalEvent","kind","getAsFile","addFile","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","accept","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","isOpenSlider","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","toast","POSITION","TOP_CENTER","URL","webkitURL","createObjectURL","Blob","split","newText","prevText","textAlign","RoomJoinError","Members","srcObject","autoPlay","controls","Room","waitSocket","match","params","ownerId","Main","order","innerWidth","routes","exact","NoMatch","transition","OtherUser","MyUser","User","Inbox","Outbox","CreateDialog","success","DeleteRoom","MainModal","act","qs","ignoreQueryPrefix","modal","listen","Invite","EditRoom","Forward","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"01EAEaA,G,OAAeC,IAAMC,iB,sDCoBnBC,E,uKAfP,OACI,yBAAKC,UAAU,cAAcC,MAAOC,KAAKC,MAAMF,OAC3C,8BAAOC,KAAKC,MAAMC,KAAKC,eACtBH,KAAKC,MAAMG,QAAU,0BAAMN,UAAU,kBAErCE,KAAKC,MAAMI,QAAU,oCACK,WAAtBL,KAAKC,MAAMI,QAAuB,0BAAMP,UAAU,uBAAsB,kBAAC,IAAD,CAAeC,MAAO,CAACO,MAAO,OAAQC,SAAU,OAClG,WAAtBP,KAAKC,MAAMI,QAAuB,0BAAMP,UAAU,uBAAsB,kBAAC,IAAD,CAAcC,MAAO,CAACO,MAAO,OAAQC,SAAU,OACjG,YAAtBP,KAAKC,MAAMI,QAAwB,0BAAMP,UAAU,uBAAsB,kBAAC,IAAD,CAASC,MAAO,CAACO,MAAO,OAAQC,SAAU,a,GAVnHZ,IAAMa,W,8GCCrBC,EAAgB,CAClBC,QAAQ,GAiBGC,EAdF,WAAoC,IAAnCC,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC5C,OAAOA,EAAOC,MACV,ICXkB,aDYd,OAAO,uCAAKF,GAAUC,EAAOE,SAA7B,IAAsCL,QAAQ,IAElD,ICbmB,cDcf,MAAO,CAAEA,QAAQ,GACrB,ICd6B,wBDezB,OAAO,2BAAKE,GAAZ,IAAmBI,SAAUH,EAAOE,UACxC,QACI,OAAOH,I,QEYbH,EAAgB,CAClBQ,YAAY,EACZC,QAAQ,EACRC,YAAY,EACZC,SAAS,EACTC,MAAO,IAqHIA,EAlHD,WAAoC,IAAnCT,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IDpCiB,YCqCb,OAAO,2BAAKF,GAAZ,IAAmBS,MAAOR,EAAOE,QAASE,YAAY,EAAOC,QAAQ,IAEzE,IDdqB,gBCejB,OAAO,2BAAKN,GAAZ,IAAmBK,YAAY,EAAMC,QAAQ,EAAOE,SAAS,IAEjE,IDlBuB,kBCmBnB,OAAO,2BAAKR,GAAZ,IAAmBK,YAAY,EAAOC,QAAQ,EAAME,SAAS,IAEjE,ID5CiB,YC6Cb,OAAO,2BAAKR,GAAZ,IAAmBS,MAAM,CAAGR,EAAOE,SAAX,mBAAuBH,EAAMS,UACzD,IDrBuB,kBCsBnB,OAAO,2BAAKT,GAAZ,IAAmBS,MAAOT,EAAMS,MAAMC,KAAI,SAAAC,GAAI,OAC1CV,EAAOE,QAAQS,MAAQD,EAAKC,IAA5B,2BAAuCD,GAAvC,IAA6CE,MAAOZ,EAAOE,QAAQU,MAAOC,UAAWb,EAAOE,QAAQW,YAAaH,OAEzH,IDvByB,oBCwBrB,OAAO,2BAAKX,GAAZ,IAAmBS,MAAM,YAAKT,EAAMS,MAAMM,QAAO,SAAAJ,GAAI,OAAIA,EAAKC,MAAQX,EAAOE,cACjF,IDjDuB,kBCkDnB,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAKN,EAAOE,QAAQQ,MAArB,IAA2BK,OAAQ,GAAIC,QAAShB,EAAOE,QAAQc,QAASC,WAAW,EAAOC,cAAc,MACzI,ID1CwB,mBC2CpB,OAAO,2BAAKnB,GAAZ,IAAmBO,WAAY,CAAEa,MAAOnB,EAAOE,WACnD,IDlCgC,2BCmC5B,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBc,MAAM,YACrDrB,EAAMO,WAAWc,MAAMN,QAAO,SAAAhB,GAC7B,OAAOA,EAAKa,MAAQX,EAAOE,gBAGvC,IDzC+B,0BC0C3B,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBc,MAAM,GAAD,mBAAOrB,EAAMO,WAAWc,OAAxB,CAA+BpB,EAAOE,cACrG,IDtC0B,qBCuCtB,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBM,MAAOZ,EAAOE,QAAQU,MAAOC,UAAWb,EAAOE,QAAQW,cACjH,ID9DwB,mBC+DpB,OAAO,2BAAKd,GAAZ,IAAmBO,YAAY,IACnC,ID/D4B,uBCgExB,OAAO,2BAAKP,GAAZ,IAAmBS,MAAOT,EAAMS,MAAMC,KAAI,SAAAC,GAAI,OAC1CV,EAAOE,QAAQmB,SAAWX,EAAKC,IAA/B,2BACKD,GADL,IACWU,MAAM,CAAGpB,EAAOE,QAAQJ,MAAnB,mBAA4BY,EAAKU,UACjDV,OAER,IDpE6B,wBCqEzB,OAAO,2BAAKX,GAAZ,IAAmBS,MAAOT,EAAMS,MAAMC,KAAI,SAAAC,GAAI,OAC1CV,EAAOE,QAAQmB,SAAWX,EAAKC,IAA/B,2BACKD,GADL,IACWU,MAAM,YACNV,EAAKU,MAAMN,QAAO,SAAAhB,GACjB,OAAOA,EAAKa,MAAQX,EAAOE,QAAQoB,aAI/CZ,OAER,ID9EyB,oBC+ErB,OAAO,2BAAKX,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAS,GAAD,mBAAOzB,EAAMO,WAAWiB,OAAOC,UAA/B,CAAyCxB,EAAOE,gBACxJ,ID/E6B,wBCgFzB,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IzB,EAAOE,QAAQS,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcR,WAAW,EAAON,IAAKX,EAAOE,QAAQwB,SACpDD,WAER,IDpF2B,sBCqFvB,OAAO,2BAAK1B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IzB,EAAOE,UAAYuB,EAAQd,IAA3B,2BACKc,GADL,IACcR,WAAW,EAAOV,SAAS,IACzCkB,WAER,IDzF0B,qBC0FtB,OAAO,2BAAK1B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9IzB,EAAOE,QAAQS,MAAQc,EAAQd,IAA/B,uCACKc,GAAYzB,EAAOE,SADxB,IACiCyB,QAAQ,IACzCF,WAER,ID5F4B,uBC6FxB,OAAO,2BAAK1B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAS,YAC9FzB,EAAMO,WAAWiB,OAAOC,SAASV,QAAO,SAAAW,GACvC,OAAQzB,EAAOE,QAAQ0B,MAAK,SAAAC,GAAC,OAAIA,IAAMJ,EAAQd,iBAI3D,IDrG0B,qBCsGtB,OAAO,2BAAKZ,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC7IA,EAAQK,QAAUL,EAAQ3B,KAAKa,MAAQX,EAAOE,QAE/CuB,EAFA,2BACKA,GADL,IACcK,QAAQ,aAG9B,IDxG2B,sBCyGvB,OAAO,2BAAK/B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBiB,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAUzB,EAAMO,WAAWiB,OAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC7IA,EAAQK,QAAUL,EAAQ3B,KAAKa,MAAQX,EAAOE,QAE/CuB,EAFA,2BACKA,GADL,IACcK,QAAQ,aAG9B,IDzG+B,0BC0G3B,OAAO,2BAAK/B,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBY,aAAclB,EAAOE,YAC/E,ID5GyB,oBC6GrB,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBU,SAAS,EAAOC,WAAW,MACrF,ID/G2B,sBCgHvB,OAAO,2BAAKlB,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBW,WAAW,EAAOD,QAAShB,EAAOE,QAAQc,QAASO,OAAO,2BAAMxB,EAAMO,WAAWiB,QAAxB,IAAgCC,SAAS,GAAD,mBAAMxB,EAAOE,QAAQsB,UAArB,YAAkCzB,EAAMO,WAAWiB,OAAOC,iBACrN,IDnHuB,kBCoHnB,OAAO,2BAAKzB,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBS,OAAO,CAAGf,EAAOE,SAAX,mBAAuBH,EAAMO,WAAWS,aACxG,IDpH0B,qBCqHtB,OAAO,2BAAKhB,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBS,OAAO,YAAMhB,EAAMO,WAAWS,OAAOD,QAAO,SAAAhB,GAC9F,OAAOA,EAAKa,MAAQX,EAAOE,gBAEnC,IDpHiC,4BCqH7B,OAAO,2BAAKH,GAAZ,IAAmBO,WAAW,2BAAMP,EAAMO,YAAb,IAAyBc,MAAOrB,EAAMO,WAAWc,MAAMX,KAAI,SAAAX,GAAI,OACxFA,EAAKa,MAAQX,EAAOE,QAAQoB,OAA5B,2BACKxB,GADL,IACWiC,SAAU/B,EAAOE,QAAQ6B,WACpCjC,SAER,QACI,OAAOC,ICjJbH,EAAgB,CAClBoC,OAAO,EACPC,SAAS,GAgBEC,EAbD,WAAoC,IAAnCnC,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IFgE+B,0BE/D3B,OAAO,2BAAKF,GAAZ,IAAmBiC,MAAOhC,EAAOE,UAErC,IF8D0B,qBE7DtB,OAAO,2BAAKH,GAAZ,IAAmBkC,QAASjC,EAAOE,UAEvC,QACI,OAAOH,ICFbH,EAAgB,CAClBQ,YAAY,EACZ+B,QAAS,GACTC,gBAAiB,IAyIND,EAtIC,WAAoC,IAAnCpC,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC/C,OAAOA,EAAOC,MACV,IHYmB,cGXf,OAAO,2BAAKF,GAAZ,IAAmBoC,QAASnC,EAAOE,QAAQiC,QAAS/B,YAAY,EAAOiC,YAAarC,EAAOE,QAAQmC,cAEvG,IHUmB,cGTf,OAAO,2BAAKtC,GAAZ,IAAmBoC,QAAQ,CAAGnC,EAAOE,SAAX,mBAAuBH,EAAMoC,YAC3D,IHaoB,eGZhB,OAAO,2BAAKpC,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoC,WAAaf,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUxB,EAAOE,QAAQsB,SAAUnB,QAAQ,EAAMW,QAAShB,EAAOE,QAAQc,UACtFO,OAER,IHG2B,sBGFvB,OAAO,2BAAKxB,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoC,WAAaf,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAS,GAAD,mBACVD,EAAOC,UADG,CAEbxB,EAAOE,QAAQuB,UAEnBc,YAAavC,EAAOE,QAAQuB,QAC5Be,OAAQxC,EAAOE,QAAQsC,OAASjB,EAAOiB,OAAS,EAAIjB,EAAOiB,SAE/DjB,KACFkB,MAAK,SAACC,EAAGC,GACP,OAAKD,EAAEH,aAAeI,EAAEJ,aAGxBG,EAAI,IAAIE,KAAKF,EAAEH,YAAYM,aAC3BF,EAAI,IAAIC,KAAKD,EAAEJ,YAAYM,aAEb,EAAIH,EAAEC,EAAI,EAAI,EALjB,KAMXN,YAAarC,EAAOE,QAAQmC,YAActC,EAAMsC,YAAY,EAAItC,EAAMsC,cAC9E,IHhB+B,0BGiB3B,OAAO,2BAAKtC,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoC,WAAaf,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC1CzB,EAAOE,QAAQS,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcR,WAAW,EAAON,IAAKX,EAAOE,QAAQwB,SACpDD,KAEJc,YAAY,2BAAMhB,EAAOgB,aAAd,IAA2BtB,WAAW,MAErDM,OAER,IH3B6B,wBG4BzB,OAAO,2BAAKxB,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoC,WAAaf,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC1CzB,EAAOE,QAAQS,MAAQc,EAAQd,IAA/B,2BACKc,GADL,IACcR,WAAW,EAAOV,SAAS,IACzCkB,KAEJc,YAAY,2BAAMhB,EAAOgB,aAAd,IAA2BtB,WAAW,EAAOV,SAAS,MAErEgB,OAER,IH/B6B,wBGgCzB,OAAO,2BAAKxB,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoB,SAAWC,EAAOzB,KAAKa,IAAtC,2BACKY,GADL,IACazB,KAAK,2BAAMyB,EAAOzB,MAAd,IAAoBP,OAAQS,EAAOE,QAAQX,OAAQuD,SAAU9C,EAAOE,QAAQ4C,aAC7FvB,OAER,IH5C6B,wBG6CzB,OAAO,2BAAKxB,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoC,WAAaf,EAAOZ,IAAnC,2BACKY,GADL,IACaC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OACzCA,EAAQK,QAAUL,EAAQ3B,KAAKa,MAAQX,EAAOE,QAAQoB,OAEvDG,EAFA,2BACKA,GADL,IACcK,QAAQ,OAG1BU,OAAQxC,EAAOE,QAAQsC,OAAS,EAAIjB,EAAOiB,OAC3CD,YAAY,2BAAMhB,EAAOgB,aAAd,IAA2BT,QAAQ,MAElDP,KACDc,YAAarC,EAAOE,QAAQmC,YAActC,EAAMsC,YAAY,EAAItC,EAAMsC,cAC7E,IHtD4B,uBGuDxB,OAAO,2BAAKtC,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoC,WAAaf,EAAOZ,IAAnC,2BACSY,GADT,IACiBC,SAAUD,EAAOC,SAASf,KAAI,SAAAgB,GAAO,OAC9CzB,EAAOE,QAAQuB,QAAQd,MAAQc,EAAQd,IAAvC,uCACKc,GAAYzB,EAAOE,QAAQuB,SADhC,IACyCE,QAAQ,IACjDF,KAEJc,YAAavC,EAAOE,QAAQ6C,SAAf,2BAA+BxB,EAAOgB,aAAgBvC,EAAOE,QAAQuB,SAAYF,EAAOgB,cAEzGhB,OAER,IHjE8B,yBGkE1B,OAAO,2BAAKxB,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoC,WAAaf,EAAOZ,IAAnC,2BACSY,GADT,IACiBC,SAAS,YAAMD,EAAOC,SAASV,QAAO,SAAAW,GAC/C,OAAQzB,EAAOE,QAAQ8C,WAAWpB,MAAK,SAAAC,GAAC,OAAIA,IAAMJ,EAAQd,WAE9D4B,YAAavC,EAAOE,QAAQqC,YAC5BC,OAAQxC,EAAOE,QAAQsC,QAAoC,IAA1BxC,EAAOE,QAAQsC,OAAexC,EAAOE,QAAQsC,OAASjB,EAAOiB,SAElGjB,KACFkB,MAAK,SAACC,EAAGC,GACP,OAAKD,EAAEH,aAAeI,EAAEJ,aAGxBG,EAAI,IAAIE,KAAKF,EAAEH,YAAYM,aAC3BF,EAAI,IAAIC,KAAKD,EAAEJ,YAAYM,aAEb,EAAIH,EAAEC,EAAI,EAAI,EALjB,KAMXN,YAAarC,EAAOE,QAAQmC,aAA8C,IAA/BrC,EAAOE,QAAQmC,YAAoBrC,EAAOE,QAAQmC,YAActC,EAAMsC,cACzH,IHnF2B,sBGoFvB,OAAO,2BAAKtC,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,UAAYqB,EAAOZ,IAA1B,2BACSY,GADT,IACiBP,SAAS,EAAOC,WAAW,IAC5CM,OAGR,IHzF6B,wBG0FzB,OAAO,2BAAKxB,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoC,WAAaf,EAAOZ,IAAnC,2BACSY,GADT,IACkBN,WAAW,EAAOD,QAAShB,EAAOE,QAAQc,QAASQ,SAAS,GAAD,mBAAMxB,EAAOE,QAAQsB,UAArB,YAAkCD,EAAOC,aACtHD,OAGR,IHpGyB,oBGqGrB,OAAO,2BAAKxB,GAAZ,IAAmBoC,QAASpC,EAAMoC,QAAQ1B,KAAI,SAAAc,GAAM,OAChDvB,EAAOE,QAAQoB,SAAWC,EAAOzB,KAAKa,IAAtC,2BACKY,GADL,IACa0B,OAAQjD,EAAOE,QAAQ+C,SACpC1B,OAER,IHpG2B,sBGqGvB,OAAO,2BAAKxB,GAAZ,IAAmBqC,gBAAiBpC,EAAOE,UAC/C,QACI,OAAOH,ICxIbH,EAAgB,CAClBQ,YAAY,EACZC,QAAQ,EACR6C,cAAc,EACd3C,SAAS,EACTS,SAAS,EACTI,MAAO,GACP+B,QAAS,CACL/B,MAAO,GACPf,QAAQ,EACRW,SAAS,EACTZ,YAAY,GAEhBgD,UAAW,CACPhC,MAAO,GACPf,QAAQ,EACRW,SAAS,EACTZ,YAAY,GAEhBiD,QAAS,CACLjC,MAAO,GACPf,QAAQ,EACRW,SAAS,EACTZ,YAAY,IAiDLI,EA7CD,WAAoC,IAAnCT,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC7C,OAAOA,EAAOC,MACV,IJWiB,YIVb,OAAO,2BAAKF,GAAZ,IAAmBqB,MAAOpB,EAAOE,QAAQiD,QAASnC,QAAShB,EAAOE,QAAQc,QAASZ,YAAY,EAAOC,QAAQ,IAElH,IJKiB,YIJb,OAAO,2BAAKN,GAAZ,IAAmBqB,MAAM,CAAGpB,EAAOE,SAAX,mBAAuBH,EAAMqB,UACzD,IJIgC,2BIH5B,OAAO,2BAAIrB,GAAX,IAAkBmD,aAAclD,EAAOE,UAC3C,IJG+B,0BIF3B,OAAO,2BAAKH,GAAZ,IAAmBqB,MAAOrB,EAAMqB,MAAMX,KAAI,SAAAX,GAAI,OAC1CE,EAAOE,QAAQoB,SAAWxB,EAAKa,IAA/B,2BACKb,GADL,IACWwD,aAActD,EAAOE,QAAQoD,eAExCxD,OAER,IJFyB,oBIGrB,OAAO,2BAAKC,GAAZ,IAAmBoD,QAAQ,2BAAMpD,EAAMoD,SAAb,IAAsB/B,MAAOpB,EAAOE,QAAQkB,MAAOJ,QAAShB,EAAOE,QAAQc,QAASZ,YAAY,EAAOC,QAAQ,MAC7I,IJH2B,sBIIvB,OAAO,2BAAKN,GAAZ,IAAmBqD,UAAU,2BAAMrD,EAAMqD,WAAb,IAAwBhC,MAAOpB,EAAOE,QAAQkB,MAAOJ,QAAShB,EAAOE,QAAQc,QAASZ,YAAY,EAAOC,QAAQ,MACjJ,IJJyB,oBIKrB,OAAO,2BAAKN,GAAZ,IAAmBsD,QAAQ,2BAAMtD,EAAMsD,SAAb,IAAsBjC,MAAOpB,EAAOE,QAAQkB,MAAOJ,QAAShB,EAAOE,QAAQc,QAASZ,YAAY,EAAOC,QAAQ,MAC7I,IJL4B,uBIMxB,OAAO,2BAAKN,GAAZ,IAAmBoD,QAAQ,2BAAMpD,EAAMoD,SAAb,IAAsB/B,MAAM,YAAMrB,EAAMoD,QAAQ/B,MAAMN,QAAO,SAAAhB,GACnF,OAAOE,EAAOE,QAAQoB,SAAWxB,EAAKa,YAE9C,IJR8B,yBIS1B,OAAO,2BAAKZ,GAAZ,IAAmBqD,UAAU,2BAAMrD,EAAMqD,WAAb,IAAwBhC,MAAM,YAAMrB,EAAMqD,UAAUhC,MAAMN,QAAO,SAAAhB,GACzF,OAAOE,EAAOE,QAAQoB,SAAWxB,EAAKa,YAE9C,IJX4B,uBIYxB,OAAO,2BAAKZ,GAAZ,IAAmBsD,QAAQ,2BAAMtD,EAAMsD,SAAb,IAAsBjC,MAAM,YAAMrB,EAAMsD,QAAQjC,MAAMN,QAAO,SAAAhB,GACnF,OAAOE,EAAOE,QAAQoB,SAAWxB,EAAKa,YAE9C,IJdyB,oBIerB,OAAO,2BAAKZ,GAAZ,IAAmBoD,QAAQ,2BAAMpD,EAAMoD,SAAb,IAAsB/B,MAAM,CAAGpB,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMoD,QAAQ/B,YACnG,IJf2B,sBIgBvB,OAAO,2BAAKrB,GAAZ,IAAmBqD,UAAU,2BAAMrD,EAAMqD,WAAb,IAAwBhC,MAAM,CAAGpB,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMqD,UAAUhC,YACzG,IJhByB,oBIiBrB,OAAO,2BAAKrB,GAAZ,IAAmBsD,QAAQ,2BAAMtD,EAAMsD,SAAb,IAAsBjC,MAAM,CAAGpB,EAAOE,QAAQJ,MAAnB,mBAA4BC,EAAMsD,QAAQjC,YACnG,QACI,OAAOrB,IC7EbH,EAAgB,CAClBQ,YAAY,EACZC,QAAQ,EACRC,YAAY,EACZC,SAAS,EACTgD,cAAe,GACff,OAAQ,GAyBGhC,EAtBD,WAAoC,IAAnCT,EAAkC,uDAA1BH,EAAeI,EAAW,uCAC7C,OAAOA,EAAOC,MACV,ILkDyB,oBKjDrB,OAAO,2BAAKF,GAAZ,IAAmBwD,cAAevD,EAAOE,QAASE,YAAY,EAAOC,QAAQ,IAEjF,ILgDyB,oBK/CrB,OAAO,2BAAKN,GAAZ,IAAmBwD,cAAc,CAAGvD,EAAOE,SAAX,mBAAuBH,EAAMwD,gBAAiBf,OAAQzC,EAAMyC,OAAO,IACvG,IL+C0B,qBK9CtB,OAAO,2BAAKzC,GAAZ,IAAmBwD,cAAexD,EAAMwD,cAAc9C,KAAI,SAAA+C,GAAY,OAClExD,EAAOE,UAAYsD,EAAa7C,IAAhC,2BACK6C,GADL,IACmB1B,QAAQ,IAC3B0B,KACDhB,OAAQzC,EAAMyC,OAAS,IAC9B,IL0CiC,4BKzC7B,OAAO,2BAAKzC,GAAZ,IAAmByC,OAAQxC,EAAOE,UACtC,ILyC4B,uBKxCxB,OAAO,2BAAKH,GAAZ,IAAmBwD,cAAc,YAAKxD,EAAMwD,cAAczC,QAAO,SAAA0C,GAAY,OAAIA,EAAa7C,MAAQX,EAAOE,cACjH,QACI,OAAOH,IC1BJ0D,cAAgB,CAC3B3D,OACAU,QACA0B,QACAC,UACAf,QACAmC,kB,SCVWG,cAAYC,EAAaC,YAAgBC,M,OCHjD,SAASC,EAAcC,EAAKC,GAC/B,IAAIC,EAAOF,EAAMG,KAAKC,UAAYH,EAAM,EAAID,GAC5C,OAAOG,KAAKE,MAAMH,GAGf,SAASI,EAASC,EAAMC,GAE9B,IADA,IAAIC,EACKC,EAAE,EAAGA,EAAIF,EAAWG,OAAQD,IAChCF,EAAWE,GAAGH,OAASA,IAC1BE,EAAY,cAAgBD,EAAWE,GAAG7D,OAG5C+D,SAAS/D,MAAS4D,GAAyB,WAGrC,SAASI,GAAchE,GAC7B+D,SAAS/D,MAAQ,cAAgBA,E,wDCZ9BiE,IAAuB,EACvBC,IAAe,EACfC,IAAc,EACd7D,IAAe,EACf8D,IAAe,EAGbC,KAA8BN,SAASO,aAGvCC,IAAUF,MAAUG,OAAOC,WAE3BC,GAAQC,mBAAqBH,OAAOG,mBAAqBH,OAAOI,sBAAwBJ,OAAOK,wBAC/FC,GAAwBN,OAAOM,uBAAyBN,OAAOO,0BAA4BP,OAAOM,sBAGlGE,IAFkBR,OAAOS,oBAAsBT,OAAOU,gBAEnC,CACrBC,qBAAqB,EACrBC,qBAAqB,IAGnBC,GAAU,CACZC,WAAY,CACR,CAACC,KAAM,6BACP,CACEA,KAAM,2BACNC,WAAY,kCACZC,SAAU,cAKpB,SAASC,GAAkBC,GAGvB,OAAOA,GAFQ,IAAKnB,OAAOoB,cAAgBpB,OAAOqB,qBAC9BC,+BACCC,QAGzB,IAAMC,GAAWC,UAAUC,cAAgBD,UAAUE,oBAAsBF,UAAUG,iBAAmBH,UAAUI,eAgClH,SAASC,GAAmBC,GACrBA,EAAEC,WACDC,GAAiBC,qBAAqB,CAACjG,OAAQyD,GAAcsC,UAAWD,EAAEC,YAInE,kBAGPrC,GAAYwC,iBAAiB,GAAGC,SAAWzC,GAAYwC,iBAAiB,GAAGC,QAC3EC,EAAMC,SAAS,CACXzH,KTX2B,0BSY3BC,QAAS6E,GAAYwC,iBAAiB,GAAGC,WANtC,cAUPtG,GAAaqG,iBAAiB,GAAGC,SAAWtG,GAAaqG,iBAAiB,GAAGC,QAE7EC,EAAMC,SAAS,CACXzH,KTlBsB,qBSmBtBC,QAASgB,GAAaqG,iBAAiB,GAAGC,WAdvC,GAmBE,SAACnG,GAvDlB,IAAsBkF,EAwDdzB,GAAezD,EAxDDkF,EA0DD,SAACI,IACV5B,GAAc4B,GAIFY,iBAAiB,GAAGC,SAAU,GAE1C3C,GAAuB,IAAIS,GAAMW,KAEZ0B,UAAUhB,GAE/B9B,GAAqB+C,eAAiBV,GAEtCrC,GAAqBgD,YAAYjC,IAAkBkC,MAAK,SAACC,GACrDlD,GAAqBmD,oBAAoBD,GAhDzD,SAAqB5G,EAAO4G,GACxB,GAAG5G,EAAO,OAAO8G,QAAQC,IAAI/G,GAE7BkG,GAAiBc,iBAAiB,CAAC9G,OAAQyD,GAAcsD,SAAUL,EAAMM,MA+C7DC,CAAY,KAAMP,OAzE3B9C,IAAQE,GACP0B,UAAU0B,aAAazB,aAAa,CAAC0B,OAAO,EAAMC,OAAO,IAAQX,MAAK,SAAAnB,GAClEJ,EAASI,MAEZ+B,OAAM,SAACC,GACJrC,GAAkBC,MAGtBK,GAAS,CACL4B,OAAO,EACPC,OAAO,GAEXlC,GACA,WACID,GAAkBC,OAqBf,eA0CgB,IAAhBlF,EAAe,EAAfA,OAAQuH,EAAO,EAAPA,KACZ/D,KACCA,GAAqBgE,QACrBhE,IAAuB,GAGxBC,KACCuC,GAAiByB,UAAU,CAACzH,SAAQuH,SACpC9D,IAAe,GAGhBC,KACCA,GAAYwC,iBAAiB,GAAGwB,OAChChE,IAAc,GAGf7D,KACCA,GAAaqG,iBAAiB,GAAGwB,OACjC7H,IAAe,GAGhB8D,KACCA,GAAa+D,OACb/D,IAAe,GAGnByC,EAAMC,SAAS,CACXzH,KT3E2B,0BS4E3BC,SAAS,KAtEN,GAyES,SAACiH,GACdtC,IAAwBsC,EAAEC,WACzBvC,GAAqBmE,gBAAgB7B,IA3ElC,GA6EM,SAAC8B,GACd,IAAIC,EAAS,IAAIxD,GAAsB,CACnCzF,KAAM,SACNoI,IAAKY,IAGTpE,GAAqBsE,qBAAqBD,GAE1C,IAAIvC,EAAS,IAAIyC,YAEjBvE,GAAqBwE,eAAeC,SAAQ,SAAUC,GAClD5C,EAAO6C,SAASD,EAAOE,UAG3BvI,GAAeyF,EAEfc,EAAMC,SAAS,CACXzH,KTtJ2B,0BSuJ3BC,QAASyG,KAGb3B,GAAe0E,KAAK3E,GAAa,KAEpB4E,GAAG,YAAY,WACxBtC,GAAiBuC,iBAAiB,CAACvI,OAAQyD,QAG/CE,GAAa2E,GAAG,oBAAoB,WAChCtC,GAAiBwC,qBAAqB,CAACxI,OAAQyD,SC3L9CgF,GAAS,8BCyClBC,GAAS,KACTC,IAAa,EAEF,IACXC,KAAM,SAACC,IACHH,GAASI,KAAGL,GAAQ,CAACM,WAAY,CAAC,YAAa,UAAW,kBACnDT,GAAG,WAAW,WACjBI,GAAOM,KAAK,OAAQH,MAGxBH,GAAOJ,GAAG,cAAc,SAAAjJ,GACpB+G,EAAMC,SAAS,CACXzH,KX9CS,YW+CTC,QAASQ,OAIjBqJ,GAAOJ,GAAG,YAAY,SAAAjJ,GAClB+G,EAAMC,SAAS,CACXzH,KX5Be,kBW6BfC,QAASQ,OAIjBqJ,GAAOJ,GAAG,cAAc,SAAAjJ,GACpB+G,EAAMC,SAAS,CACXzH,KXlCkB,qBWmClBC,QAASQ,OAIjBqJ,GAAOJ,GAAG,cAAc,SAAAtI,GACpBoG,EAAMC,SAAS,CACXzH,KXxCiB,oBWyCjBC,QAASmB,OAIjB0I,GAAOJ,GAAG,YAAY,YAAqB,IAAnBtI,EAAkB,EAAlBA,OAAQvB,EAAU,EAAVA,KAC5B2H,EAAMC,SAAS,CACXzH,KXrEoB,uBWsEpBC,QAAS,CAACmB,SAAQvB,aAI1BiK,GAAOJ,GAAG,cAAc,SAAC7J,GACrB2H,EAAMC,SAAS,CACXzH,KX5DuB,0BW6DvBC,QAASJ,OAIjBiK,GAAOJ,GAAG,aAAa,YAAuB,IAArBtI,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC7BmG,EAAMC,SAAS,CACXzH,KXlFqB,wBWmFrBC,QAAS,CAACmB,SAAQC,eAI1ByI,GAAOJ,GAAG,eAAe,SAACrI,GACtBmG,EAAMC,SAAS,CACXzH,KXzEwB,2BW0ExBC,QAASoB,OAIjByI,GAAOJ,GAAG,mBAAmB,SAAClI,GAC1BgG,EAAMC,SAAS,CACXzH,KX/FiB,oBWgGjBC,QAASuB,IAGVgG,EAAM6C,WAAW9J,MAAMF,WAAWS,OAAOa,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQ3B,KAAKa,QACzE8G,EAAMC,SAAS,CACXzH,KX5Fc,qBW6FdC,QAASuB,EAAQ3B,KAAKa,SAKlCoJ,GAAOJ,GAAG,qBAAqB,SAAC3G,GAC5ByE,EAAMC,SAAS,CACXzH,KXvGoB,uBWwGpBC,QAAS8C,OAIjB+G,GAAOJ,GAAG,oBAAoB,SAAAtI,GACvBoG,EAAM6C,WAAW9J,MAAMF,YAAcmH,EAAM6C,WAAW9J,MAAMF,WAAWK,MAAQU,GAC9EoG,EAAMC,SAAS,CACXzH,KXjHc,qBWkHdC,QAASuH,EAAM6C,WAAWxK,KAAKa,SAI3CoJ,GAAOJ,GAAG,mBAAmB,SAAAlI,GACzBgG,EAAMC,SAAS,CACXzH,KXzHkB,qBW0HlBC,QAASuB,OAIjBsI,GAAOJ,GAAG,cAAc,SAAA7J,GAChB2H,EAAM6C,WAAW9J,MAAMF,WAAWS,OAAOa,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQb,EAAKa,SAClE8G,EAAMC,SAAS,CACXzH,KX5HW,kBW6HXC,QAASJ,IAGbyK,YAAW,WACP9C,EAAMC,SAAS,CACXzH,KXjIU,qBWkIVC,QAASJ,EAAKa,QAEnB,UAIXoJ,GAAOJ,GAAG,iBAAiB,SAAAa,GACvBC,GAAiCD,MAGrCT,GAAOJ,GAAG,sBAAsB,SAAAvC,GAC5BqD,GAAoCrD,MAGxC2C,GAAOJ,GAAG,gBAAgB,SAAArI,GACtBmG,EAAMC,SAAS,CACXzH,KX9IyB,4BW+IzBC,QAAS,CAACoB,SAAQS,UAAU,QAIpCgI,GAAOJ,GAAG,oBAAoB,SAAArI,GAC1BmG,EAAMC,SAAS,CACXzH,KXrJyB,4BWsJzBC,QAAS,CAACoB,SAAQS,UAAU,QAIpCgI,GAAOJ,GAAG,qBAAqB,YAAyB,IAAvBlI,EAAsB,EAAtBA,QAASiJ,EAAa,EAAbA,QAQtC,GAPGjD,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKa,MAAQc,EAAQ3B,KAAKa,QAAQ8G,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKa,MAAQc,EAAQ3B,KAAKa,OAAKsC,QAC1JwE,EAAMC,SAAS,CACXzH,KX5Ia,oBW6IbC,QAAS,CAACoB,OAAQG,EAAQ3B,KAAKa,IAAKsC,QAAQ,KAIjDwE,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQa,YAAW,CACvE,IAAID,GAAc,EAGdZ,EAAQ3B,KAAKa,MAAQ8G,EAAM6C,WAAWxK,KAAKa,KAC1C8G,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQa,YAAUE,SAExEH,GAAc,GAGlBoF,EAAMC,SAAS,CACXzH,KXjKe,sBWkKfC,QAAS,CAACuB,UAASa,SAAUb,EAAQa,SAAUE,OAAQf,EAAQ3B,KAAKa,MAAQ8G,EAAM6C,WAAWxK,KAAKa,IAAK0B,sBAG3GsI,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CAC5Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,OAAQoJ,MAGf5C,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAA2B,IAAzBhI,EAAwB,EAAxBA,KACAyB,GADwB,EAAlB+B,aACG,CACTf,YAAad,EACbd,IAAKc,EAAQa,SACblB,MAAO,CAACqG,EAAM6C,WAAWxK,KAAMA,GAC/BA,KAAMA,EACNO,QAAQ,EACR4C,QAAQ,EACRT,OAAQ,EACRhB,SAAU,KAEdiG,EAAMC,SAAS,CACXzH,KX9LG,cW+LHC,QAASqB,UAMzBwI,GAAOJ,GAAG,oBAAoB,SAAAnG,GACvBiE,EAAM6C,WAAW/G,cAAclD,OAC9BoH,EAAMC,SAAS,CACXzH,KXxKa,oBWyKbC,QAASsD,IAGbiE,EAAMC,SAAS,CACXzH,KX3KqB,4BW4KrBC,QAASuH,EAAM6C,WAAW/G,cAAcf,OAAO,OAI3DuH,GAAOJ,GAAG,oBAAoB,SAAA0B,GAC1B5D,EAAMC,SAAS,CACXzH,KXnLkB,qBWoLlBC,QAASmL,OAIjBtB,GAAOJ,GAAG,sBAAsB,YAAiB,IAAf0B,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KAC9B9I,EAASiF,EAAM6C,WAAW/G,cAAcf,OAExC8I,GACA9I,IAEJiF,EAAMC,SAAS,CACXzH,KX9LyB,4BW+LzBC,QAASsC,IAGbiF,EAAMC,SAAS,CACXzH,KXlMoB,uBWmMpBC,QAASmL,OAIjBtB,GAAOJ,GAAG,sBAAsB,YAAyB,IAAvBrH,EAAsB,EAAtBA,SAAUhB,EAAY,EAAZA,OACxCmG,EAAMC,SAAS,CACXzH,KXxOqB,wBWyOrBC,QAAS,CAACoC,WAAUhB,SAAQkB,OAAQlB,IAAWmG,EAAM6C,WAAWxK,KAAKa,IAAK0B,YAAaf,IAAWmG,EAAM6C,WAAWxK,KAAKa,UAIhIoJ,GAAOJ,GAAG,qBAAqB,YAA0B,IAGjD5G,EAHyBtB,EAAuB,EAAvBA,QAASa,EAAc,EAAdA,SAClCiJ,EAAO9D,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ2B,KAAUC,YAItEQ,IADDwI,GACY9J,EAAQd,MAAQ4K,EAAK5K,IAIpC8G,EAAMC,SAAS,CACXzH,KXpPoB,uBWqPpBC,QAAS,CAACuB,UAASa,WAAUS,iBAIrCgH,GAAOJ,GAAG,uBAAuB,YAA+D,IAA7D3G,EAA4D,EAA5DA,WAAYV,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,OAAQH,EAAiB,EAAjBA,YAC1E4F,QAAQC,IAAI7F,GACZoF,EAAMC,SAAS,CACXzH,KX3PsB,yBW4PtBC,QAAS,CAACoC,WAAUU,aAAYT,cAAaC,SAAQH,oBAI7D0H,GAAOJ,GAAG,gBAAgB,SAAArI,GACnBmG,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKa,MAAQW,OACzDmG,EAAMC,SAAS,CACXzH,KXrQa,oBWsQbC,QAAS,CAACoB,SAAQ2B,QAAQ,KAG9BsH,YAAW,WACP9C,EAAMC,SAAS,CACXzH,KX3QS,oBW4QTC,QAAS,CAACoB,SAAQ2B,QAAQ,OAE/B,UAIX8G,GAAOJ,GAAG,qBAAqB,YAA6B,IAA3BrI,EAA0B,EAA1BA,OAAQgC,EAAkB,EAAlBA,aACrCmE,EAAMC,SAAS,CACXzH,KXxQuB,0BWyQvBC,QAAS,CAACoB,SAAQgC,kBAGnBmE,EAAM6C,WAAWlJ,MAAMiC,QAAQhD,QAC9BoH,EAAMC,SAAS,CACXzH,KXvQgB,uBWwQhBC,QAAS,CAACoB,YAIfmG,EAAM6C,WAAWlJ,MAAMgC,UAAU/C,SAC7BoH,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDmG,EAAMC,SAAS,CACXzH,KX7QW,sBW8QXC,QAAS,CAACJ,KAAM2H,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEqJ,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CAC5Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,OAAQA,MAGfwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAA2B,IAAzBhI,EAAwB,EAAxBA,KAAMwD,EAAkB,EAAlBA,aACVxD,EAAKwD,aAAeA,EACpBmE,EAAMC,SAAS,CACXzH,KX3SH,YW4SGC,QAASJ,IAEb2H,EAAMC,SAAS,CACXzH,KXpSO,sBWqSPC,QAAS,CAACJ,iBAO9BiK,GAAOJ,GAAG,oBAAoB,YAA6B,IAA3BrI,EAA0B,EAA1BA,OAAQgC,EAAkB,EAAlBA,aACpCmE,EAAMC,SAAS,CACXzH,KXvTuB,0BWwTvBC,QAAS,CAACoB,SAAQgC,kBAGnBmE,EAAM6C,WAAWlJ,MAAMiC,QAAQhD,QAC9BoH,EAAMC,SAAS,CACXzH,KXtTgB,uBWuThBC,QAAS,CAACoB,YAIfmG,EAAM6C,WAAWlJ,MAAM+B,QAAQ9C,SAC3BoH,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDmG,EAAMC,SAAS,CACXzH,KX7TS,oBW8TTC,QAAS,CAACJ,KAAM2H,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEqJ,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CAC5Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,OAAQA,MAGfwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAA2B,IAAzBhI,EAAwB,EAAxBA,KAAMwD,EAAkB,EAAlBA,aACVxD,EAAKwD,aAAeA,EACpBmE,EAAMC,SAAS,CACXzH,KX1VH,YW2VGC,QAASJ,IAEb2H,EAAMC,SAAS,CACXzH,KXpVK,oBWqVLC,QAAS,CAACJ,iBAO9BiK,GAAOJ,GAAG,oBAAoB,YAA6B,IAA3BrI,EAA0B,EAA1BA,OAAQgC,EAAkB,EAAlBA,aACpCmE,EAAMC,SAAS,CACXzH,KXtWuB,0BWuWvBC,QAAS,CAACoB,SAAQgC,kBAGnBmE,EAAM6C,WAAWlJ,MAAM+B,QAAQ9C,QACV,IAAjBiD,IACCmE,EAAMC,SAAS,CACXzH,KXxWY,uBWyWZC,QAAS,CAACoB,YAGXmG,EAAM6C,WAAWlJ,MAAMgC,UAAU/C,SAC7BoH,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDmG,EAAMC,SAAS,CACXzH,KX1WC,oBW2WDC,QAAS,CAACJ,KAAM2H,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEqJ,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CAC5Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,OAAQA,MAGfwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAA2B,IAAzBhI,EAAwB,EAAxBA,KAAMwD,EAAkB,EAAlBA,aACVxD,EAAKwD,aAAeA,EACpBmE,EAAMC,SAAS,CACXzH,KXzYX,YW0YWC,QAASJ,IAEb2H,EAAMC,SAAS,CACXzH,KXjYH,oBWkYGC,QAAS,CAACJ,eAQ/B2H,EAAM6C,WAAWlJ,MAAMiC,QAAQhD,QAA2B,IAAjBiD,GACxCmE,EAAMC,SAAS,CACXzH,KX/YgB,uBWgZhBC,QAAS,CAACoB,YAIfmG,EAAM6C,WAAWlJ,MAAMgC,UAAU/C,QAA2B,IAAjBiD,GAC1CmE,EAAMC,SAAS,CACXzH,KXvZkB,yBWwZlBC,QAAS,CAACoB,gBAK1BkK,YAAa,WACT,OAAOzB,GAAOsB,IAElBI,SAAU,SAAA7C,GACHoB,IACCD,GAAOM,KAAK,YAAazB,GAE7BmB,GAAOM,KAAK,WAAYzB,GACxBoB,GAAapB,GAEjB8C,WAAY,YAAmB,IAAjBhL,EAAgB,EAAhBA,KAAMkI,EAAU,EAAVA,KAChBmB,GAAOM,KAAK,aAAc,CAAC3J,OAAMkI,UAErC+C,SAAU,YAAqB,IAAnBtK,EAAkB,EAAlBA,OAAQuH,EAAU,EAAVA,KAChBmB,GAAOM,KAAK,WAAY,CAAChJ,SAAQuH,OAAMtH,OAAQmG,EAAM6C,WAAWxK,KAAKa,OAGzEmI,UAAW,YAAqB,IAAnBzH,EAAkB,EAAlBA,OAAQuH,EAAU,EAAVA,KACjBmB,GAAOM,KAAK,YAAa,CAAChJ,SAAQuH,UAEtCgD,gBAAiB,YAAwB,IAAtBvK,EAAqB,EAArBA,OAAQI,EAAa,EAAbA,QACvBsI,GAAOM,KAAK,kBAAmB,CAAChJ,SAAQI,aAE5CoK,WAAY,SAACxK,GACT0I,GAAOM,KAAK,aAAchJ,IAI9BiG,qBAAsB,YAA0B,IAAxBjG,EAAuB,EAAvBA,OAAQ+F,EAAe,EAAfA,UAC5B2C,GAAOM,KAAK,mBAAoB,CAAChJ,SAAQ+F,eAE7Ce,iBAAkB,YAAyB,IAAvB9G,EAAsB,EAAtBA,OAAQ+G,EAAc,EAAdA,SACxB2B,GAAOM,KAAK,eAAgB,CAAChJ,SAAQ+G,cAEzCwB,iBAAkB,YAAe,IAAbvI,EAAY,EAAZA,OAChB0I,GAAOM,KAAK,eAAgBhJ,IAEhCwI,qBAAsB,YAAe,IAAbxI,EAAY,EAAZA,OACpB0I,GAAOM,KAAK,mBAAoBhJ,IAEpCyK,aAAc,SAACpB,EAASpJ,GACpByI,GAAOM,KAAK,eAAgB,CAACK,UAASpJ,aChfjCyK,GAAa,SAAC7B,GAAD,OAAc,SAACxC,GACrCiD,MAAM,GAAD,OAAIb,GAAJ,uBAAiC,CAClCc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,MAGhCpC,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAAC3F,GACH,IADgB,IAAD,WACNsC,GACL,IAAIuH,EAAcvE,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQwB,EAAQsC,GAAG9D,OAE/EqL,EACC7J,EAAQsC,GAAKuH,GAEb7J,EAAQsC,GAAG3E,KAAOqC,EAAQsC,GAAGrD,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ8G,EAAM6C,WAAWxK,KAAKa,OAE/EwB,EAAQsC,GAAG3E,OACXqC,EAAQsC,GAAG3E,KAAOqC,EAAQsC,GAAGrD,MAAM,IAEvCe,EAAQsC,GAAG1D,OAAS,KAXnB0D,EAAI,EAAGA,EAAItC,EAAQuC,OAAQD,IAAM,EAAjCA,GAeTiD,EAAS,CACLzH,KZVe,cYWfC,QAASiC,SAKR8J,GAAY,SAAC3K,EAAQ4I,GAAT,OAAsB,SAACxC,GAC5CiD,MAAM,GAAD,OAAIb,GAAJ,mBAA6B,CAC9Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,aAGPwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAAyB,IAAvBvG,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACRD,EAAOJ,MA0BPuG,EAAS,CACLzH,KZxDW,cYyDXC,QARS,CACTG,QAAQ,EACR6L,YAAY,EACZpM,KAAM,CAACa,IAAKW,OAtBhBC,EAAOzB,KAAOyB,EAAOH,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ8G,EAAM6C,WAAWxK,KAAKa,OAEvEY,EAAOzB,OACPyB,EAAOzB,KAAOyB,EAAOH,MAAM,IAE/BG,EAAO0B,QAAS,EAEhB1B,EAAOlB,QAAS,EAEhBkB,EAAOC,SAAWA,EAAS2K,UAC3B5K,EAAOgB,aAAc,EACrBhB,EAAOP,QAA8B,KAApBQ,EAASkD,OAC1BnD,EAAON,WAAY,EAEnByG,EAAS,CACLzH,KZ7CW,cY8CXC,QAASqB,UAiBZ6K,GAAa,SAAC9K,EAAQ4I,GAAT,OAAsB,SAACxC,GAC7CiD,MAAM,GAAD,OAAIb,GAAJ,mBAA6B,CAC9Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,aAGPwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAAyB,IAAvBvG,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SACZD,EAAOC,SAAWA,EAAS2K,UAE3BzE,EAAS,CACLzH,KZ3EgB,eY4EhBC,QAAS,CAACoC,SAAUf,EAAOZ,IAAKa,SAAUD,EAAOC,SAAUR,QAA6B,KAApBQ,EAASkD,eAK5E2H,GAAe,SAAC/K,EAAQ4I,GAAT,OAAsB,SAACxC,GAC/CiD,MAAM,GAAD,OAAIb,GAAJ,wBAAkC,CACnCc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,aAGPwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAAyB,IAAvBvI,EAAsB,EAAtBA,OAAQuD,EAAc,EAAdA,SACZ4E,EAAS,CACLzH,KZ1FyB,wBY2FzBC,QAAS,CAACoB,SAAQ/B,SAAQuD,mBAKzBwJ,GAAa,SAAC9K,GAAD,OAAc,SAACkG,GACrCA,EAAS,CACLzH,KZjG2B,sBYkG3BC,QAASsB,MAIJ+K,GAAc,SAAC9K,EAASyI,GAAV,OAAuB,SAACxC,GAO/C,IANA,IAAI8E,EAAW,IAAIC,SACf9L,EAAMmD,EAAc,EAAG,KACvB4I,EAAS,GACTC,EAAQ,GACRC,EAAS,GAEJnI,EAAI,EAAGA,EAAIhD,EAAQiL,OAAOhI,OAAQD,IACvC+H,EAASK,OAAO,SAASpI,EAAGhD,EAAQiL,OAAOjI,GAAGqI,MAC9CrL,EAAQiL,OAAOjI,GAAGqI,MAAO,EACzBJ,EAAOK,KAAKtL,EAAQiL,OAAOjI,IAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAIhD,EAAQkL,MAAMjI,OAAQD,IACtC+H,EAASK,OAAO,QAAQpI,EAAGhD,EAAQkL,MAAMlI,GAAGqI,MAC5CrL,EAAQkL,MAAMlI,GAAGqI,MAAO,EACxBH,EAAMI,KAAKtL,EAAQkL,MAAMlI,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAIhD,EAAQmL,OAAOlI,OAAQD,IACvC+H,EAASK,OAAO,SAASpI,EAAGhD,EAAQmL,OAAOnI,GAAGqI,MAC9CrL,EAAQmL,OAAOnI,GAAGqI,MAAO,EACzBF,EAAOG,KAAKtL,EAAQmL,OAAOnI,IAG/B,IAAIuI,EAAe,CACfrM,MACAb,KAAM2H,EAAM6C,WAAWxK,KACvBmN,KAAMxL,EAAQwL,KACdP,SACAE,SACAD,QACA1L,WAAW,EACXV,SAAS,EACTuB,QAAQ,EACRoL,eAAgBzL,EAAQyL,eACxBrK,UAAWD,KAAKuK,OAGpBzF,EAAS,CACLzH,KZzJ2B,sBY0J3BC,QAAS,CAACuB,QAASuL,EAAc1K,SAAUb,EAAQa,YAGvD,IAAI4K,EAAiB,GAErBzL,EAAQyL,eAAezM,KAAI,SAAA2M,GACvBF,EAAeH,KAAKK,EAAEzM,QAG1Bc,EAAQyL,eAAiBA,EACzBzL,EAAQ4L,SAAWhG,GAAiBmE,cAEpCgB,EAASK,OAAO,OAAQpL,EAAQwL,MAChCT,EAASK,OAAO,iBAAkBpL,EAAQyL,gBAC1CV,EAASK,OAAO,WAAYpL,EAAQa,UACpCkK,EAASK,OAAO,SAAUpL,EAAQH,QAClCkL,EAASK,OAAO,WAAYxF,GAAiBmE,eAE7Cb,MAAM,GAAD,OAAIb,GAAJ,4BAAsC,CACnCc,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMwB,IAET1E,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAwF,GACF,GAAGA,EAAWnM,MACV,OAAOuG,EAAS,CACZzH,KZvLiB,wBYwLjBC,QAAS,CAACS,MAAK2B,SAAUb,EAAQa,YAGzCoF,EAAS,CACLzH,KZ7LuB,0BY8LvBC,QAAS,CAACS,MAAKe,OAAQ4L,EAAW3M,IAAK2B,SAAUb,EAAQa,eAGhEoG,OAAM,WACHhB,EAAS,CACLzH,KZlMqB,wBYmMrBC,QAAS,CAACS,MAAK2B,SAAUb,EAAQa,iBAKpCiL,GAAc,SAAC9L,EAASyI,GAAV,OAAuB,SAACxC,GAW/C,IAVA,IAAI8E,EAAW,IAAIC,SAEfC,EAAS,GACTC,EAAQ,GACRC,EAAS,GAETY,EAAY,GACZC,EAAW,GACXC,EAAY,GAEPjJ,EAAI,EAAGA,EAAIhD,EAAQiL,OAAOhI,OAAQD,IACpChD,EAAQiL,OAAOjI,GAAGqI,MACjBN,EAASK,OAAO,SAASpI,EAAGhD,EAAQiL,OAAOjI,GAAGqI,MAE9CJ,EAAOK,KAAKtL,EAAQiL,OAAOjI,KAE3B+I,EAAUT,KAAKtL,EAAQiL,OAAOjI,GAAG4G,IAIzC,IAAK,IAAI5G,EAAI,EAAGA,EAAIhD,EAAQkL,MAAMjI,OAAQD,IACnChD,EAAQkL,MAAMlI,GAAGqI,MAChBN,EAASK,OAAO,QAAQpI,EAAGhD,EAAQkL,MAAMlI,GAAGqI,MAE5CH,EAAMI,KAAKtL,EAAQkL,MAAMlI,KAEzBgJ,EAASV,KAAKtL,EAAQkL,MAAMlI,GAAG4G,IAIvC,IAAK,IAAI5G,EAAI,EAAGA,EAAIhD,EAAQmL,OAAOlI,OAAQD,IACpChD,EAAQmL,OAAOnI,GAAGqI,MACjBN,EAASK,OAAO,SAASpI,EAAGhD,EAAQmL,OAAOnI,GAAGqI,MAE9CF,EAAOG,KAAKtL,EAAQmL,OAAOnI,KAE3BiJ,EAAUX,KAAKtL,EAAQmL,OAAOnI,GAAG4G,IAIzC,IAAI2B,EAAe,CACfrM,IAAKc,EAAQd,IACbb,KAAM2H,EAAM6C,WAAWxK,KACvBmN,KAAMxL,EAAQwL,KACdP,OAAQjL,EAAQiL,OAChBE,OAAQnL,EAAQmL,OAChBD,MAAOlL,EAAQkL,MACf1L,WAAW,EACXV,SAAS,EACT2M,eAAgBzL,EAAQyL,gBAGxB3B,EAAO9D,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQa,YAAUd,SAASiG,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQa,YAAUd,SAASkD,OAAO,GAElLgD,EAAS,CACLzH,KZ5P4B,uBY6P5BC,QAAS,CACLuB,QAASuL,EACT1K,SAAUb,EAAQa,SAClBS,SAAUwI,EAAK5K,MAAQc,EAAQd,OAIvC,IAAIuM,EAAiB,GAErBzL,EAAQyL,eAAezM,KAAI,SAAA2M,GACvBF,EAAeH,KAAKK,EAAEzM,QAG1Bc,EAAQyL,eAAiBA,EACzBzL,EAAQ4L,SAAWhG,GAAiBmE,cAEpCgB,EAASK,OAAO,MAAOpL,EAAQd,KAC/B6L,EAASK,OAAO,OAAQpL,EAAQwL,MAChCT,EAASK,OAAO,iBAAkBpL,EAAQyL,gBAC1CV,EAASK,OAAO,SAAUpL,EAAQH,QAClCkL,EAASK,OAAO,WAAYpL,EAAQa,UACpCkK,EAASK,OAAO,WAAYxF,GAAiBmE,eAC7CgB,EAASK,OAAO,YAAaW,GAC7BhB,EAASK,OAAO,YAAaa,GAC7BlB,EAASK,OAAO,WAAYY,GAE5B9C,MAAM,GAAD,OAAIb,GAAJ,4BAAsC,CACnCc,OAAQ,OACRC,QAAS,CACLE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMwB,IAET1E,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAwF,GACF,GAAGA,EAAWnM,MACV,OAAOuG,EAAS,CACZzH,KZtSiB,wBYuSjBC,QAAS,CAACS,IAAKc,EAAQd,IAAK2B,SAAUb,EAAQa,YAGtDoF,EAAS,CACLzH,KZ5SuB,0BY6SvBC,QAAS,CAACS,IAAKc,EAAQd,IAAKe,OAAQD,EAAQd,IAAK2B,SAAUb,EAAQa,eAG1EoG,OAAM,WACHhB,EAAS,CACLzH,KZjTqB,wBYkTrBC,QAAS,CAACS,IAAKc,EAAQd,IAAK2B,SAAUb,EAAQa,iBAKjDqL,GAAe,SAAC,EAA6BzD,GAA9B,IAAE5H,EAAF,EAAEA,SAAUhB,EAAZ,EAAYA,OAAQoJ,EAApB,EAAoBA,QAApB,OAA2C,SAAChD,GACpE,IAAIiG,EAAelG,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAL,GAAM,OAAIA,EAAOZ,MAAQ2B,KAAUd,SAASV,QAAO,SAAAe,GAAC,OAAKA,EAAEC,QAAUD,EAAE/B,KAAKa,MAAQW,KAE7IiJ,YAAW,WACFoD,EAAajJ,QACdgD,EAAS,CACLzH,KZ5TqB,wBY6TrBC,QAAS,CAACoC,WAAUhB,OAAQoJ,EAASlI,QAAQ,EAAMH,aAAa,OAGzE,KAEEsL,EAAajJ,QACdiG,MAAM,GAAD,OAAIb,GAAJ,6BAAuC,CACpCc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5I,WACAoI,UACA2C,SAAUhG,GAAiBmE,kBAGlC1D,OACAY,OAAM,iBAMNkF,GAAmB,SAACnM,EAASyI,GAAV,OAAuB,SAACxC,GACpD,IAAIpF,EAAWb,EAAQa,SACnBkK,EAAW,IAAIC,SACfC,EAAS,GAETM,EAAe,CACfrM,IAAKc,EAAQd,IACbb,KAAM2H,EAAM6C,WAAWxK,KACvBmN,KAAMxL,EAAQwL,KACdP,OAAQjL,EAAQiL,OAChBE,OAAQ,GACRD,MAAO,GACP1L,WAAW,EACXV,SAAS,EACT2M,eAAgBzL,EAAQyL,eACxBrK,UAAWD,KAAKuK,OAGpBzF,EAAS,CACLzH,KZtW8B,yBYuW9BC,QAAS,CAACoC,WAAUU,WAAY,CAACvB,EAAQd,KAAM4B,aAAa,KAGhEmF,EAAS,CACLzH,KZlX2B,sBYmX3BC,QAAS,CAACuB,QAASuL,EAAc1K,SAAUb,EAAQa,YAGvD,IAAK,IAAImC,EAAI,EAAGA,EAAIhD,EAAQiL,OAAOhI,OAAQD,IACvC+H,EAASK,OAAO,SAASpI,EAAGhD,EAAQiL,OAAOjI,GAAGqI,MAE9CJ,EAAOK,KAAKtL,EAAQiL,OAAOjI,GAAGH,MAGlC,IAAI4I,EAAiB,GAErBzL,EAAQyL,eAAezM,KAAI,SAAA2M,GACvBF,EAAeH,KAAKK,EAAEzM,QAG1Bc,EAAQyL,eAAiBA,EACzBzL,EAAQ4L,SAAWhG,GAAiBmE,cAEpCgB,EAASK,OAAO,OAAQpL,EAAQwL,MAChCT,EAASK,OAAO,iBAAkBpL,EAAQyL,gBAC1CV,EAASK,OAAO,SAAUpL,EAAQH,QAClCkL,EAASK,OAAO,WAAYpL,EAAQa,UACpCkK,EAASK,OAAO,WAAYxF,GAAiBmE,eAE7Cb,MAAM,GAAD,OAAIb,GAAJ,4BAAsC,CACnCc,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMwB,IAET1E,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAwF,GACF,GAAGA,EAAWnM,MACV,OAAOuG,EAAS,CACZzH,KZtZiB,wBYuZjBC,QAAS,CAACS,IAAKc,EAAQd,IAAK2B,SAAUb,EAAQa,YAGtDoF,EAAS,CACLzH,KZ5ZuB,0BY6ZvBC,QAAS,CAACS,IAAKc,EAAQd,IAAKe,OAAQ4L,EAAW3M,IAAK2B,SAAUb,EAAQa,eAG7EoG,OAAM,WACHhB,EAAS,CACLzH,KZjaqB,wBYkarBC,QAAS,CAACS,IAAKc,EAAQd,IAAK2B,SAAUb,EAAQa,iBAKjDuL,GAAgB,SAAC,EAAqC3D,GAAtC,IAAE5H,EAAF,EAAEA,SAAUoI,EAAZ,EAAYA,QAASoD,EAArB,EAAqBA,eAArB,OAAmD,SAACpG,GAC7E,IAKInF,EALAS,EAAa,GACjB8K,EAAerN,KAAI,SAAA2M,GACfpK,EAAW+J,KAAKK,EAAEzM,QAMlB4B,KADDkF,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ2B,OAAemF,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ2B,KAAUd,SAASkD,SAC7H+C,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ2B,KAAUd,SAASV,QAAO,SAAAe,GAAC,OAAKmB,EAAWpB,MAAK,SAAAmM,GAAC,OAAIA,IAAMlM,EAAElB,UAAMqN,MAI1ItG,EAAS,CACLzH,KZhb8B,yBYib9BC,QAAS,CAACoC,WAAUU,aAAYT,iBAGpCoI,MAAM,GAAD,OAAIb,GAAJ,8BAAwC,CACrCc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5I,WACAoI,UACA1H,aACAqK,SAAUhG,GAAiBmE,kBAGlC1D,OACAY,OAAM,iBAKFuF,GAAqB,SAACtN,EAAK2B,GAAN,OAAmB,SAACoF,GAClD,IAEInF,EAFAS,EAAa,CAACrC,GAId4B,KADDkF,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ2B,OAAemF,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ2B,KAAUd,SAASkD,SAC7H+C,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ2B,KAAUd,SAASV,QAAO,SAAAe,GAAC,OAAKmB,EAAWpB,MAAK,SAAAmM,GAAC,OAAIA,IAAMlM,EAAElB,UAAMqN,MAI1ItG,EAAS,CACLzH,KZld8B,yBYmd9BC,QAAS,CAACoC,WAAUU,aAAYT,mBAI3B2L,GAAe,SAAC,EAAYhE,GAAb,IAAE5H,EAAF,EAAEA,SAAF,OAA0B,SAACoF,GACnD,IAAInF,EAAckF,EAAM6C,WAAWnI,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQ2B,KAAUd,SAAS,GAE1FkG,EAAS,CACLzH,KZ1d2B,sBY2d3BC,QAASoC,IAGbqI,MAAM,GAAD,OAAIb,GAAJ,6BAAuC,CACpCc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5I,WACA6L,cAAe5L,EAAY5B,QAGlCmH,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAtG,GACFkG,EAAS,CACLzH,KZ5eqB,wBY6erBC,QAAS,CAACoC,WAAWd,SAAUA,EAAS2K,UAAWnL,QAA8B,KAArBQ,EAASkD,aAG5EgE,OAAM,iB,kDChgBA0F,G,uKAlBP,OACI,kBAAC,KAAD,CAAMlP,MAAO,CAACmP,eAAgB,QAASC,GAAE,iBAAYnP,KAAKC,MAAMsB,KAAKC,MACjE,kBAAC4N,GAAA,EAAD,CAAQtP,UAAU,YAAY2B,MAAK,eAAUzB,KAAKC,MAAMsB,KAAKE,QACzD,kBAAC,EAAD,CAAQ1B,MAAO,CAACsP,MAAO,GAAIC,OAAQ,GAAI/O,SAAU,GAAIgP,WAAY,IAAKC,gBAAgB,OAAD,OAASxP,KAAKC,MAAMsB,KAAKjB,MAAzB,MAAoCJ,KAAMF,KAAKC,MAAMsB,KAAKE,MAAMgO,OAAO,KAC5J,6BACI,2BAAIzP,KAAKC,MAAMsB,KAAKG,WAAa,kBAAC,KAAD,MAAsB1B,KAAKC,MAAMsB,KAAKE,OACvE,yBAAK3B,UAAU,SACVE,KAAKC,MAAMsB,KAAKU,MAAMX,KAAI,SAACX,EAAM+O,GAAP,OACvB,kBAAC,EAAD,CAAQC,IAAKD,EAAO3P,MAAO,CAACsP,MAAO,GAAIC,OAAQ,GAAI/O,SAAU,EAAGiP,gBAAgB,OAAD,OAAS7O,EAAKL,MAAd,MAAyBJ,KAAMS,EAAKT,KAAK0P,MAAMH,OAAO,GAAG9O,EAAKT,KAAKkM,KAAKqD,OAAO,gB,GAVvK9P,IAAMa,W,gECZtB,SAASqP,GAAMC,GAClB,IAAIC,EAAO,IAAItM,KAAKqM,GAEhBE,EAAQD,EAAKE,WACbC,EAAUH,EAAKI,aASnB,OAPkC,IAA9BD,EAAQE,WAAW7K,SACnB2K,EAAU,IAAMA,GAEY,IAA5BF,EAAMI,WAAW7K,SACjByK,EAAQ,IAAMA,GAGXA,EAAQ,IAAME,EA6ClB,SAASG,GAAgBN,GAC5B,IAEIC,GAFAD,EAAO,IAAItM,KAAKsM,IAEHE,WACbC,EAAUH,EAAKI,aAEc,GAA7BD,EAAQE,WAAW7K,SACnB2K,EAAU,IAAMA,GAEW,GAA3BF,EAAMI,WAAW7K,SACjByK,EAAQ,IAAMA,IAGJ,IAAIvM,MAAQ6M,UAAYP,EAAKO,UAA3C,IACIC,GAAW,IAAI9M,MAAO+M,UAAYT,EAAKS,UACvCC,GAAY,IAAIhN,MAAOiN,cAAgBX,EAAKW,cAC5CC,EAAOZ,EAAKW,cACZE,EAAQb,EAAKc,WAAW,EACxBC,EAAMf,EAAKS,UAEf,GAAIC,EAAY,EACZ,OACIE,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAaU,EAAIV,YA4B9C,OAPoB,GAAZG,GACCP,EAAQ,IAAOE,GAEH,IAAbK,GAAkB,aACJ,IAAdE,GAAmBK,EAAM,IAtBzB,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAUuCF,EAAM,GAM9C,SAASG,GAAWhB,GACvB,IAEIC,GAFAD,EAAO,IAAItM,KAAKsM,IAEHE,WACbC,EAAUH,EAAKI,aAEc,GAA7BD,EAAQE,WAAW7K,SACnB2K,EAAU,IAAMA,GAEW,GAA3BF,EAAMI,WAAW7K,SACjByK,EAAQ,IAAMA,GAGlB,IAAIgB,IAAU,IAAIvN,MAAQ6M,UAAYP,EAAKO,WAAa,IACpDC,GAAW,IAAI9M,MAAOwN,SAAWlB,EAAKkB,SACnCC,GAAc,IAAIzN,MAAOoN,WAAW,GAAMd,EAAKc,WAAW,GAC7DF,EAAOZ,EAAKW,cACZE,EAAQb,EAAKc,WAAW,EACxBC,EAAMf,EAAKS,UAEf,OAAIW,MAAMZ,IAAaA,EAAW,GAAKW,GAAc,EAE7CP,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAR,OAAyCJ,EAAQ,IAAOE,EAAUY,EAAIV,WAAJU,OAAqCd,EAAQ,IAAOE,GAOvH,GAAZK,KAEKS,EAAO,GAAM,WACVA,EAAO,KAAO,iBACdA,EAAO,MAAQjM,KAAKE,MAAM+L,EAAO,IAAlBjM,gBACfiM,EAAO,MAAQ,cACfA,EAAO,OAASjM,KAAKE,MAAM+L,EAAO,MAAlBjM,eAGZ,GAAZwL,GAAiB,gBAAiCP,EAAQ,IAAOE,GACjEK,EAAW,GAAKA,kBAA2DP,EAAQ,IAAOE,GAC1FK,EAAW,IAAMxL,KAAKqM,KAAKb,EAAW,GAArBxL,iBAA2EiL,EAAQ,IAAOE,E,wFClGxGmB,G,4MAhDXzQ,MAAQ,CACJ0Q,QAAQ,EACRC,KAAM,EACNC,IAAK,G,6DAIL,IAGIA,EACAD,EAJAE,EAAUjM,SAASkM,eAAe1R,KAAKC,MAAM0R,MAC7CC,EAAOH,EAAQI,wBAIhB7R,KAAKC,MAAM6R,QACVN,EAAMI,EAAKhD,EAAI6C,EAAQM,aACvBR,EAAOK,EAAKlP,IAGZ8O,EAAMI,EAAKhD,EACX2C,EAAOK,EAAKlP,EAAE+O,EAAQO,aAG1BhS,KAAKiS,SAAS,CAACV,OAAMC,QACrBxR,KAAKiS,SAAS,CAACX,QAAStR,KAAKY,MAAM0Q,W,0CAInC9L,SAASkM,eAAe1R,KAAKC,MAAM0R,MAAMO,iBAAiB,aAAclS,KAAKmS,aAAaC,KAAKpS,OAC/FwF,SAASkM,eAAe1R,KAAKC,MAAM0R,MAAMO,iBAAiB,aAAclS,KAAKmS,aAAaC,KAAKpS,S,6CAI/FwF,SAASkM,eAAe1R,KAAKC,MAAM0R,MAAMU,oBAAoB,aAAcrS,KAAKmS,aAAaC,KAAKpS,OAClGwF,SAASkM,eAAe1R,KAAKC,MAAM0R,MAAMU,oBAAoB,aAAcrS,KAAKmS,aAAaC,KAAKpS,S,+BAIlG,OACI,yBAAKD,MAAO,CAACwR,KAAMvR,KAAKY,MAAM2Q,KAAMC,IAAKxR,KAAKY,MAAM4Q,IAAKc,UAAWtS,KAAKC,MAAM6R,OAAS,OAAS,MAAOhS,UAAS,gCAA2BE,KAAKY,MAAM0Q,OAAS,SAAW,KACvK,yBAAKxR,UAAS,eACTE,KAAKC,MAAMsS,QAAQjR,KAAI,SAACT,EAAQ6O,GAC7B,OAAO7O,EAAS,kBAACuO,GAAA,EAAD,CAAQO,IAAKD,EAAO8C,QAAS,WAAO3R,EAAOA,UAAWf,UAAU,iBAAiBe,EAAOiN,MAAiB,c,GAzCxHnO,IAAMa,WCgBzBiS,G,4MACF7R,MAAQ,CACJ8R,SAAU/N,EAAc,EAAG,M,uDAGrB,IAAD,OACL,OACI,kBAAC,KAAD,CAAS5E,MAAO,CAACmP,eAAgB,QAASsD,QAAS,SAACxK,GAC7C,iBAAU,EAAK/H,MAAMU,KAAKa,OAAU,EAAKvB,MAAM0S,QAAQC,SAASC,UAC/D7K,EAAE8K,kBACPhT,UAAU,cAAcqP,GAAE,iBAAYnP,KAAKC,MAAMU,KAAKa,MACrD,kBAAC4N,GAAA,EAAD,CAAQtP,UAAS,eACb,kBAAC,EAAD,CAAQM,OAAQJ,KAAKC,MAAMU,KAAKP,OAAQL,MAAO,CAACsP,MAAO,GAAIC,OAAQ,GAAI/O,SAAU,GAAIgP,WAAY,IAAKC,gBAAgB,OAAD,OAASxP,KAAKC,MAAMU,KAAKL,MAAzB,MAAoCJ,KAAMF,KAAKC,MAAMU,KAAKT,KAAK0P,MAAMH,OAAO,GAAKzP,KAAKC,MAAMU,KAAKT,KAAKkM,KAAKqD,OAAO,KAEvO,6BACI,uBAAG3P,UAAU,aAAb,UAA6BE,KAAKC,MAAMU,KAAKT,KAAK0P,MAAlD,YAA2D5P,KAAKC,MAAMU,KAAKT,KAAKkM,QAC9EpM,KAAKC,MAAM6D,QAAU,uBAAGhE,UAAU,gBAC/BE,KAAKC,MAAMmD,YAAYzC,KAAKa,MAAQxB,KAAKC,MAAM8S,OAAOvR,KAAO,0BAAMzB,MAAO,CAACO,MAAO,YAArB,YAC7DN,KAAKC,MAAMmD,YAAY0K,MAAQ,oCAAG9N,KAAKC,MAAMmD,YAAY0K,OAExD9N,KAAKC,MAAMmD,YAAY0K,MACgB,IAAzC9N,KAAKC,MAAMmD,YAAYmK,OAAOhI,QAC1B,oCAAE,0BAAMxF,MAAO,CAACO,MAAO,YAAaN,KAAKC,MAAMmD,YAAYmK,OAAO,GAAGrN,QAGvEF,KAAKC,MAAMmD,YAAY0K,MACzB9N,KAAKC,MAAMmD,YAAYmK,OAAOhI,OAAS,GACnC,oCAAE,0BAAMxF,MAAO,CAACO,MAAO,YAArB,iEAA8CN,KAAKC,MAAMmD,YAAYmK,OAAOhI,OAA5E,OAGJvF,KAAKC,MAAMmD,YAAY0K,OACxB9N,KAAKC,MAAMmD,YAAYmK,OAAOhI,QACU,IAAzCvF,KAAKC,MAAMmD,YAAYqK,OAAOlI,QAC1B,oCAAE,0BAAMxF,MAAO,CAACO,MAAO,YAAaN,KAAKC,MAAMmD,YAAYqK,OAAO,GAAGvN,QAGvEF,KAAKC,MAAMmD,YAAY0K,OACxB9N,KAAKC,MAAMmD,YAAYmK,OAAOhI,QAC/BvF,KAAKC,MAAMmD,YAAYqK,OAAOlI,OAAS,GACnC,oCAAE,0BAAMxF,MAAO,CAACO,MAAO,YAArB,mCAAyCN,KAAKC,MAAMmD,YAAYqK,OAAOlI,OAAvE,OAGJvF,KAAKC,MAAMmD,YAAY0K,OACxB9N,KAAKC,MAAMmD,YAAYmK,OAAOhI,SAC9BvF,KAAKC,MAAMmD,YAAYqK,OAAOlI,QACS,IAAxCvF,KAAKC,MAAMmD,YAAYoK,MAAMjI,QACzB,oCAAE,0BAAMxF,MAAO,CAACO,MAAO,YAAaN,KAAKC,MAAMmD,YAAYoK,MAAM,GAAGtN,QAGtEF,KAAKC,MAAMmD,YAAY0K,OACxB9N,KAAKC,MAAMmD,YAAYmK,OAAOhI,SAC9BvF,KAAKC,MAAMmD,YAAYqK,OAAOlI,QAC/BvF,KAAKC,MAAMmD,YAAYoK,MAAMjI,OAAS,GAClC,oCAAE,0BAAMxF,MAAO,CAACO,MAAO,YAArB,mCAAyCN,KAAKC,MAAMmD,YAAYoK,MAAMjI,OAAtE,OAGTvF,KAAKC,MAAM6D,QAAU,uBAAGhE,UAAU,uBAAb,WAE1B,yBAAKA,UAAU,eACX,0BAAMA,UAAU,WAAWuQ,GAAgBrQ,KAAKC,MAAMmD,YAAYM,YAClE,kBAAC,sBAAD,CACJsP,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,KAClBlT,KAAKC,MAAMmD,YAAYzC,KAAKa,MAAQxB,KAAKC,MAAM8S,OAAOvR,MAAQxB,KAAKC,MAAMmD,YAAYhC,SAAWpB,KAAKC,MAAMmD,YAAYtB,WAAc,kBAAC,KAAD,CAAkB/B,MAAO,CAACoT,UAAW,EAAG5S,SAAU,GAAID,MAAO,aAClMN,KAAKC,MAAMmD,YAAYzC,KAAKa,MAAQxB,KAAKC,MAAM8S,OAAOvR,MAAQxB,KAAKC,MAAMmD,YAAYhC,UAAYpB,KAAKC,MAAMmD,YAAYtB,YAAc9B,KAAKC,MAAMmD,YAAYT,QAAW,kBAAC,KAAD,CAAU5C,MAAO,CAACoT,UAAW,EAAG5S,SAAU,GAAID,MAAO,aAC7NN,KAAKC,MAAMmD,YAAYzC,KAAKa,MAAQxB,KAAKC,MAAM8S,OAAOvR,MAAQxB,KAAKC,MAAMmD,YAAYhC,UAAYpB,KAAKC,MAAMmD,YAAYtB,WAAa9B,KAAKC,MAAMmD,YAAYT,QAAW,kBAAC,KAAD,CAAa5C,MAAO,CAACoT,UAAW,EAAG5S,SAAU,GAAID,MAAO,aAC/NN,KAAKC,MAAMmD,YAAYzC,KAAKa,MAAQxB,KAAKC,MAAM8S,OAAOvR,OAASxB,KAAKC,MAAMoD,QAAW,0BAAMvD,UAAU,yBAAyBE,KAAKC,MAAMoD,QACzIrD,KAAKC,MAAMmD,YAAYzC,KAAKa,MAAQxB,KAAKC,MAAM8S,OAAOvR,MAAQxB,KAAKC,MAAMoD,QAAW,0BAAMtD,MAAO,CAACuP,OAAQ,MAC1GtP,KAAKC,MAAMmD,YAAYzC,KAAKa,MAAQxB,KAAKC,MAAM8S,OAAOvR,MAAQxB,KAAKC,MAAMmD,YAAYtB,WAAa9B,KAAKC,MAAMmD,YAAYhC,SAAY,oCACnI,kBAAC,GAAD,CAAYmR,QAAS,CACjB,CAACzE,KAAM,QAASjN,OAAQ,WACpB,IAAIyB,EAAU,EAAKrC,MAAMmD,YACzBd,EAAQH,OAAS,EAAKlC,MAAMU,KAAKa,IACjCc,EAAQa,SAAW,EAAKlD,MAAMkD,SAC9B,EAAKlD,MAAMmT,eAAe3E,iBAAiBnM,EAAS,EAAKrC,MAAM8S,OAAOhI,YAE1E,CAAC+C,KAAM,SAAUjN,OAAQ,WACrB,EAAKZ,MAAMmT,eAAetE,mBAAmB,EAAK7O,MAAMmD,YAAY5B,IAAK,EAAKvB,MAAMkD,aAEzFwO,KAAM,yBAAyB3R,KAAKY,MAAM8R,WAC7C,kBAAC,KAAD,CAAkB5S,UAAU,QAAQoM,GAAI,yBAAyBlM,KAAKY,MAAM8R,SAAU3S,MAAO,CAACoT,UAAW,EAAG5S,SAAU,GAAID,MAAO,sB,GAjFpIX,IAAMa,WAuGhB6S,oBAZS,SAAAzS,GACpB,MAAO,CACHmS,OAAQnS,EAAMD,SAItB,SAA4B4H,GACxB,MAAO,CACH6K,eAAgBE,YAAmBF,EAAgB7K,MAI5C8K,CAA6CE,aAAWd,K,qBC7FjEe,GAAYC,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFnE,gBAAiB,UACjBoE,SAAU,WACV9B,OAAQ,GACR+B,MAAO,GACP,UAAW,CACPrE,gBAAiB,eAKXiE,CAAsBK,MAElCC,G,4MAGFnT,MAAQ,CACJoT,YAAY,EACZC,UAAW,G,kEAIXjU,KAAKkU,QAAQC,cAAa,K,iCAQvBnU,KAAKY,MAAMqT,UAAYjU,KAAKoU,cAAcC,eACtCrU,KAAKY,MAAMoT,YACVhU,KAAKiS,SAAS,CAAC+B,YAAY,IAE3BhU,KAAKY,MAAMoT,YACXhU,KAAKiS,SAAS,CAAC+B,YAAY,IAGnChU,KAAKiS,SAAS,CAACgC,UAAWjU,KAAKoU,cAAcC,mB,4CAG3BC,EAAWC,GAC7B,OAAGA,EAAUN,YAAcjU,KAAKY,MAAMqT,Y,6CAQtCjU,KAAKkU,QAAQC,cAAa,K,+BAGpB,IC1EsB1C,ED0EvB,OACL,OACI,oCACI,yBAAK3R,UAAU,qCAAqCC,MAAO,CAACyU,SAAU,WAClE,wBAAI1U,UAAU,iBAAd,SAEA,kBAAC,aAAD,CACI2U,IAAK,SAACA,GAAS,EAAKL,cAAgBK,GACpCC,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV8U,SAAU,WAAO,EAAKA,YACtB7U,MAAO,CAACuP,OAAQ,qBAChBuF,UAAQ,GAEP7U,KAAKC,MAAM+C,QAAQ/B,aCzFRwQ,EDyFkC,yBAAK3R,UAAU,aACzD,kBAACgV,GAAA,EAAD,CAAUC,QAAQ,SAAS1F,MAAO,GAAIC,OAAQ,KAC9C,kBAACwF,GAAA,EAAD,CAAUC,QAAQ,OAAOhV,MAAO,CAACiV,WAAY,GAAIC,KAAM,UC1FxE,oCACFxD,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,IDkFgBzR,KAAKC,MAAM+C,QAAQA,QAAQ1B,KAAI,SAACc,EAAQsN,GACrC,OAAOtN,EAAOgB,aACV,kBAAC,GAAD,CAAYuM,IAAKD,EAAOvM,SAAUf,EAAOZ,IAAKsC,OAAQ1B,EAAO0B,OAAQT,OAAQjB,EAAOiB,OAAQD,YAAahB,EAAOgB,YAAazC,KAAMyB,EAAOzB,YAKpJX,KAAKC,MAAM+C,QAAQA,QAAQP,MAAK,SAAAC,GAAC,OAAIA,EAAEU,gBAAgB,yBAAKtD,UAAU,cACpE,kBAAC,KAAD,CAAgBC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAEnF,oEAGJ,kBAACC,GAAA,EAAD,CAAS3T,MAAM,gBAAgB3B,UAAS,2BAAsBE,KAAKY,MAAMoT,WAAa,SAAW,IAAMqB,UAAU,OAC7G,kBAAC7B,GAAD,CAAWlT,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,WAC9D,EAAKvS,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,mBAGZ,kBAAC,IAAD,c,GA9EL7V,IAAMa,WAAvBuT,GACK0B,YAAc/V,EAoGV2T,oBAdS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,MACb2B,QAASpC,EAAMoC,YAIvB,SAA4BuF,GACxB,MAAO,CACH6K,eAAgBE,YAAmBF,EAAgB7K,MAI5C8K,CAA6CE,aAAWQ,K,0CEjH1D2B,GAAW,SAAC3K,EAAUtB,GAAX,OAAoB,SAAClB,GACzCA,EAAS,CACLzH,KnBKqB,kBmBFzB0K,MAAM,GAAD,OAAIb,GAAJ,qBAA+B,CAChCc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjBtC,WAGPd,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAACtH,GACHkH,EAAS,CACLzH,KnBrCa,YmBsCbC,QAASM,IAGb6G,GAAiBoE,SAAS7C,MAE7BF,OAAM,SAACC,GACJjB,EAAS,CACLzH,KnBrBmB,yBmB0BlB6U,GAAW,SAAApU,GAAI,OAAI,SAACgH,GAC7BA,EAAS,CACLzH,KnBnDiB,YmBoDjBC,QAASQ,MAIJiL,GAAW,SAAC,GAAD,IAAEN,EAAF,EAAEA,GAAInB,EAAN,EAAMA,SAAN,OAAoB,SAACxC,GACzCiD,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CACxBc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjBG,KACAgC,SAAUhG,GAAiBmE,kBAGlC1D,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAApH,GACF,GAAGA,EAAKS,MAQJ,OAPAyD,GAAc,cAEd8C,EAAS,CACLzH,KnB/DY,mBmBgEZC,QAASQ,EAAKqU,OAAO,KAM7BrU,EAAKa,OAAOC,SAAWd,EAAKa,OAAOC,SAAS2K,UAE5CzL,EAAKU,MAAMX,KAAI,SAAAoB,GACXA,EAAEE,UAAW,KAGjB6C,GAAclE,EAAKE,OAEnB8G,EAAS,CACLzH,KnBxFe,kBmByFfC,QAAS,CAACQ,OAAMM,QAAyC,KAAhCN,EAAKa,OAAOC,SAASkD,UAGlD2C,GAAiBsE,SAAS,CAACtK,OAAQX,EAAKC,IAAKiI,KAAMlI,EAAKkI,OAExD,IACI6B,GAA6B/J,EAAKC,KACpC,MAAOgI,GACLtB,GAAiByB,UAAU,CAACzH,OAAQX,EAAKC,IAAKiI,KAAMlI,EAAKkI,OACzDlB,EAAS,CACLzH,KnB1FY,mBmB2FZC,QAAS,CAAC8U,MAAO,MAAOC,IAAK,8BAIxCvM,OAAM,SAACC,GACJjB,EAAS,CACLzH,KnBjGgB,mBmBkGhBC,QAAS,CAAC8U,MAAO,MAAOC,IAAK,+BAKhCnM,GAAY,SAACzH,EAAQuH,GAAT,OAAkB,SAAClB,GACxC+C,GAA2B,CAACpJ,SAAQuH,SACpClB,EAAS,CACLzH,KnBlHwB,uBmBsHnBsM,GAAc,SAAC9K,EAASyI,GAAV,OAAuB,SAACxC,GAO/C,IANA,IAAI8E,EAAW,IAAIC,SACf9L,EAAMmD,EAAc,EAAG,KACvB4I,EAAS,GACTC,EAAQ,GACRC,EAAS,GAEJnI,EAAI,EAAGA,EAAIhD,EAAQiL,OAAOhI,OAAQD,IACvC+H,EAASK,OAAO,SAASpI,EAAGhD,EAAQiL,OAAOjI,GAAGqI,MAC9CrL,EAAQiL,OAAOjI,GAAGqI,MAAO,EACzBJ,EAAOK,KAAKtL,EAAQiL,OAAOjI,IAG/B,IAAK,IAAIA,EAAI,EAAGA,EAAIhD,EAAQkL,MAAMjI,OAAQD,IACtC+H,EAASK,OAAO,QAAQpI,EAAGhD,EAAQkL,MAAMlI,GAAGqI,MAC5CrL,EAAQkL,MAAMlI,GAAGqI,MAAO,EACxBH,EAAMI,KAAKtL,EAAQkL,MAAMlI,IAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAIhD,EAAQmL,OAAOlI,OAAQD,IACvC+H,EAASK,OAAO,SAASpI,EAAGhD,EAAQmL,OAAOnI,GAAGqI,MAC9CrL,EAAQmL,OAAOnI,GAAGqI,MAAO,EACzBF,EAAOG,KAAKtL,EAAQmL,OAAOnI,IAG/B,IAAIuI,EAAe,CACfrM,MACAb,KAAM2H,EAAM6C,WAAWxK,KACvBmN,KAAMxL,EAAQwL,KACdP,SACAE,SACAD,QACA1L,WAAW,EACXV,SAAS,EACTuB,QAAQ,EACRoL,eAAgBzL,EAAQyL,eACxBrK,UAAWD,KAAKuK,OAGpBzF,EAAS,CACLzH,KnB3JyB,oBmB4JzBC,QAAS8M,IAGb,IAAIE,EAAiB,GAErBzL,EAAQyL,eAAezM,KAAI,SAAA2M,GACvBF,EAAeH,KAAKK,EAAEzM,QAG1Bc,EAAQyL,eAAiBA,EACzBzL,EAAQ4L,SAAWhG,GAAiBmE,cAEpCgB,EAASK,OAAO,OAAQpL,EAAQwL,MAChCT,EAASK,OAAO,iBAAkBpL,EAAQyL,gBAC1CV,EAASK,OAAO,SAAUpL,EAAQJ,QAClCmL,EAASK,OAAO,WAAYpL,EAAQa,UACpCkK,EAASK,OAAO,WAAYxF,GAAiBmE,eAG7Cb,MAAM,GAAD,OAAIb,GAAJ,0BAAoC,CACjCc,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMwB,IAET1E,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAwF,GACF,GAAGA,EAAWnM,MACV,OAAOuG,EAAS,CACZzH,KnB1Le,sBmB2LfC,QAASS,IAGjB+G,EAAS,CACLzH,KnBhMqB,wBmBiMrBC,QAAS,CAACS,MAAKe,OAAQ4L,EAAW3M,UAGzC+H,OAAM,WACHhB,EAAS,CACLzH,KnBrMmB,sBmBsMnBC,QAASS,SAKZ4M,GAAc,SAAC9L,EAASyI,GAAV,OAAuB,SAACxC,GAW/C,IAVA,IAAI8E,EAAW,IAAIC,SAEfC,EAAS,GACTC,EAAQ,GACRC,EAAS,GAETY,EAAY,GACZC,EAAW,GACXC,EAAY,GAEPjJ,EAAI,EAAGA,EAAIhD,EAAQiL,OAAOhI,OAAQD,IACpChD,EAAQiL,OAAOjI,GAAGqI,MACjBN,EAASK,OAAO,SAASpI,EAAGhD,EAAQiL,OAAOjI,GAAGqI,MAE9CJ,EAAOK,KAAKtL,EAAQiL,OAAOjI,KAE3B+I,EAAUT,KAAKtL,EAAQiL,OAAOjI,GAAG4G,IAIzC,IAAK,IAAI5G,EAAI,EAAGA,EAAIhD,EAAQkL,MAAMjI,OAAQD,IACnChD,EAAQkL,MAAMlI,GAAGqI,MAChBN,EAASK,OAAO,QAAQpI,EAAGhD,EAAQkL,MAAMlI,GAAGqI,MAE5CH,EAAMI,KAAKtL,EAAQkL,MAAMlI,KAEzBgJ,EAASV,KAAKtL,EAAQkL,MAAMlI,GAAG4G,IAIvC,IAAK,IAAI5G,EAAI,EAAGA,EAAIhD,EAAQmL,OAAOlI,OAAQD,IACpChD,EAAQmL,OAAOnI,GAAGqI,MACjBN,EAASK,OAAO,SAASpI,EAAGhD,EAAQmL,OAAOnI,GAAGqI,MAE9CF,EAAOG,KAAKtL,EAAQmL,OAAOnI,KAE3BiJ,EAAUX,KAAKtL,EAAQmL,OAAOnI,GAAG4G,IAIzC,IAAI2B,EAAe,CACfrM,IAAKc,EAAQd,IACbb,KAAM2H,EAAM6C,WAAWxK,KACvBmN,KAAMxL,EAAQwL,KACdP,OAAQjL,EAAQiL,OAChBE,OAAQnL,EAAQmL,OAChBD,MAAOlL,EAAQkL,MACf1L,WAAW,EACXV,SAAS,EACT2M,eAAgBzL,EAAQyL,gBAG5BxF,EAAS,CACLzH,KnBhQ0B,qBmBiQ1BC,QAAS8M,IAGb,IAAIE,EAAiB,GAErBzL,EAAQyL,eAAezM,KAAI,SAAA2M,GACvBF,EAAeH,KAAKK,EAAEzM,QAG1Bc,EAAQyL,eAAiBA,EACzBzL,EAAQ4L,SAAWhG,GAAiBmE,cACpC/J,EAAQJ,OAASoG,EAAM6C,WAAW9J,MAAMF,WAAWK,IAEnD6L,EAASK,OAAO,MAAOpL,EAAQd,KAC/B6L,EAASK,OAAO,OAAQpL,EAAQwL,MAChCT,EAASK,OAAO,iBAAkBpL,EAAQyL,gBAC1CV,EAASK,OAAO,SAAUpL,EAAQJ,QAClCmL,EAASK,OAAO,WAAYpL,EAAQa,UACpCkK,EAASK,OAAO,WAAYxF,GAAiBmE,eAC7CgB,EAASK,OAAO,YAAaW,GAC7BhB,EAASK,OAAO,YAAaa,GAC7BlB,EAASK,OAAO,WAAYY,GAE5B9C,MAAM,GAAD,OAAIb,GAAJ,0BAAoC,CACjCc,OAAQ,OACRC,QAAS,CACLE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMwB,IAET1E,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAwF,GACF,GAAGA,EAAWnM,MACV,OAAOuG,EAAS,CACZzH,KnBpSe,sBmBqSfC,QAASuB,EAAQd,MAGzB+G,EAAS,CACLzH,KnB1SqB,wBmB2SrBC,QAAS,CAACS,IAAKc,EAAQd,IAAKe,OAAQD,EAAQd,UAGnD+H,OAAM,WACHhB,EAAS,CACLzH,KnB/SmB,sBmBgTnBC,QAASuB,EAAQd,WAKpBkN,GAAgB,SAAC,EAA0B3D,GAA3B,IAAE7I,EAAF,EAAEA,OAAQyM,EAAV,EAAUA,eAAV,OAAwC,SAACpG,GAClE,IAAI1E,EAAa,GACjB8K,EAAerN,KAAI,SAAA2M,GACfpK,EAAW+J,KAAKK,EAAEzM,QAGtB+G,EAAS,CACLzH,KnBxT4B,uBmByT5BC,QAAS8C,IAGb2H,MAAM,GAAD,OAAIb,GAAJ,4BAAsC,CACnCc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB7J,SACA2B,aACAqK,SAAUhG,GAAiBmE,kBAGlC1D,OACAY,OAAM,iBAKFuF,GAAqB,SAACtN,GAAD,OAAS,SAAC+G,GACxCA,EAAS,CACLzH,KnBjV4B,uBmBkV5BC,QAAS,CAACS,OAILiN,GAAmB,SAACnM,EAASyI,GAAV,OAAuB,SAACxC,GACpD,IAAI8E,EAAW,IAAIC,SACfC,EAAS,GAETM,EAAe,CACfrM,IAAKc,EAAQd,IACbb,KAAM2H,EAAM6C,WAAWxK,KACvBmN,KAAMxL,EAAQwL,KACdP,OAAQjL,EAAQiL,OAChBE,OAAQ,GACRD,MAAO,GACP1L,WAAW,EACXV,SAAS,EACT2M,eAAgBzL,EAAQyL,eACxBrK,UAAWD,KAAKuK,OAGpBzF,EAAS,CACLzH,KnBxW4B,uBmByW5BC,QAAS,CAACuB,EAAQd,OAGtB+G,EAAS,CACLzH,KnBnXyB,oBmBoXzBC,QAAS8M,IAGb,IAAK,IAAIvI,EAAI,EAAGA,EAAIhD,EAAQiL,OAAOhI,OAAQD,IACvC+H,EAASK,OAAO,SAASpI,EAAGhD,EAAQiL,OAAOjI,GAAGqI,MAE9CJ,EAAOK,KAAKtL,EAAQiL,OAAOjI,GAAGH,MAGlC,IAAI4I,EAAiB,GAErBzL,EAAQyL,eAAezM,KAAI,SAAA2M,GACvBF,EAAeH,KAAKK,EAAEzM,QAG1Bc,EAAQyL,eAAiBA,EACzBzL,EAAQ4L,SAAWhG,GAAiBmE,cAEpCgB,EAASK,OAAO,OAAQpL,EAAQwL,MAChCT,EAASK,OAAO,iBAAkBpL,EAAQyL,gBAC1CV,EAASK,OAAO,SAAUpL,EAAQJ,QAClCmL,EAASK,OAAO,WAAYpL,EAAQa,UACpCkK,EAASK,OAAO,WAAYxF,GAAiBmE,eAE7Cb,MAAM,GAAD,OAAIb,GAAJ,0BAAoC,CACjCc,OAAQ,OACRC,QAAS,CAGLE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMwB,IAET1E,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAwF,GACF5F,EAAS,CACLzH,KnBvZqB,wBmBwZrBC,QAAS,CAACS,IAAKc,EAAQd,IAAKe,OAAQ4L,EAAW3M,UAGtD+H,OAAM,WACHhB,EAAS,CACLzH,KnB5ZmB,sBmB6ZnBC,QAASuB,EAAQd,WAKpBgN,GAAe,SAAC,EAA4BzD,GAA7B,IAAE5H,EAAF,EAAEA,SAAUhB,EAAZ,EAAYA,OAAQD,EAApB,EAAoBA,OAApB,OAA0C,SAACqG,GACnE,IAAIiG,EAAelG,EAAM6C,WAAW9J,MAAMF,WAAWiB,OAAOC,SAASV,QAAO,SAAAe,GAAC,OAAKA,EAAEC,QAAUD,EAAE/B,KAAKa,MAAQW,KAE7GiJ,YAAW,WACFoD,EAAajJ,QACdgD,EAAS,CACLzH,KnBnamB,sBmBoanBC,QAASoB,MAGlB,KAEEqM,EAAajJ,QACdiG,MAAM,GAAD,OAAIb,GAAJ,2BAAqC,CAClCc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5I,WACAjB,aAGPyG,OACAY,OAAM,iBAMNwF,GAAe,SAAC,EAA4BhE,GAA7B,IAAE5H,EAAF,EAAEA,SAAF,EAAYhB,OAAZ,EAAoBD,OAApB,OAA0C,SAACqG,GACnE,IAAInF,EAAckF,EAAM6C,WAAW9J,MAAMF,WAAWiB,OAAOC,SAAS,GAEpEkG,EAAS,CACLzH,KnB7byB,sBmBgc7ByH,EAAS,CACLzH,KnBlc2B,sBmBmc3BC,QAAS,CAACsB,SAAU,GAAIR,SAAS,KAGrC2J,MAAM,GAAD,OAAIb,GAAJ,2BAAqC,CAClCc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5I,WACA6L,cAAe5L,EAAY5B,QAGlCmH,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAtG,GACFkG,EAAS,CACLzH,KnBrdmB,sBmBsdnBC,QAAS,CAACsB,SAAUA,EAAS2K,UAAWnL,QAA8B,KAArBQ,EAASkD,aAGjEgE,OAAM,iB,qBC9dFwM,GAAU,SAAC5T,EAAQ4I,GAAT,OAAsB,SAACxC,GAC1CiD,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CAC5Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,OAAQA,MAGfwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAA2B,IAAzBhI,EAAwB,EAAxBA,KAAMwD,EAAkB,EAAlBA,aACVxD,EAAKwD,aAAeA,EACpBoE,EAAS,CACLzH,KpBmBa,YoBlBbC,QAASJ,SAKRqV,GAAa,SAACjL,GAAD,OAAc,SAACxC,GACrCiD,MAAM,GAAD,OAAIb,GAAJ,yBAAmC,CACpCc,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,MAGhCpC,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAAC3E,GACH,IAAI/B,EAAQ,GAEZ+B,EAAQ1C,KAAI,SAAAX,GACRsB,EAAM2L,KAAKjN,EAAKsV,cAGpB1N,EAAS,CACLzH,KpBDqB,oBoBErBC,QAAS,CAACkB,QAAOJ,QAA0B,KAAjBI,EAAMsD,eAK/B2Q,GAAe,SAACnL,GAAD,OAAc,SAACxC,GACvCiD,MAAM,GAAD,OAAIb,GAAJ,2BAAqC,CACtCc,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,MAGhCpC,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAAC3E,GACH,IAAI/B,EAAQ,GAEZ+B,EAAQ1C,KAAI,SAAAX,GACRsB,EAAM2L,KAAKjN,EAAKsV,cAGpB1N,EAAS,CACLzH,KpBxBuB,sBoByBvBC,QAAS,CAACkB,QAAOJ,QAA0B,KAAjBI,EAAMsD,eAK/B4Q,GAAa,SAACpL,GAAD,OAAc,SAACxC,GACrCiD,MAAM,GAAD,OAAIb,GAAJ,yBAAmC,CACpCc,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,MAGhCpC,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAAC3E,GACH,IAAI/B,EAAQ,GAEZ+B,EAAQ1C,KAAI,SAAAX,GACRsB,EAAM2L,KAAKjN,EAAKsV,cAGpB1N,EAAS,CACLzH,KpB/CqB,oBoBgDrBC,QAAS,CAACkB,QAAOJ,QAA0B,KAAjBI,EAAMsD,eAK/B6Q,GAAW,SAACpS,GAAD,OAAa,SAACuE,GAElC,IADA,IAAI8N,EAAa,GACR/Q,EAAI,EAAGA,EAAItB,EAAQuB,OAAQD,IAAK,CACrC,IAAI3E,EAAOqD,EAAQsB,GAAG2Q,UAEtBtV,EAAKwD,aAAeH,EAAQsB,GAAGjF,OAE/BgW,EAAWzI,KAAKjN,GAGpB4H,EAAS,CACLzH,KpBnEiB,YoBoEjBC,QAAS,CAACiD,QAASqS,EAAYxU,QAA+B,KAAtBwU,EAAW9Q,YAI9C+Q,GAAkB,SAACnU,GAAD,OAAY,SAACoG,GACxCA,EAAS,CACLzH,KpB5EgC,2BoB6EhCC,QAASoB,MAIJoU,GAAc,SAACpU,EAAQ4I,GAAT,OAAsB,SAACxC,GAC9CiD,MAAM,GAAD,OAAIb,GAAJ,qBAA+B,CAChCc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,aAGPwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAACxE,GACHoE,EAAS,CACLzH,KpB/F2B,0BoBgG3BC,QAAS,CAACoB,SAAQgC,kBAGnBmE,EAAM6C,WAAWlJ,MAAMiC,QAAQhD,SAC3BoH,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDoG,EAAS,CACLzH,KpB5Fa,oBoB6FbC,QAAS,CAACJ,KAAM2H,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEqJ,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CAC5Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,OAAQA,MAGfwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAA2B,IAAzBhI,EAAwB,EAAxBA,KAAMwD,EAAkB,EAAlBA,aACVxD,EAAKwD,aAAeA,EACpBoE,EAAS,CACLzH,KpB3HC,YoB4HDC,QAASJ,IAEb4H,EAAS,CACLzH,KpBnHS,oBoBoHTC,QAAS,CAACJ,mBAQrB6V,GAAgB,SAACrU,EAAQ4I,GAAT,OAAsB,SAACxC,GAChDiD,MAAM,GAAD,OAAIb,GAAJ,4BAAsC,CACvCc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,aAGPwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAACxE,GACHoE,EAAS,CACLzH,KpBrJ2B,0BoBsJ3BC,QAAS,CAACoB,SAAQgC,kBAGnBmE,EAAM6C,WAAWlJ,MAAMgC,UAAU/C,QAChCqH,EAAS,CACLzH,KpBrJsB,yBoBsJtBC,QAAS,CAACoB,YAIfmG,EAAM6C,WAAWlJ,MAAM+B,QAAQ9C,SAC3BoH,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDoG,EAAS,CACLzH,KpB3Ja,oBoB4JbC,QAAS,CAACJ,KAAM2H,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEqJ,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CAC5Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,OAAQA,MAGfwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAA2B,IAAzBhI,EAAwB,EAAxBA,KAAMwD,EAAkB,EAAlBA,aACVxD,EAAKwD,aAAeA,EACpBoE,EAAS,CACLzH,KpBxLC,YoByLDC,QAASJ,IAEb4H,EAAS,CACLzH,KpBlLS,oBoBmLTC,QAAS,CAACJ,mBAQrB8V,GAAgB,SAACtU,EAAQ4I,GAAT,OAAsB,SAACxC,GAChDiD,MAAM,GAAD,OAAIb,GAAJ,4BAAsC,CACvCc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,aAGPwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAACxE,GACHoE,EAAS,CACLzH,KpBlN2B,0BoBmN3BC,QAAS,CAACoB,SAAQgC,kBAGnBmE,EAAM6C,WAAWlJ,MAAM+B,QAAQ9C,QACV,IAAjBiD,IACCoE,EAAS,CACLzH,KpBpNgB,uBoBqNhBC,QAAS,CAACoB,YAGXmG,EAAM6C,WAAWlJ,MAAMgC,UAAU/C,SAC7BoH,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,KAChDoG,EAAS,CACLzH,KpBvNO,sBoBwNPC,QAAS,CAACJ,KAAM2H,EAAM6C,WAAWlJ,MAAMA,MAAMQ,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQW,QAGrEqJ,MAAM,GAAD,OAAIb,GAAJ,iBAA2B,CAC5Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjB5J,OAAQA,MAGfwG,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAA2B,IAAzBhI,EAAwB,EAAxBA,KAAMwD,EAAkB,EAAlBA,aACVxD,EAAKwD,aAAeA,EACpBoE,EAAS,CACLzH,KpBrPP,YoBsPOC,QAASJ,IAEb4H,EAAS,CACLzH,KpB9OG,sBoB+OHC,QAAS,CAACJ,eAQ/B2H,EAAM6C,WAAWlJ,MAAMiC,QAAQhD,QAA2B,IAAjBiD,GACxCoE,EAAS,CACLzH,KpB3PoB,uBoB4PpBC,QAAS,CAACoB,YAIfmG,EAAM6C,WAAWlJ,MAAMgC,UAAU/C,QAA2B,IAAjBiD,GAC1CoE,EAAS,CACLzH,KpBnQsB,yBoBoQtBC,QAAS,CAACoB,iBCtSpBuU,GAAiBjD,cAfA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACFrT,MAAO,UACP6U,QAAS,OACT,YAAa,CACT7U,MAAO,UACPqW,OAAQ,QAEZ,UAAW,CACPnH,gBAAiB,gBAGzBoH,QAAS,MAGUnD,CAA2BoD,MAE5CC,G,uKACQ,IAAD,OACL,OACI,kBAAC1H,GAAA,EAAD,CAAQtP,UAAS,YAAe0S,QAAS,WAAO,EAAKvS,MAAMuS,QAAQ,EAAKvS,MAAMU,KAAKa,OAC/E,kBAAC,EAAD,CAAQzB,MAAO,CAACgX,SAAU,GAAIzH,OAAQ,GAAI/O,SAAU,GAAIgP,WAAY,IAAKC,gBAAgB,OAAD,OAASxP,KAAKC,MAAMU,KAAKL,MAAzB,MAAoCJ,KAAMF,KAAKC,MAAMU,KAAKT,KAAK0P,MAAMH,OAAO,GAAKzP,KAAKC,MAAMU,KAAKT,KAAKkM,KAAKqD,OAAO,KAE1M,yBAAK1P,MAAO,CAACoV,QAAS,OAAQ6B,SAAU,OAAQ3H,MAAO,sBACnD,uBAAGvP,UAAU,aAAb,UAA6BE,KAAKC,MAAMU,KAAKT,KAAK0P,MAAlD,YAA2D5P,KAAKC,MAAMU,KAAKT,KAAKkM,QAC9EpM,KAAKC,MAAMU,KAAKP,QAAU,uBAAGN,UAAU,gBAAgBiR,GAAW/Q,KAAKC,MAAMU,KAAKgD,WACnF3D,KAAKC,MAAMU,KAAKP,QAAU,uBAAGN,UAAU,eAAeC,MAAO,CAACO,MAAO,YAA3C,WAGV,WAApBN,KAAKC,MAAMa,MAAqB,kBAAC4V,GAAD,CAAgBE,QAAS5W,KAAKC,MAAMgX,gB,GAZ9DtX,IAAMa,WAwBd6S,gBANS,SAAAzS,GACpB,MAAO,CACHmS,OAAQnS,EAAMD,QAIP0S,CAAyBE,aAAWuD,K,WCpC/CI,IAAa,EAEXC,G,4MACFvW,MAAQ,CACJwW,EAAG,GACHC,aAAc,I,kEAIVrX,KAAKC,MAAMgC,MAAM+B,QAAQ9C,QACzBlB,KAAKC,MAAMqX,aAAatB,WAAWhW,KAAKC,MAAMU,KAAKoK,Y,mEAQlD/C,GAAI,IAAD,OACJoP,EAAIpP,EAAEuP,OAAOC,MACjBxX,KAAKiS,SAAS,CAACmF,MAEZF,IACCO,aAAaP,IAEZE,EAAE7R,QAAU,KAAKmS,KAAKN,KACvBF,GAAa9L,YAAW,WACpBI,MAAM,GAAD,OAAIb,GAAJ,oBAA8B,CAC/Bc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAY,EAAK3L,MAAMU,KAAKoK,WAE7Cc,KAAMC,KAAKC,UAAU,CACjBqL,EAAG,EAAKxW,MAAMwW,MAGrBzO,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAA0O,GACF,EAAKpF,SAAS,CAACoF,sBAEpB,MAGHD,EAAE7R,QACFvF,KAAKiS,SAAS,CAACoF,aAAc,O,+BAG3B,IAAD,OACL,OAAO,oCACH,2BAAOvW,KAAK,OAAO0W,MAAOxX,KAAKY,MAAMwW,EAAGO,SAAU,SAAC3P,GAAO,EAAK4P,SAAS5P,IAAKlI,UAAU,uBAAuB+X,YAAY,YAExH7X,KAAKY,MAAMyW,aAAa9R,SAAWvF,KAAKY,MAAMwW,EAAE7R,QAAU,kBAAC,aAAD,CACxDkP,IAAK,SAACA,GAAS,EAAKqD,WAAarD,GACjCC,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV8U,SAAU,WAAO,EAAKA,YACtB7U,MAAO,CAACuP,OAAQ,KAChBuF,UAAQ,GAEP7U,KAAKC,MAAMgC,MAAM+B,QAAQ/C,YAAc,kBAAC8W,GAAA,EAAD,CAAkBhY,MAAO,CACzDO,MAAO,UACPsT,SAAU,WACVrC,KAAM,EACNsC,MAAO,EACPqB,OAAQ,OACR1D,IAAK,sBAEZxR,KAAKC,MAAMgC,MAAM+B,QAAQ/B,MAAMX,KAAI,SAACX,EAAM+O,GACvC,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAO5O,KAAM,EAAKb,MAAMa,KAAMmW,SAA8B,WAApB,EAAKhX,MAAMa,QAAsB,EAAKb,MAAM+X,YAAYvV,MAAK,SAAAC,GAAC,OAAIA,IAAM/B,EAAKa,OAAcgR,QAAS,SAACtG,GAAQ,EAAKjM,MAAMuS,QAAQtG,IAAMvL,KAAMA,QAGxMX,KAAKC,MAAMgC,MAAM+B,QAAQ/B,MAAMsD,SAAWvF,KAAKC,MAAMgC,MAAM+B,QAAQ/C,YAAe,yBAAKnB,UAAU,cAChG,kBAAC,KAAD,CAAWC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAE9E,uEAIJnV,KAAKY,MAAMyW,aAAa9R,UAAYvF,KAAKY,MAAMwW,EAAE7R,SAAW,kBAAC,aAAD,CAC5DkP,IAAK,SAACA,GAAS,EAAKqD,WAAarD,GACjCC,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV8U,SAAU,WAAO,EAAKA,YACtB7U,MAAO,CAACuP,OAAQ,KAChBuF,UAAQ,GAUP7U,KAAKY,MAAMyW,aAAa/V,KAAI,SAACX,EAAM+O,GAChC,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAO5O,KAAM,EAAKb,MAAMa,KAAMmW,SAA8B,WAApB,EAAKhX,MAAMa,QAAsB,EAAKb,MAAM+X,YAAYvV,MAAK,SAAAC,GAAC,OAAIA,IAAM/B,EAAKa,OAAcgR,QAAS,SAACtG,GAAQ,EAAKjM,MAAMuS,QAAQtG,IAAMvL,KAAMA,QAGxMX,KAAKY,MAAMyW,aAAa9R,QAAW,yBAAKzF,UAAU,cACjD,kBAAC,KAAD,CAAWC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAE9E,qD,GAzGGxV,IAAMa,WA6Hd6S,oBAbS,SAAAzS,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAW4D,KC9HjEc,GAA0B,CAC5BC,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,qCAI1BC,GAA0B,CAC5BN,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,mCACxBpD,QAAwB,OACxBsD,eAAwB,SACxBzB,SAAwB,OACxB3H,MAAwB,cACxBqJ,SAAwB,QACxBC,QAAwB,WAkB1BjC,GAAiBjD,cAdA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACFrT,MAAO,UACP,YAAa,CACTA,MAAO,UACPqW,OAAQ,QAEZ,UAAW,CACPnH,gBAAiB,gBAGzBoH,QAAS,MAGUnD,CAA2BoD,MAE5C+B,G,4MACFhY,MAAQ,CACJa,MAAO,GACPC,WAAW,EACXmX,KAAM,SACNb,YAAa,GACbhW,OAAO,EACP4T,OAAQ,I,uDAGH5N,GAAI,IAAD,OACRhI,KAAKiS,SAAS,CAACjQ,OAAO,EAAO4T,OAAQ,KACrC5N,EAAE8K,iBAEFtH,MAAM,GAAD,OAAIb,GAAJ,oBAA8B,CAC/Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAY5L,KAAKC,MAAMU,KAAKoK,WAE7Cc,KAAMC,KAAKC,UAAU,CACjBtK,MAAOzB,KAAKY,MAAMa,MAClBC,UAAW1B,KAAKY,MAAMc,UACtB+H,KAAMzJ,KAAKC,MAAMU,KAAKK,SACtBgX,YAAahY,KAAKY,MAAMoX,gBAG/BrP,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAACpH,GACAA,EAAKS,MACJ,EAAKiQ,SAAS,CAACjQ,OAAO,EAAM4T,OAAQrU,EAAKqU,OAAQiD,KAAM,YAEvD,EAAK5Y,MAAM6Y,aAAanD,SAASpU,GACjC2G,GAAiBqE,WAAW,CAAChL,OAAMkI,KAAM,EAAKxJ,MAAMU,KAAKK,WACzD,EAAKf,MAAM0S,QAAQ/E,KAAnB,iBAAkCrM,EAAKC,Y,+BAKzC,IAAD,OACL,OAAO,kBAAC,KAAD,CACHuX,OAAQ/Y,KAAKC,MAAM8Y,OACnBC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAA2B,WAApBC,KAAKY,MAAMiY,KAAoBZ,GAA0BO,GAChES,aAAa,eAEQ,WAApBjZ,KAAKY,MAAMiY,MAAqB,wBAAI/Y,UAAU,eAAd,YACZ,WAApBE,KAAKY,MAAMiY,MAAqB,wBAAI/Y,UAAU,eAAd,gBAEjC,0BAAMC,MAAO,CAACoV,QAAS,YAAa+D,SAAU,SAAClR,GAAO,EAAKkR,SAASlR,KAC3C,WAApBhI,KAAKY,MAAMiY,MAAqB,oCAC7B,2BACIrB,MAAOxX,KAAKY,MAAMa,MAClBkW,SAAU,SAAC3P,GAAO,EAAKiK,SAAS,CAACxQ,MAAOuG,EAAEuP,OAAOC,SACjD1X,UAAU,cACVgB,KAAK,OACLf,MAAO,CAACoZ,aAAc,IACtBtB,YAAY,QACZuB,UAAW,KAEdpZ,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,UAAhBA,EAAM3B,UAAsB,0BAAM/V,UAAU,qBACxEE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,UAAhBA,EAAM3B,SAAmBC,KAG9D,kBAACuD,GAAA,EAAD,CACIC,QACI,kBAAC,GAAD,CACI1C,QAAS5W,KAAKY,MAAMc,UACpBiW,SAAU,WAAO,EAAK1F,SAAS,CAACvQ,WAAY,EAAKd,MAAMc,eAG/D3B,MAAO,CAACO,MAAO,WACfiZ,MAAM,kBAGV,4BAAQzZ,UAAU,cAAc0S,QAAS,WAAO,EAAKP,SAAS,CAAC4G,KAAM,YAAa9Y,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAA3H,SAGiB,WAApBnT,KAAKY,MAAMiY,MAAqB,oCAC7B,kBAACW,GAAD,CAAShH,QAAS,SAACtG,GACX,EAAKtL,MAAMoX,YAAYvV,MAAK,SAAAC,GAAC,OAAIA,IAAMwJ,KAGvC,EAAK+F,SAAS,CAAC+F,YAAY,YAAK,EAAKpX,MAAMoX,YAAYrW,QAAO,SAAAe,GAAC,OAAIA,IAAMwJ,QAFzE,EAAK+F,SAAS,CAAC+F,YAAY,CAAE9L,GAAH,mBAAU,EAAKtL,MAAMoX,iBAGpDlX,KAAM,SAAUkX,YAAahY,KAAKY,MAAMoX,cAE3C,4BAAQlY,UAAU,cAAc0S,QAAS,WAAO,EAAKP,SAAS,CAAC4G,KAAM,YAAa9Y,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAA3H,QACA,4BAAQrT,UAAU,cAAcgB,KAAK,SAASf,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAAvF,gB,GAxFKxT,IAAMa,WA2GhB6S,oBAZS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACHuQ,aAAcxF,YAAmBwF,EAAcvQ,MAIxC8K,CAA6CE,aAAWqF,K,qBC7JjEpF,GAAYC,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFnE,gBAAiB,UACjBoE,SAAU,WACV9B,OAAQ,GACR+B,MAAO,GACP,UAAW,CACPrE,gBAAiB,eAKXiE,CAAsBK,MAElC2F,G,4MAGF7Y,MAAQ,CACJ8Y,kBAAkB,EAClBzF,UAAW,EACXD,YAAY,G,kEAIZhU,KAAKkU,QAAQC,cAAa,GAEtBnU,KAAKC,MAAMoB,MAAMH,QACjBlB,KAAKC,MAAM6Y,aAAapD,SAAS1V,KAAKC,MAAMU,KAAKoK,SAAU/K,KAAKC,MAAMU,KAAKK,Y,iCAK5EhB,KAAKY,MAAMqT,UAAYjU,KAAK8X,WAAWzD,eACnCrU,KAAKY,MAAMoT,YACVhU,KAAKiS,SAAS,CAAC+B,YAAY,IAE3BhU,KAAKY,MAAMoT,YACXhU,KAAKiS,SAAS,CAAC+B,YAAY,IAGnChU,KAAKiS,SAAS,CAACgC,UAAWjU,KAAK8X,WAAWzD,mB,4CAGxBC,EAAWC,GAC7B,OAAGA,EAAUN,YAAcjU,KAAKY,MAAMqT,Y,6CAQtCjU,KAAKkU,QAAQC,cAAa,K,+BAGpB,IAAD,OACL,OACI,oCACI,yBAAKrU,UAAU,qCAAqCC,MAAO,CAACyU,SAAU,WAClE,wBAAI1U,UAAU,iBAAd,SAEA,kBAAC,aAAD,CACI2U,IAAK,SAACA,GAAS,EAAKqD,WAAarD,GACjCC,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV8U,SAAU,WAAO,EAAKA,YACtB7U,MAAO,CAACuP,OAAQ,qBAChBuF,UAAQ,GAEP7U,KAAKC,MAAMoB,MAAMJ,YAAc,kBAAC8W,GAAA,EAAD,CAAkBhY,MAAO,CACrDO,MAAO,UACPsT,SAAU,WACVrC,KAAM,EACNsC,MAAO,EACPqB,OAAQ,OACR1D,IAAK,sBAERxR,KAAKC,MAAMoB,MAAMA,MAAMC,KAAI,SAACC,EAAMmO,GAC/B,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAOnO,KAAMA,SAKtCvB,KAAKC,MAAMoB,MAAMJ,aAAejB,KAAKC,MAAMoB,MAAMD,UAAYpB,KAAKC,MAAMoB,MAAMA,MAAMkE,QAAU,yBAAKzF,UAAU,cAC3G,kBAAC,IAAD,CAAUC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAE7E,wEAGFnV,KAAKC,MAAMoB,MAAMJ,YAAcjB,KAAKC,MAAMoB,MAAMD,SAAW,yBAAKtB,UAAU,cACxE,kBAAC,KAAD,CAAaC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAEhF,gIAEA,4BAAQ3C,QAAS,WAAO,EAAKvS,MAAM6Y,aAAapD,SAAS,EAAKzV,MAAMU,KAAKoK,SAAU,EAAK9K,MAAMU,KAAKK,WAAYlB,UAAU,cAAcgB,KAAK,SAASf,MAAO,CAACsP,MAAO,gBAApK,UAGJ,kBAAC+F,GAAA,EAAD,CAAS3T,MAAM,cAAc3B,UAAS,2BAAsBE,KAAKY,MAAMoT,WAAa,SAAW,IAAMqB,UAAU,OAC3G,kBAAC,GAAD,CAAW/U,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,WAC9D,EAAKvS,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,mBAGZ,kBAAC,IAAD,c,GA3FR7V,IAAMa,WAApBiZ,GACKhE,YAAc/V,EAgHV2T,oBAbS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BkH,GACxB,MAAO,CACHuQ,aAAcxF,YAAmBwF,EAAcvQ,MAIxC8K,CAA6CE,aAAWkG,KCjJ1DE,GAAmB,SAAC5O,GAAD,OAAc,SAACxC,GAC3CiD,MAAM,GAAD,OAAIb,GAAJ,6BAAuC,CACxCc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,MAGhCpC,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAACvE,GACHmE,EAAS,CACLzH,KzBkDqB,oByBjDrBC,QAASqD,SAKRwV,GAAmB,SAAC1N,EAAInB,GAAL,OAAkB,SAACxC,GAC/CA,EAAS,CACLzH,KzB4C0B,qByB3C1BC,QAASmL,IAGbV,MAAM,GAAD,OAAIb,GAAJ,0BAAoC,CACrCc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,IAE7Bc,KAAMC,KAAKC,UAAU,CACjBG,KACAgC,SAAUhG,GAAiBmE,oBCrBjCwN,G,4MACFjZ,MAAQ,CACJ8R,SAAU/N,EAAc,EAAG,M,uDAGrB,IAAD,OACL,OACI,kBAACyK,GAAA,EAAD,CAAQtP,UAAS,cAAiB0S,QAAS,WACnC,EAAKvS,MAAMoE,aAAa1B,QACxB,EAAK1C,MAAM6Z,qBAAqBF,iBAAiB,EAAK3Z,MAAMoE,aAAa7C,IAAK,EAAKvB,MAAMU,KAAKoK,UAE9D,WAAjC,EAAK9K,MAAMoE,aAAavD,MACvB,EAAKb,MAAM0S,QAAQ/E,KAAnB,iBAAkC,EAAK3N,MAAMoE,aAAa9C,KAAKC,MAC/B,WAAjC,EAAKvB,MAAMoE,aAAavD,MAAsD,YAAjC,EAAKb,MAAMoE,aAAavD,MACpE,EAAKb,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAO,SAAD,OAAW,EAAKvV,MAAMoE,aAAa1D,KAAKa,SAGtD,kBAAC,EAAD,CAAQnB,OAAQL,KAAKC,MAAMoE,aAAavD,KAAMf,MAAO,CAACsP,MAAO,GAAIC,OAAQ,GAAI/O,SAAU,GAAIgP,WAAY,IAAKC,gBAAgB,OAAD,OAASxP,KAAKC,MAAMoE,aAAa1D,KAAKL,MAAtC,MAAiDJ,KAAMF,KAAKC,MAAMoE,aAAa1D,KAAKT,KAAK0P,MAAMH,OAAO,GAAKzP,KAAKC,MAAMoE,aAAa1D,KAAKT,KAAKkM,KAAKqD,OAAO,KAEpR,6BACI,uBAAG3P,UAAU,aAAb,UAA6BE,KAAKC,MAAMoE,aAAa1D,KAAKT,KAAK0P,MAA/D,YAAwE5P,KAAKC,MAAMoE,aAAa1D,KAAKT,KAAKkM,OAExE,WAAjCpM,KAAKC,MAAMoE,aAAavD,MAAqB,uBAAGhB,UAAU,gBAAb,8BAAyD,0BAAMC,MAAO,CAACO,MAAO,YAAaN,KAAKC,MAAMoE,aAAa9C,KAAKE,QACpI,WAAjCzB,KAAKC,MAAMoE,aAAavD,MAAqB,uBAAGhB,UAAU,gBAAb,8BACZ,YAAjCE,KAAKC,MAAMoE,aAAavD,MAAsB,uBAAGhB,UAAU,gBAAb,4BAEnD,yBAAKA,UAAU,eACX,0BAAMA,UAAU,WAAWuQ,GAAgBrQ,KAAKC,MAAMoE,aAAaX,YACnE,kBAAC,sBAAD,CACIsP,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MAClBlT,KAAKC,MAAMoE,aAAa1B,QAAU,0BAAM5C,MAAO,CAACga,WAAY,UAAUhD,SAAU,GAAGzH,OAAQ,GAAI6D,UAAW,GAAIrT,UAAU,iC,GAjCvHH,IAAMa,WAqDtB6S,oBAZS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACHuR,qBAAsBxG,YAAmBwG,EAAsBvR,MAIxD8K,CAA6CE,aAAWsG,KC3DjEG,G,kLAIEha,KAAKkU,QAAQC,cAAa,GAEtBnU,KAAKC,MAAMmE,cAAclD,QACzBlB,KAAKC,MAAM6Z,qBAAqBH,iBAAiB3Z,KAAKC,MAAMU,KAAKoK,Y,6CAKrE/K,KAAKkU,QAAQC,cAAa,K,+BAGpB,IAAD,OACL,OACI,oCACI,yBAAKrU,UAAU,sCACX,wBAAIA,UAAU,iBAAd,iBAEA,kBAAC,aAAD,CACI2U,IAAK,SAACA,GAAS,EAAKqD,WAAarD,GACjCC,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACVC,MAAO,CAACuP,OAAQ,qBAChBuF,UAAQ,GAEP7U,KAAKC,MAAMmE,cAAcnD,YAAc,kBAAC8W,GAAA,EAAD,CAAkBhY,MAAO,CAC7DO,MAAO,UACPsT,SAAU,WACVrC,KAAM,EACNsC,MAAO,EACPqB,OAAQ,OACR1D,IAAK,sBAERxR,KAAKC,MAAMmE,cAAcA,cAAc9C,KAAI,SAAC+C,EAAcqL,GACvD,OACI,kBAAC,GAAD,CAAkBC,IAAKD,EAAOrL,aAAcA,SAKtDrE,KAAKC,MAAMmE,cAAcnD,aAAcjB,KAAKC,MAAMmE,cAAcA,cAAcmB,QAAU,yBAAKzF,UAAU,cACrG,kBAAC,IAAD,CAAuBC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAE1F,yE,GA/CIxV,IAAMa,WAA5BwZ,GACKvE,YAAc/V,EAmEV2T,oBAbS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZyD,cAAexD,EAAMwD,kBAI7B,SAA4BmE,GACxB,MAAO,CACHuR,qBAAsBxG,YAAmBwG,EAAsBvR,MAIxD8K,CAA6CE,aAAWyG,KCvE1DC,GAAY,SAACtZ,EAAMqC,EAASE,EAAagX,EAAqBnP,GAAlD,OAA+D,SAACxC,GACrF5H,EAAKoK,SAAWA,EAEhBxC,EAAS,CACLzH,K5BbkB,a4BclBC,QAASJ,IAGb,IAAK,IAAI2E,EAAI,EAAGA,EAAItC,EAAQuC,OAAQD,IAChCtC,EAAQsC,GAAG3E,KAAOqC,EAAQsC,GAAGrD,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ8G,EAAM6C,WAAWxK,KAAKa,OAE/EwB,EAAQsC,GAAG3E,OACXqC,EAAQsC,GAAG3E,KAAOqC,EAAQsC,GAAGrD,MAAM,IAEvCe,EAAQsC,GAAGxB,QAAS,EACpBd,EAAQsC,GAAGpE,QAAS,EACpB8B,EAAQsC,GAAGxD,WAAY,EAEpBkB,EAAQsC,GAAGlC,cACVJ,EAAQsC,GAAGlC,YAAYtB,WAAY,EACnCkB,EAAQsC,GAAGlC,YAAYhC,SAAU,GAGlC4B,EAAQsC,GAAGlC,aAAeJ,EAAQsC,GAAGlC,YAAYzC,KAAKa,MAAQ8G,EAAM6C,WAAWxK,KAAKa,MACnFwB,EAAQsC,GAAGjC,OAAS,GAG5BkF,EAAS,CACLzH,K5BDmB,c4BEnBC,QAAS,CAACiC,UAASE,iBAGvBqF,EAAS,CACLzH,K5B6BiC,4B4B5BjCC,QAASmZ,MAIJC,GAAa,kBAAM,SAAC5R,GAC7BA,EAAS,CACLzH,K5BhDmB,kB4BoDdsZ,GAAiB,SAAC3Q,GAAD,OAAU,SAAClB,GACrCA,EAAS,CACLzH,K5BrD6B,wB4BsD7BC,QAAS0I,MC5CX4Q,G,kLAIEra,KAAKkU,QAAQC,cAAa,K,6CAI1BnU,KAAKkU,QAAQC,cAAa,K,qCAGf1K,GACXzJ,KAAKC,MAAMqa,YAAYF,eAAe3Q,GAEtCzJ,KAAKC,MAAM0S,QAAQ/E,KAAK,KAExB5N,KAAKC,MAAM6Y,aAAapD,SAAS1V,KAAKC,MAAMU,KAAKoK,SAAUtB,GAE3DvB,GAAiBoE,SAAS7C,GAE1B+B,MAAM,GAAD,OAAIb,GAAJ,8BAAwC,CACzCc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,mBAChBE,cAAc,UAAD,OAAY5L,KAAKC,MAAMU,KAAKoK,WAE7Cc,KAAMC,KAAKC,UAAU,CACjBtC,a,+BAKF,IAAD,OACL,OACI,oCACI,yBAAK3J,UAAU,sCACX,wBAAIA,UAAU,iBAAd,YAEA,0BAAMC,MAAO,CAACO,MAAoC,QAA7BN,KAAKC,MAAMU,KAAKK,SAAqB,MAAQ,QAASwR,QAAS,WAChF,EAAK4H,eAAe,SADxB,WAGA,0BAAMra,MAAO,CAACO,MAAoC,QAA7BN,KAAKC,MAAMU,KAAKK,SAAqB,MAAQ,QAASwR,QAAS,WAChF,EAAK4H,eAAe,SADxB,iB,GA1CIza,IAAMa,WAAxB6Z,GACK5E,YAAc/V,EA+DV2T,oBAbS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+R,YAAahH,YAAmBgH,EAAa/R,GAC7CuQ,aAAcxF,YAAmBwF,EAAcvQ,MAIxC8K,CAA6CE,aAAW8G,KC7DjEE,G,4MACF3Z,MAAQ,CACJ4Z,UAAW,a,uDAGL,IAAD,OACL,OAAOxa,KAAKC,MAAMwa,MACd,oCACI,yBAAK3a,UAAU,0CACX,4BACI,4BAAI,kBAAC,EAAD,CAAQC,MAAO,CAACsP,MAAO,GAAIC,OAAQ,GAAI/O,SAAU,GAAIgP,WAAY,IAAKC,gBAAgB,OAAD,OAASxP,KAAKC,MAAMU,KAAKL,MAAzB,MAAoCJ,KAAMF,KAAKC,MAAMU,KAAKT,KAAK0P,MAAMH,OAAO,GAAKzP,KAAKC,MAAMU,KAAKT,KAAKkM,KAAKqD,OAAO,MAC3M,wBAAI1P,MAAO,CAAC6T,SAAU,YAAa9T,UAAS,UAA8B,aAAzBE,KAAKY,MAAM4Z,UAA2B,SAAW,IAAMhI,QAAS,WAAO,EAAKP,SAAS,CAACuI,UAAW,eAC9I,kBAAC,IAAD,CAAuBza,MAAO,CAACO,MAAO,eACnCN,KAAKC,MAAM+C,QAAQE,aAAe,0BACjCpD,UAAU,wBACVC,MAAO,CACHyR,IAAK,GACLqC,MAAO,MACPvB,UAAW,kBACX9C,gBAAiB,YAEvBxP,KAAKC,MAAM+C,QAAQE,cAEzB,wBAAIpD,UAAS,UAA8B,UAAzBE,KAAKY,MAAM4Z,UAAwB,SAAW,IAAMhI,QAAS,WAAO,EAAKP,SAAS,CAACuI,UAAW,YAAY,kBAAC,IAAD,CAAUza,MAAO,CAACO,MAAO,cACrJ,wBAAIP,MAAO,CAAC6T,SAAU,YAAa9T,UAAS,UAA8B,kBAAzBE,KAAKY,MAAM4Z,UAAgC,SAAW,IAAMhI,QAAS,WAAO,EAAKP,SAAS,CAACuI,UAAW,oBACnJ,kBAAC,IAAD,CAAuBza,MAAO,CAACO,MAAO,eACnCN,KAAKC,MAAMmE,cAAcf,QAAU,0BAClCvD,UAAU,wBACVC,MAAO,CACHyR,IAAK,GACLqC,MAAO,MACPvB,UAAW,kBACX9C,gBAAiB,YAEvBxP,KAAKC,MAAMmE,cAAcf,SAE/B,wBAAIvD,UAAS,UAA8B,cAAzBE,KAAKY,MAAM4Z,UAA4B,SAAW,IAAMhI,QAAS,WAAO,EAAKP,SAAS,CAACuI,UAAW,gBAAgB,kBAAC,IAAD,CAAcza,MAAO,CAACO,MAAO,gBAI/I,aAAzBN,KAAKY,MAAM4Z,WAA4B,kBAAC,GAAD,MACd,UAAzBxa,KAAKY,MAAM4Z,WAAyB,kBAAC,GAAD,MACX,kBAAzBxa,KAAKY,MAAM4Z,WAAiC,kBAAC,GAAD,MACnB,cAAzBxa,KAAKY,MAAM4Z,WAA6B,kBAAC,GAAD,W,GA3C/B7a,IAAMa,WAyDjB6S,gBARS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZqC,QAASpC,EAAMoC,QACfoB,cAAexD,EAAMwD,iBAIdiP,CAAyBkH,I,oBCxDlCG,I,mNACF9Z,MAAQ,CACJ+Z,MAAO,GACPC,SAAU,GACV5Y,OAAO,EACP4T,OAAQ,GACR3U,YAAY,G,uDAGP+G,GAAI,IAAD,OACRA,EAAE8K,iBAEC9S,KAAKY,MAAM+Z,OAAS3a,KAAKY,MAAMga,WAC9B5a,KAAKiS,SAAS,CAAChR,YAAY,IAE3BuK,MAAM,GAAD,OAAIb,GAAJ,eAAyB,CAC1Bc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBG,KAAMC,KAAKC,UAAU,CACjB4O,MAAO3a,KAAKY,MAAM+Z,MAClBC,SAAU5a,KAAKY,MAAMga,aAG5BjS,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAkS,GACCA,EAAK7Y,MACJ,EAAKiQ,SAAS,CAACjQ,OAAO,EAAM4T,OAAQiF,EAAKjF,UAErB,EAAK3V,MAAjB6a,QACAC,IAAI,WAAYF,EAAKG,MAAO,CAAE7V,KAAM,MAE5C,EAAKlF,MAAMqa,YAAYL,UAAUY,EAAKla,KAAMka,EAAK7X,QAAS6X,EAAK3X,YAAa2X,EAAKX,oBAAqBW,EAAKG,OAE3G9S,GAAiB4C,KAAK+P,EAAKG,QAG/B,EAAK/I,SAAS,CAAChR,YAAY,U,+BAK7B,IAAD,OACL,OACI,yBAAKnB,UAAU,cACX,wBAAIA,UAAU,QACV,0BAAMC,MAAO,CAACO,MAAO,YAArB,QACA,0BAAMP,MAAO,CAACO,MAAO,YAArB,SAGJ,0BAAM4Y,SAAU,SAAClR,GAAO,EAAKkR,SAASlR,IAAKlI,UAAU,QACjD,2BAAO0X,MAAOxX,KAAKY,MAAM+Z,MAAOhD,SAAU,SAAC3P,GAAO,EAAKiK,SAAS,CAAC0I,MAAO3S,EAAEuP,OAAOC,SAAU1X,UAAU,cAAcgB,KAAK,OAAOZ,KAAK,QAAQ2X,YAAY,WACvJ7X,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,UAAhBA,EAAM3B,UAAsB,0BAAM/V,UAAU,qBACxEE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,UAAhBA,EAAM3B,SAAmBC,KAG9D,2BAAO0B,MAAOxX,KAAKY,MAAMga,SAAUjD,SAAU,SAAC3P,GAAO,EAAKiK,SAAS,CAAC2I,SAAU5S,EAAEuP,OAAOC,SAAU1X,UAAU,cAAcgB,KAAK,WAAWZ,KAAK,WAAW2X,YAAY,yCACpK7X,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,aAAhBA,EAAM3B,UAAyB,0BAAM/V,UAAU,qBAC3EE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,aAAhBA,EAAM3B,SAAsBC,KAGhE9V,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,QAAhBA,EAAM3B,UAAoB,0BAAM9V,MAAO,CAACoT,UAAW,IAAKrT,UAAU,qBAC9FE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,QAAhBA,EAAM3B,SAAiBC,KAG5D,4BAAQhV,KAAK,SAAShB,UAAU,eAAhC,kCAEA,uBAAGA,UAAU,YAAb,oBAAyC,kBAAC,KAAD,CAAMqP,GAAG,aAAT,kB,GArEzCxP,IAAMa,YAwFX6S,oBAZS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+R,YAAahH,YAAmBgH,EAAa/R,MAItC8K,CAA6C4H,aAAYP,KCxFlEQ,G,4MACFta,MAAQ,CACJua,UAAW,GACXC,SAAU,GACVT,MAAO,GACPC,SAAU,GACV5Y,OAAO,EACP4T,OAAQ,GACR3U,YAAY,G,uDAGP+G,GAAI,IAAD,OACRA,EAAE8K,iBAEC9S,KAAKY,MAAM+Z,OAAS3a,KAAKY,MAAMga,WAC9B5a,KAAKiS,SAAS,CAAChR,YAAY,IAE3BuK,MAAM,GAAD,OAAIb,GAAJ,kBAA4B,CAC7Bc,OAAQ,OACRC,QAAS,CACL,OAAU,mBACV,eAAgB,oBAEpBG,KAAMC,KAAKC,UAAU,CACjBoP,UAAWnb,KAAKY,MAAMua,UACtBC,SAAUpb,KAAKY,MAAMwa,SACrBT,MAAO3a,KAAKY,MAAM+Z,MAClBC,SAAU5a,KAAKY,MAAMga,aAG5BjS,MAAK,SAAAqD,GAAQ,OAAIA,EAASC,UAC1BtD,MAAK,SAAAkS,GACCA,EAAK7Y,MACJ,EAAKiQ,SAAS,CAACjQ,OAAO,EAAM4T,OAAQiF,EAAKjF,UAErB,EAAK3V,MAAjB6a,QACAC,IAAI,WAAYF,EAAKG,MAAO,CAAE7V,KAAM,MAE5C,EAAKlF,MAAMqa,YAAYL,UAAUY,EAAKla,KAAMka,EAAK7X,QAAS6X,EAAK3X,YAAa2X,EAAKX,oBAAqBW,EAAKG,OAE3G9S,GAAiB4C,KAAK+P,EAAKG,QAG/B,EAAK/I,SAAS,CAAChR,YAAY,U,+BAK7B,IAAD,OACL,OACI,yBAAKnB,UAAU,cACX,wBAAIA,UAAU,QACV,0BAAMC,MAAO,CAACO,MAAO,YAArB,QACA,0BAAMP,MAAO,CAACO,MAAO,YAArB,SAGJ,0BAAM4Y,SAAU,SAAClR,GAAO,EAAKkR,SAASlR,IAAKlI,UAAU,QACjD,2BAAO0X,MAAOxX,KAAKY,MAAMua,UAAWxD,SAAU,SAAC3P,GAAO,EAAKiK,SAAS,CAACkJ,UAAWnT,EAAEuP,OAAOC,SAAU1X,UAAU,cAAcgB,KAAK,OAAOZ,KAAK,YAAY2X,YAAY,eACnK7X,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,cAAhBA,EAAM3B,UAA0B,0BAAM/V,UAAU,qBAC5EE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,cAAhBA,EAAM3B,SAAuBC,KAGlE,2BAAO0B,MAAOxX,KAAKY,MAAMwa,SAAUzD,SAAU,SAAC3P,GAAO,EAAKiK,SAAS,CAACmJ,SAAUpT,EAAEuP,OAAOC,SAAU1X,UAAU,cAAcgB,KAAK,OAAOZ,KAAK,WAAW2X,YAAY,cAChK7X,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,aAAhBA,EAAM3B,UAAyB,0BAAM/V,UAAU,qBAC3EE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,aAAhBA,EAAM3B,SAAsBC,KAGjE,2BAAO0B,MAAOxX,KAAKY,MAAM+Z,MAAOhD,SAAU,SAAC3P,GAAO,EAAKiK,SAAS,CAAC0I,MAAO3S,EAAEuP,OAAOC,SAAU1X,UAAU,cAAcgB,KAAK,OAAOZ,KAAK,QAAQ2X,YAAY,WACvJ7X,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,UAAhBA,EAAM3B,UAAsB,0BAAM/V,UAAU,qBACxEE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,UAAhBA,EAAM3B,SAAmBC,KAG9D,2BAAO0B,MAAOxX,KAAKY,MAAMga,SAAUjD,SAAU,SAAC3P,GAAO,EAAKiK,SAAS,CAAC2I,SAAU5S,EAAEuP,OAAOC,SAAU1X,UAAU,cAAcgB,KAAK,WAAWZ,KAAK,WAAW2X,YAAY,yCACpK7X,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,aAAhBA,EAAM3B,UAAyB,0BAAM/V,UAAU,qBAC3EE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,aAAhBA,EAAM3B,SAAsBC,KAGhE9V,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,QAAhBA,EAAM3B,UAAoB,0BAAM9V,MAAO,CAACoT,UAAW,IAAKrT,UAAU,qBAC9FE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,QAAhBA,EAAM3B,SAAiBC,KAG5D,4BAAQhV,KAAK,SAAShB,UAAU,eAAhC,gHAEA,uBAAGA,UAAU,YAAb,yBAA8C,kBAAC,KAAD,CAAMqP,GAAG,UAAT,iB,GAnF3CxP,IAAMa,WAsGd6S,oBAZS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+R,YAAahH,YAAmBgH,EAAa/R,MAItC8K,CAA6C4H,aAAYC,K,8KC/GpEG,IAAwB,EA2JbC,G,4MAxJX1a,MAAQ,CACJ2a,SAAU,QACVlS,OAAO,EACPqJ,SAAU/N,EAAc,EAAG,M,kEAGV,IAAD,SACZ6W,EAAYhW,SAASiW,kBAAkBzb,KAAKC,MAAMyb,KADtC,eAGCF,GAHD,IAGhB,IAAI,EAAJ,qBAA4B,CAAC,IAArBnS,EAAoB,QACxBA,EAAMsS,OAAS,GACf3b,KAAKiS,SAAS,CAAC5I,UACf,OANY,8BASJ7D,SAASkM,eAAe1R,KAAKY,MAAM8R,UAEzCkJ,iBAAmB,WACrB,EAAKC,iB,oCAKT,SAASC,EAAQC,GACb,OAAQA,EAAI,GAAM,IAAMA,EAAIA,EAGhC,IALU,EAKNP,EAAYhW,SAASiW,kBAAkBzb,KAAKC,MAAMyb,KAElDM,EAAI,EAPE,eASOR,GATP,IASV,IAAI,EAAJ,qBAA4B,CACxBQ,EADwB,QACdT,SACV,OAXM,8BAcVvb,KAAKiS,SAAS,CAACsJ,SAAUO,EAAQG,SAAUD,EAAK,KAAS,IAAMF,EAAQG,SAAUD,EAAK,S,6CAInFX,IACCrb,KAAKkc,YAENlc,KAAKY,MAAMyI,QACVrJ,KAAKY,MAAMyI,MAAM8S,cAAcrc,UAAY,gBAC3CE,KAAKY,MAAMyI,MAAM+S,W,gCAIfpU,GACNA,EAAEqU,kBAEF,IAAIC,EAAa9W,SAAS+W,uBAAuB,0BAEjDvc,KAAKkc,YALI,qBAOSI,GAPT,IAOT,2BAA8B,CAAC,IAAtBjT,EAAqB,QAC1BA,EAAM8S,cAAcrc,UAAY,gBAChCuJ,EAAM+S,SATD,8BAYT,IAZS,EAYLZ,EAAYhW,SAASiW,kBAAkBzb,KAAKC,MAAMyb,KAZ7C,eAcQF,GAdR,IAcT,IAAI,EAAJ,qBAA4B,CAAC,IAArBnS,EAAoB,QACxBA,EAAM8S,cAAcrc,UAAY,uBAChCuJ,EAAMmT,QAhBD,8BAmBTxc,KAAKyc,e,0CAGWzU,GAChBA,EAAEqU,kBAEF,IAHmB,EAGfzI,EAAkC,IAAvB5L,EAAE0U,YAAYC,OAAe3c,KAAK4c,WAAW5K,YACxDjC,EAAO/P,KAAKY,MAAMyI,MAAMkS,SAAW,IAAM3H,EAEzC4H,EAAYhW,SAASiW,kBAAkBzb,KAAKC,MAAMyb,KANnC,eAQFF,GARE,IAQnB,IAAI,EAAJ,qBAA4B,SAClBqB,YAAc9M,GATL,8BAYnB,IAZmB,EAYf+M,EAAYtX,SAASiW,kBAAkBzb,KAAKC,MAAMyb,IAAI,UAZvC,eAcFoB,GAdE,IAcnB,IAAI,EAAJ,qBAA4B,SAClB/c,MAAMsP,MAAS,IAAIrP,KAAKY,MAAMyI,MAAMwT,YAAY7c,KAAKY,MAAMyI,MAAMkS,SAAU,KAflE,iC,mCAmBT,IAAD,OACTF,GAAwB0B,aAAY,WAChC,IADsC,EAClCD,EAAYtX,SAASiW,kBAAkB,EAAKxb,MAAMyb,IAAI,UADpB,eAGrBoB,GAHqB,IAGtC,IAAI,EAAJ,qBAA4B,SAClB/c,MAAMsP,MAAS,IAAI,EAAKzO,MAAMyI,MAAMwT,YAAY,EAAKjc,MAAMyI,MAAMkS,SAAU,KAJ/C,iCAMvC,O,kCAIHyB,cAAc3B,M,wCAGArT,GACd,IADiB,EACb4L,EAAkC,IAAvB5L,EAAE0U,YAAYC,OAAe3c,KAAK4c,WAAW5K,YACxDjC,EAAO/P,KAAKY,MAAMyI,MAAMkS,SAAW,IAAM3H,EAEzCkJ,EAAYtX,SAASiW,kBAAkBzb,KAAKC,MAAMyb,IAAI,UAJzC,eAMAoB,GANA,IAMjB,IAAI,EAAJ,qBAA4B,SAClB/c,MAAMsP,MAAS,IAAIU,EAAK/P,KAAKY,MAAMyI,MAAMkS,SAAU,KAP5C,iC,gCAWXvT,GACHqT,IACCrb,KAAKkc,YAETlU,EAAEqU,kBAEF,IANS,EAMLb,EAAYhW,SAASiW,kBAAkBzb,KAAKC,MAAMyb,KAN7C,eAQQF,GARR,IAQT,IAAI,EAAJ,qBAA4B,CAAC,IAArBnS,EAAoB,QACxBA,EAAM8S,cAAcrc,UAAY,gBAChCuJ,EAAM+S,SAVD,iC,+BAcH,IAAD,OACL,OAAO,yBAAKtc,UAAU,iBAClB,2BAAOA,UAAS,yBAA4BoM,GAAIlM,KAAKY,MAAM8R,SAAUxS,KAAMF,KAAKC,MAAMyb,IAAKA,IAAK1b,KAAKC,MAAMyb,MAC3G,0BAAM5b,UAAU,OAAO0S,QAAS,SAACxK,GAAO,EAAKiV,UAAUjV,KAAK,kBAAC,KAAD,CAAejI,MAAO,CAACO,MAAO,cAC1F,0BAAMR,UAAU,QAAQ0S,QAAS,SAACxK,GAAO,EAAKkV,UAAUlV,KAAK,kBAAC,KAAD,CAAWjI,MAAO,CAACO,MAAO,cACvF,yBAAKR,UAAU,sBACX,uBAAGA,UAAU,uBAAuBE,KAAKC,MAAMkd,UAC/C,uBAAGrd,UAAU,2BAA2BE,KAAKY,MAAM2a,WAGvD,yBAAKzb,UAAU,sBACX2U,IAAK,SAACA,GAAS,EAAKmI,WAAanI,GACjC2I,YAAa,SAACpV,GAAO,EAAKqV,kBAAkBrV,IAC5CsV,aAAc,WAAO,EAAKpB,aAC1BqB,aAAc,WAAO,EAAKd,cAC1BjK,QAAS,SAACxK,GAAO,EAAKwV,oBAAoBxV,KAE1C,0BAAMlI,UAAU,iBAAiB2U,IAAK,SAACA,GAAS,EAAKgJ,MAAQhJ,GAAMvU,KAAMF,KAAKC,MAAMyb,IAAM,iB,GAnJtF/b,IAAMa,W,qBCsBpBkd,GAAqB,SAACC,EAAM7P,EAAM6B,GAOpC,OACI,uBAAGgO,KAAMA,EAAMnL,QAAS,SAACxK,GAAOA,EAAEqU,mBAAoB1M,IAAKA,EAAK4H,OAAO,SAASqG,IAAI,uBACnF9P,IAKH+P,G,4MACFjd,MAAQ,CACJ8R,SAAU/N,EAAc,EAAG,M,uDAGrB,IAAD,OACDmZ,GAAgB,EAChBC,GAAW,EAEf,GAAG/d,KAAKC,MAAMoC,SAASrC,KAAKC,MAAMyP,MAAM,GAAI,CACxC,IAAIsO,EAAQ,IAAIva,KAAKzD,KAAKC,MAAMqC,QAAQoB,WACpCua,EAAQ,IAAIxa,KAAKzD,KAAKC,MAAMoC,SAASrC,KAAKC,MAAMyP,MAAM,GAAGhM,WAGzDsa,EAAMtN,gBAAkBuN,EAAMvN,eAC9BsN,EAAMnN,aAAeoN,EAAMpN,YAC3BmN,EAAMxN,YAAcyN,EAAMzN,YAE1BsN,GAAgB,GAGJ/Y,KAAKmZ,IAAIF,EAAQC,GAAS,KAE3B,IACXF,GAAW,GAInB,IAAII,EACEne,KAAKC,MAAMoC,SAASrC,KAAKC,MAAMyP,MAAM,IACvC1P,KAAKC,MAAMoC,SAASrC,KAAKC,MAAMyP,MAAM,GAAG/O,KAAKa,MAAQxB,KAAKC,MAAMqC,QAAQ3B,KAAKa,MAC5ExB,KAAKC,MAAMoC,SAASrC,KAAKC,MAAMyP,MAAM,IAAOqO,EAGjD,OAAQ,oCACHD,GAAiB,yBAAKhe,UAAU,gBpBjEtC,SAAgBgQ,GACnB,IAAIC,EAAO,IAAItM,KAAKqM,GAEhBS,GAAW,IAAI9M,MAAO+M,UAAYT,EAAKS,UACvCC,GAAY,IAAIhN,MAAOiN,cAAgBX,EAAKW,cAC5CC,EAAOZ,EAAKW,cACZE,EAAQb,EAAKc,WAAW,EACxBC,EAAMf,EAAKS,UAEf,OAAIC,EAAY,EAERE,EAAKP,WAAW,KACbQ,EAAM,GAAM,IAAIA,EAAMR,WAAaQ,EAAMR,YAAY,KACrDU,EAAI,GAAM,IAAIA,EAAIV,WAAaU,EAAIV,aAqBzB,IAAbG,EAAkB,QAEL,IAAbA,GAAkB,cACJ,IAAdE,GAAmBK,EAAM,IArBzB,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YASuCF,EAAM,GoB4BQwN,CAAO,IAAI3a,KAAKzD,KAAKC,MAAMqC,QAAQoB,aAEpF,yBACI5D,UAAS,kBAAaE,KAAKC,MAAMgX,SAAW,WAAa,IACzDzE,QAAS,SAACxK,GACH,EAAK/H,MAAMqC,QAAQR,WAAa,EAAK7B,MAAMqC,QAAQlB,UAGnD,EAAKnB,MAAMgX,SACV,EAAKhX,MAAMoe,SAAS,EAAKpe,MAAMqC,QAAQd,KAEvC,EAAKvB,MAAMqe,SAAS,EAAKre,MAAMqC,WAGvCvC,MAAO,CACHga,WAAY/Z,KAAKC,MAAMse,SAAW,OAAUve,KAAKC,MAAMqC,QAAQR,WAAa9B,KAAKC,MAAMqC,QAAQlB,QAAW,OAAUpB,KAAKC,MAAMqC,QAAQ3B,KAAKa,MAAQxB,KAAKC,MAAMU,KAAKa,KAAQxB,KAAKC,MAAMqC,QAAQK,OAAsB,GAAZ,UACzM6b,OAASxe,KAAKC,MAAMqC,QAAQR,WAAa9B,KAAKC,MAAMqC,QAAQlB,QAAW,UAAY,GACnFuX,QAAS3Y,KAAKC,MAAMse,SAAW,mBAAqB,MAInDJ,GAAWL,KAAmB9d,KAAKC,MAAMse,UAC1C,0BAAM/L,QAAS,SAACxK,GACZA,EAAEqU,kBACF,EAAKpc,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAO,SAAD,OAAW,EAAKvV,MAAMqC,QAAQ3B,KAAKa,SAG7C,kBAAC,EAAD,CACIzB,MAAO,CAACsP,MAAO,GAAIC,OAAQ,GAAI/O,SAAU,GAAIke,WAAY,OAAQlP,WAAY,IAAKC,gBAAgB,OAAD,OAASxP,KAAKC,MAAMqC,QAAQ3B,KAAKL,MAAjC,MACjGJ,KAAMF,KAAKC,MAAMqC,QAAQ3B,KAAKT,KAAK0P,MAAMH,OAAO,GAAGzP,KAAKC,MAAMqC,QAAQ3B,KAAKT,KAAKkM,KAAKqD,OAAO,OAKlG0O,IAAYL,IAAkB9d,KAAKC,MAAMse,UAC3C,yBAAKxe,MAAO,CAACsP,MAAO,OAIrBrP,KAAKC,MAAMqC,QAAQR,YAAc9B,KAAKC,MAAMqC,QAAQlB,SAAYpB,KAAKC,MAAMye,WAAa,0BAAM5e,UAAS,2BAAsBE,KAAKC,MAAMgX,SAAW,SAAW,KACjK,kBAAC,sBAAD,CACIjE,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,KACvBlT,KAAKC,MAAMgX,UAAY,kBAAC,KAAD,CAAWlX,MAAO,CACtCO,MAAO,OACPC,SAAU,GACVqT,SAAU,WACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRoD,OAAQ,YAMhB,yBAAKpV,UAAU,gBAENqe,GAAWL,IACZ,wBAAItL,QAAS,SAACxK,GACVA,EAAEqU,kBACF,EAAKpc,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAO,SAAD,OAAW,EAAKvV,MAAMqC,QAAQ3B,KAAKa,QAE9C1B,UAAU,YAAYC,MAAO,CAACO,MAAON,KAAKC,MAAMqC,QAAQ3B,KAAKa,MAAQxB,KAAKC,MAAMU,KAAKa,IAAM,UAAY,KAL1G,UAMQxB,KAAKC,MAAMqC,QAAQ3B,KAAKT,KAAK0P,MANrC,YAM8C5P,KAAKC,MAAMqC,QAAQ3B,KAAKT,KAAKkM,MAN3E,IAMmF,0BAAMtM,UAAU,WAAW+P,GAAM7P,KAAKC,MAAMqC,QAAQoB,aAI1I1D,KAAKC,MAAMqC,QAAQwL,MAAQ,uBAAGhO,UAAU,gBACrC,kBAAC,KAAD,CAAS4d,mBAAoBA,IACxB1d,KAAKC,MAAMqC,QAAQwL,KAAK6Q,QAAQ,UAAW,IACvCA,QAAQ,SAAU,KAClBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAEjBA,QAAQ,mCAAoC,IAC5CA,QAAQ,oBAAqB,YAKvC3e,KAAKC,MAAMqC,QAAQyL,eAAexI,QAAUvF,KAAKC,MAAM2e,YAAc,GAAK,uBAAG9e,UAAU,gBAAb,+BAChDE,KAAKC,MAAMqC,QAAQyL,eAAexI,OADc,QAI1EvF,KAAKC,MAAMqC,QAAQiL,OAAOhI,QAAU,yBAAKzF,UAAU,kBACjDE,KAAKC,MAAMqC,QAAQiL,OAAOjM,KAAI,SAACud,EAAOnP,EAAOnC,GAC1C,IAAI8B,EACAyP,GAAS,EAWb,OARIzP,EADD9B,EAAOhI,QAAU,GAAuB,IAAlBgI,EAAOhI,QACV,IAAVmK,EAAc,OAEd,MAGTnC,EAAOhI,OAAS,GAAe,IAAVmK,IACpBoP,GAAS,GAEVpP,EAAQ,EACA,KAERoP,EACQ,yBAAKnP,IAAKD,EAAO5P,UAAU,QAAQC,MAAO,CAACsP,UAC9C,yBAAKvP,UAAU,aAAa0S,QAAS,SAACxK,GAClCA,EAAEqU,kBACF,EAAKpc,MAAM8e,WAAWxR,KAEtB,yCAAWA,EAAOhI,OAAO,IACzB,yBAAKyZ,UAAU,QAAQrP,IAAKD,EAAOgM,IAAKmD,EAAM1Z,KAAM8Z,IAAKJ,EAAM3e,SAInE,yBAAKyP,IAAKD,EAAO5P,UAAU,QAAQC,MAAO,CAACsP,UAC/C,yBAAK2P,UAAU,QAAQxM,QAAS,SAACxK,GAC7BA,EAAEqU,kBACF,EAAKpc,MAAM8e,WAAWxR,IACvBmO,IAAKmD,EAAM1Z,KAAM8Z,IAAKJ,EAAM3e,cAKxCF,KAAKC,MAAMqC,QAAQmL,OAAOlI,QAAU,yBAAKzF,UAAU,kBACjDE,KAAKC,MAAMqC,QAAQmL,OAAOnM,KAAI,SAAC4d,EAAOxP,EAAOnC,GAC1C,OAAO,kBAAC,GAAD,CACHoC,IAAKD,EACLyN,SAAU+B,EAAMhf,KAChBwb,IAAKwD,EAAM/Z,aAMpBnF,KAAKC,MAAMqC,QAAQkL,MAAMjI,QAAU,yBAAKzF,UAAU,iBAChDE,KAAKC,MAAMqC,QAAQkL,MAAMlM,KAAI,SAACqM,EAAM+B,EAAOnC,GACxC,OAAO,yBAAKzN,UAAU,eAAe6P,IAAKD,EAAO8C,QAAS,SAACxK,GACvDA,EAAEqU,kBACFpW,OAAOkZ,KAAKxR,EAAKxI,KAAM,WAEvB,kBAAC,KAAD,CAA6BrF,UAAU,YAAYC,MAAO,CAACO,MAAO,aAClE,yBAAKR,UAAU,qBACX,uBAAGA,UAAU,qBAAqB6N,EAAKzN,MACvC,uBAAGJ,UAAU,qBAAqB6N,EAAK2H,KAAO,KAAO3H,EAAK2H,KAAO,KAAM8J,QAAQ,GAAK,MAAQra,KAAKqM,KAAKzD,EAAK2H,MAAQ,QAEvH,kBAAC,KAAD,CAAYxV,UAAU,gBAAgBC,MAAO,CAACO,MAAO,oBAM9DN,KAAKC,MAAMqC,QAAQyL,eAAexI,QAAUvF,KAAKC,MAAM2e,YAAc,GAAK,yBAAK9e,UAAU,kBACvFE,KAAKC,MAAMqC,QAAQyL,eAAezM,KAAI,SAACgB,EAASoN,EAAOrN,GACpD,OAAO,kBAAC,GAAD,CAAkBuc,YAAa,EAAK3e,MAAM2e,YAAY,EAAGL,UAAU,EAAMD,SAAU,aAAUS,WAAY,SAACM,GAAkB,EAAKpf,MAAM8e,WAAWM,IAAgB1P,IAAKD,EAAOpN,QAASA,EAASD,SAAUA,EAAUqN,MAAOA,UAK5O1P,KAAKC,MAAMse,UAAY,yBAAKze,UAAU,kBACpC,kBAAC,sBAAD,CACIkT,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MACtBlT,KAAKC,MAAMye,YAAc1e,KAAKC,MAAMqC,QAAQR,YAAc9B,KAAKC,MAAMqC,QAAQlB,SAAWpB,KAAKC,MAAMqC,QAAQE,QAAU,kBAAC,KAAD,CAAkBzC,MAAO,CAACO,MAAO,gBAG9JN,KAAKC,MAAMse,UAAY,yBAAKze,UAAU,kBACpC,kBAAC,sBAAD,CACIkT,eAAe,4BACfC,uBAAwB,IACxBC,uBAAwB,MAClBlT,KAAKC,MAAMye,WAAa1e,KAAKC,MAAMqC,QAAQ3B,KAAKa,MAAQxB,KAAKC,MAAMU,KAAKa,KAAOxB,KAAKC,MAAMqC,QAAQR,WAAa,kBAAC,KAAD,CAAkB/B,MAAO,CAACO,MAAO,cAEhJN,KAAKC,MAAMye,WAAa1e,KAAKC,MAAMqC,QAAQ3B,KAAKa,MAAQxB,KAAKC,MAAMU,KAAKa,MAAQxB,KAAKC,MAAMqC,QAAQR,YAAc9B,KAAKC,MAAMqC,QAAQlB,UAAYpB,KAAKC,MAAMqC,QAAQK,QAAU,kBAAC,KAAD,CAAU5C,MAAO,CAACO,MAAO,cACtMN,KAAKC,MAAMye,WAAa1e,KAAKC,MAAMqC,QAAQ3B,KAAKa,MAAQxB,KAAKC,MAAMU,KAAKa,MAAOxB,KAAKC,MAAMqC,QAAQR,YAAc9B,KAAKC,MAAMqC,QAAQlB,SAAWpB,KAAKC,MAAMqC,QAAQK,QAAU,kBAAC,KAAD,CAAa5C,MAAO,CAACO,MAAO,cACvMN,KAAKC,MAAMye,WAAa1e,KAAKC,MAAMqC,QAAQ3B,KAAKa,MAAQxB,KAAKC,MAAMU,KAAKa,MAAOxB,KAAKC,MAAMqC,QAAQR,WAAa9B,KAAKC,MAAMqC,QAAQlB,SAAU,oCAC9I,kBAAC,GAAD,CAAYmR,QAAS,CACjB,CAACzE,KAAM,QAASjN,OAAQ,WACpB,EAAKZ,MAAMwO,iBAAiB,EAAKxO,MAAMqC,WAE3C,CAACwL,KAAM,SAAUjN,OAAQ,WACrB,EAAKZ,MAAM6O,mBAAmB,EAAK7O,MAAMqC,QAAQd,QAEtDmQ,KAAM,yBAAyB3R,KAAKY,MAAM8R,WAC7C,kBAAC,KAAD,CAAkB5S,UAAU,QAAQoM,GAAI,yBAAyBlM,KAAKY,MAAM8R,SAAU3S,MAAO,CAACO,MAAO,sB,GA9N3GX,IAAM2f,eAoPbjM,oBAbS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BkH,GACxB,MAAO,CACH+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAWsK,K,0CCnRjE/X,KAA8BN,SAASO,aAGvCC,IAAUF,MAAUG,OAAOC,WAE7BqZ,IAAiB,EAgBf/L,GAAYC,cAdA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFnE,gBAAiB,OACjBoE,SAAU,WACVtT,MAAO,UACPwR,OAAQ,GACR+B,MAAO,GACPsE,OAAQ,EACR,UAAW,CACP3I,gBAAiB,YAKXiE,CAAsBK,MAElC0L,G,4MACF5e,MAAQ,CACJ6e,iBAAiB,EACjBC,YAAY,EACZzL,UAAW,G,+DAIRjU,KAAKoU,gBACDpO,IAAUF,GACT9F,KAAKoU,cAAcuL,KAAK1L,UAAY,IAEpCjU,KAAKoU,cAAcuL,KAAKC,OAAO,CAC3BpO,IAAK,IACLD,KAAM,EACNsO,SAAU,c,6CAOtB5Z,OAAOoM,oBAAoB,OAAQrS,KAAK8f,SAAS1N,KAAKpS,OACtDiG,OAAOoM,oBAAoB,YAAarS,KAAK+f,UAAU3N,KAAKpS,S,kCAGnD,IACLsR,EADI,OAGJA,IADDtR,KAAKoU,eAAiBpU,KAAKoU,cAAcC,eAAiBrU,KAAKoU,cAAc4L,kBAAoBhgB,KAAKoU,cAAc6L,oBAMnHjgB,KAAKY,MAAM8e,YAAcpO,GAAYtR,KAAKC,MAAMigB,OAAO3a,SACpDga,IACC9H,aAAa8H,IAEjBvf,KAAKC,MAAMuO,eACXxO,KAAKiS,SAAS,CAACyN,YAAY,IAE3BH,GAAiBnU,YAAW,WACxB,EAAK6G,SAAS,CAACyN,YAAY,MAC5B,Q,iCAKP1f,KAAKiS,SAAS,CAACyN,YAAY,M,0CAI3BzZ,OAAOiM,iBAAiB,OAAQlS,KAAK8f,SAAS1N,KAAKpS,OACnDiG,OAAOiM,iBAAiB,YAAalS,KAAK+f,UAAU3N,KAAKpS,OAEtDA,KAAKoU,gBACJpU,KAAKoU,cAAcuL,KAAK1L,UAAY,O,yCAIzBkM,GAEXA,EAAU9d,SAASkD,OAASvF,KAAKC,MAAMoC,SAASkD,QAChDuG,KAAKC,UAAUoU,EAAU9d,SAAS,MAAQyJ,KAAKC,UAAU/L,KAAKC,MAAMoC,SAAS,MAC3ErC,KAAKoU,cAAc6L,kBAAoBjgB,KAAKoU,cAAc4L,kBAAoBhgB,KAAKoU,cAAcC,eAAkBrU,KAAKoU,cAAc4L,kBAAkB,GAC1JG,EAAU9d,SAAS8d,EAAU9d,SAASkD,OAAO,GAAG5E,KAAKa,MAAQxB,KAAKC,MAAMU,KAAKa,OAE1ExB,KAAKY,MAAM8e,YACV1f,KAAKC,MAAMuO,eAGfxO,KAAKogB,iBAEFpgB,KAAKY,MAAM6e,iBACVzf,KAAKiS,SAAS,CAACwN,iBAAiB,KAGrC3T,KAAKC,UAAUoU,EAAU9d,SAAS,MAAQyJ,KAAKC,UAAU/L,KAAKC,MAAMoC,SAAS,KAC5ErC,KAAKoU,cAAcH,UAAUjU,KAAKoU,cAAc6L,kBAAoBjgB,KAAKY,MAAMqT,a,4CAIjEK,EAAWC,GAC7B,OAAGA,EAAUN,YAAcjU,KAAKY,MAAMqT,Y,iCAQtCjU,KAAKiS,SAAS,CAACgC,UAAWjU,KAAKoU,cAAc6L,kBAAoBjgB,KAAKoU,cAAcC,iBACjFrU,KAAKoU,cAAcC,eAAiBrU,KAAKoU,cAAc4L,kBAAoBhgB,KAAKoU,cAAc6L,kBAAoB,IAC7GjgB,KAAKY,MAAM6e,iBACXzf,KAAKiS,SAAS,CAACwN,iBAAiB,IAEjCzf,KAAKY,MAAM6e,kBACVzf,KAAKiS,SAAS,CAACwN,iBAAiB,IAC3Bzf,KAAKC,MAAMigB,OAAO3a,QACnBvF,KAAKC,MAAMuO,gBAKA,SAApBxO,KAAKC,MAAMa,MAAmBd,KAAKC,MAAMoB,MAAMF,WAAWU,SAAW7B,KAAKoU,cAAcC,eAAiB,KACxGrU,KAAKC,MAAM8O,eAGQ,WAApB/O,KAAKC,MAAMa,MAAqBd,KAAKC,MAAMmC,OAAOP,SAAW7B,KAAKoU,cAAcC,eAAiB,KAChGrU,KAAKC,MAAM8O,iB,mCAOf,OAAiD,IAA9C/O,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO2D,OAC3BvF,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO,GAAG1B,KAAK0P,MAGL,IAA9C5P,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO2D,OAC5B,GAAN,OAAUvF,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO,GAAG1B,KAAK0P,MAArD,mBAAgE5P,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO,GAAG1B,KAAK0P,OAGzG,GAAN,OAAU5P,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO,GAAG1B,KAAK0P,MAArD,mBAAgE5P,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO2D,OAAO,K,+BAGpG,IAAD,OACL,OACI,yBAAKzF,UAAU,eACX,kBAAC,aAAD,CACI8U,SAAU,WAAO,EAAKA,YACtBH,IAAK,SAACA,GAAS,EAAKL,cAAgBK,GACpCC,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,gBACV+U,UAAQ,IAEe,SAApB7U,KAAKC,MAAMa,MAAmBd,KAAKC,MAAMoB,MAAMF,WAAWW,WAAmC,WAApB9B,KAAKC,MAAMa,MAAqBd,KAAKC,MAAMmC,OAAON,YAAe,yBAAKhC,UAAU,kBACxJ,kBAACiY,GAAA,EAAD,CAAkBhY,MAAO,CACrBO,MAAO,cAGdN,KAAKC,MAAMoC,SAASf,KAAI,SAACgB,EAASoN,EAAOrN,GACtC,OAAO,kBAAC,GAAD,CACHuc,YAAa,EACbL,UAAU,EACVQ,WAAY,SAACM,GAAkB,EAAKpf,MAAM8e,WAAWM,IACrDpI,SAAU,EAAKhX,MAAM8N,eAAetL,MAAK,SAAAC,GAAC,OAAIA,EAAElB,MAAQc,EAAQd,OAChEkd,YAAa,EAAKze,MAAM8N,eAAexI,OACvCoK,IAAKD,EACLZ,mBAAoB,SAACtN,GAAS,EAAKvB,MAAM6O,mBAAmBtN,IAC5DiN,iBAAkB,SAACnM,GAAa,EAAKrC,MAAMwO,iBAAiBnM,IAC5DoN,MAAOA,EACPpN,QAASA,EACTD,SAAUA,EACVic,SAAU,SAAChc,GAAa,EAAKrC,MAAMqe,SAAShc,IAC5C+b,SAAU,SAACnS,GAAQ,EAAKjM,MAAMoe,SAASnS,SAI1B,SAApBlM,KAAKC,MAAMa,MAAmB,yBAAKhB,UAAU,mBACvCE,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO2D,QAAU,uBAAGzF,UAAU,UAAUE,KAAKqgB,aAA5B,YAC9CrgB,KAAKC,MAAMoB,MAAMF,WAAWS,OAAO2D,QAAU,uBAAGxF,MAAO,CAACuP,OAAQ,OAGjD,WAApBtP,KAAKC,MAAMa,MAAqB,yBAAKhB,UAAU,iBAC3CE,KAAKC,MAAM6D,QAAU,uBAAGhE,UAAU,UAAUE,KAAKC,MAAMqgB,SAAlC,YACpBtgB,KAAKC,MAAM6D,QAAU,uBAAG/D,MAAO,CAACuP,OAAQ,QAIlD,kBAAC,GAAD,CAAWxP,UAAS,2BAAsBE,KAAKY,MAAM6e,gBAAkB,SAAW,IAAMnf,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,WAAO,EAAK4N,qBACpJpgB,KAAKC,MAAMigB,OAAO3a,QAAU,0BAAMzF,UAAU,yBAAyBE,KAAKC,MAAMigB,OAAO3a,QAC1F,kBAAC,KAAD,CAAgBxF,MAAO,CAACO,MAAO,cAGd,WAApBN,KAAKC,MAAMa,MAAqBd,KAAKC,MAAMsgB,SAAW,kBAACxI,GAAA,EAAD,CAAkBhY,MAAO,CAC5EO,MAAO,UACPsT,SAAU,WACVrC,KAAM,EACNsC,MAAO,EACPqB,OAAQ,OACR1D,IAAK,uBAGNxR,KAAKC,MAAMoC,SAASkD,SAAWvF,KAAKC,MAAMsgB,SAAY,yBAAKzgB,UAAU,cACpE,kBAAC,KAAD,CAAUC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAE7E,0DAAgCnV,KAAKC,MAAMkP,U,GA7L1CxP,IAAMa,WA2MZ6S,gBAPS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,SAINgS,CAAyBmM,I,4DCpOlC9B,GAAqB,SAACC,EAAM7P,EAAM6B,GAAb,OACvB,uBAAGgO,KAAMA,EAAMnL,QAAS,SAACxK,GAAOA,EAAEqU,mBAAoB1M,IAAKA,EAAK4H,OAAO,SAASqG,IAAI,uBACjF9P,IA4EQ0S,G,uKAvED,IAAD,OACL,OACI,yBAAK1gB,UAAU,uBACRE,KAAKC,MAAM8N,eAAexI,QAAU,yBAAKzF,UAAU,sBAClD,kBAACsP,GAAA,EAAD,CAAQtP,UAAU,oBAAoBC,MAAO,CAACsP,MAAO,IAAKmD,QAAS,WAAO,EAAKvS,MAAMwgB,2BACjF,kBAAC,KAAD,CAAW1gB,MAAO,CAACO,MAAO,cAGQ,IAArCN,KAAKC,MAAM8N,eAAexI,QAAe,yBAAKzF,UAAU,sBACrD,wBAAIA,UAAU,aAAd,UAA8BE,KAAKC,MAAM8N,eAAe,GAAGpN,KAAKT,KAAK0P,MAArE,YAA8E5P,KAAKC,MAAM8N,eAAe,GAAGpN,KAAKT,KAAKkM,MAArH,IAA6H,0BAAMtM,UAAU,WAAW+P,GAAM7P,KAAKC,MAAM8N,eAAe,GAAGrK,aAC3L,uBAAG5D,UAAU,gBAAe,kBAAC,KAAD,CAAS4d,mBAAoBA,IACrD1d,KAAKC,MAAM8N,eAAe,GAAGD,KAC7B9N,KAAKC,MAAM8N,eAAe,GAAGD,KAD7B,4DAEI9N,KAAKC,MAAM8N,eAAe,GAAGR,OAAOhI,OACpCvF,KAAKC,MAAM8N,eAAe,GAAGP,MAAMjI,OACnCvF,KAAKC,MAAM8N,eAAe,GAAGN,OAAOlI,OACpCvF,KAAKC,MAAM8N,eAAe,GAAGA,eAAexI,OALhD,QAWPvF,KAAKC,MAAM8N,eAAexI,OAAS,GAAI,yBAAKzF,UAAU,sBACnD,wBAAIA,UAAU,aAAd,uBACA,uBAAGA,UAAU,gBAAb,UAAgCE,KAAKC,MAAM8N,eAAexI,OAA1D,kBAILvF,KAAKC,MAAMsN,OAAOhI,QAAU,yBAAKzF,UAAU,oBACzCE,KAAKC,MAAMsN,OAAOjM,KAAI,SAACud,EAAOnP,EAAOnC,GAClC,OAAO,yBAAKoC,IAAKD,EAAO5P,UAAU,kBAAkBC,MAAO,CAACsY,YAAa9K,EAAOmC,EAAM,GAAK,EAAI,IAC3F,0BAAM5P,UAAU,mBAAmB0S,QAAS,WAAO,EAAKvS,MAAMygB,YAAY7B,EAAM3S,MAC5E,kBAAC,KAAD,CAAWnM,MAAO,CAACO,MAAO,WAE9B,yBAAKob,IAAKmD,EAAM1Z,KAAM8Z,IAAI,kBAKnCjf,KAAKC,MAAMwN,OAAOlI,QAAU,yBAAKzF,UAAU,oBACzCE,KAAKC,MAAMwN,OAAOnM,KAAI,SAAC4d,EAAOxP,EAAOjC,GAClC,OAAO,yBAAKkC,IAAKD,EAAO5P,UAAU,mBAC9B,kBAACsP,GAAA,EAAD,CAAQtP,UAAU,oBAAoBC,MAAO,CAACgX,SAAU,IAAKvE,QAAS,WAAO,EAAKvS,MAAM0gB,YAAYzB,EAAMhT,MACtG,kBAAC,KAAD,CAAWnM,MAAO,CAACO,MAAO,cAG9B,kBAAC,KAAD,CAAeP,MAAO,CAACO,MAAO,aAE9B,uBAAGR,UAAU,yBAAyBof,EAAMhf,aAKrDF,KAAKC,MAAMuN,MAAMjI,QAAU,yBAAKzF,UAAU,oBACxCE,KAAKC,MAAMuN,MAAMlM,KAAI,SAACqM,EAAM+B,EAAOlC,GAChC,OAAO,yBAAKmC,IAAKD,EAAO5P,UAAU,mBAC9B,kBAACsP,GAAA,EAAD,CAAQtP,UAAU,oBAAoBC,MAAO,CAACgX,SAAU,IAAKvE,QAAS,WAAO,EAAKvS,MAAM2gB,WAAWjT,EAAKzB,MACpG,kBAAC,KAAD,CAAWnM,MAAO,CAACO,MAAO,cAG9B,kBAAC,KAAD,CAA6BP,MAAO,CAACO,MAAO,aAE5C,uBAAGR,UAAU,yBAAyB6N,EAAKzN,gB,GA/D9CP,IAAMa,W,0CCTzBqgB,I,QAAoB,CACtB3I,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxB6G,QAAwB,IACxBN,YAAwB,OACxB/F,UAAwB,wBACxByH,WAAwB,sBACxBpD,OAAwB,OACxBtH,MAAO,OACPC,OAAQ,WA0CDwR,G,4MApCXlgB,MAAQ,CACJ8O,MAAO,G,uDAGD,IAAD,OACL,OAAO,kBAAC,KAAD,CACHqJ,QAAQ,EACRC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAAO8gB,GACP5H,aAAa,UAEb,yBAAKnZ,UAAU,eAAe0S,QAAS,WACnC,EAAKvS,MAAMyJ,UAEX,kBAAC,KAAD,CAAW3J,MAAO,CAACO,MAAO,OAAQC,SAAU,GAAIwgB,QAAS,OAG5D/gB,KAAKC,MAAMsN,OAAOvN,KAAKY,MAAM8O,MAAM,IAAM,yBAAK5P,UAAU,cAAc0S,QAAS,WAC5E,EAAKP,SAAS,CAACvC,MAAO,EAAK9O,MAAM8O,MAAM,MAEvC,kBAAC,KAAD,CAAoB3P,MAAO,CAACO,MAAO,OAAQC,SAAU,GAAIwgB,QAAS,OAGtE,yBAAKjhB,UAAU,yBAAyB0S,QAAS,WAAO,EAAKvS,MAAMyJ,UAC/D,yBAAK5J,UAAU,eAAe4b,IAAK1b,KAAKC,MAAMsN,OAAOvN,KAAKY,MAAM8O,OAAOvK,KAAM8Z,IAAI,qBAGpFjf,KAAKC,MAAMsN,OAAOvN,KAAKY,MAAM8O,MAAM,IAAM,yBAAK5P,UAAU,cAAc0S,QAAS,WAC5E,EAAKP,SAAS,CAACvC,MAAO,EAAK9O,MAAM8O,MAAM,MAEvC,kBAAC,KAAD,CAAkB3P,MAAO,CAACO,MAAO,OAAQC,SAAU,GAAIwgB,QAAS,Y,GA/B3DphB,IAAMa,W,0CCoIZwgB,G,4MA3JXpgB,MAAQ,CACJqgB,mBAAoB,EACpBnT,KAAM,I,sDAGFA,GACJ9N,KAAKiS,SAAS,CAACnE,W,8BAGXoT,GAGJ,IAFA,IAAIC,GAASD,EAAME,eAAiBF,EAAMG,cAAcD,eAAeD,MAE9DzR,EAAQ,EAAGA,EAAQyR,EAAM5b,OAAQmK,IACtC,GAA0B,SAAtByR,EAAMzR,GAAO4R,KAAiB,CAC9B,IAAI3T,EAAOwT,EAAMzR,GAAO6R,YAExBvhB,KAAKC,MAAMuhB,QAAQ7T,GAAM,M,2CAM9B3N,KAAKC,MAAMuC,SACN,KAAKkV,KAAK1X,KAAKY,MAAMkN,OAAU9N,KAAKC,MAAMwhB,uBAAuBlc,QAAWvF,KAAKC,MAAMsN,OAAOhI,QAAWvF,KAAKC,MAAMuN,MAAMjI,QAAWvF,KAAKC,MAAMwN,OAAOlI,QACvJvF,KAAKC,MAAMyhB,uB,+BAKb,IAAD,OACL,OACI,yBAAK5hB,UAAS,uBAAkBE,KAAKC,MAAM0hB,OAAS,GAAI,WACpD,kBAACC,GAAA,EAAD,CAAYC,UAAW,QAAS/hB,UAAU,iBACtC,kBAAC,KAAD,CAAgBC,MAAO,CAACuS,UAAW,gBAAiBhS,MAAO,aAE3D,2BACIQ,KAAK,OACLghB,UAAQ,EACRnK,SAAU,SAAC3P,GAAO,EAAK/H,MAAMuhB,QAAQxZ,IACrCkE,GAAG,aACHnM,MAAO,CAACoV,QAAS,QACjB4M,OAAO,qJAIf,8BAAUjiB,UAAU,oBAAoBoM,GAAG,gBAAgB8V,QAAS,SAACha,GAAO,EAAKga,QAAQha,IACrFia,UAAW,SAACja,IACS,KAAdA,EAAEka,SAAmB,EAAKjiB,MAAMuC,QAAW,EAAK5B,MAAMkN,KAAKvI,QAC1D,EAAKtF,MAAMkiB,qBAGG,KAAdna,EAAEka,SAAmBla,EAAEoa,YACvBpa,EAAE8K,kBACC,KAAK4E,KAAK,EAAK9W,MAAMkN,OAAW,EAAK7N,MAAMwhB,uBAAuBlc,QAAa,EAAKtF,MAAMsN,OAAOhI,QAAY,EAAKtF,MAAMuN,MAAMjI,QAAY,EAAKtF,MAAMwN,OAAOlI,UACvJ,EAAKtF,MAAMuC,QAKX,EAAKvC,MAAMoiB,gBAAgB,EAAKzhB,MAAMkN,MACtC,EAAKmE,SAAS,CAACnE,KAAM,OALrB,EAAK7N,MAAMmN,YAAY,EAAKxM,MAAMkN,MAClC,EAAKmE,SAAS,CAACnE,KAAM,MAMNtI,SAASkM,eAAe,iBAC9B3R,MAAMuiB,UAAY,UAI3CC,QAAS,WACL,IAAIC,EAAehd,SAASkM,eAAe,iBAC3C8Q,EAAaziB,MAAMuP,OAAS,MAC5BkT,EAAaziB,MAAMuP,OAAUkT,EAAaC,aAAc,KAErDD,EAAaC,aAAe,IAC3BD,EAAaziB,MAAMuiB,UAAY,QAE/BE,EAAaziB,MAAMuiB,UAAaE,EAAaC,aAAc,MAGnE9K,SAAU,SAAC3P,GACP,EAAK/H,MAAM6D,OAAOkE,EAAEuP,OAAOC,MAAO,EAAK5W,MAAMkN,MAC7C,EAAKmE,SAAS,CAACnE,KAAM9F,EAAEuP,OAAOC,SAElCA,MAAOxX,KAAKY,MAAMkN,QAGpB9N,KAAKY,MAAMkN,MAAQ,yBAAKhO,UAAU,eAAf,qBAEnBE,KAAKC,MAAMuC,QAAU,kBAAC,sBAAD,CACnBwQ,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,MACrB,KAAKwE,KAAK1X,KAAKY,MAAMkN,SAAW9N,KAAKC,MAAMuN,MAAMjI,UAAYvF,KAAKC,MAAMsN,OAAOhI,UAAWvF,KAAKC,MAAMwN,OAAOlI,UAAYvF,KAAKC,MAAMwhB,uBAAuBlc,SAAW,kBAACqc,GAAA,EAAD,CAAYpP,QAAS,WACrL,EAAKvS,MAAMmN,YAAY,EAAKxM,MAAMkN,MAClC,EAAKmE,SAAS,CAACnE,KAAM,KACFtI,SAASkM,eAAe,iBAC9B3R,MAAMuiB,UAAY,QAChCxiB,UAAU,oBACb,kBAAC,KAAD,CAAUC,MAAO,CAACO,MAAO,eAIhCN,KAAKC,MAAMuC,QAAU,kBAAC,sBAAD,CAClBwQ,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,KAEpBpH,KAAKC,UAAU,CACX+B,KAAM9N,KAAKC,MAAMmO,YAAYN,KAC7BP,OAAQvN,KAAKC,MAAMmO,YAAYb,OAC/BE,OAAQzN,KAAKC,MAAMmO,YAAYX,OAC/BD,MAAOxN,KAAKC,MAAMmO,YAAYZ,MAC9BiU,uBAAwBzhB,KAAKC,MAAMmO,YAAYL,mBAEnDjC,KAAKC,UAAU,CACX+B,KAAM9N,KAAKY,MAAMkN,KACjBP,OAAQvN,KAAKC,MAAMsN,OACnBE,OAAQzN,KAAKC,MAAMwN,OACnBD,MAAOxN,KAAKC,MAAMuN,MAClBiU,uBAAwBzhB,KAAKC,MAAMwhB,0BAChC,kBAACG,GAAA,EAAD,CAAYnN,IAAK,SAACiO,GACrBA,GACAA,EAAK3iB,MAAM4iB,YAAY,eAAgB,IAAK,cAGhDnQ,QAAS,WACL,EAAKvS,MAAMoiB,gBAAgB,EAAKzhB,MAAMkN,MACtC,EAAKmE,SAAS,CAACnE,KAAM,KACFtI,SAASkM,eAAe,iBAC9B3R,MAAMuiB,UAAY,QAChCxiB,UAAU,oBACb,kBAAC,KAAD,CAAkBC,MAAO,CAACO,MAAO,cAGrC,kBAACshB,GAAA,EAAD,CAAYnN,IAAK,SAACiO,GACVA,GACAA,EAAK3iB,MAAM4iB,YAAY,cAAe,IAAK,cAG/CnQ,QAAS,WACL,EAAKvS,MAAMyhB,oBACQlc,SAASkM,eAAe,iBAC9B3R,MAAMuiB,UAAY,QAChCxiB,UAAU,oBACb,kBAAC,KAAD,CAAWC,MAAO,CAACO,MAAO,eAIlC,kBAAC,KAAD,CAAqBsiB,cAAY,EAACC,SAAU,SAACxT,EAAO4R,GAChD,EAAKhP,SAAS,CAACgP,+B,GArJRthB,IAAMa,W,qBCA3BsiB,G,4MACFliB,MAAQ,CACJqgB,mBAAoB,G,uDAGd,IAAD,OACL,OACI,yBAAKnhB,UAAU,gBACX,kBAACsP,GAAA,EAAD,CAAQtP,UAAU,YAAY0S,QAAS,WAAO,EAAKvS,MAAM8iB,+BAAzD,SAIA,kBAAC3T,GAAA,EAAD,CAAQtP,UAAU,cAAc0S,QAAS,WAAO,EAAKvS,MAAM+iB,gCAA3D,WAIA,yBAAKljB,UAAU,SAIZE,KAAKC,MAAM8N,eAAetL,MAAK,SAAAH,GAAO,OAAIA,EAAQ3B,KAAKa,MAAQ,EAAKvB,MAAMU,KAAKa,QAA6C,IAArCxB,KAAKC,MAAM8N,eAAexI,QAAiB,kBAAC6J,GAAA,EAAD,CAAQtP,UAAU,mBAAmB0S,QAAS,WAC/K,EAAKvS,MAAMgjB,mBAEX,kBAAC,KAAD,CAAkBljB,MAAO,CAACO,MAAO,eAGnCN,KAAKC,MAAM8N,eAAetL,MAAK,SAAAH,GAAO,OAAIA,EAAQ3B,KAAKa,MAAQ,EAAKvB,MAAMU,KAAKa,QAAQ,kBAAC4N,GAAA,EAAD,CAAQtP,UAAU,qBAAqB0S,QAAS,WACrI,EAAKvS,MAAMyO,kBAEX,kBAAC,KAAD,CAAmB3O,MAAO,CAACO,MAAO,cAGtC,kBAAC8O,GAAA,EAAD,CAAQtP,UAAU,oBAAoB0S,QAAS,WAC3C,EAAKvS,MAAMijB,kCAEX,kBAAC,KAAD,CAAWnjB,MAAO,CAACO,MAAO,mB,GAnCjBX,IAAMa,WA+CpB6S,gBANS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,QAIL0S,CAAyByP,ICtCpCK,IAAe,EAGbC,G,kDACF,WAAYnjB,GAAQ,IAAD,8BACf,cAAMA,IAIVW,MAAQ,CACJmN,eAAgB,GAChB0T,uBAAwB,EAAKxhB,MAAM+C,QAAQC,gBAC3CwK,OAAQ,GACRD,MAAO,GACPD,OAAQ,GACR0T,mBAAoB,EACpBoC,cAAc,EACdhE,aAAc,GACd7c,QAAQ,EACR4L,YAAa,GACbkV,WAAW,EACXC,MAAM,GAjBS,EAoBnBC,QAAU7jB,IAAM8jB,YApBG,EAqBnBC,YAAc,EArBK,EAgDnBC,WAAa,SAAC3b,GACVA,EAAE8K,iBACF9K,EAAEqU,mBAlDa,EAqDnBuH,aAAe,SAAC5b,GACZA,EAAE8K,iBACF9K,EAAEqU,kBACF,EAAKqH,cACD1b,EAAE6b,aAAa1C,OAASnZ,EAAE6b,aAAa1C,MAAM5b,OAAS,GACtD,EAAK0M,SAAS,CAACsR,MAAM,KA1DV,EA8DnBO,cAAgB,SAAC9b,GACbA,EAAE8K,iBACF9K,EAAEqU,kBACF,EAAKqH,cACoB,IAArB,EAAKA,aACL,EAAKzR,SAAS,CAACsR,MAAM,KAnEV,EAuEnBQ,WAAa,SAAC/b,GACVA,EAAE8K,iBACF9K,EAAEqU,kBACF,EAAKpK,SAAS,CAACsR,MAAM,IACjBvb,EAAE6b,aAAarW,OAASxF,EAAE6b,aAAarW,MAAMjI,OAAS,IACxD,EAAKye,gBAAgBhc,EAAE6b,aAAarW,OACpCxF,EAAE6b,aAAaI,YACf,EAAKP,YAAc,IA9EN,EAkFnBM,gBAAkB,SAACxW,GACf,IAAK,IAAIlI,EAAI,EAAGA,EAAIkI,EAAMjI,OAAQD,IAC9B,EAAKkc,QAAQhU,GAAO,GAAO,IAlF/B,EAAKgV,aAAe7iB,IAAM8jB,YAFX,E,gEAwBVzjB,KAAKC,MAAM+C,QAAQC,gBAAgBsC,QACpCvF,KAAKC,MAAMmT,eAAejG,WAAW,IAGzC,IAAI+W,EAAMlkB,KAAKwjB,QAAQW,QACvBD,EAAIhS,iBAAiB,YAAalS,KAAK4jB,cACvCM,EAAIhS,iBAAiB,YAAalS,KAAK8jB,eACvCI,EAAIhS,iBAAiB,WAAYlS,KAAK2jB,YACtCO,EAAIhS,iBAAiB,OAAQlS,KAAK+jB,YAElC,IAAIK,EAAM,eAAOtY,KAAKuY,MAAMC,aAAaC,QAAQ,YAE9CH,EAAO,SAASpkB,KAAKC,MAAMkD,WAC1BnD,KAAKwiB,aAAa2B,QAAQK,QAAQJ,EAAO,SAASpkB,KAAKC,MAAMkD,a,6CAIjE,IAAI+gB,EAAMlkB,KAAKwjB,QAAQW,QACvBD,EAAI7R,oBAAoB,YAAarS,KAAK4jB,cAC1CM,EAAI7R,oBAAoB,YAAarS,KAAK8jB,eAC1CI,EAAI7R,oBAAoB,WAAYrS,KAAK2jB,YACzCO,EAAI7R,oBAAoB,OAAQrS,KAAK+jB,c,kCA2C7BjW,GACR,GAAG,KAAK4J,KAAK5J,IAAW9N,KAAKY,MAAM6gB,uBAAuBlc,QAAYvF,KAAKY,MAAM2M,OAAOhI,QAAYvF,KAAKY,MAAM4M,MAAMjI,QAAWvF,KAAKY,MAAM6M,OAAOlI,OAAQ,CACtJ,IAAI6e,EAAM,eAAOtY,KAAKuY,MAAMC,aAAaC,QAAQ,YAGjD,OAFAH,EAAO,SAASpkB,KAAKC,MAAMkD,UAAY,GACvCmhB,aAAaG,QAAQ,SAAU3Y,KAAKC,UAAUqY,IACtCpkB,KAAKC,MAAMa,MACf,IAAK,OACDd,KAAKC,MAAM6Y,aAAa1L,YAAY,CAChCU,KAAMA,EACN5L,OAAQlC,KAAKC,MAAMiC,OACnBqL,OAAQvN,KAAKY,MAAM2M,OACnBC,MAAOxN,KAAKY,MAAM4M,MAClBC,OAAQzN,KAAKY,MAAM6M,OACnBtK,SAAUnD,KAAKC,MAAMkD,SACrB4K,eAAgB/N,KAAKY,MAAM6gB,wBAC5BzhB,KAAKC,MAAMU,KAAKoK,UACnB,MACJ,IAAK,SACD/K,KAAKC,MAAMmT,eAAehG,YAAY,CAClCU,KAAMA,EACN3L,OAAQnC,KAAKC,MAAMkC,OACnBoL,OAAQvN,KAAKY,MAAM2M,OACnBC,MAAOxN,KAAKY,MAAM4M,MAClBC,OAAQzN,KAAKY,MAAM6M,OACnBtK,SAAUnD,KAAKC,MAAMkD,SACrB4K,eAAgB/N,KAAKY,MAAM6gB,wBAC5BzhB,KAAKC,MAAMU,KAAKoK,UAM3B/K,KAAKiS,SAAS,CAACwP,uBAAwB,GAAIlU,OAAQ,GAAIE,OAAQ,GAAID,MAAO,KAC1ExN,KAAKwiB,aAAa2B,QAAQK,QAAQ,O,sCAI1B1W,GACZ,GAAG,KAAK4J,KAAK5J,IAAW9N,KAAKY,MAAM6gB,uBAAuBlc,QAAYvF,KAAKY,MAAM2M,OAAOhI,QAAYvF,KAAKY,MAAM6M,OAAOlI,QAAYvF,KAAKY,MAAM4M,MAAMjI,OAAQ,CACvJ,OAAQvF,KAAKC,MAAMa,MACf,IAAK,OACDd,KAAKC,MAAM6Y,aAAa1K,YAAY,CAChC5M,IAAKxB,KAAKY,MAAMwN,YAAY5M,IAC5BsM,KAAMA,EACN5L,OAAQlC,KAAKC,MAAMiC,OACnBqL,OAAQvN,KAAKY,MAAM2M,OACnBC,MAAOxN,KAAKY,MAAM4M,MAClBC,OAAQzN,KAAKY,MAAM6M,OACnBtK,SAAUnD,KAAKC,MAAMkD,SACrB4K,eAAgB/N,KAAKY,MAAM6gB,wBAC5BzhB,KAAKC,MAAMU,KAAKoK,UACnB,MACJ,IAAK,SACD/K,KAAKC,MAAMmT,eAAehF,YAAY,CAClC5M,IAAKxB,KAAKY,MAAMwN,YAAY5M,IAC5BsM,KAAMA,EACN3L,OAAQnC,KAAKC,MAAMkC,OACnBoL,OAAQvN,KAAKY,MAAM2M,OACnBC,MAAOxN,KAAKY,MAAM4M,MAClBC,OAAQzN,KAAKY,MAAM6M,OACnBtK,SAAUnD,KAAKC,MAAMkD,SACrB4K,eAAgB/N,KAAKY,MAAM6gB,wBAC5BzhB,KAAKC,MAAMU,KAAKoK,UAM5B/K,KAAK0hB,uB,sCAKR,OAAQ1hB,KAAKC,MAAMa,MACf,IAAK,OACDd,KAAKC,MAAM6Y,aAAapK,cAAc,CAClCxM,OAAQlC,KAAKC,MAAMiC,OACnByM,eAAgB3O,KAAKY,MAAMmN,gBAC5B/N,KAAKC,MAAMU,KAAKoK,UACnB,MACJ,IAAK,SACD/K,KAAKC,MAAMmT,eAAe1E,cAAc,CACpCnD,QAASvL,KAAKC,MAAMkC,OACpBgB,SAAUnD,KAAKC,MAAMkD,SACrBwL,eAAgB3O,KAAKY,MAAMmN,gBAC5B/N,KAAKC,MAAMU,KAAKoK,UAM3B/K,KAAKiS,SAAS,CAAClE,eAAgB,O,uCAGlBzL,GACb,OAAQtC,KAAKC,MAAMa,MACf,IAAK,OACDwB,EAAQJ,OAASlC,KAAKC,MAAMoB,MAAMF,WAAWK,IAC7Cc,EAAQa,SAAWnD,KAAKC,MAAMkD,SAC9BnD,KAAKC,MAAM6Y,aAAarK,iBAAiBnM,EAAStC,KAAKC,MAAMU,KAAKoK,UAClE,MACJ,IAAK,SACDzI,EAAQH,OAASnC,KAAKC,MAAMkC,OAC5BG,EAAQa,SAAWnD,KAAKC,MAAMkD,SAC9BnD,KAAKC,MAAMmT,eAAe3E,iBAAiBnM,EAAStC,KAAKC,MAAMU,KAAKoK,a,yCAO7DvJ,GACf,OAAQxB,KAAKC,MAAMa,MACf,IAAK,OACDd,KAAKC,MAAM6Y,aAAahK,mBAAmBtN,GAC3C,MACJ,IAAK,SACDxB,KAAKC,MAAMmT,eAAetE,mBAAmBtN,EAAKxB,KAAKC,MAAMkD,a,mDAQrEnD,KAAKiS,SAAS,CACVwP,uBAAwBzhB,KAAKY,MAAMmN,eACnCA,eAAgB,O,oDAKpB/N,KAAKC,MAAMmT,eAAejG,WAAWnN,KAAKY,MAAMmN,gBAChD/N,KAAKiS,SAAS,CACVlE,eAAgB,O,sDAKpB/N,KAAKiS,SAAS,CACVlE,eAAgB,O,uCAKpB/N,KAAKwiB,aAAa2B,QAAQK,QAAQxkB,KAAKY,MAAMmN,eAAe,GAAGD,MAE/D9N,KAAKY,MAAMmN,eAAe,GAAGR,OAAOjM,KAAI,SAACoB,EAAG4C,GACxC5C,EAAEwJ,GAAK5G,KAEXtF,KAAKY,MAAMmN,eAAe,GAAGN,OAAOnM,KAAI,SAACoB,EAAG4C,GACxC5C,EAAEwJ,GAAK5G,KAEXtF,KAAKY,MAAMmN,eAAe,GAAGP,MAAMlM,KAAI,SAACoB,EAAG4C,GACvC5C,EAAEwJ,GAAK5G,KAGXtF,KAAKiS,SAAS,CACV1E,OAAQvN,KAAKY,MAAMmN,eAAe,GAAGR,OACrCE,OAAQzN,KAAKY,MAAMmN,eAAe,GAAGN,OACrCD,MAAOxN,KAAKY,MAAMmN,eAAe,GAAGP,MACpCO,eAAgB,GAChB0T,uBAAwBzhB,KAAKY,MAAMmN,eAAe,GAAGA,eACrDvL,QAAQ,EACR4L,YAAapO,KAAKY,MAAMmN,eAAe,O,2CAIzB,IAAD,OACb2W,EAAgB1kB,KAAKC,MAAMoC,SAASsiB,QAAQ3X,UAAUvK,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,KAAKa,MAAQ,EAAKvB,MAAMU,KAAKa,OAEnGkjB,EAAcnX,OAAOjM,KAAI,SAACoB,EAAG4C,GACzB5C,EAAEwJ,GAAK5G,KAEXof,EAAcjX,OAAOnM,KAAI,SAACoB,EAAG4C,GACzB5C,EAAEwJ,GAAK5G,KAEXof,EAAclX,MAAMlM,KAAI,SAACoB,EAAG4C,GACxB5C,EAAEwJ,GAAK5G,KAGRof,IACC1kB,KAAKwiB,aAAa2B,QAAQK,QAAQE,EAAc5W,MAChD9N,KAAKiS,SAAS,CACV1E,OAAQmX,EAAcnX,OACtBE,OAAQiX,EAAcjX,OACtBD,MAAOkX,EAAclX,MACrBO,eAAgB,GAChB0T,uBAAwBiD,EAAc3W,eACtCvL,QAAQ,EACR4L,YAAasW,O,0CAMrB1kB,KAAKwiB,aAAa2B,QAAQK,QAAQ,IAClCxkB,KAAKiS,SAAS,CACV1E,OAAQ,GACRE,OAAQ,GACRD,MAAO,GACPO,eAAgB,GAChB0T,uBAAwB,GACxBjf,QAAQ,EACR4L,YAAa,O,qCAIL,IAAD,OAIX,OAHG+U,IACC1L,aAAa0L,IAETnjB,KAAKC,MAAMa,MACf,IAAK,OACDqiB,GAAe/X,YAAW,WACtB,EAAKnL,MAAM6Y,aAAatK,aAAa,CACjCrL,SAAU,EAAKlD,MAAMkD,SACrBjB,OAAQ,EAAKjC,MAAMiC,OACnBC,OAAQ,EAAKlC,MAAMU,KAAKa,KACzB,EAAKvB,MAAMU,KAAKoK,YACpB,KACH,MACJ,IAAK,SACDoY,GAAe/X,YAAW,WACtB,EAAKnL,MAAMmT,eAAe5E,aAAa,CACnCrL,SAAU,EAAKlD,MAAMkD,SACrBoI,QAAS,EAAKtL,MAAMkC,OACpBA,OAAQ,EAAKlC,MAAMU,KAAKa,KACzB,EAAKvB,MAAMU,KAAKoK,YACpB,Q,qCAQX,OAAQ/K,KAAKC,MAAMa,MACf,IAAK,OACDd,KAAKC,MAAM6Y,aAAa/J,aAAa,CAAC5L,SAAUnD,KAAKC,MAAMkD,UAAWnD,KAAKC,MAAMU,KAAKoK,UACtF,MACJ,IAAK,SACD/K,KAAKC,MAAMmT,eAAerE,aAAa,CAAC5L,SAAUnD,KAAKC,MAAMkD,UAAWnD,KAAKC,MAAMU,KAAKoK,a,8BAO5F/C,GAAiC,IAA9B4c,EAA6B,wDAAdrB,EAAc,wDAChC9V,EAAM,YAAOzN,KAAKY,MAAM6M,QACxBD,EAAK,YAAOxN,KAAKY,MAAM4M,OACvBD,EAAM,YAAOvN,KAAKY,MAAM2M,QAExBsX,EAAUpX,EAAOlI,OAASiI,EAAMjI,OAASgI,EAAOhI,OAEpD,IAAIqf,IAAUrB,EAAM,CAChB,IAAK,IAAIje,EAAI,EAAGA,EAAI0C,EAAEuP,OAAO/J,MAAMjI,OAAQD,IAAK,CAC5C,GAAGuf,EAAU,EAAG,CACZC,KAAM9iB,MAAM,4BAA6B,CACrC4R,SAAUkR,KAAMC,SAASC,aAE7B,MAGJ,IAAIrX,EAAO,CACPxI,MAAOc,OAAOgf,KAAOhf,OAAOif,WAAWC,gBAAgB,IAAIC,KAAK,CAACpd,EAAEuP,OAAO/J,MAAMlI,IAAK,CAACxE,KAAMkH,EAAEuP,OAAO/J,MAAMlI,GAAGxE,QAC9G6M,KAAM3F,EAAEuP,OAAO/J,MAAMlI,GACrBpF,KAAM8H,EAAEuP,OAAO/J,MAAMlI,GAAGpF,KACxBY,KAAMkH,EAAEuP,OAAO/J,MAAMlI,GAAGpF,KAAKmlB,MAAM,KAAKxW,MACxCyG,KAAMtN,EAAEuP,OAAO/J,MAAMlI,GAAGgQ,KAAO,KAGlB,QAAd3H,EAAK7M,MAAgC,QAAd6M,EAAK7M,MAAgC,SAAd6M,EAAK7M,MAAiC,QAAd6M,EAAK7M,OAC1E6M,EAAKzB,GAAKqB,EAAOhI,OACjBgI,EAAOK,KAAKD,IAGC,QAAdA,EAAK7M,MAAgC,QAAd6M,EAAK7M,MAAgC,SAAd6M,EAAK7M,MAAiC,QAAd6M,EAAK7M,MAAgC,QAAd6M,EAAK7M,OACjG6M,EAAKzB,GAAKsB,EAAMjI,OAChBiI,EAAMI,KAAKD,IAGE,QAAdA,EAAK7M,OACJ6M,EAAKzB,GAAKuB,EAAOlI,OACjBkI,EAAOG,KAAKD,IAGhBkX,IAGJ7c,EAAEuP,OAAOC,MAAQ,KAGrB,GAAGoN,EACC,GAAGC,EAAU,EACTC,KAAM9iB,MAAM,4BAA6B,CACrC4R,SAAUkR,KAAMC,SAASC,iBAE1B,CACH,IAAIrX,EAAO,CACPzB,GAAIqB,EAAOhI,OACXJ,MAAOc,OAAOgf,KAAOhf,OAAOif,WAAWC,gBAAgB,IAAIC,KAAK,CAACpd,GAAI,CAAClH,KAAMkH,EAAElH,QAC9E6M,KAAM3F,EACN9H,KAAM8H,EAAE9H,KACRY,KAAMkH,EAAE9H,KAAKmlB,MAAM,KAAKxW,OAG5BtB,EAAOK,KAAKD,GAIpB,GAAG4V,EACC,IAAK,IAAIje,EAAI,EAAGA,EAAI0C,EAAEzC,OAAQD,IAAK,CAC/B,GAAGuf,EAAU,EAAG,CACZC,KAAM9iB,MAAM,4BAA6B,CACrC4R,SAAUkR,KAAMC,SAASC,aAE7B,MAGJ,IAAIrX,EAAO,CACPxI,MAAOc,OAAOgf,KAAOhf,OAAOif,WAAWC,gBAAgB,IAAIC,KAAK,CAACpd,EAAE1C,IAAK,CAACxE,KAAMkH,EAAE1C,GAAGxE,QACpF6M,KAAM3F,EAAE1C,GACRpF,KAAM8H,EAAE1C,GAAGpF,KACXY,KAAMkH,EAAE1C,GAAGpF,KAAKmlB,MAAM,KAAKxW,MAC3ByG,KAAMtN,EAAE1C,GAAGgQ,KAAO,KAGL,QAAd3H,EAAK7M,MAAgC,QAAd6M,EAAK7M,MAAgC,SAAd6M,EAAK7M,MAAiC,QAAd6M,EAAK7M,OAC1E6M,EAAKzB,GAAKqB,EAAOhI,OACjBgI,EAAOK,KAAKD,IAGC,QAAdA,EAAK7M,MAAgC,QAAd6M,EAAK7M,MAAgC,SAAd6M,EAAK7M,MAAiC,QAAd6M,EAAK7M,MAAgC,QAAd6M,EAAK7M,OACjG6M,EAAKzB,GAAKsB,EAAMjI,OAChBiI,EAAMI,KAAKD,IAGE,QAAdA,EAAK7M,OACJ6M,EAAKzB,GAAKuB,EAAOlI,OACjBkI,EAAOG,KAAKD,IAGhBkX,IAIR7kB,KAAKiS,SAAS,CAACxE,SAAQD,QAAOD,a,4CAGZ+G,EAAWC,GAC7B,OAAGvU,KAAKY,MAAM0iB,YAAc/O,EAAU+O,Y,6BAOnCgC,EAASC,GAAW,IAAD,OACtB,GAAGD,EAAUC,IAAavlB,KAAKY,MAAM4B,QAC9BxC,KAAKY,MAAM0iB,UAAW,CAGrB,OAFAtjB,KAAKiS,SAAS,CAACqR,WAAW,IAElBtjB,KAAKC,MAAMa,MACf,IAAK,OACDoH,GAAiBwE,WAAW1M,KAAKC,MAAMoB,MAAMF,WAAWK,KACxD,MACJ,IAAK,SACD0G,GAAiByE,aAAa3M,KAAKC,MAAMkC,OAAQnC,KAAKC,MAAMU,KAAKa,KAMzE4J,YAAW,WACP,EAAK6G,SAAS,CAACqR,WAAW,MAC3B,MAIX,IAAItjB,KAAKY,MAAM4B,OAAQ,CACnB,IAAI4hB,EAAM,eAAOtY,KAAKuY,MAAMC,aAAaC,QAAQ,YACjDH,EAAO,SAASpkB,KAAKC,MAAMkD,UAAYmiB,EACnClB,EAAO,SAASpkB,KAAKC,MAAMkD,WAAc,KAAKuU,KAAK0M,EAAO,SAASpkB,KAAKC,MAAMkD,mBACvEihB,EAAO,SAASpkB,KAAKC,MAAMkD,UACtCmhB,aAAaG,QAAQ,SAAU3Y,KAAKC,UAAUqY,O,+BAI5C,IAAD,SACL,OACA,oCACI,yBAAKtkB,UAAU,mBAAmB2U,IAAKzU,KAAKwjB,SACvCxjB,KAAKY,MAAM2iB,MACR,yBAAKzjB,UAAU,2BACX,yBAAKA,UAAU,cACX,kBAAC,KAAD,CAA6BC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAEhG,iEAKXnV,KAAKY,MAAMyiB,cAAgB,kBAAC,GAAD,CAAQ9V,OAAQvN,KAAKY,MAAMye,aAAc3V,MAAO,WAAO,EAAKuI,SAAS,CAACoR,cAAc,EAAOhE,aAAc,QAErI,kBAAC,GAAD,CACItQ,aAAc,WAAO,EAAKA,gBAC1BN,iBAAkB,SAACnM,GAAa,EAAKmM,iBAAiBnM,IACtDwM,mBAAoB,SAACtN,GAAS,EAAKsN,mBAAmBtN,IACtDa,SAAUrC,KAAKC,MAAMoC,SACrB8M,GAAInP,KAAKC,MAAMkP,GACf/M,OAAQpC,KAAKC,MAAMmC,OACnBke,SAAUtgB,KAAKC,MAAMqgB,SACrBxc,OAAQ9D,KAAKC,MAAM6D,OACnByc,QAASvgB,KAAKC,MAAMsgB,QACpBzf,KAAMd,KAAKC,MAAMa,KACjBof,OAAQlgB,KAAKC,MAAMoC,SAASV,QAAO,SAAAe,GAAC,OAAKA,EAAEC,QAAUD,EAAE/B,KAAKa,MAAQ,EAAKvB,MAAMU,KAAKa,OACpFuM,eAAgB/N,KAAKY,MAAMmN,eAC3BgR,WAAY,SAACM,GAAkB,EAAKpN,SAAS,CAACoN,eAAcgE,cAAc,KAC1E/E,SAAU,SAAChc,GACP,EAAK2P,SAAS,CAAClE,eAAe,GAAD,mBAAM,EAAKnN,MAAMmN,gBAAjB,CAAiCzL,OAElE+b,SAAU,SAACnS,GACP,EAAK+F,SAAS,CAAClE,eAAe,YACvB,EAAKnN,MAAMmN,eAAepM,QAAO,SAAAW,GAChC,OAAOA,EAAQd,MAAQ0K,SAInCsC,aAAc,WACV,EAAKA,kBAIb,kBAAC,sBAAD,CACIwE,eAAe,mBACfC,uBAAwB,IACxBC,uBAAwB,QACpBlT,KAAKY,MAAM6gB,uBAAuBlc,UAAYvF,KAAKY,MAAM2M,OAAOhI,UAAYvF,KAAKY,MAAM6M,OAAOlI,UAAYvF,KAAKY,MAAM4M,MAAMjI,SAC3H,kBAAC,GAAD,CACIgI,OAAQvN,KAAKY,MAAM2M,OACnBQ,eAAgB/N,KAAKY,MAAM6gB,uBAC3BjU,MAAOxN,KAAKY,MAAM4M,MAClBC,OAAQzN,KAAKY,MAAM6M,OACnBgT,uBAAwB,WACpB,EAAKxO,SAAS,CAACwP,uBAAwB,MAE3Cf,YAAa,SAACxU,GACV,EAAK+F,SAAS,CAAC1E,OAAO,YACf,EAAK3M,MAAM2M,OAAO5L,QAAO,SAAAkd,GACxB,OAAOA,EAAM3S,KAAOA,SAIhCyU,YAAa,SAACzU,GACV,EAAK+F,SAAS,CAACxE,OAAO,YACf,EAAK7M,MAAM6M,OAAO9L,QAAO,SAAAud,GACxB,OAAOA,EAAMhT,KAAOA,SAIhC0U,WAAY,SAAC1U,GACT,EAAK+F,SAAS,CAACzE,MAAM,YACd,EAAK5M,MAAM4M,MAAM7L,QAAO,SAAAgM,GACvB,OAAOA,EAAKzB,KAAOA,YAQ3C,kBAAC,IAAD,GACIyV,QAAS3hB,KAAKY,MAAMmN,eAAexI,OACnCkP,IAAKzU,KAAKwiB,aACVd,kBAAmB,WAAO,EAAKA,qBAC/Blf,OAAQxC,KAAKY,MAAM4B,OACnB4L,YAAapO,KAAKY,MAAMwN,YACxBiU,gBAAiB,SAACvU,GAAU,EAAKuU,gBAAgBvU,KANrD,oCAOuB,WAAO,EAAK4T,uBAPnC,wBAQY1hB,KAAKY,MAAM2M,QARvB,wBASYvN,KAAKY,MAAM6M,QATvB,uBAUWzN,KAAKY,MAAM4M,OAVtB,wCAW4BxN,KAAKY,MAAM6gB,wBAXvC,8BAYiB,SAAC3T,GAAU,EAAKV,YAAYU,MAZ7C,yBAaY,SAACwX,EAASC,GAAc,EAAKzhB,OAAOwhB,EAASC,MAbzD,0BAca,SAACvd,EAAG4c,GAAW,EAAKpD,QAAQxZ,EAAG4c,MAd5C,qCAewB,WAAO,EAAKzC,wBAfpC,MAkBGniB,KAAKY,MAAMmN,eAAexI,QACzB,kBAAC,GAAD,CACIwd,2BAA4B,WAAO,EAAKA,8BACxCG,8BAA+B,WAAO,EAAKA,iCAC3CF,4BAA6B,WAAO,EAAKA,+BACzCtU,cAAe,WAAO,EAAKA,iBAC3BX,eAAgB/N,KAAKY,MAAMmN,eAC3BkV,eAAgB,WAAO,EAAKA,0B,GA3kBjCtjB,IAAMa,WAkmBV6S,oBAfS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,MACb2B,QAASpC,EAAMoC,YAIvB,SAA4BuF,GACxB,MAAO,CACHuQ,aAAcxF,YAAmBwF,EAAcvQ,GAC/C6K,eAAgBE,YAAmBF,EAAgB7K,MAI5C8K,CAA6C+P,ICjnBtDvC,GAAoB,CACtB3I,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,uBAErB4I,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,mCACxBiN,UAAwB,WAI1BC,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACH1M,OAAQ/Y,KAAKC,MAAM8Y,OACnBhZ,MAAO8gB,GACP5H,aAAa,mBAEb,kBAAC,KAAD,CAAkBlZ,MAAO,CAACO,MAAO,UAAWC,SAAU,MACtD,wBAAIT,UAAU,eAAd,SACA,uBAAGA,UAAU,cAAcE,KAAKC,MAAMoB,MAAMF,WAAWa,MAAM8T,KAC7D,4BAAQhW,UAAU,cAAcgB,KAAK,SAASf,MAAO,CAACsP,MAAO,eAAgBmD,QAAS,WAClF,EAAKvS,MAAM0S,QAAQ/E,KAAK,OAD5B,a,GAVgBjO,IAAMa,WAuBnB6S,gBANS,SAAAzS,GACpB,MAAO,CACHS,MAAOT,EAAMS,SAINgS,CAAyBE,aAAWkS,K,+DChB7CjS,GAAYC,cAXA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFnE,gBAAiB,OACjBlP,MAAO,UACP6X,OAAQ,EACR,UAAW,CACP3I,gBAAiB,YAKXiE,CAAsBK,MAElC4R,G,uKAEE,OAAO,kBAAC,aAAD,CACHhR,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,uBACV+U,UAAQ,GAEP7U,KAAKC,MAAMgC,MAAMX,KAAI,SAACX,EAAM+O,GAAP,OAClB,yBAAKC,IAAKD,EAAO5P,UAAU,UACvB,kBAAC,EAAD,CAAQI,KAAMS,EAAKT,KAAK0P,MAAMH,OAAO,GAAG9O,EAAKT,KAAKkM,KAAKqD,OAAO,GAAI1P,MAAO,CAACQ,SAAU,GAAI+X,aAAc,EAAGjJ,MAAO,OAAQC,OAAQ,OAAQE,gBAAgB,OAAD,OAAS7O,EAAKL,MAAd,QACtJK,EAAKiC,UAAY,0BAAM9C,UAAU,sB,GAXhCH,IAAMa,WAkBtByJ,G,kLAEEjK,KAAKqJ,MAAMsc,UAAY3lB,KAAKC,MAAMuH,S,+BAG5B,IAAD,OACL,OAAO,2BAAOiN,IAAK,SAAAA,GAAQ,EAAKpL,MAAQoL,GAAM1U,MAAO,CAACoV,QAAS,QAASyQ,UAAQ,EAACC,UAAQ,Q,GANvElmB,IAAM2f,eAU1BwG,G,kLAGmB,IAAD,OAChB9lB,KAAKkU,QAAQC,cAAa,GAE1B,IAAI4R,EAAahJ,aAAY,WACtB7U,GAAiBmE,gBAChB,EAAKpM,MAAM6Y,aAAatM,SAAS,CAACN,GAAI,EAAKjM,MAAM+lB,MAAMC,OAAO/Z,GAAInB,SAAU,EAAK9K,MAAMU,KAAKoK,WAC5FiS,cAAc+I,MAEnB,O,6CAKH/lB,KAAKC,MAAM6Y,aAAanP,UAAU3J,KAAKC,MAAMoB,MAAMF,WAAWK,IAAKxB,KAAKC,MAAMoB,MAAMF,WAAWsI,Q,+BAGzF,IAAD,OACL,OAAGzJ,KAAKC,MAAMoB,MAAMF,YAAcnB,KAAKC,MAAMoB,MAAMF,WAAWa,MACnD,kBAAC,GAAD,CAAe+W,QAAQ,IAG3B/Y,KAAKC,MAAMoB,MAAMF,YACpB,oCACKnB,KAAKC,MAAMoB,MAAMF,WAAWY,cAAgB,kBAAC,GAAD,CAAayF,OAAQxH,KAAKC,MAAMoB,MAAMF,WAAWY,eAC9F,yBAAKjC,UAAU,8BACX,yBAAKA,UAAU,gBACX,kBAAC8hB,GAAA,EAAD,CAAY9hB,UAAU,WAAW0S,QAAS,WACtC,EAAKvS,MAAM0S,QAAQ/E,KAAK,OAExB,kBAAC,KAAD,CAAerN,SAAS,QAAQR,MAAO,CAACO,MAAO,cAGnD,yBAAKR,UAAU,aAAaoM,GAAIlM,KAAKC,MAAMoB,MAAMF,WAAWK,KACxD,wBAAI1B,UAAU,eAAeE,KAAKC,MAAMoB,MAAMF,WAAWM,OACzD,wBAAI3B,UAAU,wBAAwBE,KAAKC,MAAMoB,MAAMF,WAAWc,MAAMsD,OAAS,EAAjF,YAGJ,kBAAC,GAAD,CACIgN,QACIvS,KAAKC,MAAMoB,MAAMF,WAAW+kB,UAAYlmB,KAAKC,MAAMU,KAAKa,IAAM,CAC1D,CAACsM,KAAM,iBAAkBjN,OAAQ,WAC7B,EAAKZ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,kBAGhB,CACI1H,KAAM,YACNjN,OAAQ,WACJ,EAAKZ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,oBAIpB,CACI1H,KAAM,cACNjN,OAAQ,WACJ,EAAKZ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,uBAIpB,CACA,CACI1H,KAAM,iBAAkBjN,OAAQ,WAC5B,EAAKZ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,mBAK5B7D,KAAM3R,KAAKC,MAAMoB,MAAMF,WAAWK,IAClCsQ,QAAQ,KAKhB,yBAAKhS,UAAU,iBACX,kBAAC,GAAD,CAAMuC,SAAUrC,KAAKC,MAAMoB,MAAMF,WAAWiB,OAAOC,SAAUvB,KAAK,OAAOqO,GAAInP,KAAKC,MAAMoB,MAAMF,WAAWM,MAAO0B,SAAUnD,KAAKC,MAAMoB,MAAMF,WAAWiB,OAAOZ,IAAKU,OAAQlC,KAAKC,MAAMoB,MAAMF,WAAWK,QAK9M,yBAAK1B,UAAU,2CACVE,KAAKC,MAAMoB,MAAMF,YAAc,kBAAC,GAAD,CAASc,MAAOjC,KAAKC,MAAMoB,MAAMF,WAAWc,QAE5E,yBAAKnC,UAAU,iBACX,kBAAC,GAAD,CAAWA,UAAS,uBAAkBE,KAAKC,MAAM8C,MAAMF,MAAQ,SAAW,IAAM2P,QAAS,WAAOlH,OAC5F,kBAAC,KAAD,CAASvL,MAAO,CAACO,MAAON,KAAKC,MAAM8C,MAAMF,MAAQ,OAAS,cAE9D,kBAAC,GAAD,CAAW/C,UAAS,uBAAkBE,KAAKC,MAAM8C,MAAMD,QAAU,GAAK,UAAY0P,QAAS,WAAOlH,OAC9F,kBAAC,KAAD,CAAcvL,MAAO,CAACO,MAAON,KAAKC,MAAM8C,MAAMD,QAAU,UAAY,WAExE,kBAAC,GAAD,CAAWhD,UAAS,sBAAyB0S,QAAS,WAAO,EAAKvS,MAAM0S,QAAQ/E,KAAK,OACjF,kBAAC,KAAD,CAAa7N,MAAO,CAACO,MAAO,kB,GAhGrCX,IAAMa,WAAnBslB,GACKrQ,YAAc/V,EAsHV2T,oBAdS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,MACb0B,MAAOnC,EAAMmC,UAIrB,SAA4BwF,GACxB,MAAO,CACHuQ,aAAcxF,YAAmBwF,EAAcvQ,MAIxC8K,CAA6CE,aAAWuS,KC3JjEK,IAFY1S,cAZA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFnE,gBAAiB,UACjBoE,SAAU,WACV9B,OAAQ,GACR+B,MAAO,GACP,UAAW,CACPrE,gBAAiB,eAKXiE,CAAsBK,M,4MAKpClT,MAAQ,CACJoT,YAAY,EACZC,UAAW,G,kEAIXjU,KAAKkU,QAAQC,cAAa,K,iCAIvBnU,KAAKY,MAAMqT,UAAYjU,KAAKoU,cAAcC,eACtCrU,KAAKY,MAAMoT,YACVhU,KAAKiS,SAAS,CAAC+B,YAAY,IAE3BhU,KAAKY,MAAMoT,YACXhU,KAAKiS,SAAS,CAAC+B,YAAY,IAGnChU,KAAKiS,SAAS,CAACgC,UAAWjU,KAAKoU,cAAcC,mB,4CAG3BC,EAAWC,GAC7B,OAAGA,EAAUN,YAAcjU,KAAKY,MAAMqT,Y,6CAQtCjU,KAAKkU,QAAQC,cAAa,K,+BAI1B,OACI,oCACI,yBAAKrU,UAAU,WAAWC,MAAO,CAACqmB,MAAO,KACzC,yBAAKtmB,UAAU,WAAWC,MAAO,CAACqmB,MAAO,U,GAxCtCzmB,IAAMa,YAAnB2lB,GACK1Q,YAAc/V,EA6CzB,IAQe2T,gBARS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,MACb2B,QAASpC,EAAMoC,WAIRqQ,CAAyB8S,I,qBCnElC3G,G,4MAGF5e,MAAQ,CACJoT,YAAY,EACZC,UAAW,G,kEAGM,IAAD,OAChBjU,KAAKkU,QAAQC,cAAa,GAEvBlO,OAAOogB,WAAa,KACnBrmB,KAAKkU,QAAQC,cAAa,GAE1BnU,KAAKC,MAAM+C,QAAQA,QAAQP,MAAK,SAAAL,GAAM,OAAIA,EAAOzB,KAAKa,MAAQ,EAAKvB,MAAM+lB,MAAMC,OAAO/Z,OAGtFlM,KAAKC,MAAMmT,eAAelG,aAAalN,KAAKC,MAAM+lB,MAAMC,OAAO/Z,GAAIlM,KAAKC,MAAMU,KAAKoK,UAC/E/K,KAAKC,MAAM+C,QAAQA,QAAQP,MAAK,SAAAL,GAAM,OAAIA,EAAOzB,KAAKa,MAAQ,EAAKvB,MAAM+lB,MAAMC,OAAO/Z,MAAIhL,QAC1FlB,KAAKC,MAAMmT,eAAenG,WAAWjN,KAAKC,MAAM+lB,MAAMC,OAAO/Z,GAAIlM,KAAKC,MAAMU,KAAKoK,WAJrF/K,KAAKC,MAAMmT,eAAetG,UAAU9M,KAAKC,MAAM+lB,MAAMC,OAAO/Z,GAAIlM,KAAKC,MAAMU,KAAKoK,Y,6CASpF/K,KAAKkU,QAAQC,cAAa,K,+BAGpB,IAAD,OACD/R,EAASpC,KAAKC,MAAM+C,QAAQA,QAAQP,MAAK,SAAAL,GAAM,OAAIA,EAAOzB,KAAKa,MAAQ,EAAKvB,MAAM+lB,MAAMC,OAAO/Z,MAEnG,OACI,oCACK9J,IAAWA,EAAO2K,YAAc,oCAAE,yBAAKjN,UAAU,2CAA2CC,MAAO,CAACqmB,MAAO,IACpG,kBAACxE,GAAA,EAAD,CAAY9hB,UAAU,WAAW0S,QAAS,WACtC,EAAKvS,MAAM0S,QAAQ/E,KAAK,OAExB,kBAAC,KAAD,CAAerN,SAAS,QAAQR,MAAO,CAACO,MAAO,cAEtD,oCAAE,yBAAKP,MAAO,CAACoV,QAAS,YAAa3C,QAAS,WAC1C,EAAKvS,MAAM0S,QAAQ/E,KAAK,CACrB4H,OAAO,SAAD,OAAWpT,EAAOzB,KAAKa,SAEjC,kBAAC,EAAD,CAAQzB,MAAO,CACfsP,MAAO,GACPC,OAAQ,GACR/O,SAAU,GACVgP,WAAY,IACZC,gBAAgB,OAAD,OAASpN,EAAOzB,KAAKL,MAArB,MAChBJ,KAAMkC,EAAOzB,KAAKT,KAAK0P,MAAMH,OAAO,GAAKrN,EAAOzB,KAAKT,KAAKkM,KAAKqD,OAAO,MACzE,yBAAK3P,UAAU,YAAY0S,QAAS,WAChC,EAAKvS,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAO,SAAD,OAAWpT,EAAOzB,KAAKa,SAGjC,uBAAG1B,UAAU,aAAb,UAA6BsC,EAAOzB,KAAKT,KAAK0P,MAA9C,YAAuDxN,EAAOzB,KAAKT,KAAKkM,QACtEhK,EAAOzB,KAAKP,QAAU,uBAAGN,UAAU,gBAAgBiR,GAAW3O,EAAOzB,KAAKgD,WAC3EvB,EAAOzB,KAAKP,QAAU,uBAAGN,UAAU,eAAeC,MAAO,CAACO,MAAO,YAA3C,aAG/B,yBAAKR,UAAU,6BAA6BC,MAAO,CAACqmB,MAAO,IACvD,kBAAC,GAAD,CACI/jB,SAAUD,EAAOC,SACjBke,QAASne,IAAWA,EAAOlB,OAC3BJ,KAAK,SACLwf,SAAUle,EAAOzB,KAAKT,KAAK0P,MAC3B9L,OAAQ1B,EAAO0B,OACf3B,OAAQC,EAAOzB,KAAKa,IACpB2N,GAAI/M,EAAOzB,KAAKT,KAAK0P,MACrBzM,SAAUf,EAAOZ,IACjBY,OAAQA,MAIfA,GAAUA,EAAO2K,YAAc,oCAC5B,yBAAKjN,UAAU,6BAA6BC,MAAO,CAACqmB,MAAO,KAC3D,yBAAKtmB,UAAU,6BAA6BC,MAAO,CAACqmB,MAAO,IACvD,yBAAKtmB,UAAU,cACX,kBAAC,KAAD,CAAYC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAE/E,qD,GA/EPxV,IAAM2f,eAArBE,GACK/J,YAAc/V,EAqGV2T,oBAdS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZqC,QAASpC,EAAMoC,YAIvB,SAA4BuF,GACxB,MAAO,CACH6K,eAAgBE,YAAmBF,EAAgB7K,GACnD+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAWiM,KC9DxD8G,GA7CA,CACX,CACInhB,KAAM,SACNohB,OAAO,EACPzlB,KAAM,OACNW,MAAO,qEACPogB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI1c,KAAM,YACNohB,OAAO,EACPzlB,KAAM,OACNW,MAAO,qEACPogB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI1c,KAAM,IACNohB,OAAO,EACPzlB,KAAM,OACNW,MAAO,OACPogB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI1c,KAAM,aACNohB,OAAO,EACPzlB,KAAM,OACNW,MAAO,YACPogB,UAAW,kBAAM,kBAAC,GAAD,QAErB,CACI1c,KAAM,aACNohB,OAAO,EACPzlB,KAAM,OACNW,MAAO,GACPogB,UAAW,kBAAM,kBAAC,GAAD,CAAQlS,IAAKhL,EAAc,EAAG,SAEnD,CACIQ,KAAM,aACNohB,OAAO,EACPzlB,KAAM,OACNW,MAAO,GACPogB,UAAW,kBAAM,kBAAC,GAAD,SCxCV2E,G,uKANP,OACI,Q,GAHU7mB,IAAMa,W,8HCgCtBgT,GAAYC,cAhBA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFnE,gBAAiB,UACjB+I,UAAW,iBACX,UAAW,CACP/I,gBAAiB,WAErB,cAAe,CACXlP,MAAO,kBAEX,QAAS,CACLmmB,WAAY,iBAKNhT,CAAsBK,MAElC4S,G,uKACQ,IAAD,OACL,OAAO,oCACC,kBAAC,EAAD,CACI3mB,MAAO,CAACsP,MAAO,GAAIC,OAAQ,GAAI/O,SAAU,GAAIke,WAAY,OAAQlP,WAAY,IAAKC,gBAAgB,OAAD,OAASxP,KAAKC,MAAMU,KAAKL,MAAzB,MACjGJ,KAAMF,KAAKC,MAAMU,KAAKT,KAAK0P,MAAMH,OAAO,GAAGzP,KAAKC,MAAMU,KAAKT,KAAKkM,KAAKqD,OAAO,KAGhF,uBAAG3P,UAAU,qBAAqBE,KAAKC,MAAMU,KAAKT,KAAK0P,MAAvD,IAA+D5P,KAAKC,MAAMU,KAAKT,KAAKkM,MACpF,uBAAGtM,UAAU,qBAAb,UAEA,oCACI,yBAAKA,UAAU,YACX,kBAAC,KAAD,CAASC,MAAO,CAACmP,eAAgB,QAASsD,QAAS,SAACxK,GAC7C,iBAAU,EAAK/H,MAAMU,KAAKa,OAAU,EAAKvB,MAAM0S,QAAQC,SAASC,UAC/D7K,EAAE8K,kBACPhT,UAAU,cAAcqP,GAAE,iBAAYnP,KAAKC,MAAMU,KAAKa,MACrD,kBAAC,GAAD,CAAWlB,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,cAC9D,kBAAC,KAAD,CAA+BzS,MAAO,CAACO,MAAO,eAGtD,uCAG8B,IAAjCN,KAAKC,MAAMU,KAAKwD,cAAsB,yBAAKrE,UAAU,YAClD,kBAAC,GAAD,CAAWQ,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,WAC9D,EAAKvS,MAAMqX,aAAaf,YAAY,EAAKtW,MAAMkC,OAAQ,EAAKlC,MAAM8S,OAAOhI,YAEzE,kBAAC,KAAD,CAAuBhL,MAAO,CAACO,MAAO,cAE1C,wCAG8B,IAAjCN,KAAKC,MAAMU,KAAKwD,cAAsB,yBAAKrE,UAAU,YAClD,kBAAC,GAAD,CAAWQ,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,WAC9D,EAAKvS,MAAMqX,aAAad,cAAc,EAAKvW,MAAMkC,OAAQ,EAAKlC,MAAM8S,OAAOhI,YAE3E,kBAAC,KAAD,CAAmBhL,MAAO,CAACO,MAAO,cAEtC,uCAG+B,IAAjCN,KAAKC,MAAMU,KAAKwD,cAAuD,IAAjCnE,KAAKC,MAAMU,KAAKwD,eAAuB,yBAAKrE,UAAU,YAC1F,kBAAC,GAAD,CAAWQ,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,WAC9D,EAAKvS,MAAMqX,aAAab,cAAc,EAAKxW,MAAMkC,OAAQ,EAAKlC,MAAM8S,OAAOhI,YAE3E,kBAAC,KAAD,CAAmBhL,MAAO,CAACO,MAAO,cAEtC,uCAG8B,IAAjCN,KAAKC,MAAMU,KAAKwD,cAAsB,yBAAKrE,UAAU,YAClD,kBAAC,GAAD,CAAWQ,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,WAC9D,EAAKvS,MAAMqX,aAAab,cAAc,EAAKxW,MAAMkC,OAAQ,EAAKlC,MAAM8S,OAAOhI,YAE3E,kBAAC,KAAD,CAA2BhL,MAAO,CAACO,MAAO,cAE9C,4C,GAzDAX,IAAMa,WA6Ef6S,oBAbS,SAAAzS,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACb8Q,OAAQnS,EAAMD,SAItB,SAA4B4H,GACxB,MAAO,CACH+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAWmT,K,+DClFjElT,GAAYC,cAhBA,SAAAC,GAAK,MAAK,CACxBC,KAAM,CACFnE,gBAAiB,UACjB+I,UAAW,iBACX,UAAW,CACP/I,gBAAiB,WAErB,cAAe,CACXlP,MAAO,kBAEX,QAAS,CACLmmB,WAAY,iBAKNhT,CAAsBK,MAElC6S,G,4MACF/lB,MAAQ,CACJ4Z,UAAW,Q,uDAGL,IAAD,OACL,OAAO,oCACH,kBAAC,EAAD,CACIza,MAAO,CAACsP,MAAO,GAAIC,OAAQ,GAAI/O,SAAU,GAAIke,WAAY,OAAQlP,WAAY,IAAKC,gBAAgB,OAAD,OAASxP,KAAKC,MAAMU,KAAKL,MAAzB,MACjGJ,KAAMF,KAAKC,MAAMU,KAAKT,KAAK0P,MAAMH,OAAO,GAAGzP,KAAKC,MAAMU,KAAKT,KAAKkM,KAAKqD,OAAO,KAGhF,uBAAG3P,UAAU,qBAAqBE,KAAKC,MAAMU,KAAKT,KAAK0P,MAAvD,IAA+D5P,KAAKC,MAAMU,KAAKT,KAAKkM,MACpF,uBAAGtM,UAAU,qBAAb,UAEA,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAWQ,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,cAC9D,kBAAC,KAAD,CAAsBzS,MAAO,CAACO,MAAO,cAEzC,wCAGJ,yBAAKR,UAAU,YACX,kBAAC,GAAD,CAAWQ,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,WAC9D,EAAKvS,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAO,sBAGX,kBAAC,KAAD,CAAkBzV,MAAO,CAACO,MAAO,cAErC,wCAGJ,yBAAKR,UAAU,YACX,kBAAC,GAAD,CAAWQ,MAAM,UAAUgV,KAAK,QAAQC,aAAW,MAAM/C,QAAS,cAC9D,kBAAC,KAAD,CAAuBzS,MAAO,CAACO,MAAO,cAE1C,0C,GArCKX,IAAMa,WAwDZ6S,oBAbS,SAAAzS,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAWoT,KC7EjE9F,GAAoB,CACtB3I,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,mCACxBpD,QAAwB,OACxBsD,eAAwB,SACxBzB,SAAwB,OACxB3H,MAAwB,UAI1BuX,G,kLACmB,IAAD,OACZ5mB,KAAKC,MAAMgC,MAAMA,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ,EAAKvB,MAAMkC,WAAWnC,KAAKC,MAAMU,KAAKa,MAAQxB,KAAKC,MAAMkC,QAC1GnC,KAAKC,MAAMqX,aAAavB,QAAQ/V,KAAKC,MAAMkC,OAAQnC,KAAKC,MAAMU,KAAKoK,Y,+BAIjE,IAAD,OACDpK,EAAOX,KAAKC,MAAMgC,MAAMA,MAAMQ,MAAK,SAAA9B,GAAI,OAAIA,EAAKa,MAAQ,EAAKvB,MAAMkC,UACvE,OAAO,kBAAC,KAAD,CACH4W,QAAQ,EACRC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAAO8gB,GACP5H,aAAa,QAEZtY,GACG,kBAAC,GAAD,CAAWwB,OAAQnC,KAAKC,MAAMkC,OAAQxB,KAAMA,IAG/CX,KAAKC,MAAMU,KAAKa,MAAQxB,KAAKC,MAAMkC,QAChC,kBAAC,GAAD,W,GApBGxC,IAAMa,WAuCV6S,oBAbS,SAAAzS,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAWqT,KCnEjEzP,G,kLAEMnX,KAAKC,MAAMgC,MAAMgC,UAAU/C,QAC3BlB,KAAKC,MAAMqX,aAAapB,aAAalW,KAAKC,MAAMU,KAAKoK,Y,mEAQnD,IAAD,OACL,OAAO,kBAAC,aAAD,CACH0J,IAAK,SAACA,GAAS,EAAKqD,WAAarD,GACjCC,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV8U,SAAU,WAAO,EAAKA,YACtB7U,MAAO,CAACuP,OAAQ,KAChBuF,UAAQ,GAEP7U,KAAKC,MAAMgC,MAAMgC,UAAUhD,YAAc,kBAAC8W,GAAA,EAAD,CAAkBhY,MAAO,CAC3DO,MAAO,UACPsT,SAAU,WACVrC,KAAM,EACNsC,MAAO,EACPqB,OAAQ,OACR1D,IAAK,sBAEZxR,KAAKC,MAAMgC,MAAMgC,UAAUhC,MAAMX,KAAI,SAACX,EAAM+O,GACzC,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAO/O,KAAMA,QAGjCX,KAAKC,MAAMgC,MAAMgC,UAAUhC,MAAMsD,SAAWvF,KAAKC,MAAMgC,MAAMgC,UAAUhD,YAAe,yBAAKnB,UAAU,cACpG,kBAAC,KAAD,CAAWC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAE9E,6E,GArCOxV,IAAMa,WAwDd6S,oBAbS,SAAAzS,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAW4D,KCxDjEA,G,kLAEMnX,KAAKC,MAAMgC,MAAMiC,QAAQhD,QACzBlB,KAAKC,MAAMqX,aAAanB,WAAWnW,KAAKC,MAAMU,KAAKoK,Y,mEAQjD,IAAD,OACL,OAAO,kBAAC,aAAD,CACH0J,IAAK,SAACA,GAAS,EAAKqD,WAAarD,GACjCC,oBAAqB,SAAAzU,GAAK,OAAI,yBAAKH,UAAU,oBAC7C6U,oBAAqB,SAAA1U,GAAK,OAAI,yBAAKH,UAAU,oBAC7CA,UAAU,SACV8U,SAAU,WAAO,EAAKA,YACtB7U,MAAO,CAACuP,OAAQ,KAChBuF,UAAQ,GAEP7U,KAAKC,MAAMgC,MAAMiC,QAAQjD,YAAc,kBAAC8W,GAAA,EAAD,CAAkBhY,MAAO,CACzDO,MAAO,UACPsT,SAAU,WACVrC,KAAM,EACNsC,MAAO,EACPqB,OAAQ,OACR1D,IAAK,sBAEZxR,KAAKC,MAAMgC,MAAMiC,QAAQjC,MAAMX,KAAI,SAACX,EAAM+O,GACvC,OACI,kBAAC,GAAD,CAAUC,IAAKD,EAAO/O,KAAMA,QAGjCX,KAAKC,MAAMgC,MAAMiC,QAAQjC,MAAMsD,SAAWvF,KAAKC,MAAMgC,MAAMiC,QAAQjD,YAAe,yBAAKnB,UAAU,cAChG,kBAAC,KAAD,CAAWC,MAAO,CAACO,MAAO,UAAWC,SAAU,GAAI2U,OAAQ,SAAUC,QAAS,WAE9E,6E,GArCOxV,IAAMa,WAwDd6S,oBAbS,SAAAzS,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAW4D,KCzDjE0J,GAAoB,CACtB3I,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,mCACxBpD,QAAwB,OACxBsD,eAAwB,SACxBzB,SAAwB,OACxB3H,MAAwB,cACxBqJ,SAAwB,QACxBC,QAAwB,WAI1BxB,G,4MACFvW,MAAQ,CACJ4Z,UAAW,W,uDAGL,IAAD,OACL,OAAO,kBAAC,KAAD,CACHzB,OAAQ/Y,KAAKC,MAAM8Y,OACnBC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAAO8gB,GACP5H,aAAa,YAEb,wBAAInZ,UAAU,eAAd,YAEA,yBAAKA,UAAU,iBACX,0BAAMA,UAAoC,YAAzBE,KAAKY,MAAM4Z,UAA0B,SAAW,GAAIhI,QAAS,WAAO,EAAKP,SAAS,CAACuI,UAAW,cAA/G,WACA,0BAAM1a,UAAoC,UAAzBE,KAAKY,MAAM4Z,UAAwB,SAAW,GAAIhI,QAAS,WAAO,EAAKP,SAAS,CAACuI,UAAW,YAA7G,SACA,0BAAM1a,UAAoC,WAAzBE,KAAKY,MAAM4Z,UAAyB,SAAW,GAAIhI,QAAS,WAAO,EAAKP,SAAS,CAACuI,UAAW,aAA9G,WAGsB,YAAzBxa,KAAKY,MAAM4Z,WAA2B,kBAAChB,GAAD,CAAShH,QAAS,SAACtG,GACtD,EAAKjM,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAO,SAAD,OAAWtJ,MAEtBpL,KAAM,WACiB,UAAzBd,KAAKY,MAAM4Z,WAAyB,kBAACqM,GAAD,MACX,WAAzB7mB,KAAKY,MAAM4Z,WAA0B,kBAACsM,GAAD,W,GA1B3BnnB,IAAMa,WA4Cd6S,oBAbS,SAAAzS,GACpB,MAAO,CACHqB,MAAOrB,EAAMqB,MACbtB,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACH+O,aAAchE,YAAmBgE,EAAc/O,MAIxC8K,CAA6CE,aAAW4D,KCtEjE0J,GAAoB,CACtB3I,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,mCACxBpD,QAAwB,OACxBsD,eAAwB,SACxBzB,SAAwB,OACxB3H,MAAwB,cACxBqJ,SAAwB,QACxBC,QAAwB,WAI1BoO,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACHhO,OAAQ/Y,KAAKC,MAAM8Y,OACnBC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAAO8gB,GACP5H,aAAa,eAEb,wBAAInZ,UAAU,eAAd,YAEA,kBAAC0Z,GAAD,CAAShH,QAAS,SAACtG,GACf,EAAKjM,MAAM0S,QAAQ/E,KAAnB,iBAAkC1B,Y,GAXvBvM,IAAMa,WA6BlB6S,oBAZS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,SAIpB,SAA4B4H,GACxB,MAAO,CACHuQ,aAAcxF,YAAmBwF,EAAcvQ,MAIxC8K,CAA6CE,aAAWwT,KCzDjEvO,GAA0B,CAC5BN,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,mCACxBpD,QAAwB,OACxBsD,eAAwB,SACxBzB,SAAwB,OACxB3H,MAAwB,cACxBqJ,SAAwB,QACxBC,QAAwB,WAI1BC,G,4MACFhY,MAAQ,CACJoX,YAAa,GACbhW,OAAO,EACP4T,OAAQ,I,uDAGH5N,GAAI,IAAD,OACRA,EAAE8K,iBAEFtH,MAAM,GAAD,OAAIb,GAAJ,oBAA8B,CAC/Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAY5L,KAAKC,MAAMU,KAAKoK,WAE7Cc,KAAMC,KAAKC,UAAU,CACjBG,GAAIlM,KAAKC,MAAMoB,MAAMF,WAAWK,IAChCwW,YAAahY,KAAKY,MAAMoX,gBAG/BrP,MAAK,WACF,EAAKsJ,SAAS,CAAC+F,YAAa,KAC5B8M,KAAMkC,QAAQ,iBAAkB,CAC5BpT,SAAUkR,KAAMC,SAASC,aAE7B,EAAK/kB,MAAMyJ,a,+BAIT,IAAD,OACL,OAAO,kBAAC,KAAD,CACHqP,OAAQ/Y,KAAKC,MAAM8Y,OACnBC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAAOyY,GACPS,aAAa,eAEb,wBAAInZ,UAAU,eAAd,gBAEA,0BAAMC,MAAO,CAACoV,QAAS,YAAa+D,SAAU,SAAClR,GAAO,EAAKkR,SAASlR,KAChE,kBAACwR,GAAD,CAAShH,QAAS,SAACtG,GACX,EAAKtL,MAAMoX,YAAYvV,MAAK,SAAAC,GAAC,OAAIA,IAAMwJ,KAGvC,EAAK+F,SAAS,CAAC+F,YAAY,YAAK,EAAKpX,MAAMoX,YAAYrW,QAAO,SAAAe,GAAC,OAAIA,IAAMwJ,QAFzE,EAAK+F,SAAS,CAAC+F,YAAY,CAAE9L,GAAH,mBAAU,EAAKtL,MAAMoX,iBAGpDlX,KAAM,SAAUkX,YAAahY,KAAKY,MAAMoX,eAEzChY,KAAKY,MAAMoX,YAAYzS,QAAU,4BAAQzF,UAAU,cAAc0S,QAAS,WAAO,EAAKvS,MAAMyJ,SAAU3J,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAA9G,UAChCnT,KAAKY,MAAMoX,YAAYzS,QAAU,4BAAQzF,UAAU,cAAcgB,KAAK,SAASf,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAAvF,gB,GAjD3BxT,IAAMa,WAoEhB6S,oBAbS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BkH,GACxB,MAAO,CACHuQ,aAAcxF,YAAmBwF,EAAcvQ,MAIxC8K,CAA6CE,aAAWqF,KClGjEX,GAA0B,CAC5BC,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,qCAkB1B7B,GAAiBjD,cAdA,SAAAC,GAAK,MAAK,CAC7BC,KAAM,CACFrT,MAAO,UACP,YAAa,CACTA,MAAO,UACPqW,OAAQ,QAEZ,UAAW,CACPnH,gBAAiB,gBAGzBoH,QAAS,MAGUnD,CAA2BoD,MAE5C+B,G,4MACFhY,MAAQ,CACJa,MAAO,EAAKxB,MAAMoB,MAAMF,WAAWM,MACnCC,UAAW,EAAKzB,MAAMoB,MAAMF,WAAWO,UACvCM,OAAO,EACP4T,OAAQ,I,uDAGH5N,GAAI,IAAD,OACRhI,KAAKiS,SAAS,CAACjQ,OAAO,EAAO4T,OAAQ,KACrC5N,EAAE8K,iBAEFtH,MAAM,GAAD,OAAIb,GAAJ,kBAA4B,CAC7Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAY5L,KAAKC,MAAMU,KAAKoK,WAE7Cc,KAAMC,KAAKC,UAAU,CACjBG,GAAIlM,KAAKC,MAAMoB,MAAMF,WAAWK,IAChCC,MAAOzB,KAAKY,MAAMa,MAClBC,UAAW1B,KAAKY,MAAMc,cAG7BiH,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,SAACpH,GACAA,EAAKS,MACJ,EAAKiQ,SAAS,CAACjQ,OAAO,EAAM4T,OAAQrU,EAAKqU,SAEzC,EAAK3V,MAAMyJ,a,+BAKb,IAAD,OACL,OAAO,kBAAC,KAAD,CACHqP,OAAQ/Y,KAAKC,MAAM8Y,OACnBC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAAOkY,GACPgB,aAAa,aAEb,wBAAInZ,UAAU,eAAd,aAEA,0BAAMC,MAAO,CAACoV,QAAS,YAAa+D,SAAU,SAAClR,GAAO,EAAKkR,SAASlR,KAChE,2BACIwP,MAAOxX,KAAKY,MAAMa,MAClBkW,SAAU,SAAC3P,GAAO,EAAKiK,SAAS,CAACxQ,MAAOuG,EAAEuP,OAAOC,SACjD1X,UAAU,cACVgB,KAAK,OACLf,MAAO,CAACoZ,aAAc,IACtBtB,YAAY,QACZuB,UAAW,KAEdpZ,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,UAAhBA,EAAM3B,UAAsB,0BAAM/V,UAAU,qBACxEE,KAAKY,MAAMgV,OAAOnT,MAAK,SAAA+U,GAAK,MAAoB,UAAhBA,EAAM3B,SAAmBC,KAG9D,kBAACuD,GAAA,EAAD,CACIC,QACI,kBAAC,GAAD,CACI1C,QAAS5W,KAAKY,MAAMc,UACpBiW,SAAU,WAAO,EAAK1F,SAAS,CAACvQ,WAAY,EAAKd,MAAMc,eAG/D3B,MAAO,CAACO,MAAO,WACfiZ,MAAM,kBAGTvZ,KAAKY,MAAMa,QAAUzB,KAAKC,MAAMoB,MAAMF,WAAWM,OAASzB,KAAKY,MAAMc,YAAc1B,KAAKC,MAAMoB,MAAMF,WAAWO,WAAa,4BAAQ5B,UAAU,cAAc0S,QAAS,WAClK,EAAKvS,MAAMyJ,SACZ3J,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAFiF,SAI3HnT,KAAKY,MAAMa,QAAUzB,KAAKC,MAAMoB,MAAMF,WAAWM,OAASzB,KAAKY,MAAMc,YAAc1B,KAAKC,MAAMoB,MAAMF,WAAWO,YAAc,4BAAQ5B,UAAU,cAAcgB,KAAK,SAASf,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAAvF,c,GAzEtHxT,IAAMa,WA4FhB6S,oBAbS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BkH,GACxB,MAAO,CACHuQ,aAAcxF,YAAmBwF,EAAcvQ,MAIxC8K,CAA6CE,aAAWqF,KC5IjEX,GAA0B,CAC5BC,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,mCACxBpD,QAAwB,OACxB6B,SAAwB,SAI1BiQ,G,yKACU,IAAD,OACPzb,MAAM,GAAD,OAAIb,GAAJ,oBAA8B,CAC/Bc,OAAQ,OACRC,QAAS,CACLC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAY5L,KAAKC,MAAMU,KAAKoK,WAE7Cc,KAAMC,KAAKC,UAAU,CACjBG,GAAIlM,KAAKC,MAAMoB,MAAMF,WAAWK,QAGvCmH,MAAK,WACF,EAAK1I,MAAMyJ,a,+BAIT,IAAD,OACL,OAAO,kBAAC,KAAD,CACHqP,OAAQ/Y,KAAKC,MAAM8Y,OACnBC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAAOkY,GACPgB,aAAa,eAEb,wBAAInZ,UAAU,cAAcC,MAAO,CAACsP,MAAO,SAA3C,aAEA,4BAAQvP,UAAU,cAAc0S,QAAS,WAAO,EAAKvS,MAAMyJ,SAAU3J,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAA9G,QACA,4BAAQrT,UAAU,cAAc0S,QAAS,WAAO,EAAK0G,YAAanZ,MAAO,CAACsP,MAAO,cAAe8D,UAAW,IAA3G,e,GA5BaxT,IAAMa,WAwChB6S,gBAPS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,SAINgS,CAAyBE,aAAW0T,KCvD7CzO,GAA0B,CAC5BN,QAAS,CACLtE,SAAU,QACVpC,IAAK,EACLD,KAAM,EACNsC,MAAO,EACP/B,OAAQ,EACRtC,gBAAiB,sBACjB2I,OAAQ,GAEZC,QAAU,CACN5G,IAAwB,MACxBD,KAAwB,MACxBsC,MAAwB,OACxB/B,OAAwB,OACxBiF,SAAwB,QACxBsB,YAAwB,OACxB/F,UAAwB,wBACxBgG,aAAwB,OACxBC,UAAwB,mCACxBpD,QAAwB,OACxBsD,eAAwB,SACxBzB,SAAwB,OACxB3H,MAAwB,cACxBqJ,SAAwB,QACxBC,QAAwB,WAI1BC,G,uKACQ,IAAD,OACL,OAAO,kBAAC,KAAD,CACHG,OAAQ/Y,KAAKC,MAAM8Y,OACnBC,eAAgB,WAAO,EAAK/Y,MAAMyJ,SAClC3J,MAAOyY,GACPS,aAAa,oBAEb,wBAAInZ,UAAU,eAAd,oBAEA,kBAAC0Z,GAAD,CAAShH,QAAS,SAACtG,GACf,EAAKjM,MAAM0S,QAAQ/E,KAAnB,iBAAkC1B,Y,GAXzBvM,IAAMa,WA8BhB6S,oBAbS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,KACZU,MAAOT,EAAMS,UAIrB,SAA4BkH,GACxB,MAAO,CACHuQ,aAAcxF,YAAmBwF,EAAcvQ,MAIxC8K,CAA6CE,aAAWqF,KC7DjEsO,G,4MACFtmB,MAAQ,CACJumB,IAAKC,KAAG/C,MAAM,EAAKpkB,MAAM2S,SAAS4C,OAAQ,CAAE6R,mBAAmB,IAAQF,IACvExmB,KAAMymB,KAAG/C,MAAM,EAAKpkB,MAAM2S,SAAS4C,OAAQ,CAAE6R,mBAAmB,IAAQ1mB,KACxE2mB,MAAOF,KAAG/C,MAAM,EAAKpkB,MAAM2S,SAAS4C,OAAQ,CAAE6R,mBAAmB,IAAQC,O,kEAGxD,IAAD,OAChBtnB,KAAKC,MAAM0S,QAAQ4U,QAAO,SAAC3U,GACvB,EAAKX,SAAS,CACVkV,IAAKC,KAAG/C,MAAMzR,EAAS4C,OAAQ,CAAE6R,mBAAmB,IAAQF,IAC5DxmB,KAAMymB,KAAG/C,MAAMzR,EAAS4C,OAAQ,CAAE6R,mBAAmB,IAAQ1mB,KAC7D2mB,MAAOF,KAAG/C,MAAMzR,EAAS4C,OAAQ,CAAE6R,mBAAmB,IAAQC,a,+BAKhE,IAAD,OACL,OAAO,oCACH,kBAAC,GAAD,CAAYvO,OAA2B,YAAnB/Y,KAAKY,MAAMumB,IAAmBzd,MAAO,WACrD,EAAKzJ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,QAIhB,kBAAC,GAAD,CAAcuD,OAA2B,YAAnB/Y,KAAKY,MAAMumB,IAAmBzd,MAAO,WACvD,EAAKzJ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,QAIfxV,KAAKY,MAAMD,MAAQ,kBAAC,GAAD,CAAMwB,OAAQnC,KAAKY,MAAMD,KAAM+I,MAAO,WACtD,EAAKzJ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,QAIhB,kBAAC,GAAD,CAAUuD,OAA6B,aAArB/Y,KAAKY,MAAM0mB,MAAsB5d,MAAO,WACtD,EAAKzJ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,QAIhB,kBAACgS,GAAD,CAAQzO,OAA2B,WAAnB/Y,KAAKY,MAAMumB,KAAoBnnB,KAAKC,MAAMoB,MAAMF,WAAYuI,MAAO,WAC/E,EAAKzJ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,QAII,aAAnBxV,KAAKY,MAAMumB,KAAsBnnB,KAAKC,MAAMoB,MAAMF,YAAenB,KAAKC,MAAMU,KAAKa,MAAQxB,KAAKC,MAAMoB,MAAMF,WAAW+kB,SAAY,kBAACuB,GAAD,CAAU1O,OAA2B,aAAnB/Y,KAAKY,MAAMumB,KAAsBnnB,KAAKC,MAAMoB,MAAMF,WAAYuI,MAAO,WACrN,EAAKzJ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,QAII,eAAnBxV,KAAKY,MAAMumB,KAAwBnnB,KAAKC,MAAMoB,MAAMF,YAAenB,KAAKC,MAAMU,KAAKa,MAAQxB,KAAKC,MAAMoB,MAAMF,WAAW+kB,SAAY,kBAAC,GAAD,CAAYnN,OAA2B,eAAnB/Y,KAAKY,MAAMumB,KAAwBnnB,KAAKC,MAAMoB,MAAMF,WAAYuI,MAAO,WAC3N,EAAKzJ,MAAM0S,QAAQ/E,KAAK,CACpB4H,OAAQ,QAIhB,kBAACkS,GAAD,CAAS3O,SAAU/Y,KAAKC,MAAM+C,QAAQC,gBAAgBsC,OAAQmE,MAAO,SAACrJ,GAClE,EAAKJ,MAAMsI,SAAS,CAChBzH,K1D/Be,sB0DgCfC,QAAS,a,GAhELpB,IAAMa,WA+Ef6S,gBARS,SAAAzS,GACpB,MAAO,CACHS,MAAOT,EAAMS,MACbV,KAAMC,EAAMD,KACZqC,QAASpC,EAAMoC,WAIRqQ,CAAyBE,aAAW2T,KC9E7CS,G,4MACJ/mB,MAAQ,CACNgnB,UAAU,G,EAyEZC,aAAe,YAA4B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,6BACxC,OACE,kBAAC,KAAD,iBACMA,EADN,CAEEC,OAAQ,kBACN,EAAK/nB,MAAMU,KAAKD,OACb,oCACEonB,EACD,kBAAC,GAAD,OAGF,kBAAC,KAAD,CACE3Y,GAAI,CACF0D,SAAU,iB,EASxBoV,UAAY,YAA4B,IAAzBH,EAAwB,EAAxBA,SAAaC,EAAW,6BACrC,OACE,kBAAC,KAAD,iBACMA,EADN,CAEEC,OAAQ,kBACL,EAAK/nB,MAAMU,KAAKD,OAGf,kBAAC,KAAD,CACEyO,GAAI,CACF0D,SAAU,OAJdiV,O,kEAlGW,IAAD,OAClB9nB,KAAKC,MAAM0S,QAAQ4U,QAAO,WACxBriB,EAAS,EAAKjF,MAAM0S,QAAQC,SAASC,SAAUyT,OAGjDphB,EAASlF,KAAKC,MAAM0S,QAAQC,SAASC,SAAUyT,IAL7B,IAQdvb,EADgB/K,KAAKC,MAAjB6a,QACeoN,IAAI,YAEvBnd,EACFS,MAAM,GAAD,OAAIb,GAAJ,gBAA0B,CAC7Bc,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAc,UAAD,OAAYb,MAG1BpC,MAAK,SAACqD,GAAD,OAAcA,EAASC,UAC5BtD,MAAK,YAAwD,IAAtDhI,EAAqD,EAArDA,KAAMqC,EAA+C,EAA/CA,QAASE,EAAsC,EAAtCA,YAAagX,EAAyB,EAAzBA,oBAClChS,GAAiB4C,KAAKC,GACtB,EAAK9K,MAAMqa,YAAYL,UAAUtZ,EAAMqC,EAASE,EAAagX,EAAqBnP,GAClF,EAAKkH,SAAS,CAAC2V,UAAU,OAE1Bre,OAAM,WACL,EAAK0I,SAAS,CAAC2V,UAAU,OAG7B5nB,KAAKiS,SAAS,CAAC2V,UAAU,M,+BAInB,IAAD,OACP,OAAO5nB,KAAKY,MAAMgnB,UAAa,oCAC7B,kBAAC,KAAD,KACKtB,GAAOhlB,KAAI,SAAC6mB,EAAOzY,GAChB,OAAQyY,EAAMrnB,MACV,IAAK,OACD,OAAO,kBAAC,EAAKmnB,UAAN,CACHtY,IAAKD,EACLvK,KAAMgjB,EAAMhjB,KACZohB,MAAO4B,EAAM5B,OAEb,kBAAC4B,EAAMtG,UAAP,OAGR,IAAK,OACD,OAAO,kBAAC,EAAKgG,aAAN,CACHlY,IAAKD,EACLvK,KAAMgjB,EAAMhjB,KACZohB,MAAO4B,EAAM5B,OAEb,kBAAC4B,EAAMtG,UAAP,OAGR,QACI,OAAO,MAQnB,kBAAC,KAAD,CAAOA,UAAW2E,W,GAtEJ7mB,IAAMa,WAkIf6S,oBAbS,SAACzS,GACvB,MAAO,CACLD,KAAMC,EAAMD,SAIhB,SAA4B4H,GAC1B,MAAO,CACL+R,YAAahH,YAAmBgH,EAAa/R,GAC7C+O,aAAchE,YAAmBgE,EAAc/O,MAIpC8K,CAGb4H,aAAY1H,aAAWoU,MC5InBS,G,kDACF,WAAYnoB,GAAQ,IAAD,8BACf,cAAMA,IACDkU,aAAe,SAACqD,GACjB,EAAKvF,SAAS,CAACoW,WAAY7Q,KAG/B,EAAK5W,MAAQ,CACTynB,YAAY,EACZlU,aAAc,EAAKA,cARR,E,qDAef,OACI,kBAACzU,EAAa4oB,SAAd,CAAuB9Q,MAAOxX,KAAKY,OAC/B,yBAAKd,UAAU,mBACX,yBAAKA,UAAU,OACVE,KAAKC,MAAMU,KAAKD,QAAU,kBAAC,GAAD,CAAa+Z,KAAMza,KAAKY,MAAMynB,aACzD,kBAAC,GAAD,a,GArBN1oB,IAAMa,WAmCT6S,gBANS,SAAAzS,GACpB,MAAO,CACHD,KAAMC,EAAMD,QAIL0S,CAAyB+U,ICnCpBG,QACW,cAA7BtiB,OAAO2M,SAAS4V,UAEe,UAA7BviB,OAAO2M,SAAS4V,UAEhBviB,OAAO2M,SAAS4V,SAASxC,MACvB,2D,eCONyC,KAAMC,cAAc,SAEpBC,IAASX,OACL,kBAACY,GAAA,EAAD,KACI,kBAAC,IAAD,CAAUtgB,MAAOA,GACb,kBAAC,KAAD,KACI,kBAAC,GAAD,MACA,kBAAC,KAAD,SAIZ9C,SAASkM,eAAe,SD+FtB,kBAAmBhK,WACrBA,UAAUmhB,cAAcC,MACrBngB,MAAK,SAAAogB,GACJA,EAAaC,gBAEdzf,OAAM,SAAAvH,GACL8G,QAAQ9G,MAAMA,EAAMM,a","file":"static/js/main.d1da64ce.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_DELETE,\r\n    ROOMS_EDIT,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: []\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: []\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_GET,\r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","import { push } from 'react-router-redux';\r\n\r\nexport function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import adapter from 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\nconst RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraints = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst options = {\r\n    iceServers: [\r\n        {urls: 'stun:173.194.66.127:19302'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia({audio: true, video: false}).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia({\r\n            audio: true,\r\n            video: false\r\n        }, \r\n        callback, \r\n        () => {\r\n            createEmptyStream(callback)\r\n        });\r\n    }\r\n\r\n    function onerror(e) {\r\n        console.log(JSON.stringify(e, null, '\\t'));\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia((stream) => {\r\n            localStream = stream\r\n            // let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n            // let dest = audioCtx.createMediaStreamDestination ();\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(options)\r\n            \r\n            WebRtcPeerConnection.addStream(stream)\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraints).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer);\r\n                \r\n                onRoomOffer(null, offer)\r\n            });\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getAudioTracks()[0].stop()\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getAudioTracks()[0].stop()\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(WebRtcPeerConnection && e.candidate)\r\n            WebRtcPeerConnection.addIceCandidate(e)\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        let answer = new RTCSessionDescription({\r\n            type: 'answer',\r\n            sdp: sdpAnswer\r\n        })\r\n        \r\n        WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n        let stream = new MediaStream();\r\n\r\n        WebRtcPeerConnection.getReceivers().forEach(function (sender) {\r\n            stream.addTrack(sender.track);\r\n        });\r\n\r\n        remoteStream = stream\r\n\r\n        store.dispatch({\r\n            type: ROOMS_SET_REMOTE_STREAM,\r\n            payload: stream\r\n        })\r\n\r\n        speechEvents = hark(localStream, {});\r\n \r\n        speechEvents.on('speaking', function() {\r\n            SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n        });\r\n    \r\n        speechEvents.on('stopped_speaking', function() {\r\n            SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n        });\r\n    }\r\n}","export const urlApi = 'https://romadevtest.tk:8080'","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = null\r\nlet activeLang = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n        // console.log(123)\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}{this.props.room.title}</p>\r\n                        <div className=\"users\">\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} style={{width: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","export function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && 'Today'\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes : day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (\r\n                (diff < 60 && 'just now')\r\n                || (diff < 120 && \"1 \" + 'minute' + \" \" + 'ago' + \"\")\r\n                || (diff < 3600 && Math.floor(diff / 60) + \" \" + 'minutes' + \" \" + 'ago' + \"\")\r\n                || (diff < 7200 && \"1 \" + 'hour' + \" \" + 'ago' + \"\")\r\n                || (diff < 86400 && Math.floor(diff / 3600) + \" \" + 'hours' + \" \" + 'ago')\r\n            )\r\n        )\r\n        || (day_diff == 1 && 'yerstaday' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + \" \" + 'days' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + \" \" + 'weeks' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive() {\r\n        let element = document.getElementById(this.props.from)\r\n        let rect = element.getBoundingClientRect()\r\n\r\n        let top\r\n        let left\r\n        if(this.props.bottom) {\r\n            top = rect.y + element.clientHeight\r\n            left = rect.x\r\n        }\r\n        else {\r\n            top = rect.y\r\n            left = rect.x+element.clientWidth\r\n        }\r\n        \r\n        this.setState({left, top})\r\n        this.setState({active: !this.state.active})\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar online={this.props.user.online} style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                    <div>\r\n                        <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>You:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <>{this.props.lastMessage.text}</>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.images[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span style={{color: '#008FF7'}}>Фотографии [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.sounds[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span style={{color: '#008FF7'}}>Аудио [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.files[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span style={{color: '#008FF7'}}>Файлы [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Chats</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>You dont have chats, lets create new</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(room => {\r\n            if(room.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: room.errors[0]\r\n                })\r\n                \r\n                return\r\n            }\r\n\r\n            room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n            room.users.map(x => {\r\n                x.speaking = false\r\n            })\r\n\r\n            setForceTitle(room.title)\r\n\r\n            dispatch({\r\n                type: ROOMS_JOIN_ROOM,\r\n                payload: {room, canLoad: room.dialog.messages.length === 50}\r\n            })\r\n            \r\n            SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n            try {\r\n                WebRtcController.connectRoom(room._id)\r\n            } catch (err) {\r\n                SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                })\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","import { \r\n    USERS_ADD,\r\n    USERS_GET,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder=\"Search\" />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>You dont have friends, lets add him</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Users not found</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create'})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n                this.props.history.push(`/rooms/${room._id}`)\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">New room</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">Select users</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder=\"Title\"\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'title').msg} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label=\"Private theme\"\r\n                    />\r\n\r\n                    <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>Next</button>\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Start</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Modal\r\nimport ModalCreateRoom from '../Modals/CreateRoom'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Rooms</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Create your first room in this language</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Что то пошло не так...</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create room\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar status={this.props.notification.type} style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div>\r\n                    <p className=\"user-name\">{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\">Invited you to the room&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\">Accept your friend request</p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\">Send you friend request</p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Notifications</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Here will placed your notifications</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ\r\n} from '../constants'\r\nimport store from '../store'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.history.push('/')\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Language</h2>\r\n\r\n                    <span style={{color: this.props.user.roomLang === 'eng' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }}>English</span>\r\n                    <span style={{color: this.props.user.roomLang === 'rus' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }}>Russian</span>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li><Avatar style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.notifications.noRead && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserSidebar)","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(this.state.audio) {\r\n            this.state.audio.parentElement.className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) { \r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound active'\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\nimport ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nlet ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span>\r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                .replace(/&amp;/g, '&')\r\n                                .replace(/&gt;/g, '>')\r\n                                .replace(/&lt;/g, '<')\r\n                                // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                            }\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.openSlider(images)\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.openSlider(images)\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Message))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, LinearProgress, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getClientHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight()/3 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} typing</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} typing</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Write your first message to {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialog)","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `Вложения [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">Attachment messages</h3>\r\n                        <p className=\"message-text\">{`${this.props.recentMessages.length} messages`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attachment","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: 0\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <div className=\"placeholder\">Write message...</div>}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    Reply\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    Forward\r\n                </Button>\r\n\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n\r\n                {(!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport Slider from './Slider'\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\nlet waitDraft = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isOpenSlider: false,\r\n        sliderImages: [],\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = ''\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.isOpenSlider && <Slider images={this.state.sliderImages} close={() => {this.setState({isOpenSlider: false, sliderImages: []})}} />}\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    openSlider={(sliderImages) => {this.setState({sliderImages, isOpenSlider: true})}}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\">{this.props.rooms.activeRoom.error.msg}</p>\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Members extends React.Component {\r\n    render() {\r\n        return <Scrollbars\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"theme-members scroll\"\r\n            autoHide\r\n        >\r\n            {this.props.users.map((user, index) => \r\n                <div key={index} className=\"member\">\r\n                    <Avatar name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                    {user.speaking && <span className=\"speaking\"></span>}\r\n                </div>\r\n            )}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6\">\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\" id={this.props.rooms.activeRoom._id}>\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} online</h3>\r\n                        </div>\r\n\r\n                        <ActionMenu \r\n                            actions={\r\n                                this.props.rooms.activeRoom.ownerId === this.props.user._id ? [\r\n                                    {text: 'Invite friends', action: () => {\r\n                                        this.props.history.push({\r\n                                            search: '?act=invite'\r\n                                        })\r\n                                    }},\r\n                                    {\r\n                                        text: 'Edit room',\r\n                                        action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=editRoom'\r\n                                            })\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: 'Delete room',\r\n                                        action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=deleteRoom'\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                ] : [\r\n                                    {\r\n                                        text: 'Invite friends', action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=invite'\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                ]} \r\n                            from={this.props.rooms.activeRoom._id} \r\n                            bottom={true} \r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat messages={this.props.rooms.activeRoom.dialog.messages} type=\"room\" to={this.props.rooms.activeRoom.title} dialogId={this.props.rooms.activeRoom.dialog._id} roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6 theme-screen\">\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Room))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../../Partials/Loading'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\n\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 32, \r\n                        height: 32, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} /></div>\r\n                    <div className=\"user-info\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                    </div></>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>User not found</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog))\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Room from '../Pages/User/Room';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport { randomInteger } from '../Controllers/FunctionsController';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={randomInteger(0, 1000)} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                />\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">Moscow</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>Message</p>\r\n                    </div>    \r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>+ Friend</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Accept</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Decline</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Remove</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PermMediaOutlined';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Avatar \r\n                style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n            />\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">Moscow</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Settings</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Contacts</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <PermMediaOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Media</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px'\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Incoming requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Outgoing requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">Contacts</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>Friends</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>Inbox</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>Outbox</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox />}\r\n            {this.state.activeTab === 'outbox' && <Outbox />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">New chat</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast.success(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">Select users</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>Back</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Invite</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">Edit room</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder=\"Title\"\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.state.errors.find(value => value.param === 'title').msg} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label=\"Private theme\"\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>Back</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Save</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>You sure?</h2>\r\n            \r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>Delete</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(DeleteRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">Forward messages</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD } from '../Redux/constants';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications}) => {\r\n          SocketController.init(apiToken)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}