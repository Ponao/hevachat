{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","Partials/Room/RoomItem.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Redux/actions/rooms.js","Redux/actions/users.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/Slider.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Redux/actions/call.js","Pages/User/Dialog.js","Router/config.js","Pages/NoMatch.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","name","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","user","state","action","type","payload","roomLang","isFetching","getted","activeRoom","isError","rooms","map","room","_id","title","isPrivate","filter","typers","canLoad","isLoading","remoteStream","error","users","roomId","userId","dialog","messages","message","_newId","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","combineReducers","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","min","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","length","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","mozRTCIceCandidate","RTCIceCandidate","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","lang","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","socket","activeLang","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","getState","setTimeout","WebRtcController","otherId","id","read","last","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","images","files","sounds","append","file","push","localMessage","text","recentMessages","now","m","socketId","messageRes","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","RoomItem","textDecoration","to","Button","width","height","fontWeight","backgroundColor","charAt","index","key","first","getHM","date","time","hours","getHours","minutes","getMinutes","toString","LastMessageDate","getTime","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","OnlineDate","diff","getDay","month_diff","isNaN","ceil","ActionMenu","active","left","top","element","getElementById","from","rect","getBoundingClientRect","bottom","clientHeight","clientWidth","setState","addEventListener","toggleActive","bind","removeEventListener","transform","actions","onClick","DialogItem","randomId","history","location","pathname","preventDefault","myUser","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","position","right","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","search","contextType","roomsGet","roomsAdd","errors","param","msg","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","CustomCheckbox","border","checked","Checkbox","UserItem","minWidth","flexWrap","selected","waitSearch","Contacts","q","searchResult","usersActions","target","value","clearTimeout","test","onChange","onSearch","placeholder","roomsBlock","CircularProgress","selectUsers","customStylesModalCreate","overlay","zIndex","content","marginRight","borderRadius","boxShadow","customStylesModalInvite","justifyContent","maxWidth","padding","CreateRoom","step","roomsActions","isOpen","onRequestClose","contentLabel","onSubmit","marginBottom","maxLength","FormControlLabel","control","label","Friends","Rooms","isOpenCreateRoom","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","Languages","userActions","UserSidebar","activeTab","show","Login","email","password","data","cookies","set","token","withCookies","Register","firstName","lastName","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","src","volume","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","parentElement","pause","stopPropagation","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","unSelect","onSelect","isRecent","cursor","lineHeight","canSelect","replace","countRecent","image","isBlur","openSlider","draggable","alt","sound","open","toFixed","sliderImages","PureComponent","waitActiveUser","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","getClientHeight","getScrollHeight","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","customStylesModal","Slider","opacity","InputMessage","inputMessageHeight","event","items","clipboardData","originalEvent","kind","getAsFile","addFile","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","accept","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","isOpenSlider","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","toast","POSITION","TOP_CENTER","URL","webkitURL","createObjectURL","Blob","split","newText","prevText","textAlign","RoomJoinError","Members","srcObject","autoPlay","controls","Room","waitSocket","match","params","ownerId","Main","order","clear","innerWidth","callActions","routes","exact","NoMatch","transition","OtherUser","MyUser","User","Inbox","Outbox","CreateDialog","success","DeleteRoom","CallFab","RejectFab","customStylesModalActive","muted","MainModal","act","qs","ignoreQueryPrefix","modal","listen","Invite","EditRoom","Forward","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03e8942d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_DELETE,\r\n    ROOMS_EDIT,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: []\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: []\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_GET,\r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio'\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","import { push } from 'react-router-redux';\r\n\r\nexport function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import adapter from 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\nconst RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n\r\n    function onerror(e) {\r\n        console.log(JSON.stringify(e, null, '\\t'));\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        let answer = new RTCSessionDescription({\r\n            type: 'answer',\r\n            sdp: sdpAnswer\r\n        })\r\n        \r\n        WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n        let stream = new MediaStream();\r\n\r\n        for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n            stream.addTrack(sender.track);\r\n        }\r\n\r\n        remoteStream = stream\r\n\r\n        store.dispatch({\r\n            type: ROOMS_SET_REMOTE_STREAM,\r\n            payload: stream\r\n        })\r\n\r\n        speechEvents = hark(localStream, {});\r\n \r\n        speechEvents.on('speaking', function() {\r\n            SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n        });\r\n    \r\n        speechEvents.on('stopped_speaking', function() {\r\n            SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n        });\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = null\r\nlet activeLang = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}{this.props.room.title}</p>\r\n                        <div className=\"users\">\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} style={{width: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","export function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && 'Today'\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes : day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (\r\n                (diff < 60 && 'just now')\r\n                || (diff < 120 && \"1 \" + 'minute' + \" \" + 'ago' + \"\")\r\n                || (diff < 3600 && Math.floor(diff / 60) + \" \" + 'minutes' + \" \" + 'ago' + \"\")\r\n                || (diff < 7200 && \"1 \" + 'hour' + \" \" + 'ago' + \"\")\r\n                || (diff < 86400 && Math.floor(diff / 3600) + \" \" + 'hours' + \" \" + 'ago')\r\n            )\r\n        )\r\n        || (day_diff == 1 && 'yerstaday' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + \" \" + 'days' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + \" \" + 'weeks' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive() {\r\n        let element = document.getElementById(this.props.from)\r\n        let rect = element.getBoundingClientRect()\r\n\r\n        let top\r\n        let left\r\n        if(this.props.bottom) {\r\n            top = rect.y + element.clientHeight\r\n            left = rect.x\r\n        }\r\n        else {\r\n            top = rect.y\r\n            left = rect.x+element.clientWidth\r\n        }\r\n        \r\n        this.setState({left, top})\r\n        this.setState({active: !this.state.active})\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n        document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar online={this.props.user.online} style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                    <div>\r\n                        <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>You:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <>{this.props.lastMessage.text}</>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.images[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span style={{color: '#008FF7'}}>Фотографии [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.sounds[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span style={{color: '#008FF7'}}>Аудио [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span style={{color: '#008FF7'}}>{this.props.lastMessage.files[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span style={{color: '#008FF7'}}>Файлы [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Chats</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>You dont have chats, lets create new</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(room => {\r\n            if(room.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: room.errors[0]\r\n                })\r\n                \r\n                return\r\n            }\r\n\r\n            room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n            room.users.map(x => {\r\n                x.speaking = false\r\n            })\r\n\r\n            setForceTitle(room.title)\r\n\r\n            dispatch({\r\n                type: ROOMS_JOIN_ROOM,\r\n                payload: {room, canLoad: room.dialog.messages.length === 50}\r\n            })\r\n            \r\n            SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n            try {\r\n                WebRtcController.connectRoom(room._id)\r\n            } catch (err) {\r\n                SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                })\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","import { \r\n    USERS_ADD,\r\n    USERS_GET,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder=\"Search\" />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>You dont have friends, lets add him</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Users not found</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create'})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n                this.props.history.push(`/rooms/${room._id}`)\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">New room</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">Select users</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder=\"Title\"\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'title').msg} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label=\"Private theme\"\r\n                    />\r\n\r\n                    <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>Next</button>\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Start</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Modal\r\nimport ModalCreateRoom from '../Modals/CreateRoom'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Rooms</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Create your first room in this language</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Что то пошло не так...</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create room\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar status={this.props.notification.type} style={{width: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div>\r\n                    <p className=\"user-name\">{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\">Invited you to the room&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\">Accept your friend request</p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\">Send you friend request</p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Notifications</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Here will placed your notifications</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ\r\n} from '../constants'\r\nimport store from '../store'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.history.push('/')\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Language</h2>\r\n\r\n                    <span style={{color: this.props.user.roomLang === 'eng' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }}>English</span>\r\n                    <span style={{color: this.props.user.roomLang === 'rus' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }}>Russian</span>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li><Avatar style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.notifications.noRead && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserSidebar)","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(this.state.audio) {\r\n            this.state.audio.parentElement.className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) { \r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound active'\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\nimport ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nlet ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span>\r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.text}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.openSlider(images)\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.openSlider(images)\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Message))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, LinearProgress, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getClientHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight()/3 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} typing</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} typing</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Write your first message to {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialog)","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `Вложения [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">Attachment messages</h3>\r\n                        <p className=\"message-text\">{`${this.props.recentMessages.length} messages`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attachment","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: 0\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <div className=\"placeholder\">Write message...</div>}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    Reply\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    Forward\r\n                </Button>\r\n\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport Slider from './Slider'\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\nlet waitDraft = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isOpenSlider: false,\r\n        sliderImages: [],\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = ''\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 1000)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {this.state.isOpenSlider && <Slider images={this.state.sliderImages} close={() => {this.setState({isOpenSlider: false, sliderImages: []})}} />}\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    openSlider={(sliderImages) => {this.setState({sliderImages, isOpenSlider: true})}}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\">{this.props.rooms.activeRoom.error.msg}</p>\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Members extends React.Component {\r\n    render() {\r\n        return <Scrollbars\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"theme-members scroll\"\r\n            autoHide\r\n        >\r\n            {this.props.users.map((user, index) => \r\n                <div key={index} className=\"member\">\r\n                    <Avatar name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                    {user.speaking && <span className=\"speaking\"></span>}\r\n                </div>\r\n            )}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6\">\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\" id={this.props.rooms.activeRoom._id}>\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} online</h3>\r\n                        </div>\r\n\r\n                        <ActionMenu \r\n                            actions={\r\n                                this.props.rooms.activeRoom.ownerId === this.props.user._id ? [\r\n                                    {text: 'Invite friends', action: () => {\r\n                                        this.props.history.push({\r\n                                            search: '?act=invite'\r\n                                        })\r\n                                    }},\r\n                                    {\r\n                                        text: 'Edit room',\r\n                                        action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=editRoom'\r\n                                            })\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        text: 'Delete room',\r\n                                        action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=deleteRoom'\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                ] : [\r\n                                    {\r\n                                        text: 'Invite friends', action: () => {\r\n                                            this.props.history.push({\r\n                                                search: '?act=invite'\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                ]} \r\n                            from={this.props.rooms.activeRoom._id} \r\n                            bottom={true} \r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat messages={this.props.rooms.activeRoom.dialog.messages} type=\"room\" to={this.props.rooms.activeRoom.title} dialogId={this.props.rooms.activeRoom.dialog._id} roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6 theme-screen\">\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Room))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../../Partials/Loading'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","import { CALL_SET_USER, CALL_SET_STATUS } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user, status: 'outcoming'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/call`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id: user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((call) => {\r\n        if(call.error) {\r\n            dispatch({\r\n                type: CALL_SET_STATUS,\r\n                payload: call.error\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_STATUS,\r\n        payload: 'active'\r\n    })\r\n    WebRtcController.call(store.getState().call.user._id)\r\n\r\n    fetch(`${urlApi}/api/call/accept`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: store.getState().call.user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 32, \r\n                        height: 32, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} /></div>\r\n                    <div className=\"user-info\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                    </div></>\r\n\r\n                    {dialog.user._id !== this.props.user._id && <CustomFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CustomFab>}\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>User not found</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog))\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Room from '../Pages/User/Room';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport { randomInteger } from '../Controllers/FunctionsController';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport CallIcon from '@material-ui/icons/Call';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                />\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">Moscow</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>Message</p>\r\n                    </div>    \r\n\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>Call</p>\r\n                    </div>  \r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>+ Friend</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Accept</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Decline</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Remove</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PermMediaOutlined';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Avatar \r\n                style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n            />\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">Moscow</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Settings</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Contacts</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <PermMediaOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Media</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px'\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Incoming requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Outgoing requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">Contacts</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>Friends</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>Inbox</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>Outbox</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox />}\r\n            {this.state.activeTab === 'outbox' && <Outbox />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">New chat</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast.success(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">Select users</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>Back</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Invite</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">Edit room</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder=\"Title\"\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.state.errors.find(value => value.param === 'title').msg} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label=\"Private theme\"\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>Back</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Save</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>You sure?</h2>\r\n            \r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>Delete</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(DeleteRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">Forward messages</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 70,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '260px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">Outcoming call</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">Incoming call</h2>}\r\n\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`}} \r\n                    name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)} \r\n                />\r\n\r\n                <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                <p className=\"user-profile-city\">Moscow</p>\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <><CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                        <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                    </CustomFab>\r\n                    <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                        <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                    </CustomFab>\r\n                    <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                        <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                    </CustomFab></>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    The line is busy... <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} canceled your call <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>Error</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>have_active_call</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog))","// App\r\nimport React from 'react'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD } from '../Redux/constants';\r\nimport Call from './Call';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n        {this.props.call.user && <Call isOpen={true} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications}) => {\r\n          SocketController.init(apiToken)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}