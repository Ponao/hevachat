{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/slider.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","Partials/Room/RoomItem.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Redux/actions/rooms.js","Redux/actions/users.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/Slider.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Redux/actions/call.js","Pages/User/Dialog.js","Router/config.js","Pages/NoMatch.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Modals/investmentsPartials/Images.js","Modals/investmentsPartials/Sounds.js","Modals/investmentsPartials/Files.js","Modals/Investments.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","avatar","src","min","avatarStyle","name","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","user","state","action","type","payload","roomLang","isFetching","getted","activeRoom","isError","rooms","map","room","_id","title","isPrivate","filter","typers","canLoad","isLoading","remoteStream","error","users","roomId","userId","dialog","messages","message","_newId","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","images","index","combineReducers","slider","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","length","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","mozRTCIceCandidate","RTCIceCandidate","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","lang","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","socket","activeLang","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","getState","setTimeout","WebRtcController","otherId","id","read","last","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","files","sounds","append","file","push","localMessage","text","recentMessages","now","m","socketId","messageRes","errors","msg","toast","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","RoomItem","textDecoration","to","Button","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","overflow","key","first","getHM","date","time","hours","getHours","minutes","getMinutes","toString","LastMessageDate","getTime","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","OnlineDate","diff","getDay","month_diff","isNaN","ceil","ActionMenu","active","left","top","element","getElementById","from","stopPropagation","rect","getBoundingClientRect","bottom","clientHeight","right","clientWidth","setState","event","addEventListener","toggleActive","bind","removeEventListener","transform","actions","onClick","DialogItem","randomId","history","location","pathname","preventDefault","myUser","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","nextProps","nextState","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","search","contextType","roomsGet","roomsAdd","param","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","selected","waitSearch","Contacts","q","searchResult","usersActions","target","value","clearTimeout","test","onChange","onSearch","placeholder","roomsBlock","CircularProgress","selectUsers","customStylesModalCreate","overlay","zIndex","content","marginRight","borderRadius","boxShadow","customStylesModalInvite","justifyContent","padding","CreateRoom","step","roomsActions","isOpen","onRequestClose","contentLabel","onSubmit","marginBottom","maxLength","FormControlLabel","control","label","Friends","Rooms","isOpenCreateRoom","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","uploadAvatar","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","UserSidebar","activeTab","show","Login","email","password","data","cookies","set","token","withCookies","Register","firstName","lastName","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","volume","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","parentElement","pause","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","unSelect","onSelect","isRecent","cursor","lineHeight","canSelect","replace","countRecent","image","isBlur","draggable","alt","sound","open","toFixed","openSlider","sliderImages","PureComponent","waitActiveUser","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","getClientHeight","getScrollHeight","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","customStylesModal","Slider","opacity","InputMessage","inputMessageHeight","items","clipboardData","originalEvent","kind","getAsFile","addFile","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","accept","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","newText","prevText","textAlign","RoomJoinError","CustomFab2","Members","srcObject","autoPlay","controls","Room","waitSocket","match","params","ownerId","Main","order","clear","CallFab","innerWidth","callActions","routes","exact","NoMatch","transition","OtherUser","MyUser","minHeight","User","Inbox","Outbox","CreateDialog","DeleteRoom","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","muted","fullScreen","overlayClassName","Images","substring","Sounds","Files","MainModal","act","qs","ignoreQueryPrefix","modal","listen","Invite","EditRoom","Forward","goBack","Investments","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b1be743.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'\r\n\r\n// Slider\r\nexport const SLIDER_SET = 'SLIDER_SET'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_DELETE,\r\n    ROOMS_EDIT,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: []\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: []\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_GET,\r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio'\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { \r\n    SLIDER_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    images: [],\r\n    index: 0\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SLIDER_SET: {\r\n            return { ...state, images: action.payload.images, index: action.payload.index }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\nimport slider from './slider'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call,\r\n    slider\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","import { push } from 'react-router-redux';\r\n\r\nexport function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import adapter from 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\nconst RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n\r\n    function onerror(e) {\r\n        console.log(JSON.stringify(e, null, '\\t'));\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        let answer = new RTCSessionDescription({\r\n            type: 'answer',\r\n            sdp: sdpAnswer\r\n        })\r\n        \r\n        WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n        let stream = new MediaStream();\r\n\r\n        for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n            stream.addTrack(sender.track);\r\n        }\r\n\r\n        remoteStream = stream\r\n\r\n        store.dispatch({\r\n            type: ROOMS_SET_REMOTE_STREAM,\r\n            payload: stream\r\n        })\r\n\r\n        speechEvents = hark(localStream, {});\r\n \r\n        speechEvents.on('speaking', function() {\r\n            SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n        });\r\n    \r\n        speechEvents.on('stopped_speaking', function() {\r\n            SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n        });\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = null\r\nlet activeLang = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 1)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","export function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && 'Today'\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December'\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && 'Yesterday')\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(time) {\r\n    var time = new Date(time)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length == 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length == 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes : day.toString() +  \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff == 0 && \r\n            (\r\n                (diff < 60 && 'just now')\r\n                || (diff < 120 && \"1 \" + 'minute' + \" \" + 'ago' + \"\")\r\n                || (diff < 3600 && Math.floor(diff / 60) + \" \" + 'minutes' + \" \" + 'ago' + \"\")\r\n                || (diff < 7200 && \"1 \" + 'hour' + \" \" + 'ago' + \"\")\r\n                || (diff < 86400 && Math.floor(diff / 3600) + \" \" + 'hours' + \" \" + 'ago')\r\n            )\r\n        )\r\n        || (day_diff == 1 && 'yerstaday' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + \" \" + 'days' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + \" \" + 'weeks' + \" \" + 'ago' + \" \" + 'in' + \" \" + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive(e) {\r\n        let element = document.getElementById(this.props.from)\r\n        if(element) {\r\n            let find = false\r\n            if(e.path.find(x => x.id === this.props.from)) {\r\n                e.stopPropagation()\r\n                find = true\r\n            }\r\n            \r\n            let rect = element.getBoundingClientRect()\r\n\r\n            let top\r\n            let left\r\n            if(this.props.bottom) {\r\n                top = rect.y + element.clientHeight\r\n                left = rect.x\r\n                if(this.props.right)\r\n                    left = rect.x+element.clientWidth\r\n            }\r\n            else {\r\n                top = rect.y\r\n                left = rect.x+element.clientWidth\r\n            }\r\n            \r\n            this.setState({left, top})\r\n            if((this.props.event === 'click' && (this.state.active || find)) || this.props.event === 'hover')\r\n                this.setState({active: !this.state.active})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).addEventListener('click', this.toggleActive.bind(this))\r\n            document.body.addEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).removeEventListener('click', this.toggleActive.bind(this))\r\n            document.body.removeEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? this.props.right ? 'translateX(-100%)' : 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>You:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\">{this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.images[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Фотографии [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.sounds[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Аудио [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.lastMessage.files[0].name}</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Файлы [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Chats</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>You dont have chats, lets create new</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(room => {\r\n            if(room.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: room.errors[0]\r\n                })\r\n                \r\n                return\r\n            }\r\n\r\n            room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n            room.users.map(x => {\r\n                x.speaking = false\r\n            })\r\n\r\n            setForceTitle(room.title)\r\n\r\n            dispatch({\r\n                type: ROOMS_JOIN_ROOM,\r\n                payload: {room, canLoad: room.dialog.messages.length === 50}\r\n            })\r\n            \r\n            SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n            try {\r\n                WebRtcController.connectRoom(room._id)\r\n            } catch (err) {\r\n                SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                })\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        message.images[i].file = false\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        message.files[i].file = false\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        message.sounds[i].file = false\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n\r\n        images.push(message.images[i].path)\r\n    }\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","import { \r\n    USERS_ADD,\r\n    USERS_GET,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder=\"Search\" />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>You dont have friends, lets add him</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Users not found</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create'})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n                this.props.history.push(`/rooms/${room._id}`)\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">New room</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">Select users</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder=\"Title\"\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'title').msg} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label=\"Private theme\"\r\n                    />\r\n\r\n                    <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>Next</button>\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Start</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Modal\r\nimport ModalCreateRoom from '../Modals/CreateRoom'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">Rooms</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Create your first room in this language</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Что то пошло не так...</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create room\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"notif-content\">Invited you to the room&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"notif-content\">Accept your friend request</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"notif-content\">Send you friend request</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Notifications</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>Here will placed your notifications</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.history.push('/')\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">Language</h2>\r\n\r\n                    <span style={{color: this.props.user.roomLang === 'eng' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }}>English</span>\r\n                    <span style={{color: this.props.user.roomLang === 'rus' ? 'red' : '#000'}} onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }}>Russian</span>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.notifications.noRead && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(this.state.audio) {\r\n            this.state.audio.parentElement.className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) { \r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound active'\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.parentElement.className = 'message-sound'\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\nimport ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\n\r\nlet ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span>\r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.text}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.history.push({\r\n                                            search: `?modal=slider`\r\n                                        })\r\n                                        store.dispatch({\r\n                                            type: SLIDER_SET,\r\n                                            payload: {\r\n                                                images,\r\n                                                index: 0\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.history.push({\r\n                                        search: `?modal=slider`\r\n                                    })\r\n                                    store.dispatch({\r\n                                        type: SLIDER_SET,\r\n                                        payload: {\r\n                                            images,\r\n                                            index\r\n                                        }\r\n                                    })\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Message))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, LinearProgress, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getClientHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight()/3 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} typing</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} typing</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>Write your first message to {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialog)","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `Вложения [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">Attachment messages</h3>\r\n                        <p className=\"message-text\">{`${this.props.recentMessages.length} messages`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attachment","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: this.props.index\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <div className=\"placeholder\">Write message...</div>}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    Reply\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    Forward\r\n                </Button>\r\n\r\n                <div className=\"col\">\r\n\r\n                </div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport Slider from './Slider'\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\nlet waitDraft = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = ''\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\">{this.props.rooms.activeRoom.error.msg}</p>\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab2 = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Members extends React.Component {\r\n    render() {\r\n        return <Scrollbars\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"theme-members scroll\"\r\n            autoHide\r\n        >\r\n            {this.props.users.map((user, index) => \r\n                <div key={index} className=\"member\">\r\n                    <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                    {user.speaking && <span className=\"speaking\"></span>}\r\n                </div>\r\n            )}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6\">\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} online</h3>\r\n                        </div>\r\n\r\n                        <CustomFab2 id={'dialog-more-actions-'+this.props.rooms.activeRoom._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab2>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={\r\n                        this.props.rooms.activeRoom.ownerId === this.props.user._id ? [\r\n                            {text: 'Invite friends', action: () => {\r\n                                this.props.history.push({\r\n                                    search: '?act=invite'\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: 'Edit room',\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=editRoom'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: 'Show investments', action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: 'Delete room',\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=deleteRoom'\r\n                                    })\r\n                                }\r\n                            }\r\n                        ] : [\r\n                            {\r\n                                text: 'Invite friends', action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=invite'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: 'Show investments', action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }}\r\n                        ]} from={'dialog-more-actions-'+this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat messages={this.props.rooms.activeRoom.dialog.messages} type=\"room\" to={this.props.rooms.activeRoom.title} dialogId={this.props.rooms.activeRoom.dialog._id} roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6 theme-screen\">\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Room))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\nimport RoomItem from '../../Partials/Room/RoomItem'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../../Partials/Loading'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","import { CALL_SET_USER, CALL_SET_STATUS } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user, status: 'outcoming'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/call`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id: user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((call) => {\r\n        if(call.error) {\r\n            dispatch({\r\n                type: CALL_SET_STATUS,\r\n                payload: call.error\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_STATUS,\r\n        payload: 'active'\r\n    })\r\n    WebRtcController.call(store.getState().call.user._id)\r\n\r\n    fetch(`${urlApi}/api/call/accept`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: store.getState().call.user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ActionMenu from '../../Partials/ActionMenu'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabStyles)(Fab);\r\nconst CustomFab = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 36, \r\n                        height: 36, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                    </div></>\r\n\r\n                    {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <CustomFab id={'dialog-more-actions-'+dialog._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                        <MoreVertIcon style={{color: '#008FF7'}} />\r\n                    </CustomFab>\r\n                    <ActionMenu event=\"click\" bottom={true} right={true} actions={[\r\n                        {text: 'Show investments', action: () => {\r\n                            this.props.history.push({\r\n                                search: `?modal=investments`\r\n                             })\r\n                        }},\r\n                    ]} from={'dialog-more-actions-'+dialog._id} />\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>User not found</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog))\r\n","import React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Room from '../Pages/User/Room';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport { randomInteger } from '../Controllers/FunctionsController';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\nimport {\r\n    BrowserRouter as Router,\r\n} from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport CallIcon from '@material-ui/icons/Call';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <span style={{cursor: 'pointer'}} onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=slider`\r\n                    })\r\n                    store.dispatch({\r\n                        type: SLIDER_SET,\r\n                        payload: {\r\n                            images: [{path: this.props.user.avatar.original}],\r\n                            index: 0\r\n                        }\r\n                    })\r\n                }}><Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                /></span>\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">Moscow</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>Message</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>Call</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>+ Friend</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Accept</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Decline</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Remove</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\n\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PermMediaOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">Moscow</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Settings</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Contacts</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                    <PermMediaOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>Media</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px',\r\n        minHeight: 100\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {!user && this.props.user._id !== this.props.userId && <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />}\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Incoming requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Outgoing requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">Contacts</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>Friends</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>Inbox</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>Outbox</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n            {this.state.activeTab === 'outbox' && <Outbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">New chat</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">Select users</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>Back</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Invite</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">Edit room</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder=\"Title\"\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.state.errors.find(value => value.param === 'title').msg} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label=\"Private theme\"\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>Back</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>Save</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>You sure?</h2>\r\n            \r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>Back</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>Delete</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(DeleteRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">Forward messages</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">Outcoming call</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">Incoming call</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <Avatar \r\n                        style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`}} \r\n                        name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                        avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                    />\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">Moscow</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    The line is busy... <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} canceled your call <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>Error</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>have_active_call</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        images: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                if(!images.error) {\r\n                    images = images.map(x => x.data)\r\n                    \r\n                    this.setState({images, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.images.map((image, index) => {\r\n                return (\r\n                    <div className=\"investment-image\">\r\n                        <img key={index} style={{cursor: 'pointer'}} onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?modal=slider`\r\n                            })\r\n                            this.props.dispatch({\r\n                                type: SLIDER_SET,\r\n                                payload: {\r\n                                    images: this.state.images,\r\n                                    index\r\n                                }\r\n                            })\r\n                        }} src={image.path} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.images.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed images from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport Audio from '../../Partials/Chat/Audio';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        sounds: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(sounds => {\r\n                if(!sounds.error) {\r\n                    sounds = sounds.map(x => x.data)\r\n                    \r\n                    this.setState({sounds, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.sounds.map((sound, index) => {\r\n                return (\r\n                    <Audio\r\n                        key={index}\r\n                        fileName={sound.name}\r\n                        src={sound.path}\r\n                    />\r\n                )\r\n            })}\r\n            {(!this.state.sounds.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed sounds from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport Audio from '../../Partials/Chat/Audio';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        files: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(files => {\r\n                if(!files.error) {\r\n                    files = files.map(x => x.data)\r\n                    \r\n                    this.setState({files, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340, marginLeft: 15}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)',\r\n                }} />}\r\n            {this.state.files.map((file, index) => {\r\n                return (\r\n                    <div className=\"message-file\" style={{cursor: 'pointer'}} key={index} onClick={(e) => {\r\n                        window.open(file.path, '_self');\r\n                    }}>\r\n                        <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                        <div className=\"message-file-info\">\r\n                            <p className=\"message-file-name\">{file.name}</p>\r\n                            <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                        </div>\r\n                        <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.files.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed files from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport Images from './investmentsPartials/Images';\r\nimport Sounds from './investmentsPartials/Sounds';\r\nimport Files from './investmentsPartials/Files';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'images'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">Investments</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'images' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'images'})}}>Photos</span>\r\n                <span className={this.state.activeTab === 'sounds' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'sounds'})}}>Sounds</span>\r\n                <span className={this.state.activeTab === 'files' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'files'})}}>Files</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'images' && <Images />}\r\n            {this.state.activeTab === 'sounds' && <Sounds />}\r\n            {this.state.activeTab === 'files' && <Files />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD, SLIDER_SET } from '../Redux/constants';\r\nimport Call from './Call';\r\nimport Slider from '../Partials/Chat/Slider';\r\nimport Investments from './Investments';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n            {this.state.modal === 'slider' && !!this.props.slider.images.length && <Slider index={this.props.slider.index} images={this.props.slider.images} close={() => {\r\n                this.props.dispatch({\r\n                    type: SLIDER_SET,\r\n                    payload: {\r\n                        images: [],\r\n                        index: 0\r\n                    }\r\n                })\r\n                this.props.history.goBack()\r\n            }} />}\r\n            \r\n            {this.props.match.params.id && this.state.modal === 'investments' && <Investments \r\n                isOpen={this.props.match.params.id && this.state.modal === 'investments'} \r\n                dialogId={this.props.match.params.id} \r\n                close={() => {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                }}\r\n            />}\r\n\r\n            {this.props.call.user && <Call isOpen={true} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call,\r\n        slider: state.slider\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications}) => {\r\n          SocketController.init(apiToken)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}