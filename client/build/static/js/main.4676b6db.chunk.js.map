{"version":3,"sources":["Pages/PageSettings.js","Partials/User/Avatar.js","Redux/reducers/user.js","Redux/constants.js","Redux/reducers/rooms.js","Redux/reducers/media.js","Redux/reducers/dialogs.js","Redux/reducers/users.js","Redux/reducers/notifications.js","Redux/reducers/call.js","Redux/reducers/slider.js","Redux/reducers/index.js","Redux/store.js","Controllers/FunctionsController.js","Controllers/WebRtcController.js","config.js","Controllers/SocketController.js","Redux/actions/dialogs.js","languages.js","Controllers/TimeController.js","Partials/ActionMenu.js","Partials/Dialog/DialogItem.js","Sidebar/Messages.js","Partials/Loading.js","Partials/Room/RoomItem.js","Redux/actions/rooms.js","Sidebar/Rooms.js","Redux/actions/notifications.js","Partials/Notifications/NotificationItem.js","Sidebar/Notifications.js","Redux/actions/user.js","Partials/Language/LanguageItem.js","Sidebar/Languages.js","Partials/UserSidebar.js","Pages/Auth/Login.js","Pages/Auth/Register.js","Partials/Chat/Audio.js","Redux/actions/users.js","Partials/Chat/Message.js","Partials/Chat/Dialog.js","Partials/Chat/Attachment.js","Partials/Chat/InputMessage.js","Partials/Chat/ToolbarMessage.js","Partials/Chat/Chat.js","Modals/RoomJoinError.js","Pages/User/Room.js","Pages/User/Main.js","Redux/actions/call.js","Pages/User/Dialog.js","Pages/User/Payment.js","Router/config.js","Pages/NoMatch.js","Partials/User/UserItem.js","Modals/contactsPartials/Friends.js","Modals/CreateRoom.js","Modals/userPartials/otherUser.js","Modals/userPartials/myUser.js","Modals/User.js","Modals/contactsPartials/Inbox.js","Modals/contactsPartials/Outbox.js","Modals/Contacts.js","Modals/CreateDialog.js","Modals/Invite.js","Modals/EditRoom.js","Modals/DeleteRoom.js","Modals/Forward.js","Modals/Call.js","Partials/Chat/Slider.js","Modals/investmentsPartials/Images.js","Modals/investmentsPartials/Sounds.js","Modals/investmentsPartials/Files.js","Modals/Investments.js","Modals/Settings.js","Modals/Profile.js","Modals/Language.js","Modals/Mute.js","Modals/Unmute.js","Modals/Banroom.js","Modals/Unbanroom.js","Modals/SendWaning.js","Modals/Warning.js","Modals/MainModal.js","Router/index.js","App.js","serviceWorker.js","index.js"],"names":["PageSettings","React","createContext","Avatar","className","style","this","props","avatar","alt","name","src","min","avatarStyle","toUpperCase","online","status","color","fontSize","Component","INITIAL_STATE","isAuth","warning","user","state","action","type","payload","roomLang","first","firstName","last","lastName","city","lang","isFetching","getted","activeRoom","isError","rooms","canLoad","length","map","room","_id","title","isPrivate","filter","typers","isLoading","remoteStream","muted","error","users","roomId","userId","dialog","messages","message","_newId","files","item","file","sounds","images","isEdit","find","x","isRead","speaking","micOn","musicOn","cameraOn","media","dialogs","forwardMessages","noReadCount","dialogId","lastMessage","noRead","sort","a","b","Date","createdAt","onlineAt","editLast","messageIds","typing","activeUserId","friends","requested","pending","friendStatus","notifications","notification","call","index","combineReducers","slider","createStore","rootReducer","applyMiddleware","ReduxThunk","randomInteger","max","rand","Math","random","floor","setTitle","path","routeArray","pageTitle","i","document","setForceTitle","WebRtcPeerConnection","activeRoomId","activeCallId","localStream","speechEvents","isIE","documentMode","isEdge","window","StyleMedia","RTCPC","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","mediaConstraintsCall","offerToReceiveAudio","offerToReceiveVideo","mediaConstraintsRoom","optionsRoom","urls","credential","username","optionsCall","createEmptyStream","callback","AudioContext","webkitAudioContext","createMediaStreamDestination","stream","getMedia","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","then","catch","err","video","audio","onRoomIceCandidate","e","candidate","SocketController","sendRoomIceCandidate","onCallOffer","offer","console","log","sendCallOfferSdp","offerSdp","onCallIceCandidate","sendCallIceCandidate","getAudioTracks","enabled","store","dispatch","getTracks","track","addTrack","onicecandidate","createOffer","setLocalDescription","sendRoomOfferSdp","sdp","onRoomOffer","close","leaveRoom","forEach","stop","wait","setInterval","clearInterval","addIceCandidate","sdpAnswer","answer","setRemoteDescription","MediaStream","getReceivers","sender","hark","on","sendRoomSpeaking","sendRoomStopSpeaking","create","getVideoTracks","toggleCameraCall","createAnswer","sendCallAnswerSdp","answerSdp","urlApi","timeStamps","time","label","socket","activeLang","unmuteTimer","init","apiToken","io","transports","emit","fetch","method","headers","Accept","Authorization","response","json","have","body","JSON","stringify","userFrom","getState","setTimeout","WebRtcController","otherId","id","read","clearTimeout","numDate","date","ban","msg","getSocketId","joinLang","createRoom","joinRoom","sendMessageRoom","typingRoom","typingDialog","dialogsGet","existDialog","dialogsLoad","lastDialogId","firstDialogId","dialogGet","isNotFound","reverse","dialogLoad","updateOnline","setForward","sendMessage","formData","FormData","append","push","localMessage","text","recentMessages","now","m","socketId","messageRes","errors","toast","position","POSITION","TOP_CENTER","editMessage","oldImages","oldFiles","oldSounds","readMessages","retrySendMessage","deleteMessage","deleteMessages","y","pop","deleteLocalMessage","loadMessages","lastMessageId","ru","settings","change_profile","language","logout","back","save","next","last_name_not_empty","first_name_not_empty","title_not_empty","create_room","something_goes_wrong","chats","contacts","inbox","outbox","you_dont_have_friends","search","accept","decline","not_indicated","plus_friend","remove","english","russian","you","write_message","show_investments","you_sure","delete","delete_room","invite_friends","edit_room","investments","photos","missed_call","outcoming_call","incoming_call","canceled_call","select_language","users_not_found","user_not_found","reply","forward","new_room","invite","private_room","start","select_users","new_chat","invited_you_to_the_room","accept_your_friend_request","send_you_friend_request","january","february","march","april","may","june","july","august","september","october","november","december","jan","feb","mar","apr","jun","jul","aug","sep","oct","nov","dec","in","yerstaday","today","just_now","here_wiil_placed_your_notifications","create_your_first_room","you_dont_have_chats","write_your_first_message","attachment_messages","en","getHM","hours","getHours","minutes","getMinutes","toString","LastMessageDate","timeR","day_diff","getDate","year_diff","getFullYear","year","month","getMonth","day","arr","languages","OnlineDate","diff","getTime","getDay","month_diff","isNaN","ceil","ActionMenu","active","left","top","element","getElementById","from","stopPropagation","rect","getBoundingClientRect","bottom","clientHeight","right","clientWidth","setState","event","addEventListener","toggleActive","bind","removeEventListener","transform","actions","Button","key","onClick","DialogItem","randomId","textDecoration","history","location","pathname","preventDefault","to","minWidth","maxWidth","height","fontWeight","backgroundColor","charAt","flexGrow","paddingRight","myUser","langProps","transitionName","transitionEnterTimeout","transitionLeaveTimeout","marginTop","dialogsActions","withLang","connect","bindActionCreators","withRouter","CustomFab","withStyles","theme","root","Fab","Messages","showBtnAdd","scrollTop","context","toggleHeader","messagesBlock","getScrollTop","getScrollHeight","getClientHeight","nextProps","nextState","overflow","ref","renderTrackVertical","renderThumbVertical","onScroll","autoHide","Skeleton","variant","width","marginLeft","flex","margin","display","Tooltip","placement","size","aria-label","contextType","RoomItem","roomsGet","roomsAdd","roomsLoad","lastRoomId","firstRoomId","data","param","Rooms","isOpenCreateRoom","roomsActions","roomsBlock","CircularProgress","notificationsGet","notificationRead","NotificationItem","notificationsActions","background","Notifications","loginUser","noReadNotifications","logoutUser","updateRoomLang","uploadAvatar","target","URL","webkitURL","createObjectURL","Blob","split","res","original","Languages","userActions","LanguageItem","UserSidebar","activeTab","substring","show","Login","email","password","cookies","set","token","onSubmit","value","onChange","placeholder","withCookies","Register","audioDurationInterval","Audio","duration","thisAudio","getElementsByName","volume","onpause","parentElement","onplay","onloadedmetadata","getDuration","padZero","v","t","parseInt","stopTimer","pause","otherAudio","getElementsByClassName","play","startTimer","nativeEvent","layerX","rangeBlock","currentTime","thisRange","playAudio","stopAudio","fileName","onMouseMove","viewDurationAudio","onMouseEnter","onMouseLeave","changeDurationAudio","range","userGet","friendsGet","recipient","requestedGet","pendingGet","setUsers","setFriends","setActiveUserId","sendRequest","acceptRequest","removeRequest","componentDecorator","href","rel","Message","isHistoryDate","moreHour","date1","date2","abs","isFirst","timeAt","selected","unSelect","onSelect","isRecent","cursor","padding","lineHeight","canSelect","replace","marginRight","countRecent","image","isBlur","draggable","sound","open","toFixed","openSlider","sliderImages","PureComponent","usersActions","waitActiveUser","zIndex","Dialog","showFabToBottom","activePage","view","scroll","behavior","blurPage","focusPage","unRead","prevProps","scrollToBottom","viewTypers","userName","loading","Attachment","unSelectRecentMessages","removeImage","removeSound","removeFile","PlaceHolder","InputMessage","inputMessageHeight","items","clipboardData","originalEvent","kind","getAsFile","addFile","test","attachedRecentMessages","cancelEditMessage","isShow","IconButton","component","multiple","onPaste","onKeyDown","keyCode","setLastEditMessage","shiftKey","sendEditMessage","maxHeight","onInput","inputMessage","scrollHeight","node","setProperty","handleHeight","onResize","ToolbarMessage","addAttachmentRecentMessage","addAttachmentForwardMessage","setEditMessage","cancelAttachmentRecentMessage","waitFastRead","Chat","canTyping","drag","dropRef","createRef","dragCounter","handleDrag","handleDragIn","dataTransfer","handleDragOut","handleDrop","handleDropFiles","clearData","div","current","drafts","parse","localStorage","getItem","setText","setItem","lastMyMessage","slice","paste","counter","newText","prevText","customStylesModal","overlay","content","borderRadius","boxShadow","textAlign","RoomJoinError","isOpen","contentLabel","marginBottom","toLocaleString","CustomFab2","Members","srcObject","autoPlay","controls","Room","act","qs","ignoreQueryPrefix","waitSocket","match","params","listen","ownerId","Main","order","clear","CallFab","innerWidth","callActions","Payment","tariffs","redirect","tariffId","tariff","price","buy","routes","exact","NoMatch","CustomCheckbox","border","checked","Checkbox","UserItem","flexWrap","waitSearch","Contacts","q","searchResult","onSearch","selectUsers","customStylesModalCreate","customStylesModalInvite","justifyContent","CreateRoom","step","onRequestClose","maxLength","FormControlLabel","control","Friends","transition","OtherUser","role","MyUser","minHeight","User","Inbox","Outbox","CreateDialog","DeleteRoom","RejectFab","customStylesModalActive","customStylesModalActiveFullScreen","alignItems","justifyItems","alignContent","fullScreen","overlayClassName","Slider","opacity","Images","Sounds","Files","Settings","reload","goBack","setLang","CustomRadio","Radio","selectRoom","selectRoomId","success","limits","Warning","MainModal","modal","mute","unmute","banroom","unbanroom","sendwarning","Mute","Unmute","Banroom","Unbanroom","SendWaning","Profile","Invite","EditRoom","Forward","Investments","AppRouter","isRender","PrivateRoute","children","rest","render","AuthRoute","get","route","App","userHeader","Provider","Boolean","hostname","Modal","setAppElement","ReactDOM","CookiesProvider","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4676b6db.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const PageSettings = React.createContext();","import React from 'react'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nclass Avatar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"user-avatar\" style={this.props.style}>\r\n                {this.props.avatar && <img alt={this.props.name} src={this.props.avatar.min} style={this.props.avatarStyle} className=\"user-avatar-image\" />}\r\n                <span>{this.props.name.toUpperCase()}</span>\r\n                {this.props.online && <span className=\"online-status\"></span>}\r\n\r\n                {this.props.status && <>\r\n                    {this.props.status === 'accept' && <span className=\"notification-status\"><PersonAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'invite' && <span className=\"notification-status\"><GroupAddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                    {this.props.status === 'request' && <span className=\"notification-status\"><AddIcon style={{color: '#fff', fontSize: 14}} /></span>}\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Avatar","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    USER_SET_AVATAR,\r\n    USER_EDIT,\r\n    USER_SET_LANG,\r\n    USER_SET_WARNING\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isAuth: false,\r\n    warning: false\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USER_LOGIN: {\r\n            return { ...state, ...action.payload, isAuth: true }\r\n        }\r\n        case USER_LOGOUT:\r\n            return { isAuth: false, warning: false }\r\n        case USER_UPDATE_ROOM_LANG:\r\n            return { ...state, roomLang: action.payload }\r\n        case USER_SET_AVATAR:\r\n            return { ...state, avatar: action.payload }\r\n        case USER_EDIT:\r\n            return { ...state, name: {first: action.payload.firstName, last: action.payload.lastName}, city: action.payload.city }\r\n        case USER_SET_LANG:\r\n            return { ...state, lang: action.payload }\r\n        case USER_SET_WARNING:\r\n            return { ...state, warning: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","// User\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_UPDATE_ROOM_LANG = 'USER_UPDATE_ROOM_LANG'\r\nexport const USER_SET_AVATAR = 'USER_SET_AVATAR'\r\nexport const USER_EDIT = 'USER_EDIT'\r\nexport const USER_SET_LANG = 'USER_SET_LANG'\r\nexport const USER_SET_WARNING = 'USER_SET_WARNING'\r\n\r\n// Rooms\r\nexport const ROOMS_GET = 'ROOMS_GET'\r\nexport const ROOMS_ADD = 'ROOMS_ADD'\r\nexport const ROOMS_DELETE = 'ROOMS_DELETE'\r\nexport const ROOMS_EDIT = 'ROOMS_EDIT'   \r\nexport const ROOMS_JOIN_ROOM = 'ROOMS_JOIN_ROOM'   \r\nexport const ROOMS_LEAVE_ROOM = 'ROOMS_LEAVE_ROOM'        \r\nexport const ROOMS_USER_JOIN_ROOM = 'ROOMS_USER_JOIN_ROOM' \r\nexport const ROOMS_USER_LEAVE_ROOM = 'ROOMS_USER_LEAVE_ROOM'\r\nexport const ROOMS_ADD_MESSAGE = 'ROOMS_ADD_MESSAGE'\r\nexport const ROOMS_SUCCESS_MESSAGE = 'ROOMS_SUCCESS_MESSAGE'\r\nexport const ROOMS_ERROR_MESSAGE = 'ROOMS_ERROR_MESSAGE'\r\nexport const ROOMS_EDIT_MESSAGE = 'ROOMS_EDIT_MESSAGE'\r\nexport const ROOMS_READ_MESSAGE = 'ROOMS_READ_MESSAGE'\r\nexport const ROOMS_JOIN_ERROR = 'ROOMS_JOIN_ERROR'\r\nexport const ROOMS_DELETE_MESSAGE = 'ROOMS_DELETE_MESSAGE'\r\nexport const ROOMS_READ_MESSAGES = 'ROOMS_READ_MESSAGES'\r\nexport const ROOMS_ADD_TYPER = 'ROOMS_ADD_TYPER'\r\nexport const ROOMS_REMOVE_TYPER = 'ROOMS_REMOVE_TYPER'\r\nexport const ROOMS_LOAD_MESSAGES = 'ROOMS_LOAD_MESSAGES'\r\nexport const ROOMS_SET_LOADING = 'ROOMS_SET_LOADING'\r\nexport const ROOMS_SET_REMOTE_STREAM = 'ROOMS_SET_REMOTE_STREAM'\r\nexport const ROOMS_SET_SPEAKING_STATUS = 'ROOMS_SET_SPEAKING_STATUS'\r\nexport const ROOMS_USER_JOIN_IN_ROOM = 'ROOMS_USER_JOIN_IN_ROOM'\r\nexport const ROOMS_USER_LEAVE_IN_ROOM = 'ROOMS_USER_LEAVE_IN_ROOM'\r\nexport const ROOMS_GET_ERROR = 'ROOMS_GET_ERROR'\r\nexport const ROOMS_SET_GET = 'ROOMS_SET_GET' \r\nexport const ROOMS_EDIT_ROOM = 'ROOMS_EDIT_ROOM'\r\nexport const ROOMS_EDIT_IN_ROOM = 'ROOMS_EDIT_IN_ROOM'\r\nexport const ROOMS_DELETE_ROOM = 'ROOMS_DELETE_ROOM'\r\nexport const ROOMS_PRELOAD = 'ROOMS_PRELOAD'\r\nexport const ROOMS_SET_MUTED = 'ROOMS_SET_MUTED'\r\n\r\n// Dialogs\r\nexport const DIALOGS_GET = 'DIALOGS_GET'\r\nexport const DIALOGS_ADD = 'DIALOGS_ADD'\r\nexport const DIALOGS_ADD_MESSAGE = 'DIALOGS_ADD_MESSAGE'\r\nexport const DIALOGS_SUCCESS_MESSAGE = 'DIALOGS_SUCCESS_MESSAGE'\r\nexport const DIALOGS_ERROR_MESSAGE = 'DIALOGS_ERROR_MESSAGE'\r\nexport const DIALOGS_READ_MESSAGES = 'DIALOGS_READ_MESSAGES'\r\nexport const DIALOGS_LOAD = 'DIALOGS_LOAD'\r\nexport const DIALOGS_SET_TYPER = 'DIALOGS_SET_TYPER'\r\nexport const DIALOGS_EDIT_MESSAGE = 'DIALOGS_EDIT_MESSAGE'\r\nexport const DIALOGS_DELETE_MESSAGE = 'DIALOGS_DELETE_MESSAGE'\r\nexport const DIALOGS_SET_LOADING = 'DIALOGS_SET_LOADING'\r\nexport const DIALOGS_LOAD_MESSAGES = 'DIALOGS_LOAD_MESSAGES'\r\nexport const DIALOGS_UPDATE_ONLINE = 'DIALOGS_UPDATE_ONLINE'\r\nexport const DIALOGS_SET_FORWARD = 'DIALOGS_SET_FORWARD'\r\nexport const DIALOGS_PRELOAD = 'DIALOGS_PRELOAD'\r\n\r\n// Users\r\nexport const USERS_GET = 'USERS_GET'\r\nexport const USERS_ADD = 'USERS_ADD'\r\nexport const USERS_SET_ACTIVE_USER_ID = 'USERS_SET_ACTIVE_USER_ID'\r\nexport const USERS_SET_FRIEND_STATUS = 'USERS_SET_FRIEND_STATUS'\r\nexport const USERS_SET = 'USERS_SET'\r\nexport const USERS_FRIENDS_GET = 'USERS_FRIENDS_GET'\r\nexport const USERS_REQUESTED_GET = 'USERS_REQUESTED_GET'\r\nexport const USERS_PENDING_GET = 'USERS_PENDING_GET'\r\nexport const USERS_FRIENDS_REMOVE = 'USERS_FRIENDS_REMOVE'\r\nexport const USERS_REQUESTED_REMOVE = 'USERS_REQUESTED_REMOVE'\r\nexport const USERS_PENDING_REMOVE = 'USERS_PENDING_REMOVE'\r\nexport const USERS_FRIENDS_ADD = 'USERS_FRIENDS_ADD'\r\nexport const USERS_REQUESTED_ADD = 'USERS_REQUESTED_ADD'\r\nexport const USERS_PENDING_ADD = 'USERS_PENDING_ADD'\r\n\r\n// Notifications\r\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\r\nexport const NOTIFICATIONS_ADD = 'NOTIFICATIONS_ADD'\r\nexport const NOTIFICATIONS_READ = 'NOTIFICATIONS_READ'\r\nexport const NOTIFICATIONS_SET_NO_READ = 'NOTIFICATIONS_SET_NO_READ'\r\nexport const NOTIFICATIONS_REMOVE = 'NOTIFICATIONS_REMOVE'\r\n\r\n// Media\r\nexport const MEDIA_TOGGLE_MICROPHONE = 'MEDIA_TOGGLE_MICROPHONE'\r\nexport const MEDIA_TOGGLE_MUSIC = 'MEDIA_TOGGLE_MUSIC'\r\nexport const MEDIA_TOGGLE_CAMERA = 'MEDIA_TOGGLE_CAMERA'\r\n\r\n// Call\r\nexport const CALL_SET_USER = 'CALL_SET_USER'\r\nexport const CALL_SET_STATUS = 'CALL_SET_STATUS'\r\nexport const CALL_SET_REMOTE_STREAM = 'CALL_SET_REMOTE_STREAM'\r\nexport const CALL_SET_MEDIA = 'CALL_SET_MEDIA'\r\n\r\n// Slider\r\nexport const SLIDER_SET = 'SLIDER_SET'","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_SET_REMOTE_STREAM,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_SET_GET,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    rooms: [],\r\n    canLoad: false\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case ROOMS_GET: {\r\n            return { ...state, rooms: action.payload, isFetching: false, getted: true, canLoad: action.payload.length === 20 }\r\n        }\r\n        case ROOMS_PRELOAD:\r\n            return { ...state, rooms: [ ...state.rooms, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case ROOMS_SET_GET: {\r\n            return { ...state, isFetching: true, getted: false, isError: false }\r\n        }\r\n        case ROOMS_GET_ERROR: {\r\n            return { ...state, isFetching: false, getted: true, isError: true }\r\n        }\r\n        case ROOMS_ADD:\r\n            return { ...state, rooms: [ action.payload, ...state.rooms ]  }\r\n        case ROOMS_EDIT_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload._id === room._id ? { ...room, title: action.payload.title, isPrivate: action.payload.isPrivate} : room\r\n            ) }\r\n        case ROOMS_DELETE_ROOM:\r\n            return { ...state, rooms: [...state.rooms.filter(room => room._id !== action.payload)] }\r\n        case ROOMS_JOIN_ROOM:\r\n            return { ...state, activeRoom: {...action.payload.room, typers: [], canLoad: action.payload.canLoad, isLoading: false, remoteStream: false, muted: action.payload.muted} }\r\n        case ROOMS_SET_MUTED:\r\n            return { ...state, activeRoom: {...state.activeRoom, muted: action.payload} }\r\n        case ROOMS_JOIN_ERROR:\r\n            return { ...state, activeRoom: { error: action.payload } }\r\n        case ROOMS_USER_LEAVE_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [\r\n                ...state.activeRoom.users.filter(user => {                        \r\n                    return user._id !== action.payload\r\n                })\r\n            ] } }\r\n        case ROOMS_USER_JOIN_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, users: [ ...state.activeRoom.users, action.payload ] } }\r\n        case ROOMS_EDIT_IN_ROOM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, title: action.payload.title, isPrivate: action.payload.isPrivate } }\r\n        case ROOMS_LEAVE_ROOM:\r\n            return { ...state, activeRoom: false }\r\n        case ROOMS_USER_JOIN_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [ action.payload.user, ...room.users ] } :\r\n                room\r\n            ) }\r\n        case ROOMS_USER_LEAVE_ROOM:\r\n            return { ...state, rooms: state.rooms.map(room => \r\n                action.payload.roomId === room._id ? \r\n                { ...room, users: [\r\n                        ...room.users.filter(user => {                        \r\n                            return user._id !== action.payload.userId\r\n                        })\r\n                    ]\r\n                } :\r\n                room\r\n            ) }\r\n        case ROOMS_ADD_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [ ...state.activeRoom.dialog.messages, action.payload ] } } }\r\n        case ROOMS_SUCCESS_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, isLoading: false, _id: action.payload._newId,\r\n                    files: message.files.map(item => {return { ...item, file: false}}),\r\n                    sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                    images: message.images.map(item => {return { ...item, file: false}})\r\n                } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_ERROR_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload === message._id ? \r\n                { ...message, isLoading: false, isError: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_EDIT_MESSAGE: \r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                action.payload._id === message._id ? \r\n                { ...message, ...action.payload, isEdit: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_DELETE_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: [\r\n                ...state.activeRoom.dialog.messages.filter(message => {        \r\n                    return !action.payload.find(x => x === message._id)\r\n                })\r\n            ]\r\n            } } }\r\n        case ROOMS_READ_MESSAGE:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id === action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_READ_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, dialog: { ...state.activeRoom.dialog, messages: state.activeRoom.dialog.messages.map(message => \r\n                !message.isRead && message.user._id !== action.payload ? \r\n                { ...message, isRead: true } :\r\n                message\r\n            ) } } }\r\n        case ROOMS_SET_REMOTE_STREAM:\r\n            return { ...state, activeRoom: { ...state.activeRoom, remoteStream: action.payload } }\r\n        case ROOMS_SET_LOADING:\r\n            return { ...state, activeRoom: { ...state.activeRoom, canLoad: false, isLoading: true } }\r\n        case ROOMS_LOAD_MESSAGES:\r\n            return { ...state, activeRoom: { ...state.activeRoom, isLoading: false, canLoad: action.payload.canLoad, dialog: { ...state.activeRoom.dialog, messages: [...action.payload.messages, ...state.activeRoom.dialog.messages] } } }\r\n        case ROOMS_ADD_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ action.payload, ...state.activeRoom.typers ] } }\r\n        case ROOMS_REMOVE_TYPER: \r\n            return { ...state, activeRoom: { ...state.activeRoom, typers: [ ...state.activeRoom.typers.filter(user => {        \r\n                return user._id !== action.payload\r\n            }) ] } }\r\n        case ROOMS_SET_SPEAKING_STATUS: \r\n            return { ...state, activeRoom: { ...state.activeRoom, users: state.activeRoom.users.map(user => \r\n                user._id === action.payload.userId ?\r\n                { ...user, speaking: action.payload.speaking } :\r\n                user\r\n            ) } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    MEDIA_TOGGLE_MICROPHONE,\r\n    MEDIA_TOGGLE_MUSIC,\r\n    MEDIA_TOGGLE_CAMERA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    micOn: false,\r\n    musicOn: true,\r\n    cameraOn: false,\r\n}\r\n\r\nconst media = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case MEDIA_TOGGLE_MICROPHONE: {\r\n            return { ...state, micOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_MUSIC: {\r\n            return { ...state, musicOn: action.payload }\r\n        }\r\n        case MEDIA_TOGGLE_CAMERA: {\r\n            return { ...state, cameraOn: action.payload }\r\n        }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default media","import { \r\n    DIALOGS_ADD,\r\n    DIALOGS_GET,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    dialogs: [],\r\n    forwardMessages: [],\r\n    canLoad: false\r\n}\r\n\r\nconst dialogs = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case DIALOGS_GET: {\r\n            return { ...state, dialogs: action.payload.dialogs, isFetching: false, noReadCount: action.payload.noReadCount, canLoad: action.payload.dialogs.length === 20 }\r\n        }\r\n        case DIALOGS_ADD:\r\n            return { ...state, dialogs: [ action.payload, ...state.dialogs ]  }\r\n        case DIALOGS_PRELOAD:\r\n            return { ...state, dialogs: [ ...state.dialogs, ...action.payload ], canLoad: action.payload.length === 20 }\r\n        case DIALOGS_LOAD:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: action.payload.messages, getted: true, canLoad: action.payload.canLoad } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ADD_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: [\r\n                        ...dialog.messages,\r\n                        action.payload.message\r\n                    ],\r\n                    lastMessage: action.payload.message,\r\n                    noRead: action.payload.noRead ? dialog.noRead + 1 : dialog.noRead,\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount ? state.noReadCount+1 : state.noReadCount }\r\n        case DIALOGS_SUCCESS_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, _id: action.payload._newId, \r\n                            files: message.files.map(item => {return { ...item, file: false}}),\r\n                            sounds: message.sounds.map(item => {return { ...item, file: false}}),\r\n                            images: message.images.map(item => {return { ...item, file: false}})\r\n                         } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_ERROR_MESSAGE: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload._id === message._id ? \r\n                        { ...message, isLoading: false, isError: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: { ...dialog.lastMessage, isLoading: false, isError: true }\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_UPDATE_ONLINE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, user: { ...dialog.user, online: action.payload.online, onlineAt: action.payload.onlineAt } } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_READ_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                { ...dialog, messages: dialog.messages.map(message => \r\n                        !message.isRead && message.user._id === action.payload.userId ? \r\n                        { ...message, isRead: true } :\r\n                        message\r\n                    ),\r\n                    noRead: action.payload.noRead ? 0 : dialog.noRead,\r\n                    lastMessage: { ...dialog.lastMessage, isRead: true }\r\n                } :\r\n                dialog\r\n            ), noReadCount: action.payload.noReadCount ? state.noReadCount-1 : state.noReadCount }\r\n        case DIALOGS_EDIT_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: dialog.messages.map(message => \r\n                        action.payload.message._id === message._id ? \r\n                        { ...message, ...action.payload.message, isEdit: true } :\r\n                        message\r\n                    ),\r\n                    lastMessage: action.payload.editLast ? { ...dialog.lastMessage, ...action.payload.message } : dialog.lastMessage\r\n                } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_DELETE_MESSAGE:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog, messages: [ ...dialog.messages.filter(message => {        \r\n                        return !action.payload.messageIds.find(x => x === message._id)\r\n                    })],\r\n                    lastMessage: action.payload.lastMessage, \r\n                    noRead: action.payload.noRead || action.payload.noRead === 0 ? action.payload.noRead : dialog.noRead\r\n                } :\r\n                dialog\r\n            ).sort((a, b) => {\r\n                if(!(a.lastMessage && b.lastMessage))\r\n                    return 0\r\n\r\n                a = new Date(a.lastMessage.createdAt);\r\n                b = new Date(b.lastMessage.createdAt);\r\n                \r\n                return a>b ? -1 : a<b ? 1 : 0;\r\n            }), noReadCount: action.payload.noReadCount || action.payload.noReadCount === 0 ? action.payload.noReadCount : state.noReadCount }\r\n        case DIALOGS_SET_LOADING:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload === dialog._id ? \r\n                    { ...dialog, canLoad: false, isLoading: true } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_LOAD_MESSAGES:\r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.dialogId === dialog._id ? \r\n                    { ...dialog,  isLoading: false, canLoad: action.payload.canLoad, messages: [...action.payload.messages, ...dialog.messages] } :\r\n                dialog\r\n            )\r\n            }\r\n        case DIALOGS_SET_TYPER: \r\n            return { ...state, dialogs: state.dialogs.map(dialog => \r\n                action.payload.userId === dialog.user._id ? \r\n                { ...dialog, typing: action.payload.typing } :\r\n                dialog\r\n            ) }\r\n        case DIALOGS_SET_FORWARD: \r\n            return { ...state, forwardMessages: action.payload }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogs","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeUserId: false,\r\n    isError: false,\r\n    canLoad: false,\r\n    users: [],\r\n    friends: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    requested: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n    pending: {\r\n        users: [],\r\n        getted: false,\r\n        canLoad: false,\r\n        isFetching: true,\r\n    },\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case USERS_SET: {\r\n            return { ...state, users: action.payload.friends, canLoad: action.payload.canLoad, isFetching: false, getted: true }\r\n        }\r\n        case USERS_ADD:\r\n            return { ...state, users: [ action.payload, ...state.users ]  }\r\n        case USERS_SET_ACTIVE_USER_ID:\r\n            return {...state, activeUserId: action.payload}\r\n        case USERS_SET_FRIEND_STATUS:\r\n            return { ...state, users: state.users.map(user => \r\n                action.payload.userId === user._id ? \r\n                { ...user, friendStatus: action.payload.friendStatus\r\n                } :\r\n                user\r\n            ) }\r\n        case USERS_FRIENDS_GET:\r\n            return { ...state, friends: { ...state.friends, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_REQUESTED_GET:\r\n            return { ...state, requested: { ...state.requested, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_PENDING_GET:\r\n            return { ...state, pending: { ...state.pending, users: action.payload.users, canLoad: action.payload.canLoad, isFetching: false, getted: true } }\r\n        case USERS_FRIENDS_REMOVE:\r\n            return { ...state, friends: { ...state.friends, users: [ ...state.friends.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_REQUESTED_REMOVE:\r\n            return { ...state, requested: { ...state.requested, users: [ ...state.requested.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_PENDING_REMOVE:\r\n            return { ...state, pending: { ...state.pending, users: [ ...state.pending.users.filter(user => {        \r\n                return action.payload.userId !== user._id\r\n            })] } }\r\n        case USERS_FRIENDS_ADD:\r\n            return { ...state, friends: { ...state.friends, users: [ action.payload.user, ...state.friends.users] } }\r\n        case USERS_REQUESTED_ADD:\r\n            return { ...state, requested: { ...state.requested, users: [ action.payload.user, ...state.requested.users] } }\r\n        case USERS_PENDING_ADD:\r\n            return { ...state, pending: { ...state.pending, users: [ action.payload.user, ...state.pending.users] } }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    isFetching: true,\r\n    getted: false,\r\n    activeRoom: false,\r\n    isError: false,\r\n    notifications: [],\r\n    noRead: 0\r\n}\r\n\r\nconst rooms = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case NOTIFICATIONS_GET: {\r\n            return { ...state, notifications: action.payload, isFetching: false, getted: true }\r\n        }\r\n        case NOTIFICATIONS_ADD:\r\n            return { ...state, notifications: [ action.payload, ...state.notifications ], noRead: state.noRead+1 }\r\n        case NOTIFICATIONS_READ:\r\n            return { ...state, notifications: state.notifications.map(notification => \r\n                action.payload === notification._id ?\r\n                { ...notification, isRead: true } :\r\n                notification\r\n            ), noRead: state.noRead - 1 }\r\n        case NOTIFICATIONS_SET_NO_READ:\r\n            return { ...state, noRead: action.payload }\r\n        case NOTIFICATIONS_REMOVE:\r\n            return { ...state, notifications: [...state.notifications.filter(notification => notification._id !== action.payload)] }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default rooms","import { \r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_REMOTE_STREAM,\r\n    CALL_SET_MEDIA\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    user: false,\r\n    status: 'none', // none, outcoming, incoming, busy, active, canceled\r\n    remoteStream: false,\r\n    media: 'audio'\r\n}\r\n\r\nconst call = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CALL_SET_USER:\r\n            return { ...state, user: action.payload.user, status: action.payload.status }\r\n        case CALL_SET_STATUS:\r\n            return { ...state, status: action.payload }\r\n        case CALL_SET_REMOTE_STREAM:\r\n            return { ...state, remoteStream: action.payload }\r\n        case CALL_SET_MEDIA:\r\n            return { ...state, media: action.payload }\r\n        default:    \r\n            return state\r\n    }\r\n}\r\n\r\nexport default call","import { \r\n    SLIDER_SET\r\n} from '../constants'\r\n\r\nconst INITIAL_STATE = {\r\n    images: [],\r\n    index: 0\r\n}\r\n\r\nconst user = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case SLIDER_SET: {\r\n            return { ...state, images: action.payload.images, index: action.payload.index }\r\n        }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { combineReducers } from 'redux'\r\n\r\nimport user from './user'\r\nimport rooms from './rooms'\r\nimport media from './media'\r\nimport dialogs from './dialogs'\r\nimport users from './users'\r\nimport notifications from './notifications'\r\nimport call from './call'\r\nimport slider from './slider'\r\n\r\nexport default combineReducers({\r\n    user,\r\n    rooms,\r\n    media,\r\n    dialogs,\r\n    users,\r\n    notifications,\r\n    call,\r\n    slider\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\nimport ReduxThunk from 'redux-thunk'\r\n\r\nexport default createStore(rootReducer, applyMiddleware(ReduxThunk))","export function randomInteger(min, max) {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    return Math.floor(rand);\r\n}\r\n\r\nexport function setTitle(path, routeArray) {\r\n\tvar pageTitle;\r\n\tfor (var i=0; i < routeArray.length; i++) {\r\n\t\tif (routeArray[i].path === path) {\r\n\t\t\tpageTitle = 'Hevachat | ' + routeArray[i].title;\r\n\t\t}\r\n\t}\r\n\tdocument.title = (pageTitle) ? pageTitle : 'Hevachat';\r\n}\r\n\r\nexport function setForceTitle(title) {\r\n\tdocument.title = 'Hevachat | ' + title;\r\n}","import 'webrtc-adapter'\r\nimport SocketController from './SocketController';\r\nimport store from '../Redux/store';\r\nimport { ROOMS_SET_REMOTE_STREAM, MEDIA_TOGGLE_MICROPHONE, MEDIA_TOGGLE_MUSIC, CALL_SET_REMOTE_STREAM, MEDIA_TOGGLE_CAMERA, CALL_SET_MEDIA } from '../Redux/constants';\r\nimport hark from 'hark'\r\n\r\nlet WebRtcPeerConnection = false\r\nlet activeRoomId = false\r\nlet activeCallId = false\r\nlet localStream = false\r\nlet remoteStream = false\r\nlet speechEvents = false\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nconst RTCPC = RTCPeerConnection || window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\nconst RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.RTCSessionDescription;\r\n// const RTCIceCandidate = window.mozRTCIceCandidate || window.RTCIceCandidate;\r\n\r\nconst mediaConstraintsCall = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: true\r\n}\r\nconst mediaConstraintsRoom = {\r\n    offerToReceiveAudio: true,\r\n    offerToReceiveVideo: false\r\n}\r\n\r\nconst optionsRoom = {\r\n    'iceServers': [\r\n        {urls: 'stun:173.194.66.127:19302'},\r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nconst optionsCall = {\r\n    'iceServers': [\r\n        {urls: 'stun:stun01.sipphone.com'}, \r\n        {urls: 'stun:stun.ekiga.net'}, \r\n        {urls: 'stun:stun.fwdnet.net'}, \r\n        {urls: 'stun:stun.ideasip.com'}, \r\n        {urls: 'stun:stun.iptel.org'}, \r\n        {urls: 'stun:stun.rixtelecom.se'}, \r\n        {urls: 'stun:stun.schlund.de'}, \r\n        {urls: 'stun:stun.l.google.com:19302'}, \r\n        {urls: 'stun:stun1.l.google.com:19302'}, \r\n        {urls: 'stun:stun2.l.google.com:19302'}, \r\n        {urls: 'stun:stun3.l.google.com:19302'}, \r\n        {urls: 'stun:stun4.l.google.com:19302'}, \r\n        {urls: 'stun:stunserver.org'}, \r\n        {urls: 'stun:stun.softjoys.com'}, \r\n        {urls: 'stun:stun.voiparound.com'}, \r\n        {urls: 'stun:stun.voipbuster.com'}, \r\n        {urls: 'stun:stun.voipstunt.com'}, \r\n        {urls: 'stun:stun.voxgratia.org'}, \r\n        {urls: 'stun:stun.xten.com'}, \r\n        {\r\n          urls: 'turn:89.223.100.223:3478',\r\n          credential: 'TkYUraQew3RjwTA2JPjAaWL1Q7FIamc',\r\n          username: 'hevachat'\r\n        }\r\n    ],\r\n};\r\n\r\nfunction createEmptyStream(callback) {\r\n    let audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n    let dest = audioCtx.createMediaStreamDestination()\r\n    return callback(dest.stream)\r\n}\r\n\r\nconst getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\r\n// navigator.mediaDevices.getUserMedia \r\nfunction getUserMedia(media, callback) {    \r\n    if(isIE || isEdge) {\r\n        navigator.mediaDevices.getUserMedia(media).then(stream => {\r\n            callback(stream)\r\n        })\r\n        .catch((err) => {\r\n            createEmptyStream(callback)\r\n        })\r\n    } else {\r\n        getMedia(\r\n            media, \r\n            callback, \r\n            () => {\r\n                if(media.video)\r\n                    getMedia(\r\n                        {audio: true, video: false}, \r\n                        callback, \r\n                        () => {\r\n                            createEmptyStream(callback)\r\n                        }\r\n                    );\r\n                else\r\n                    createEmptyStream(callback)\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nfunction onRoomOffer(error, offer) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendRoomOfferSdp({roomId: activeRoomId, offerSdp: offer.sdp})\r\n}\r\n\r\nfunction onRoomIceCandidate(e) {  \r\n    if(e.candidate) {\r\n        SocketController.sendRoomIceCandidate({roomId: activeRoomId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nfunction onCallOffer(error, offer, media) {\r\n    if(error) return console.log(error);\r\n\r\n    SocketController.sendCallOfferSdp({userId: activeCallId, offerSdp: offer, media})\r\n}\r\n\r\nfunction onCallIceCandidate(e) {\r\n    if(e.candidate) {\r\n        SocketController.sendCallIceCandidate({userId: activeCallId, candidate: e.candidate})\r\n    } \r\n}\r\n\r\nexport default { \r\n    // Global functions\r\n    toggleMicrophone() {\r\n        localStream.getAudioTracks()[0].enabled = !localStream.getAudioTracks()[0].enabled\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: localStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n    toggleMusic() {\r\n        remoteStream.getAudioTracks()[0].enabled = !remoteStream.getAudioTracks()[0].enabled\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: remoteStream.getAudioTracks()[0].enabled\r\n        })\r\n    },\r\n\r\n    // Rooms conference\r\n    connectRoom: (roomId) => {\r\n        activeRoomId = roomId\r\n        \r\n        getUserMedia({audio: true, video: false}, (stream) => {\r\n            localStream = stream\r\n\r\n            localStream.getAudioTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsRoom)\r\n                        \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onRoomIceCandidate\r\n\r\n            WebRtcPeerConnection.createOffer(mediaConstraintsRoom).then((offer) => {\r\n                WebRtcPeerConnection.setLocalDescription(offer)\r\n                \r\n                onRoomOffer(null, offer)\r\n            })\r\n        })\r\n    },\r\n    leaveRoom({roomId, lang}) {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeRoomId) {\r\n            SocketController.leaveRoom({roomId, lang})\r\n            activeRoomId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            localStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            remoteStream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n            remoteStream = false\r\n        }\r\n\r\n        if(speechEvents) {\r\n            speechEvents.stop()\r\n            speechEvents = false\r\n        }\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n    },\r\n    roomOnIceCandidate: (e) => {\r\n        if(e.candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(e)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n    onRoomAnswerSdp: (sdpAnswer) => {\r\n        try {\r\n            let answer = new RTCSessionDescription({\r\n                type: 'answer',\r\n                sdp: sdpAnswer\r\n            })\r\n            \r\n            WebRtcPeerConnection.setRemoteDescription(answer);\r\n    \r\n            let stream = new MediaStream();\r\n    \r\n            for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                stream.addTrack(sender.track);\r\n            }\r\n    \r\n            remoteStream = stream\r\n    \r\n            store.dispatch({\r\n                type: ROOMS_SET_REMOTE_STREAM,\r\n                payload: stream\r\n            })\r\n    \r\n            speechEvents = hark(localStream, {});\r\n     \r\n            speechEvents.on('speaking', function() {\r\n                SocketController.sendRoomSpeaking({roomId: activeRoomId})\r\n            });\r\n        \r\n            speechEvents.on('stopped_speaking', function() {\r\n                SocketController.sendRoomStopSpeaking({roomId: activeRoomId})\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n    },\r\n\r\n    call: (userId, create = false) => {\r\n        activeCallId = userId\r\n\r\n        getUserMedia({audio: true, video: true}, (stream) => {\r\n            localStream = stream\r\n\r\n            if(localStream.getVideoTracks()[0])\r\n                localStream.getVideoTracks()[0].enabled = false\r\n\r\n            WebRtcPeerConnection = new RTCPC(optionsCall)\r\n            \r\n            for (const track of stream.getTracks()) {\r\n                WebRtcPeerConnection.addTrack(track, stream)\r\n            }\r\n\r\n            WebRtcPeerConnection.onicecandidate = onCallIceCandidate\r\n\r\n            if(create)\r\n                WebRtcPeerConnection.createOffer(mediaConstraintsCall).then((offer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(offer)\r\n                    onCallOffer(null, offer, 'audio')\r\n                })\r\n            \r\n            store.dispatch({\r\n                type: MEDIA_TOGGLE_MICROPHONE,\r\n                payload: true\r\n            })\r\n        })\r\n    },\r\n\r\n    stopCall: () => {\r\n        if(WebRtcPeerConnection) {\r\n            WebRtcPeerConnection.close()\r\n            WebRtcPeerConnection = false\r\n        }\r\n\r\n        if(activeCallId) {\r\n            activeCallId = false\r\n        }\r\n\r\n        if(localStream) {\r\n            for (const track of localStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n\r\n            localStream = false\r\n        }\r\n\r\n        if(remoteStream) {\r\n            for (const track of remoteStream.getTracks()) {\r\n                track.stop()\r\n            }\r\n            remoteStream = false\r\n            store.dispatch({\r\n                type: CALL_SET_REMOTE_STREAM,\r\n                payload: false\r\n            })\r\n        }\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_REMOTE_STREAM,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MICROPHONE,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_MUSIC,\r\n            payload: true\r\n        })\r\n\r\n        store.dispatch({\r\n            type: MEDIA_TOGGLE_CAMERA,\r\n            payload: false\r\n        })\r\n\r\n        store.dispatch({\r\n            type: CALL_SET_MEDIA,\r\n            payload: 'audio'\r\n        })\r\n    },\r\n\r\n    callToggleCamera: () => {\r\n        if(localStream) {\r\n            if(localStream.getVideoTracks()[0]) {\r\n                localStream.getVideoTracks()[0].enabled = !localStream.getVideoTracks()[0].enabled\r\n                store.dispatch({\r\n                    type: MEDIA_TOGGLE_CAMERA,\r\n                    payload: localStream.getVideoTracks()[0].enabled\r\n                })\r\n\r\n                SocketController.toggleCameraCall(activeCallId, localStream.getVideoTracks()[0].enabled ? 'video' : 'audio')\r\n            }\r\n        }\r\n    },\r\n\r\n    onCallOfferSdp: ({offerSdp, media}) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(offerSdp);\r\n\r\n                WebRtcPeerConnection.createAnswer(mediaConstraintsCall).then((answer) => {\r\n                    WebRtcPeerConnection.setLocalDescription(answer)\r\n                    SocketController.sendCallAnswerSdp({userId: activeCallId, answerSdp: answer})\r\n\r\n                    let stream = new MediaStream();\r\n\r\n                    if(remoteStream) {\r\n                        for (const track of remoteStream.getTracks()) {\r\n                            track.stop();\r\n                        }\r\n                        remoteStream = false\r\n                    }\r\n\r\n                    for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                        stream.addTrack(sender.track);\r\n                    }\r\n\r\n                    remoteStream = stream\r\n\r\n                    store.dispatch({\r\n                        type: CALL_SET_REMOTE_STREAM,\r\n                        payload: stream\r\n                    })\r\n                    store.dispatch({\r\n                        type: CALL_SET_MEDIA,\r\n                        payload: media\r\n                    })\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    onCallAnswerSdp: (answer) => {\r\n        let wait = setInterval(() => {\r\n            if(WebRtcPeerConnection) {\r\n                clearInterval(wait)\r\n                WebRtcPeerConnection.setRemoteDescription(answer);\r\n\r\n                let stream = new MediaStream();\r\n\r\n                if(remoteStream) {\r\n                    for (const track of remoteStream.getTracks()) {\r\n                        track.stop();\r\n                    }\r\n                    remoteStream = false\r\n                }\r\n\r\n                for (const sender of WebRtcPeerConnection.getReceivers()) {\r\n                    stream.addTrack(sender.track);\r\n                }\r\n                \r\n                remoteStream = stream\r\n\r\n                store.dispatch({\r\n                    type: CALL_SET_REMOTE_STREAM,\r\n                    payload: remoteStream\r\n                })\r\n            }\r\n        }, 100);\r\n    },\r\n\r\n    callOnIceCandidate: (candidate) => {\r\n        if(candidate) {\r\n            let wait = setInterval(() => {\r\n                if(WebRtcPeerConnection) {\r\n                    clearInterval(wait)\r\n                    WebRtcPeerConnection.addIceCandidate(candidate)\r\n                }\r\n            }, 100)\r\n        }\r\n    },\r\n}","export const urlApi = 'https://romadevtest.tk:8080'\r\nexport const timeStamps = [\r\n    {\r\n        time: 60,\r\n        label: '1 minute'\r\n    },\r\n    {\r\n        time: 1800,\r\n        label: '30 minute'\r\n    },\r\n    {\r\n        time: 3600,\r\n        label: '1 hour'\r\n    },\r\n    {\r\n        time: 86400,\r\n        label: '24 hour'\r\n    },\r\n    {\r\n        time: 604800,\r\n        label: '7 days'\r\n    },\r\n    {\r\n        time: 2419200,\r\n        label: '1 month'\r\n    },\r\n    {\r\n        time: 999999999,\r\n        label: 'Forever'\r\n    },\r\n]","import io from 'socket.io-client'\r\nimport store from '../Redux/store'\r\nimport {\r\n    ROOMS_ADD,\r\n    ROOMS_USER_JOIN_ROOM,\r\n    ROOMS_USER_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_ADD_TYPER,\r\n    ROOMS_REMOVE_TYPER,\r\n    ROOMS_SET_SPEAKING_STATUS,\r\n    ROOMS_USER_JOIN_IN_ROOM,\r\n    ROOMS_USER_LEAVE_IN_ROOM,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_SET_TYPER,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_ADD,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_PENDING_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_ADD,\r\n    NOTIFICATIONS_ADD,\r\n    NOTIFICATIONS_READ,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    NOTIFICATIONS_REMOVE,\r\n    ROOMS_EDIT_ROOM,\r\n    ROOMS_EDIT_IN_ROOM,\r\n    ROOMS_DELETE_ROOM,\r\n    CALL_SET_USER,\r\n    CALL_SET_STATUS,\r\n    CALL_SET_MEDIA,\r\n    ROOMS_SET_MUTED,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_LEAVE_ROOM,\r\n    USER_SET_WARNING\r\n} from '../Redux/constants'\r\nimport WebRtcController from './WebRtcController'\r\nimport {urlApi} from '../config'\r\n\r\nlet socket = false\r\nlet activeLang = false\r\nlet unmuteTimer = false\r\n\r\nexport default { \r\n    init: (apiToken) => {\r\n        if(socket) \r\n            return\r\n\r\n        socket = io(urlApi, {transports: ['websocket', 'polling', 'flashsocket']})\r\n        socket.on('connect', () => {\r\n            socket.emit('auth', apiToken)\r\n\r\n            fetch(`${urlApi}/api/call/check`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({have, call}) => {\r\n                if(have) {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: call.userFrom._id\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        store.dispatch({\r\n                            type: CALL_SET_USER,\r\n                            payload: {user, status: 'incoming'}\r\n                        })\r\n                    });\r\n                }\r\n            });\r\n        })\r\n\r\n        socket.on('createRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('editInRoom', room => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_IN_ROOM,\r\n                payload: room\r\n            })\r\n        })\r\n\r\n        socket.on('deleteRoom', roomId => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_ROOM,\r\n                payload: roomId\r\n            })\r\n        })\r\n\r\n        socket.on('joinRoom', ({roomId, user}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_ROOM,\r\n                payload: {roomId, user}\r\n            })\r\n        })\r\n\r\n        socket.on('joinInRoom', (user) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_JOIN_IN_ROOM,\r\n                payload: user\r\n            })\r\n        })\r\n\r\n        socket.on('leaveRoom', ({roomId, userId}) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_ROOM,\r\n                payload: {roomId, userId}\r\n            })\r\n        })\r\n\r\n        socket.on('leaveInRoom', (userId) => {\r\n            store.dispatch({\r\n                type: ROOMS_USER_LEAVE_IN_ROOM,\r\n                payload: userId\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageRoom', (message) => {\r\n            store.dispatch({\r\n                type: ROOMS_ADD_MESSAGE,\r\n                payload: message\r\n            })\r\n\r\n            if(store.getState().rooms.activeRoom.typers.find(x => x._id === message.user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_REMOVE_TYPER,\r\n                    payload: message.user._id\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('deleteMessageRoom', (messageIds) => {\r\n            store.dispatch({\r\n                type: ROOMS_DELETE_MESSAGE,\r\n                payload: messageIds\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId)\r\n                store.dispatch({\r\n                    type: ROOMS_READ_MESSAGE,\r\n                    payload: store.getState().user._id\r\n                })\r\n        })\r\n\r\n        socket.on('editMessageRoom', message => {\r\n            store.dispatch({\r\n                type: ROOMS_EDIT_MESSAGE,\r\n                payload: message\r\n            })\r\n        })\r\n\r\n        socket.on('typingRoom', user => {\r\n            if(!store.getState().rooms.activeRoom.typers.find(x => x._id === user._id)) {\r\n                store.dispatch({\r\n                    type: ROOMS_ADD_TYPER,\r\n                    payload: user\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: ROOMS_REMOVE_TYPER,\r\n                        payload: user._id\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('roomAnswerSdp', answerSdp => {\r\n            WebRtcController.onRoomAnswerSdp(answerSdp)\r\n        })\r\n\r\n        socket.on('roomOnIceCandidate', candidate => {\r\n            WebRtcController.roomOnIceCandidate(candidate)\r\n        })\r\n\r\n        socket.on('roomSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: true}\r\n            })\r\n        })\r\n\r\n        socket.on('roomStopSpeaking', userId => {\r\n            store.dispatch({\r\n                type: ROOMS_SET_SPEAKING_STATUS,\r\n                payload: {userId, speaking: false}\r\n            })\r\n        })\r\n\r\n        socket.on('sendMessageDialog', ({message, otherId}) => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id) && store.getState().dialogs.dialogs.find(x => x.user._id === message.user._id).typing) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId: message.user._id, typing: false}\r\n                })\r\n            }\r\n\r\n            if(store.getState().dialogs.dialogs.find(x => x._id === message.dialogId)) {\r\n                let noReadCount = false\r\n\r\n                if(\r\n                    message.user._id !== store.getState().user._id &&\r\n                    !store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).noRead\r\n                ) {\r\n                    noReadCount = true\r\n                }\r\n\r\n                store.dispatch({\r\n                    type: DIALOGS_ADD_MESSAGE,\r\n                    payload: {message, dialogId: message.dialogId, noRead: message.user._id !== store.getState().user._id, noReadCount}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: otherId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    let dialog = {\r\n                        lastMessage: message,\r\n                        _id: message.dialogId,\r\n                        users: [store.getState().user, user],\r\n                        user: user,\r\n                        getted: false,\r\n                        typing: false,\r\n                        noRead: 1,\r\n                        messages: []\r\n                    }\r\n                    store.dispatch({\r\n                        type: DIALOGS_ADD,\r\n                        payload: dialog\r\n                    })\r\n                });\r\n            }\r\n        })\r\n\r\n        socket.on('sendNotification', notification => {\r\n            if(store.getState().notifications.getted)\r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_ADD,\r\n                    payload: notification\r\n                })\r\n            else \r\n                store.dispatch({\r\n                    type: NOTIFICATIONS_SET_NO_READ,\r\n                    payload: store.getState().notifications.noRead+1\r\n                })\r\n        })\r\n\r\n        socket.on('readNotification', id => {\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_READ,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('removeNotification', ({id, read}) => {\r\n            let noRead = store.getState().notifications.noRead\r\n            \r\n            if(!read)\r\n                noRead--\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_SET_NO_READ,\r\n                payload: noRead\r\n            })\r\n\r\n            store.dispatch({\r\n                type: NOTIFICATIONS_REMOVE,\r\n                payload: id\r\n            })\r\n        })\r\n\r\n        socket.on('readMessagesDialog', ({dialogId, userId}) => {\r\n            store.dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId, noRead: userId !== store.getState().user._id, noReadCount: userId !== store.getState().user._id}\r\n            })\r\n        })\r\n\r\n        socket.on('editMessageDialog', ({message, dialogId}) => {\r\n            let last = store.getState().dialogs.dialogs.find(x => x._id === dialogId).lastMessage\r\n\r\n            let editLast\r\n            if(last)\r\n                editLast = message._id === last._id\r\n            else \r\n                editLast = false\r\n\r\n            store.dispatch({\r\n                type: DIALOGS_EDIT_MESSAGE,\r\n                payload: {message, dialogId, editLast}\r\n            })\r\n        })\r\n\r\n        socket.on('deleteMessageDialog', ({messageIds, dialogId, lastMessage, noRead, noReadCount}) => {\r\n            console.log(noReadCount)\r\n            store.dispatch({\r\n                type: DIALOGS_DELETE_MESSAGE,\r\n                payload: {dialogId, messageIds, lastMessage, noRead, noReadCount}\r\n            })\r\n        })\r\n\r\n        socket.on('typingDialog', userId => {\r\n            if(store.getState().dialogs.dialogs.find(x => x.user._id === userId)) {\r\n                store.dispatch({\r\n                    type: DIALOGS_SET_TYPER,\r\n                    payload: {userId, typing: true}\r\n                })\r\n    \r\n                setTimeout(() => {\r\n                    store.dispatch({\r\n                        type: DIALOGS_SET_TYPER,\r\n                        payload: {userId, typing: false}\r\n                    })\r\n                }, 2500)\r\n            }\r\n        })\r\n\r\n        socket.on('sendRequestFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n\r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_REQUESTED_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendAcceptFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.pending.getted) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(store.getState().users.users.find(x => x._id === userId)) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                    })\r\n                } else {\r\n                    fetch(`${urlApi}/api/user/get`, {\r\n                        method: \"post\",\r\n                        headers: {\r\n                            Accept: \"application/json\",\r\n                            \"Content-Type\": \"application/json\",\r\n                            Authorization: `Bearer ${apiToken}`,\r\n                        },\r\n                        body: JSON.stringify({\r\n                            userId: userId\r\n                        })\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then(({user, friendStatus}) => {\r\n                        user.friendStatus = friendStatus\r\n                        store.dispatch({\r\n                            type: USERS_ADD,\r\n                            payload: user\r\n                        })\r\n                        store.dispatch({\r\n                            type: USERS_FRIENDS_ADD,\r\n                            payload: {user}\r\n                        })\r\n                    });\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('sendRemoveFriend', ({userId, friendStatus}) => {\r\n            store.dispatch({\r\n                type: USERS_SET_FRIEND_STATUS,\r\n                payload: {userId, friendStatus}\r\n            })\r\n    \r\n            if(store.getState().users.friends.getted) {\r\n                if(friendStatus === 1) {\r\n                    store.dispatch({\r\n                        type: USERS_FRIENDS_REMOVE,\r\n                        payload: {userId}\r\n                    })\r\n    \r\n                    if(store.getState().users.requested.getted) {\r\n                        if(store.getState().users.users.find(x => x._id === userId)) {\r\n                            store.dispatch({\r\n                                type: USERS_PENDING_ADD,\r\n                                payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                            })\r\n                        } else {\r\n                            fetch(`${urlApi}/api/user/get`, {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    Accept: \"application/json\",\r\n                                    \"Content-Type\": \"application/json\",\r\n                                    Authorization: `Bearer ${apiToken}`,\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    userId: userId\r\n                                })\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then(({user, friendStatus}) => {\r\n                                user.friendStatus = friendStatus\r\n                                store.dispatch({\r\n                                    type: USERS_ADD,\r\n                                    payload: user\r\n                                })\r\n                                store.dispatch({\r\n                                    type: USERS_PENDING_ADD,\r\n                                    payload: {user}\r\n                                })\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    \r\n            if(store.getState().users.pending.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_PENDING_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n    \r\n            if(store.getState().users.requested.getted && friendStatus === 0) {\r\n                store.dispatch({\r\n                    type: USERS_REQUESTED_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendUserCall', userId => {\r\n            fetch(`${urlApi}/api/user/get`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: userId\r\n                })\r\n            })\r\n            .then((response) => response.json())\r\n            .then(({user, friendStatus}) => {\r\n                store.dispatch({\r\n                    type: CALL_SET_USER,\r\n                    payload: {user, status: 'incoming'}\r\n                })\r\n            });\r\n        })\r\n\r\n        socket.on('sendUserAcceptCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_STATUS,\r\n                    payload: 'active'\r\n                })\r\n                WebRtcController.call(userId, true)\r\n            }\r\n        })\r\n\r\n        socket.on('callOnIceCandidate', candidate => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.callOnIceCandidate(candidate)\r\n            }\r\n        })\r\n\r\n        socket.on('stopUserCall', userId => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                if(store.getState().call.status === 'outcoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_STATUS,\r\n                        payload: 'canceled'\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'incoming')\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n                \r\n                if(store.getState().call.status === 'active') {\r\n                    store.dispatch({\r\n                        type: CALL_SET_USER,\r\n                        payload: {user: false, status: 'none'}\r\n                    })\r\n\r\n                    WebRtcController.stopCall()\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('callOfferSdp', ({offerSdp, media}) => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallOfferSdp({offerSdp, media})\r\n            }\r\n        })\r\n\r\n        socket.on('callAnswerSdp', sdp => {\r\n            if(store.getState().call.user) {\r\n                WebRtcController.onCallAnswerSdp(sdp)\r\n            }\r\n        })\r\n\r\n        socket.on('toggleCameraCall', ({userId, media}) => {\r\n            if(store.getState().call.user && store.getState().call.user._id === userId) {\r\n                store.dispatch({\r\n                    type: CALL_SET_MEDIA,\r\n                    payload: media\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('muteRoom', ({roomId, muted}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: muted\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if((muted.numDate*1000) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === roomId && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                    }, muted.numDate*1000);\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('unmuteRoom', roomId => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                store.dispatch({\r\n                    type: ROOMS_SET_MUTED,\r\n                    payload: false\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n            }\r\n        })\r\n\r\n        socket.on('banRoom', ({roomId, ban}) => {\r\n            if(store.getState().rooms.activeRoom && store.getState().rooms.activeRoom._id === roomId) {\r\n                WebRtcController.leaveRoom({roomId, lang: store.getState().rooms.activeRoom.lang})\r\n                store.dispatch({\r\n                    type: ROOMS_LEAVE_ROOM\r\n                })\r\n                store.dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: {msg: 'you_banned_in_this_room', ban: ban}\r\n                })\r\n            }\r\n        })\r\n\r\n        socket.on('sendWarning', warning => {\r\n            store.dispatch({\r\n                type: USER_SET_WARNING,\r\n                payload: warning\r\n            })\r\n        })\r\n    },\r\n    getSocketId: () => {\r\n        return socket.id\r\n    },\r\n    joinLang: lang => {\r\n        if(activeLang)\r\n            socket.emit('leaveLang', lang)\r\n        \r\n        socket.emit('joinLang', lang)\r\n        activeLang = lang\r\n    },\r\n    createRoom: ({room, lang}) => {\r\n        socket.emit('createRoom', {room, lang})\r\n    },\r\n    joinRoom: ({roomId, lang}) => {\r\n        socket.emit('joinRoom', {roomId, lang, userId: store.getState().user._id})\r\n    },\r\n    leaveRoom: ({roomId, lang}) => {\r\n        socket.emit('leaveRoom', {roomId, lang})\r\n    },\r\n    sendMessageRoom: ({roomId, message}) => {\r\n        socket.emit('sendMessageRoom', {roomId, message})\r\n    },\r\n    typingRoom: (roomId) => {\r\n        socket.emit('typingRoom', roomId)\r\n    },\r\n\r\n    // Room conference\r\n    sendRoomIceCandidate: ({roomId, candidate}) => {\r\n        socket.emit('roomIceCandidate', {roomId, candidate})\r\n    },\r\n    sendRoomOfferSdp: ({roomId, offerSdp}) => {\r\n        socket.emit('roomOfferSdp', {roomId, offerSdp})\r\n    },\r\n    sendRoomSpeaking: ({roomId}) => {\r\n        socket.emit('roomSpeaking', roomId)\r\n    },\r\n    sendRoomStopSpeaking: ({roomId}) => {\r\n        socket.emit('roomStopSpeaking', roomId)\r\n    },\r\n    typingDialog: (otherId, userId) => {\r\n        socket.emit('typingDialog', {otherId, userId})\r\n    },\r\n\r\n    // Calls\r\n    sendCallOfferSdp: ({userId, offerSdp, media}) => {\r\n        socket.emit('callOfferSdp', {userId, offerSdp, media})\r\n    },\r\n    sendCallAnswerSdp: ({userId, answerSdp}) => {\r\n        socket.emit('callAnswerSdp', {userId, answerSdp})\r\n    },\r\n    sendCallIceCandidate: ({userId, candidate}) => {\r\n        socket.emit('callIceCandidate', {userId, candidate})\r\n    },\r\n    toggleCameraCall: (userId, media) => {\r\n        socket.emit('toggleCameraCall', {userId, media})\r\n    }\r\n}\r\n\r\n","import { \r\n    DIALOGS_GET,\r\n    DIALOGS_ADD,\r\n    DIALOGS_ADD_MESSAGE,\r\n    DIALOGS_SUCCESS_MESSAGE,\r\n    DIALOGS_ERROR_MESSAGE,\r\n    DIALOGS_READ_MESSAGES,\r\n    DIALOGS_LOAD,\r\n    DIALOGS_EDIT_MESSAGE,\r\n    DIALOGS_DELETE_MESSAGE,\r\n    DIALOGS_SET_LOADING,\r\n    DIALOGS_LOAD_MESSAGES,\r\n    DIALOGS_UPDATE_ONLINE,\r\n    DIALOGS_SET_FORWARD,\r\n    DIALOGS_PRELOAD\r\n} from '../constants'\r\nimport store from '../store';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport { toast } from 'react-toastify';\r\nimport {urlApi} from '../../config'\r\n\r\nexport const dialogsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((dialogs) => {\r\n        for (let i = 0; i < dialogs.length; i++) {\r\n            let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n            \r\n            if(existDialog) {\r\n                dialogs[i] = existDialog\r\n            } else {\r\n                dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n                if(!dialogs[i].user)\r\n                    dialogs[i].user = dialogs[i].users[0]\r\n\r\n                dialogs[i].typers = []\r\n            }\r\n        }\r\n\r\n        dispatch({\r\n            type: DIALOGS_GET,\r\n            payload: dialogs\r\n        })\r\n    });\r\n}\r\n\r\nexport const dialogsLoad = (apiToken) => (dispatch) => {\r\n    if(store.getState().dialogs.canLoad) {\r\n        dispatch({\r\n            type: DIALOGS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/dialog/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastDialogId: store.getState().dialogs.dialogs[store.getState().dialogs.dialogs.length-1]._id,\r\n                firstDialogId: store.getState().dialogs.dialogs[0]._id\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((dialogs) => {\r\n            for (let i = 0; i < dialogs.length; i++) {\r\n                let existDialog = store.getState().dialogs.dialogs.find(x => x._id === dialogs[i]._id)\r\n                \r\n                if(existDialog) {\r\n                    dialogs[i] = existDialog\r\n                } else {\r\n                    dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n    \r\n                    if(!dialogs[i].user)\r\n                        dialogs[i].user = dialogs[i].users[0]\r\n    \r\n                    dialogs[i].typers = []\r\n                }\r\n            }\r\n            \r\n            dispatch({\r\n                type: DIALOGS_PRELOAD,\r\n                payload: dialogs\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const dialogGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        if(!dialog.error) {\r\n            dialog.user = dialog.users.find(user => user._id !== store.getState().user._id)\r\n\r\n            if(!dialog.user)\r\n                dialog.user = dialog.users[0]\r\n\r\n            dialog.typing = false\r\n\r\n            dialog.getted = true\r\n\r\n            dialog.messages = messages.reverse()\r\n            dialog.lastMessage = false\r\n            dialog.canLoad = messages.length === 50\r\n            dialog.isLoading = false\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        } else {\r\n            let dialog = {\r\n                getted: true,\r\n                isNotFound: true,\r\n                user: {_id: userId}\r\n            }\r\n\r\n            dispatch({\r\n                type: DIALOGS_ADD,\r\n                payload: dialog\r\n            })\r\n        }\r\n    });\r\n}\r\n\r\nexport const dialogLoad = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/dialog/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({dialog, messages}) => {\r\n        dialog.messages = messages.reverse()\r\n\r\n        dispatch({\r\n            type: DIALOGS_LOAD,\r\n            payload: {dialogId: dialog._id, messages: dialog.messages, canLoad: messages.length === 50}\r\n        })\r\n    });\r\n}\r\n\r\nexport const updateOnline = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-online`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({online, onlineAt}) => {\r\n        dispatch({\r\n            type: DIALOGS_UPDATE_ONLINE,\r\n            payload: {userId, online, onlineAt}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setForward = (messages) => (dispatch) => {\r\n    dispatch({\r\n        type: DIALOGS_SET_FORWARD,\r\n        payload: messages\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('userId', message.userId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n\r\n    let last = store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages[store.getState().dialogs.dialogs.find(x => x._id === message.dialogId).messages.length-1]\r\n    \r\n    dispatch({\r\n        type: DIALOGS_EDIT_MESSAGE,\r\n        payload: {\r\n            message: localMessage, \r\n            dialogId: message.dialogId, \r\n            editLast: last._id === message._id\r\n        }\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/dialog/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, otherId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().dialogs.dialogs.find(dialog => dialog._id === dialogId).messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: DIALOGS_READ_MESSAGES,\r\n                payload: {dialogId, userId: otherId, noRead: true, noReadCount: true}\r\n            })\r\n        }\r\n    }, 1)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/dialog/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    otherId,\r\n                    socketId: SocketController.getSocketId()\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let dialogId = message.dialogId\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds: [message._id], lastMessage: false}\r\n    })\r\n\r\n    dispatch({\r\n        type: DIALOGS_ADD_MESSAGE,\r\n        payload: {message: localMessage, dialogId: message.dialogId}\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('userId', message.userId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/dialog/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                return dispatch({\r\n                    type: DIALOGS_ERROR_MESSAGE,\r\n                    payload: {_id: message._id, dialogId: message.dialogId}\r\n                })\r\n            }\r\n            dispatch({\r\n                type: DIALOGS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: DIALOGS_ERROR_MESSAGE,\r\n                payload: {_id: message._id, dialogId: message.dialogId}\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({dialogId, otherId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    let lastMessage\r\n\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                otherId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id, dialogId) => (dispatch) => {\r\n    let messageIds = [_id]\r\n\r\n    let lastMessage\r\n    if(store.getState().dialogs.dialogs.find(x => x._id === dialogId) && !!store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.length)\r\n        lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages.filter(x => !messageIds.find(y => y === x._id)).pop()\r\n    else \r\n        lastMessage = false\r\n\r\n    dispatch({\r\n        type: DIALOGS_DELETE_MESSAGE,\r\n        payload: {dialogId, messageIds, lastMessage}\r\n    })\r\n}\r\n\r\nexport const loadMessages = ({dialogId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().dialogs.dialogs.find(x => x._id === dialogId).messages[0]\r\n\r\n    dispatch({\r\n        type: DIALOGS_SET_LOADING,\r\n        payload: dialogId\r\n    })\r\n\r\n    fetch(`${urlApi}/api/dialog/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        }) \r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: DIALOGS_LOAD_MESSAGES,\r\n                payload: {dialogId,  messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","export default {\r\n    ru: {\r\n        settings: 'Настройки',\r\n        change_profile: 'Изменить профиль',\r\n        language: 'Язык',\r\n        logout: 'Выйти',\r\n        back: 'Назад',\r\n        save: 'Сохранить',\r\n        next: 'Продолжить',\r\n        firstName: 'Имя',\r\n        lastName: 'Фамилия',\r\n        city: 'Город',\r\n        last_name_not_empty: 'Фамилия не может быть пустой',\r\n        first_name_not_empty: 'Имя не может быть пустым',\r\n        title_not_empty: 'Заголовок не может быть пустым',\r\n        rooms: 'Комнаты',\r\n        create_room: 'Создать комнату',\r\n        something_goes_wrong: 'Что-то пошло не так...',\r\n        chats: 'Чаты',\r\n        notifications: 'Уведомления',\r\n        contacts: 'Контакты',\r\n        friends: 'Друзья',\r\n        inbox: 'Входящие',\r\n        outbox: 'Исходящие',\r\n        you_dont_have_friends: 'У вас нет друзей, давайте добавим их',\r\n        search: 'Поиск',\r\n        message: 'Сообщение',\r\n        call: 'Позвонить',\r\n        accept: 'Принять',\r\n        decline: 'Отклонить',\r\n        not_indicated: 'Не указано',\r\n        plus_friend: '+ Друг',\r\n        remove: \"Удалить\",\r\n        english: 'Английский',\r\n        russian: 'Русский',\r\n        you: 'Вы',\r\n        write_message: 'Напишите сообщение...',\r\n        show_investments: 'Показать вложения',\r\n        you_sure: 'Вы уверены?',\r\n        delete: 'Удалить',\r\n        delete_room: 'Удалить комнату',\r\n        invite_friends: 'Пригласить друзей',\r\n        edit_room: 'Изменить комнату',\r\n        investments: 'Вложения',\r\n        photos: 'Фотографии',\r\n        sounds: 'Аудио',\r\n        files: 'Файлы',\r\n        online: 'онлайн',\r\n        missed_call: 'Пропущенный звонок',\r\n        outcoming_call: 'Исходящий звонок',\r\n        incoming_call: 'Входящий звонок',\r\n        canceled_call: 'Отменённый звонок',\r\n        select_language: 'Выберите язык',\r\n        users_not_found: 'Пользователи не найдены',\r\n        user_not_found: 'Пользователь не найден',\r\n        reply: 'Ответить',\r\n        forward: 'Переслать',\r\n        title: 'Название',\r\n        new_room: 'Новая комната',\r\n        invite: 'Пригласить',\r\n        private_room: 'Приватная комната',\r\n        start: 'Начать',\r\n        select_users: 'Выберите пользователей',\r\n        new_chat: 'Новый чат',\r\n        invited_you_to_the_room: 'Пригласил(а) вас в комнату',\r\n        accept_your_friend_request: 'Принял(а) ваш запрос в друзья',\r\n        send_you_friend_request: 'Отправил(а) вам запрос в друзья',\r\n        january: 'Январь',\r\n        february: 'Февраль',\r\n        march: 'Март',\r\n        april: 'Апрель',\r\n        may: 'Май',\r\n        june: 'Июнь',\r\n        july: 'Июль',\r\n        august: 'Август',\r\n        september: 'Сентябрь',\r\n        october: 'Октябрь',\r\n        november: 'Ноябрь',\r\n        december: 'Декабрь',\r\n        jan: 'Янв',\r\n        feb: 'Фев',\r\n        mar: 'Мар',\r\n        apr: 'Апр',\r\n        jun: 'Июн',\r\n        jul: 'Июл',\r\n        aug: 'Авг',\r\n        sep: 'Сен',\r\n        oct: 'Окт',\r\n        nov: 'Ноя',\r\n        dec: 'Дек',\r\n        in: 'в',\r\n        yerstaday: 'вчера',\r\n        today: 'сегодня',\r\n        just_now: 'только что',\r\n        here_wiil_placed_your_notifications: 'Здесь будут находиться ваши уведомления',\r\n        create_your_first_room: 'Создайте свою первую комнату в этом языке',\r\n        you_dont_have_chats: 'У вас нет чатов, давайте создадим его',\r\n        write_your_first_message: 'Напишите свое первое сообщение для',\r\n        typing: 'печатает',\r\n        attachment_messages: 'Прикрепленные сообщения',\r\n        messages: 'Сообщения'\r\n    },\r\n    en: {\r\n        settings: 'Settings',\r\n        change_profile: 'Change profile',\r\n        language: 'Language',\r\n        logout: 'Logout',\r\n        back: 'Back',\r\n        save: 'Save',\r\n        next: 'Next',\r\n        firstName: 'First name',\r\n        lastName: 'Last name',\r\n        city: 'City',\r\n        last_name_not_empty: 'First name cannot be empty',\r\n        first_name_not_empty: 'Last name cannot be empty',\r\n        title_not_empty: 'Title cannot be empty',\r\n        rooms: 'Rooms',\r\n        create_room: 'Create room',\r\n        something_goes_wrong: 'Something goes wrong...',\r\n        chats: 'Chats',\r\n        notifications: 'Notifications',\r\n        contacts: 'Contacts',\r\n        friends: 'Friends',\r\n        inbox: 'Inbox',\r\n        outbox: 'Outbox',\r\n        you_dont_have_friends: 'You dont have friends, lets add him',\r\n        search: 'Search',\r\n        message: 'Message',\r\n        call: 'Call',\r\n        accept: 'Accept',\r\n        decline: 'Decline',\r\n        not_indicated: 'Not indicated',\r\n        plus_friend: '+ Friend',\r\n        remove: \"Remove\",\r\n        english: 'English',\r\n        russian: 'Russian',\r\n        you: 'You',\r\n        write_message: 'Write message...',\r\n        show_investments: 'Show investments',\r\n        outcoming_call: 'Outcoming call',\r\n        incoming_call: 'Incoming call',\r\n        online: 'online',\r\n        invite: 'Invite',\r\n        delete_room: 'Delete room',\r\n        invite_friends: 'Invite friends',\r\n        edit_room: 'Edit room',\r\n        you_sure: 'You sure?',\r\n        delete: 'Delete',\r\n        investments: 'Investments',\r\n        photos: 'Photos',\r\n        sounds: 'Sounds',\r\n        files: 'Files',\r\n        missed_call: 'Missed call',\r\n        canceled_call: 'Canceled call',\r\n        select_language: 'Select language',\r\n        users_not_found: 'Users not found',\r\n        user_not_found: 'User not found',\r\n        reply: 'Reply',\r\n        forward: 'Forward',\r\n        title: 'Title',\r\n        new_room: 'New room',\r\n        private_room: 'Private room',\r\n        start: 'Start',\r\n        select_users: 'Select users',\r\n        new_chat: 'New chat',\r\n        invited_you_to_the_room: 'Invited you to the room',\r\n        accept_your_friend_request: 'Accept your friend request',\r\n        send_you_friend_request: 'Send you friend request',\r\n        january: 'January',\r\n        february: 'February',\r\n        march: 'March',\r\n        april: 'April',\r\n        may: 'May',\r\n        june: 'June',\r\n        july: 'July',\r\n        august: 'August',\r\n        september: 'September',\r\n        october: 'October',\r\n        november: 'November',\r\n        december: 'December',\r\n        jan: 'Jan',\r\n        feb: 'Feb',\r\n        mar: 'Mar',\r\n        apr: 'Apr',\r\n        jun: 'Jun',\r\n        jul: 'Jul',\r\n        aug: 'Aug',\r\n        sep: 'Sep',\r\n        oct: 'Oct',\r\n        nov: 'Nov',\r\n        dec: 'Dec',\r\n        in: 'in',\r\n        yerstaday: 'yerstaday',\r\n        today: 'Today',\r\n        just_now: 'just now',\r\n        here_wiil_placed_your_notifications: 'Here will placed your notifications',\r\n        create_your_first_room: 'Create your first room in this language',\r\n        you_dont_have_chats: 'You dont have chats, lets create new',\r\n        write_your_first_message: 'Write your first message to',\r\n        typing: 'typing',\r\n        attachment_messages: 'Attachment messages',\r\n        messages: 'Messages'\r\n    }\r\n}","import languages from \"../languages\";\r\nimport store from \"../Redux/store\";\r\n\r\nexport function getHM(date) {\r\n    var time = new Date(date)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    return hours + \":\" + minutes\r\n}\r\n\r\nexport function timeAt(date) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(date)\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].january,\r\n        languages[lang].february,\r\n        languages[lang].march,\r\n        languages[lang].april,\r\n        languages[lang].may,\r\n        languages[lang].june,\r\n        languages[lang].july,\r\n        languages[lang].august,\r\n        languages[lang].september,\r\n        languages[lang].october,\r\n        languages[lang].november,\r\n        languages[lang].december\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && languages[lang].today\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n    return r;\r\n}\r\n\r\nexport function LastMessageDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var day_diff = new Date().getDate() - time.getDate(),\r\n        year_diff = new Date().getFullYear() - time.getFullYear();\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n        \r\n    if (year_diff > 0)\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() : day.toString())\r\n        );\r\n\r\n    var arr=[\r\n        languages[lang].jan,\r\n        languages[lang].feb,\r\n        languages[lang].mar,\r\n        languages[lang].apr,\r\n        languages[lang].may,\r\n        languages[lang].jun,\r\n        languages[lang].jul,\r\n        languages[lang].aug,\r\n        languages[lang].sep,\r\n        languages[lang].oct,\r\n        languages[lang].nov,\r\n        languages[lang].dec,\r\n    ];\r\n\r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (hours + ':' +  minutes)\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday)\r\n        || (year_diff === 0 && day + ' ' + arr[month-1])\r\n    );\r\n\r\n    return r;\r\n}\r\n\r\nexport function OnlineDate(timeR) {\r\n    let lang = store.getState().user.lang\r\n    var time = new Date(timeR)\r\n\r\n    var hours = time.getHours()\r\n    var minutes = time.getMinutes()\r\n\r\n    if (minutes.toString().length === 1) {\r\n        minutes = \"0\" + minutes;\r\n    }\r\n    if (hours.toString().length === 1) {\r\n        hours = \"0\" + hours;\r\n    }\r\n\r\n    var diff = (((new Date()).getTime() - time.getTime()) / 1000),\r\n        day_diff = new Date().getDay() - time.getDay();\r\n     var   month_diff = (new Date().getMonth()+1) - (time.getMonth()+1)\r\n    var year = time.getFullYear(),\r\n        month = time.getMonth()+1,\r\n        day = time.getDate();\r\n\r\n    if (isNaN(day_diff) || day_diff < 0 || month_diff >= 1 )\r\n        return (\r\n            year.toString()+'.'\r\n            +((month<10) ? '0'+month.toString() : month.toString())+'.'\r\n            +((day<10) ? '0'+day.toString() + ' in ' + hours + ':' +  minutes : day.toString() + ' in ' + hours + ':' +  minutes)\r\n        );\r\n    \r\n        \r\n    var r =\r\n    ( \r\n        (\r\n            day_diff === 0 && \r\n            (\r\n                (diff < 60 && languages[lang].just_now)\r\n                || (diff < 120 && '1 minute ago')\r\n                || (diff < 3600 && Math.floor(diff / 60) + 'minutes ago')\r\n                || (diff < 7200 && '1 hour ago')\r\n                || (diff < 86400 && Math.floor(diff / 3600) + 'hours ago')\r\n            )\r\n        )\r\n        || (day_diff === 1 && languages[lang].yerstaday + languages[lang].in + hours + ':' +  minutes)\r\n        || (day_diff < 7 && day_diff + 'days ago' + languages[lang].in + hours + ':' +  minutes)\r\n        || (day_diff < 31 && Math.ceil(day_diff / 7) + 'weeks ago' + languages[lang].in + hours + ':' +  minutes)\r\n    );\r\n    return r;\r\n}","import React from 'react'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Icons\r\n\r\n\r\nclass ActionMenu extends React.Component {\r\n    state = {\r\n        active: false,\r\n        left: 0,\r\n        top: 0\r\n    }\r\n\r\n    toggleActive(e) {\r\n        let element = document.getElementById(this.props.from)\r\n        if(element) {\r\n            let find = false\r\n            if(e.path.find(x => x.id === this.props.from)) {\r\n                e.stopPropagation()\r\n                find = true\r\n            }\r\n            \r\n            let rect = element.getBoundingClientRect()\r\n\r\n            let top\r\n            let left\r\n            if(this.props.bottom) {\r\n                top = rect.y + element.clientHeight\r\n                left = rect.x\r\n                if(this.props.right)\r\n                    left = rect.x+element.clientWidth\r\n            }\r\n            else {\r\n                top = rect.y\r\n                left = rect.x+element.clientWidth\r\n            }\r\n            \r\n            this.setState({left, top})\r\n            if((this.props.event === 'click' && (this.state.active || find)) || this.props.event === 'hover')\r\n                this.setState({active: !this.state.active})\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).addEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).addEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).addEventListener('click', this.toggleActive.bind(this))\r\n            document.body.addEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.props.event === 'hover') {\r\n            document.getElementById(this.props.from).removeEventListener('mouseenter', this.toggleActive.bind(this))\r\n            document.getElementById(this.props.from).removeEventListener('mouseleave', this.toggleActive.bind(this))\r\n        }\r\n        if(this.props.event === 'click') {\r\n            document.getElementById(this.props.from).removeEventListener('click', this.toggleActive.bind(this))\r\n            document.body.removeEventListener('click', this.toggleActive.bind(this))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{left: this.state.left, top: this.state.top, transform: this.props.bottom ? this.props.right ? 'translateX(-100%)' : 'none' : null}} className={`action-menu-container ${this.state.active ? 'active' : ''}`}>\r\n                <div className={`action-menu`}>\r\n                    {this.props.actions.map((action, index) => {\r\n                        return action ? <Button key={index} onClick={() => {action.action()}} className=\"action-button\">{action.text}</Button> : null\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ActionMenu","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass DialogItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                    e.preventDefault()\r\n            }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                <Button className={`dialog-item`}>\r\n                    <Avatar \r\n                        avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                        online={this.props.user.online} \r\n                        style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                        name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} \r\n                    />\r\n\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p className=\"user-name\"><span>{`${this.props.user.name.first} ${this.props.user.name.last}`}</span></p>\r\n                        {!this.props.typing && <p className=\"last-message\">\r\n                            {this.props.lastMessage.user._id === this.props.myUser._id && <span style={{color: '#999999'}}>{this.props.langProps.you}:&nbsp;</span>}\r\n                            {this.props.lastMessage.text && <span className=\"content\">{this.props.lastMessage.type === 'call' ? this.props.langProps[this.props.lastMessage.text] : this.props.lastMessage.text}</span>}\r\n                            \r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length === 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Photo</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            this.props.lastMessage.images.length > 1 && \r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.photos} [{this.props.lastMessage.images.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length === 1 &&\r\n                                <><span  className=\"content\" style={{color: '#008FF7'}}>Sound</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            this.props.lastMessage.sounds.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.sounds} [{this.props.lastMessage.sounds.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length === 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>File</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            this.props.lastMessage.files.length > 1 &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>{this.props.langProps.files} [{this.props.lastMessage.files.length}]</span></>\r\n                            }\r\n\r\n                            {!this.props.lastMessage.text && \r\n                            !this.props.lastMessage.images.length && \r\n                            !this.props.lastMessage.sounds.length &&\r\n                            !this.props.lastMessage.files.length &&\r\n                            !!this.props.lastMessage.recentMessages.length &&\r\n                                <><span className=\"content\" style={{color: '#008FF7'}}>Attachment messages [{this.props.lastMessage.recentMessages.length}]</span></>\r\n                            }\r\n                        </p>}\r\n                        {this.props.typing && <p className=\"last-message typing\">typing</p>}\r\n                    </div>\r\n                    <div className=\"dialog-info\">\r\n                        <span className=\"time-at\">{LastMessageDate(this.props.lastMessage.createdAt)}</span>\r\n                        <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && this.props.lastMessage.isLoading) && <QueryBuilderIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && !this.props.lastMessage.isRead) && <DoneIcon style={{marginTop: 2, fontSize: 16, color: '#B8C3CF'}} />}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isError && !this.props.lastMessage.isLoading && this.props.lastMessage.isRead) && <DoneAllIcon style={{marginTop: 2, fontSize: 16, color: '#008FF7'}} />}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !!this.props.noRead) && <span className=\"unread-messages-count\">{this.props.noRead}</span>}\r\n                        {(this.props.lastMessage.user._id !== this.props.myUser._id && !this.props.noRead) && <span style={{height: 18}}></span>}\r\n                        {(this.props.lastMessage.user._id === this.props.myUser._id && !this.props.lastMessage.isLoading && this.props.lastMessage.isError) && <>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    let message = this.props.lastMessage\r\n                                    message.userId = this.props.user._id\r\n                                    message.dialogId = this.props.dialogId\r\n                                    this.props.dialogsActions.retrySendMessage(message, this.props.myUser.apiToken)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.dialogsActions.deleteLocalMessage(this.props.lastMessage._id, this.props.dialogId)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{marginTop: 2, fontSize: 16, color: '#FF3333'}} />\r\n                        </>}\r\n                        </CSSTransitionGroup>\r\n                    </div>\r\n                </Button>\r\n            </NavLink>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(DialogItem)))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport showLoading from '../Partials/Loading'\r\nimport DialogItem from '../Partials/Dialog/DialogItem';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Messages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        // if(!this.props.dialogs.getted) {\r\n        //     this.props.dialogsActions.dialogsGet(this.props.user.apiToken)\r\n        // }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.messagesBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.messagesBlock.getScrollHeight() - (this.messagesBlock.getClientHeight() + this.messagesBlock.getScrollTop())) === 0) {\r\n            this.props.dialogsActions.dialogsLoad(this.props.user.apiToken)\r\n        }\r\n\r\n        this.setState({scrollTop: this.messagesBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.chats}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.messagesBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.dialogs.isFetching && showLoading(<div className=\"room-item\">\r\n                            <Skeleton variant=\"circle\" width={40} height={40} />\r\n                            <Skeleton variant=\"text\" style={{marginLeft: 12, flex: '1 1'}} />\r\n                        </div>)}\r\n                        {this.props.dialogs.dialogs.map((dialog, index) => {\r\n                            return dialog.lastMessage && (\r\n                                <DialogItem key={index} dialogId={dialog._id} typing={dialog.typing} noRead={dialog.noRead} lastMessage={dialog.lastMessage} user={dialog.user} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.dialogs.dialogs.find(x => x.lastMessage) && <div className=\"data-empty\">\r\n                        <ChatBubbleIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.you_dont_have_chats}</p>\r\n                    </div>}\r\n\r\n                    <Tooltip title=\"Create dialog\" className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newChat\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Messages)))\r\n","import React from 'react'\r\n\r\nexport default function showLoading(element) {\r\n    return <>\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n        {element}\r\n    </>\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Link style={{textDecoration: 'none'}} to={`/rooms/${this.props.room._id}`}>\r\n                <Button className=\"room-item\" title={`Room ${this.props.room.title}`}>\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                        <div className=\"users\" style={{overflow: 'hidden'}}>\r\n                            {this.props.room.users.map((user, index) => \r\n                                <Avatar key={index} avatar={user.avatar ? user.avatar : false} style={{minWidth: 16, maxWidth: 16, height: 16, fontSize: 8, backgroundColor: `rgb(${user.color})`}} name={user.name.first.charAt(0)+user.name.last.charAt(0)} />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </Button>\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","import { \r\n    ROOMS_GET,\r\n    ROOMS_ADD,\r\n    ROOMS_JOIN_ROOM,\r\n    ROOMS_LEAVE_ROOM,\r\n    ROOMS_ADD_MESSAGE,\r\n    ROOMS_SUCCESS_MESSAGE,\r\n    ROOMS_ERROR_MESSAGE,\r\n    ROOMS_EDIT_MESSAGE,\r\n    ROOMS_JOIN_ERROR,\r\n    ROOMS_DELETE_MESSAGE,\r\n    ROOMS_READ_MESSAGES,\r\n    ROOMS_LOAD_MESSAGES,\r\n    ROOMS_SET_LOADING,\r\n    ROOMS_GET_ERROR,\r\n    ROOMS_SET_GET,\r\n    ROOMS_PRELOAD,\r\n    ROOMS_SET_MUTED\r\n} from '../constants'\r\nimport SocketController from '../../Controllers/SocketController';\r\nimport store from '../store';\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport { randomInteger, setForceTitle } from '../../Controllers/FunctionsController';\r\nimport {urlApi} from '../../config'\r\nimport { toast } from 'react-toastify';\r\n\r\nlet unmuteTimer = false\r\n\r\nexport const roomsGet = (apiToken, lang) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_SET_GET,\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            lang\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((rooms) => {\r\n        dispatch({\r\n            type: ROOMS_GET,\r\n            payload: rooms\r\n        })\r\n\r\n        SocketController.joinLang(lang)\r\n    })\r\n    .catch((err) => {\r\n        dispatch({\r\n            type: ROOMS_GET_ERROR,\r\n        })\r\n    })\r\n}\r\n\r\nexport const roomsAdd = room => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_ADD,\r\n        payload: room\r\n    })\r\n}\r\n\r\nexport const roomsLoad = (apiToken, lang) => (dispatch) => {\r\n    if(store.getState().rooms.canLoad) {\r\n        dispatch({\r\n            type: ROOMS_PRELOAD,\r\n            payload: []\r\n        })\r\n\r\n        fetch(`${urlApi}/api/room/load`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lastRoomId: store.getState().rooms.rooms[store.getState().rooms.rooms.length-1]._id,\r\n                firstRoomId: store.getState().rooms.rooms[0]._id,\r\n                lang\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((rooms) => {\r\n            dispatch({\r\n                type: ROOMS_PRELOAD,\r\n                payload: rooms\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const joinRoom = ({id, apiToken}) => (dispatch) => {\r\n    fetch(`${urlApi}/api/room/get`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n            if(data.error) {\r\n                setForceTitle('Error')\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ERROR,\r\n                    payload: data.errors[0]\r\n                })\r\n                \r\n                return\r\n            } else {\r\n                let room = data.room\r\n                let muted = data.muted\r\n\r\n                room.dialog.messages = room.dialog.messages.reverse()\r\n\r\n                room.users.map(x => {\r\n                    x.speaking = false\r\n                    return 1\r\n                })\r\n\r\n                setForceTitle(room.title)\r\n\r\n                dispatch({\r\n                    type: ROOMS_JOIN_ROOM,\r\n                    payload: {room, canLoad: room.dialog.messages.length === 50, muted}\r\n                })\r\n\r\n                if(unmuteTimer) {\r\n                    clearTimeout(unmuteTimer)\r\n                }\r\n\r\n                if(muted && (new Date(muted.date).getTime() - new Date().getTime()) <= 86400000) {\r\n                    unmuteTimer = setTimeout(() => {\r\n                        if(store.getState().rooms.activeRoom && \r\n                        store.getState().rooms.activeRoom._id === room._id && \r\n                        !!store.getState().rooms.activeRoom.muted && \r\n                        store.getState().rooms.activeRoom.muted.date === muted.date) {\r\n                            store.dispatch({\r\n                                type: ROOMS_SET_MUTED,\r\n                                payload: false\r\n                            })\r\n                        }\r\n                        // console.log(unmuteTimer)\r\n                    }, (new Date(muted.date).getTime() - new Date().getTime()) );\r\n                }\r\n                \r\n                SocketController.joinRoom({roomId: room._id, lang: room.lang})\r\n\r\n                try {\r\n                    WebRtcController.connectRoom(room._id)\r\n                } catch (err) {\r\n                    SocketController.leaveRoom({roomId: room._id, lang: room.lang})\r\n                    dispatch({\r\n                        type: ROOMS_JOIN_ERROR,\r\n                        payload: {param: 'all', msg: 'something_goes_wrong'}\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch({\r\n                type: ROOMS_JOIN_ERROR,\r\n                payload: {param: 'all', msg: 'something_goes_wrong'}\r\n            })\r\n        })\r\n}\r\n\r\nexport const leaveRoom = (roomId, lang) => (dispatch) => {\r\n    WebRtcController.leaveRoom({roomId, lang})\r\n    dispatch({\r\n        type: ROOMS_LEAVE_ROOM\r\n    })\r\n}\r\n\r\nexport const sendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let _id = randomInteger(0, 1000000)\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images,\r\n        sounds,\r\n        files,\r\n        isLoading: true,\r\n        isError: false,\r\n        isRead: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    // formData.append('apiToken', apiToken)\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: _id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: _id\r\n            })\r\n        })\r\n}\r\n\r\nexport const editMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    let oldImages = []\r\n    let oldFiles = []\r\n    let oldSounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        if(message.images[i].file) {\r\n            formData.append('images'+i, message.images[i].file)\r\n\r\n            images.push(message.images[i])\r\n        } else {\r\n            oldImages.push(message.images[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        if(message.files[i].file) {\r\n            formData.append('files'+i, message.files[i].file)\r\n\r\n            files.push(message.files[i])\r\n        } else {\r\n            oldFiles.push(message.files[i].id)\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        if(message.sounds[i].file) {\r\n            formData.append('sounds'+i, message.sounds[i].file)\r\n\r\n            sounds.push(message.sounds[i])\r\n        } else {\r\n            oldSounds.push(message.sounds[i].id)\r\n        }        \r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: message.sounds,\r\n        files: message.files,\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n    }\r\n    \r\n    dispatch({\r\n        type: ROOMS_EDIT_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n    message.roomId = store.getState().rooms.activeRoom._id\r\n    \r\n    formData.append('_id', message._id)\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n    formData.append('oldImages', oldImages)\r\n    formData.append('oldSounds', oldSounds)\r\n    formData.append('oldFiles', oldFiles)\r\n\r\n    fetch(`${urlApi}/api/room/edit-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            if(messageRes.error) {\r\n                if(messageRes.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n                return dispatch({\r\n                    type: ROOMS_ERROR_MESSAGE,\r\n                    payload: message._id\r\n                })\r\n            }\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: message._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const deleteMessage = ({roomId, deleteMessages}, apiToken) => (dispatch) => {\r\n    let messageIds = []\r\n    deleteMessages.map(m => {\r\n        messageIds.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: messageIds\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/delete-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId,\r\n                messageIds,\r\n                socketId: SocketController.getSocketId()\r\n            })\r\n        })\r\n        .then()\r\n        .catch(() => {\r\n            \r\n        })\r\n}\r\n\r\nexport const deleteLocalMessage = (_id) => (dispatch) => {\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [_id]\r\n    })\r\n}\r\n\r\nexport const retrySendMessage = (message, apiToken) => (dispatch) => {\r\n    let formData = new FormData()\r\n    let images = []\r\n    let files = []\r\n    let sounds = []\r\n\r\n    for (let i = 0; i < message.images.length; i++) {\r\n        formData.append('images'+i, message.images[i].file)\r\n        images.push(message.images[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.files.length; i++) {\r\n        formData.append('files'+i, message.files[i].file)\r\n        files.push(message.files[i])\r\n    }\r\n\r\n    for (let i = 0; i < message.sounds.length; i++) {\r\n        formData.append('sounds'+i, message.sounds[i].file)\r\n        sounds.push(message.sounds[i])\r\n    }\r\n\r\n    let localMessage = {\r\n        _id: message._id,\r\n        user: store.getState().user,\r\n        text: message.text,\r\n        images: message.images,\r\n        sounds: [],\r\n        files: [],\r\n        isLoading: true,\r\n        isError: false,\r\n        recentMessages: message.recentMessages,\r\n        createdAt: Date.now(),\r\n        type: 'message'\r\n    }\r\n\r\n    dispatch({\r\n        type: ROOMS_DELETE_MESSAGE,\r\n        payload: [message._id]\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_ADD_MESSAGE,\r\n        payload: localMessage\r\n    })\r\n\r\n    let recentMessages = []\r\n\r\n    message.recentMessages.map(m => {\r\n        recentMessages.push(m._id)\r\n        return 1\r\n    })\r\n\r\n    message.recentMessages = recentMessages\r\n    message.socketId = SocketController.getSocketId()\r\n\r\n    formData.append('text', message.text)\r\n    formData.append('recentMessages', message.recentMessages)\r\n    formData.append('roomId', message.roomId)\r\n    formData.append('dialogId', message.dialogId)\r\n    formData.append('socketId', SocketController.getSocketId())\r\n\r\n    fetch(`${urlApi}/api/room/send-message`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(messageRes => {\r\n            dispatch({\r\n                type: ROOMS_SUCCESS_MESSAGE,\r\n                payload: {_id: message._id, _newId: messageRes._id}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: ROOMS_ERROR_MESSAGE,\r\n                payload: message._id\r\n            })\r\n        })\r\n}\r\n\r\nexport const readMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let readMessages = store.getState().rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== userId)\r\n\r\n    setTimeout(() => {\r\n        if(!!readMessages.length) {\r\n            dispatch({\r\n                type: ROOMS_READ_MESSAGES,\r\n                payload: userId\r\n            })\r\n        }\r\n    }, 750)\r\n\r\n    if(!!readMessages.length) {\r\n        fetch(`${urlApi}/api/room/read-messages`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${apiToken}`,\r\n                },\r\n                body: JSON.stringify({\r\n                    dialogId,\r\n                    roomId\r\n                })\r\n            })\r\n            .then()\r\n            .catch(() => {\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport const loadMessages = ({dialogId, userId, roomId}, apiToken) => (dispatch) => {\r\n    let lastMessage = store.getState().rooms.activeRoom.dialog.messages[0]\r\n\r\n    dispatch({\r\n        type: ROOMS_SET_LOADING\r\n    })\r\n\r\n    dispatch({\r\n        type: ROOMS_LOAD_MESSAGES,\r\n        payload: {messages: [], canLoad: false}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/room/load-messages`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                dialogId,\r\n                lastMessageId: lastMessage._id\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(messages => {\r\n            dispatch({\r\n                type: ROOMS_LOAD_MESSAGES,\r\n                payload: {messages: messages.reverse(), canLoad: messages.length  === 50}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            \r\n        })\r\n}","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport RoomItem from '../Partials/Room/RoomItem'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, Tooltip, CircularProgress } from '@material-ui/core'\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#008FF7',\r\n        position: 'absolute',\r\n        bottom: 20,\r\n        right: 20,\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Rooms extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isOpenCreateRoom: false,\r\n        scrollTop: 0,\r\n        showBtnAdd: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.rooms.getted) {\r\n            this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n        if(this.state.scrollTop < this.roomsBlock.getScrollTop()) {\r\n            if(this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: false})\r\n        } else {\r\n            if(!this.state.showBtnAdd)\r\n                this.setState({showBtnAdd: true})\r\n        }\r\n\r\n        if((this.roomsBlock.getScrollHeight() - (this.roomsBlock.getClientHeight() + this.roomsBlock.getScrollTop())) === 0) {\r\n            this.props.roomsActions.roomsLoad(this.props.user.apiToken, this.props.user.roomLang)\r\n        }\r\n\r\n        this.setState({scrollTop: this.roomsBlock.getScrollTop()})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\" style={{overflow: 'hidden'}}>\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.rooms}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        onScroll={() => {this.onScroll()}}\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.rooms.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.rooms.rooms.map((room, index) => {\r\n                            return (\r\n                                <RoomItem key={index} room={room} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.rooms.isFetching && !this.props.rooms.isError && !this.props.rooms.rooms.length && <div className=\"data-empty\">\r\n                        <AppsIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.create_your_first_room}</p>\r\n                    </div>}\r\n\r\n                    {!this.props.rooms.isFetching && this.props.rooms.isError && <div className=\"data-empty\">\r\n                        <WarningIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.something_goes_wrong}</p>\r\n\r\n                        <button onClick={() => {this.props.roomsActions.roomsGet(this.props.user.apiToken, this.props.user.roomLang)}} className=\"button-gray\" type=\"submit\" style={{width: 'max-content'}}>Retry</button>\r\n                    </div>}\r\n\r\n                    <Tooltip title={this.props.langProps.create_room} className={`scroll-to-bottom ${this.state.showBtnAdd ? 'active' : ''}`} placement=\"top\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: \"?act=newRoom\"\r\n                            })\r\n                        }}>\r\n                            <AddIcon />\r\n                        </CustomFab>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Rooms)))","import { \r\n    NOTIFICATIONS_GET,\r\n    NOTIFICATIONS_READ,\r\n} from '../constants'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController';\r\n\r\nexport const notificationsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/notification/get-all`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((notifications) => {\r\n        dispatch({\r\n            type: NOTIFICATIONS_GET,\r\n            payload: notifications\r\n        })\r\n    });\r\n}\r\n\r\nexport const notificationRead = (id, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: NOTIFICATIONS_READ,\r\n        payload: id\r\n    })\r\n\r\n    fetch(`${urlApi}/api/notification/read`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as notificationsActions from '../../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\nimport { Button } from '@material-ui/core';\r\nimport { LastMessageDate } from '../../Controllers/TimeController';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nclass NotificationItem extends React.Component {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button className={`dialog-item`} onClick={() => {\r\n                if(!this.props.notification.isRead)\r\n                    this.props.notificationsActions.notificationRead(this.props.notification._id, this.props.user.apiToken)\r\n\r\n                if(this.props.notification.type === 'invite')\r\n                    this.props.history.push(`/rooms/${this.props.notification.room._id}`)\r\n                if(this.props.notification.type === 'accept' || this.props.notification.type === 'request')\r\n                    this.props.history.push({\r\n                        search: `?user=${this.props.notification.user._id}`\r\n                    })\r\n            }}>\r\n                <Avatar \r\n                avatar={this.props.notification.user.avatar ? this.props.notification.user.avatar : false}\r\n                status={this.props.notification.type} \r\n                style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.notification.user.color})`}} \r\n                name={this.props.notification.user.name.first.charAt(0) + this.props.notification.user.name.last.charAt(0)} />\r\n\r\n                <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                    <p className=\"user-name\"><span>{`${this.props.notification.user.name.first} ${this.props.notification.user.name.last}`}</span></p>\r\n                    \r\n                    {this.props.notification.type === 'invite' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.invited_you_to_the_room}&nbsp;<span style={{color: '#008FF7'}}>{this.props.notification.room.title}</span></span></p>}\r\n                    {this.props.notification.type === 'accept' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.accept_your_friend_request}</span></p>}\r\n                    {this.props.notification.type === 'request' && <p className=\"last-message\"><span className=\"notif-content\">{this.props.langProps.send_you_friend_request}</span></p>}\r\n                </div>\r\n                <div className=\"dialog-info\">\r\n                    <span className=\"time-at\">{LastMessageDate(this.props.notification.createdAt)}</span>\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.notification.isRead && <span style={{background: '#FF3333',minWidth: 10,height: 10, marginTop: 5}} className=\"unread-messages-count\"></span>}\r\n                    </CSSTransitionGroup>\r\n                </div>\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(NotificationItem)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../Pages/PageSettings'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport { connect } from 'react-redux';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport NotificationItem from '../Partials/Notifications/NotificationItem'\r\nimport * as notificationsActions from '../Redux/actions/notifications'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nclass Notifications extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n\r\n        if(!this.props.notifications.getted) {\r\n            this.props.notificationsActions.notificationsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.notifications}</h2>\r\n\r\n                    <Scrollbars\r\n                        ref={(ref) => {this.roomsBlock = ref}}\r\n                        renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                        renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                        className=\"scroll\"\r\n                        style={{height: 'calc(100% - 78px)'}}\r\n                        autoHide\r\n                    >\r\n                        {this.props.notifications.isFetching && <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n                        {this.props.notifications.notifications.map((notification, index) => {\r\n                            return (\r\n                                <NotificationItem key={index} notification={notification} />\r\n                            )\r\n                        })}\r\n                    </Scrollbars>\r\n\r\n                    {!this.props.notifications.isFetching &&!this.props.notifications.notifications.length && <div className=\"data-empty\">\r\n                        <NotificationsNoneIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                        <p>{this.props.langProps.here_wiil_placed_your_notifications}</p>\r\n                    </div>}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notificationsActions: bindActionCreators(notificationsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Notifications)))\r\n","import { \r\n    USER_LOGIN,\r\n    USER_LOGOUT,\r\n    USER_UPDATE_ROOM_LANG,\r\n    DIALOGS_GET,\r\n    NOTIFICATIONS_SET_NO_READ,\r\n    USER_SET_AVATAR\r\n} from '../constants'\r\nimport store from '../store'\r\nimport { toast } from 'react-toastify'\r\nimport { urlApi } from '../../config'\r\n\r\n\r\nexport const loginUser = (user, dialogs, noReadCount, noReadNotifications, apiToken) => (dispatch) => {\r\n    user.apiToken = apiToken\r\n    \r\n    dispatch({\r\n        type: USER_LOGIN,\r\n        payload: user\r\n    })\r\n\r\n    for (let i = 0; i < dialogs.length; i++) {\r\n        dialogs[i].user = dialogs[i].users.find(user => user._id !== store.getState().user._id)\r\n\r\n        if(!dialogs[i].user)\r\n            dialogs[i].user = dialogs[i].users[0]\r\n\r\n        dialogs[i].typing = false\r\n        dialogs[i].getted = false\r\n        dialogs[i].isLoading = false\r\n\r\n        if(dialogs[i].lastMessage) {\r\n            dialogs[i].lastMessage.isLoading = false\r\n            dialogs[i].lastMessage.isError = false\r\n        }\r\n\r\n        if(dialogs[i].lastMessage && dialogs[i].lastMessage.user._id === store.getState().user._id)\r\n            dialogs[i].noRead = 0\r\n    }\r\n\r\n    dispatch({\r\n        type: DIALOGS_GET,\r\n        payload: {dialogs, noReadCount}\r\n    })\r\n\r\n    dispatch({\r\n        type: NOTIFICATIONS_SET_NO_READ,\r\n        payload: noReadNotifications\r\n    })\r\n}\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n}\r\n\r\nexport const updateRoomLang = (lang) => (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_ROOM_LANG,\r\n        payload: lang\r\n    })\r\n}\r\n\r\nexport const uploadAvatar = (e, apiToken) => (dispatch) => {\r\n    if(e.target.files[0]) {\r\n        let file = {\r\n            path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[0]], {type: e.target.files[0].type})), \r\n            file: e.target.files[0], \r\n            name: e.target.files[0].name, \r\n            type: e.target.files[0].name.split('.').pop(),\r\n            size: e.target.files[0].size / 1000\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('avatar', file.file)\r\n\r\n        fetch(`${urlApi}/api/user/upload-avatar`, {\r\n            method: \"post\",\r\n            headers: {\r\n                // 'Accept': 'application/json',\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${apiToken}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(res => {\r\n            if(res.error) {\r\n                if(res.errors[0].msg === 'max_size') {\r\n                    toast.error(\"Max file size upload 10 Mb.\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                }\r\n            }\r\n            dispatch({\r\n                type: USER_SET_AVATAR,\r\n                payload: {original: file.path, min: file.path}\r\n            })\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Something goes worng\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n}","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <span style={{textDecoration: 'none'}} onClick={() => {this.props.onClick()}}>\r\n                <Button className=\"room-item\">\r\n                    <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600}} name={this.props.title.charAt(0)} />\r\n                    <div style={{\r\n                        flexGrow: 1,\r\n                        minWidth: 0,\r\n                        maxWidth: '100%',\r\n                        paddingRight: 10\r\n                    }}>\r\n                        <p><span>{this.props.title}</span></p>\r\n                    </div>\r\n                </Button>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomItem","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../Pages/PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../Redux/actions/user'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {urlApi} from '../config'\r\nimport SocketController from '../Controllers/SocketController'\r\nimport LanguageItem from '../Partials/Language/LanguageItem'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../languages'\r\n\r\nclass Languages extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    updateRoomLang(lang) {\r\n        this.props.userActions.updateRoomLang(lang)\r\n\r\n        this.props.roomsActions.roomsGet(this.props.user.apiToken, lang)\r\n\r\n        SocketController.joinLang(lang)\r\n\r\n        this.props.onClick()\r\n\r\n        fetch(`${urlApi}/api/user/update-room-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 sidebar\">\r\n                    <h2 className=\"sidebar-title\">{this.props.langProps.language}</h2>\r\n\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('eng')\r\n                    }} title={this.props.langProps.english} />\r\n                    <LanguageItem onClick={() => {\r\n                        this.updateRoomLang('rus')\r\n                    }} title={this.props.langProps.russian} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Languages)))","import React from 'react'\r\nimport Avatar from './User/Avatar'\r\n\r\nimport '../Css/Partials/UserSidebar.css'\r\n\r\n// Icons\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport Messages from '../Sidebar/Messages';\r\nimport Rooms from '../Sidebar/Rooms';\r\nimport Notifications from '../Sidebar/Notifications';\r\nimport Languages from '../Sidebar/Languages';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass UserSidebar extends React.Component {\r\n    state = {\r\n        activeTab: this.props.history.location.pathname.substring(1,5) === 'chat' ? 'messages' : this.props.user.roomLang ? 'rooms' : 'languages'\r\n    }\r\n\r\n    render() {\r\n        return this.props.show && (\r\n            <>\r\n                <div className=\"col-xl-3 col-lg-6 col-md-6 user-header\">\r\n                    <ul>\r\n                        <li onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.user._id}`\r\n                            })\r\n                        }}><Avatar avatar={this.props.user.avatar ? this.props.user.avatar : false} style={{width: 32, height: 32, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'messages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'messages'})}}>\r\n                            <ChatBubbleOutlineIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.dialogs.noReadCount && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '40%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.dialogs.noReadCount}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'rooms' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'rooms'})}}><AppsIcon style={{color: '#CCD1D6'}} /></li>\r\n                        <li style={{position: 'relative'}} className={`${this.state.activeTab === 'notifications' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'notifications'})}}>\r\n                            <NotificationsNoneIcon style={{color: '#CCD1D6'}} />\r\n                            {!!this.props.notifications.noRead && <span \r\n                                className=\"unread-messages-count\"\r\n                                style={{\r\n                                    top: 11,\r\n                                    right: '44%',\r\n                                    transform: 'translateX(50%)',\r\n                                    backgroundColor: '#FF3333'\r\n                                }}\r\n                            >{this.props.notifications.noRead}</span>}\r\n                        </li>\r\n                        <li className={`${this.state.activeTab === 'languages' ? 'active' : ''}`} onClick={() => {this.setState({activeTab: 'languages'})}}><LanguageIcon style={{color: '#CCD1D6'}} /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {this.state.activeTab === 'messages' && <Messages />}\r\n                {this.state.activeTab === 'rooms' && <Rooms />}\r\n                {this.state.activeTab === 'notifications' && <Notifications />}\r\n                {this.state.activeTab === 'languages' && <Languages onClick={() => {this.setState({activeTab: 'rooms'})}} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        notifications: state.notifications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserSidebar))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport {urlApi} from '../../config'\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/login`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Войти</button>\r\n\r\n                    <p className=\"nav-auth\">New to the site? <Link to=\"/register\">Sign up</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Login))","// App\r\nimport React from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport '../../Css/Auth/Login.css'\r\n\r\n// Router\r\nimport {\r\n    Link,\r\n} from \"react-router-dom\"\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../../config'\r\nimport SocketController from '../../Controllers/SocketController'\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        if(this.state.email && this.state.password) {\r\n            this.setState({isFetching: true})\r\n\r\n            fetch(`${urlApi}/auth/register`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    firstName: this.state.firstName,\r\n                    lastName: this.state.lastName,\r\n                    email: this.state.email,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.error) {\r\n                    this.setState({error: true, errors: data.errors})\r\n                } else {\r\n                    const { cookies } = this.props\r\n                    cookies.set('apiToken', data.token, { path: '/' })\r\n\r\n                    this.props.userActions.loginUser(data.user, data.dialogs, data.noReadCount, data.noReadNotifications, data.token)\r\n\r\n                    SocketController.init(data.token)\r\n                }\r\n\r\n                this.setState({isFetching: false})\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                <h1 className=\"logo\">\r\n                    <span style={{color: '#556677'}}>heva</span>\r\n                    <span style={{color: '#008FF7'}}>chat</span>\r\n                </h1>\r\n\r\n                <form onSubmit={(e) => {this.onSubmit(e)}} className=\"form\">\r\n                    <input value={this.state.firstName} onChange={(e) => {this.setState({firstName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"firstName\" placeholder=\"First name\" />\r\n                    {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'firstName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.lastName} onChange={(e) => {this.setState({lastName: e.target.value})}} className=\"input-field\" type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\r\n                    {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'lastName').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.email} onChange={(e) => {this.setState({email: e.target.value})}} className=\"input-field\" type=\"text\" name=\"email\" placeholder=\"E-mail\" />\r\n                    {this.state.errors.find(value => value.param === 'email') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'email').msg} \r\n                    </span>}\r\n\r\n                    <input value={this.state.password} onChange={(e) => {this.setState({password: e.target.value})}} className=\"input-field\" type=\"password\" name=\"password\" placeholder=\"Пароль\" />\r\n                    {this.state.errors.find(value => value.param === 'password') && <span className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'password').msg} \r\n                    </span>}\r\n\r\n                    {this.state.errors.find(value => value.param === 'all') && <span style={{marginTop: 30}} className=\"input-error-label\">\r\n                        {this.state.errors.find(value => value.param === 'all').msg} \r\n                    </span>}\r\n\r\n                    <button type=\"submit\" className=\"button-gray\">Зарегистрироваться</button>\r\n\r\n                    <p className=\"nav-auth\">Already have account? <Link to=\"/login\">Log in</Link></p>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withCookies(Register))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport { randomInteger } from '../../Controllers/FunctionsController';\r\n\r\nlet audioDurationInterval = false\r\n\r\nclass Audio extends React.Component {\r\n    state = {\r\n        duration: '00:00',\r\n        audio: false,\r\n        randomId: randomInteger(0, 10000000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.volume = 0.5\r\n            this.setState({audio})\r\n            break\r\n        }\r\n\r\n        let audio = document.getElementById(this.state.randomId)\r\n\r\n        audio.onpause = () => {\r\n            audio.parentElement.className = 'message-sound'\r\n        }\r\n\r\n        audio.onplay = () => {\r\n            audio.parentElement.className = 'message-sound active'\r\n        }\r\n\r\n        audio.onloadedmetadata = () => {\r\n            this.getDuration()\r\n        }\r\n    }\r\n\r\n    getDuration() {\r\n        function padZero(v) {\r\n            return (v < 10) ? \"0\" + v : v;\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        let t = 0\r\n\r\n        for(let audio of thisAudio) {\r\n            t = audio.duration\r\n            break\r\n        }\r\n\r\n        this.setState({duration: padZero(parseInt((t / (60)))) + \":\" + padZero(parseInt((t) % 60))})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        if(document.getElementsByName(this.props.src)) {\r\n            document.getElementsByName(this.props.src).className = 'message-sound'\r\n            this.state.audio.pause()\r\n        }\r\n    }\r\n\r\n    playAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let otherAudio = document.getElementsByClassName('message-sounds-element')\r\n        \r\n        this.stopTimer()\r\n\r\n        for (let audio of otherAudio) {\r\n            audio.pause()\r\n        }\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.play()\r\n        }\r\n\r\n        this.startTimer()\r\n    }\r\n\r\n    changeDurationAudio(e) {\r\n        e.stopPropagation()\r\n\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.currentTime = time\r\n        }\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    startTimer() {\r\n        audioDurationInterval = setInterval(() => {\r\n            let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n            for(let range of thisRange) {\r\n                range.style.width = (100*this.state.audio.currentTime/this.state.audio.duration)+'%'\r\n            }\r\n        }, 100)\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(audioDurationInterval)\r\n    }\r\n\r\n    viewDurationAudio(e) {\r\n        let position = e.nativeEvent.layerX * 100 / this.rangeBlock.clientWidth\r\n        let time = this.state.audio.duration / 100 * position\r\n\r\n        let thisRange = document.getElementsByName(this.props.src+'-range')\r\n\r\n        for(let range of thisRange) {\r\n            range.style.width = (100*time/this.state.audio.duration)+'%'\r\n        }\r\n    }\r\n\r\n    stopAudio(e) {\r\n        if(audioDurationInterval)\r\n            this.stopTimer()\r\n\r\n        e.stopPropagation()\r\n\r\n        let thisAudio = document.getElementsByName(this.props.src)\r\n\r\n        for(let audio of thisAudio) {\r\n            audio.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"message-sound\">\r\n            <audio className={`message-sounds-element`} id={this.state.randomId} name={this.props.src} src={this.props.src} />\r\n            <span className=\"play\" onClick={(e) => {this.playAudio(e)}}><PlayArrowIcon style={{color: '#008FF7'}} /></span>\r\n            <span className=\"pause\" onClick={(e) => {this.stopAudio(e)}}><PauseIcon style={{color: '#008FF7'}} /></span>\r\n            <div className=\"message-sound-info\">\r\n                <p className=\"message-sounds-name\">{this.props.fileName}</p>\r\n                <p className=\"message-sounds-duration\">{this.state.duration}</p>\r\n            </div>\r\n\r\n            <div className=\"message-sound-range\" \r\n                ref={(ref) => {this.rangeBlock = ref}} \r\n                onMouseMove={(e) => {this.viewDurationAudio(e)}} \r\n                onMouseEnter={() => {this.stopTimer()}}\r\n                onMouseLeave={() => {this.startTimer()}}\r\n                onClick={(e) => {this.changeDurationAudio(e)}}\r\n            >\r\n                <span className=\"range-position\" ref={(ref) => {this.range = ref}} name={this.props.src + '-range'}></span>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Audio","import { \r\n    USERS_ADD,\r\n    USERS_SET_ACTIVE_USER_ID,\r\n    USERS_SET_FRIEND_STATUS,\r\n    USERS_SET,\r\n    USERS_FRIENDS_GET,\r\n    USERS_REQUESTED_GET,\r\n    USERS_PENDING_GET,\r\n    USERS_FRIENDS_REMOVE,\r\n    USERS_REQUESTED_REMOVE,\r\n    USERS_PENDING_REMOVE,\r\n    USERS_FRIENDS_ADD,\r\n    USERS_REQUESTED_ADD,\r\n    USERS_PENDING_ADD\r\n} from '../constants'\r\nimport store from '../store'\r\nimport {urlApi} from '../../config'\r\n\r\nexport const userGet = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then(({user, friendStatus}) => {\r\n        user.friendStatus = friendStatus\r\n        dispatch({\r\n            type: USERS_ADD,\r\n            payload: user\r\n        })\r\n    });\r\n}\r\n\r\nexport const friendsGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-friends`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_FRIENDS_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const requestedGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-requested`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_REQUESTED_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const pendingGet = (apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/get-pending`, {\r\n        method: \"get\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friends) => {\r\n        let users = []\r\n        \r\n        friends.map(user => {\r\n            users.push(user.recipient)\r\n            return 1\r\n        })\r\n\r\n        dispatch({\r\n            type: USERS_PENDING_GET,\r\n            payload: {users, canLoad: users.length === 15}\r\n        })\r\n    });\r\n}\r\n\r\nexport const setUsers = (friends) => (dispatch) => {\r\n    let setFriends = []\r\n    for (let i = 0; i < friends.length; i++) {\r\n        let user = friends[i].recipient\r\n\r\n        user.friendStatus = friends[i].status\r\n\r\n        setFriends.push(user)\r\n    }\r\n\r\n    dispatch({\r\n        type: USERS_SET,\r\n        payload: {friends: setFriends, canLoad: setFriends.length === 10}\r\n    })\r\n}\r\n\r\nexport const setActiveUserId = (userId) => (dispatch) => {\r\n    dispatch({\r\n        type: USERS_SET_ACTIVE_USER_ID,\r\n        payload: userId\r\n    })\r\n}\r\n\r\nexport const sendRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.pending.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_PENDING_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_PENDING_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const acceptRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/accept-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.requested.getted) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(store.getState().users.users.find(x => x._id === userId)) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_ADD,\r\n                    payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                })\r\n            } else {\r\n                fetch(`${urlApi}/api/user/get`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        userId: userId\r\n                    })\r\n                })\r\n                .then((response) => response.json())\r\n                .then(({user, friendStatus}) => {\r\n                    user.friendStatus = friendStatus\r\n                    dispatch({\r\n                        type: USERS_ADD,\r\n                        payload: user\r\n                    })\r\n                    dispatch({\r\n                        type: USERS_FRIENDS_ADD,\r\n                        payload: {user}\r\n                    })\r\n                });\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport const removeRequest = (userId, apiToken) => (dispatch) => {\r\n    fetch(`${urlApi}/api/user/remove-request`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((friendStatus) => {\r\n        dispatch({\r\n            type: USERS_SET_FRIEND_STATUS,\r\n            payload: {userId, friendStatus}\r\n        })\r\n\r\n        if(store.getState().users.friends.getted) {\r\n            if(friendStatus === 2) {\r\n                dispatch({\r\n                    type: USERS_FRIENDS_REMOVE,\r\n                    payload: {userId}\r\n                })\r\n\r\n                if(store.getState().users.requested.getted) {\r\n                    if(store.getState().users.users.find(x => x._id === userId)) {\r\n                        dispatch({\r\n                            type: USERS_REQUESTED_ADD,\r\n                            payload: {user: store.getState().users.users.find(x => x._id === userId)}\r\n                        })\r\n                    } else {\r\n                        fetch(`${urlApi}/api/user/get`, {\r\n                            method: \"post\",\r\n                            headers: {\r\n                                Accept: \"application/json\",\r\n                                \"Content-Type\": \"application/json\",\r\n                                Authorization: `Bearer ${apiToken}`,\r\n                            },\r\n                            body: JSON.stringify({\r\n                                userId: userId\r\n                            })\r\n                        })\r\n                        .then((response) => response.json())\r\n                        .then(({user, friendStatus}) => {\r\n                            user.friendStatus = friendStatus\r\n                            dispatch({\r\n                                type: USERS_ADD,\r\n                                payload: user\r\n                            })\r\n                            dispatch({\r\n                                type: USERS_REQUESTED_ADD,\r\n                                payload: {user}\r\n                            })\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(store.getState().users.pending.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_PENDING_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n\r\n        if(store.getState().users.requested.getted && friendStatus === 0) {\r\n            dispatch({\r\n                type: USERS_REQUESTED_REMOVE,\r\n                payload: {userId}\r\n            })\r\n        }\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport Avatar from '../User/Avatar'\r\nimport { getHM, timeAt } from '../../Controllers/TimeController'\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\nimport MessageComponent from './Message'\r\n// import ogs from 'ts-open-graph-scraper'\r\n\r\n// Material\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport CallMadeIcon from '@material-ui/icons/CallMade';\r\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\r\n\r\nimport Audio from './Audio';\r\n\r\nimport Linkify from 'react-linkify'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ActionMenu from '../ActionMenu'\r\nimport { randomInteger } from '../../Controllers/FunctionsController'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n// import urlMetadata from 'url-metadata'\r\n\r\n// let ogsLink = false\r\n\r\nconst componentDecorator = (href, text, key) => {\r\n    // ogsLink = ogs({url: href}, (error, results, response) => {\r\n    //     console.log('error:', error); // This is returns true or false. True if there was a error. The error it self is inside the results object.\r\n    //     console.log('results:', results); // This contains all of the Open Graph results\r\n    //     console.log('response:', response); // This contains the HTML of page\r\n    // })\r\n    // urlMetadata(href).then((metadata) => {\r\n    //     console.log(metadata)\r\n    // })\r\n    return (\r\n        <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {text}\r\n        </a>\r\n    )\r\n};\r\n\r\nclass Message extends React.PureComponent {\r\n    state = {\r\n        randomId: randomInteger(0, 100000)\r\n    }\r\n\r\n    render() {\r\n        let isHistoryDate = true\r\n        let moreHour = false\r\n\r\n        if(this.props.messages[this.props.index-1]) {\r\n            let date1 = new Date(this.props.message.createdAt);\r\n            let date2 = new Date(this.props.messages[this.props.index-1].createdAt);\r\n            \r\n            if(\r\n                date1.getFullYear() === date2.getFullYear() && \r\n                date1.getMonth() === date2.getMonth() && \r\n                date1.getDate() === date2.getDate()\r\n            ) {\r\n                isHistoryDate = false\r\n            }\r\n\r\n            let diffHours = Math.abs(date1 - date2) / 36e5;\r\n            \r\n            if(diffHours > 1) {\r\n                moreHour = true\r\n            }\r\n        }\r\n\r\n        let isFirst = (\r\n            ((this.props.messages[this.props.index-1] && \r\n            this.props.messages[this.props.index-1].user._id !== this.props.message.user._id) || \r\n            !this.props.messages[this.props.index-1]) || moreHour\r\n        )\r\n\r\n        return (<>\r\n            {isHistoryDate && <div className=\"history-date\">{timeAt(new Date(this.props.message.createdAt))}</div>}\r\n\r\n            <div\r\n                className={`message ${this.props.selected ? 'selected' : ''}`} \r\n                onClick={(e) => {\r\n                    if(this.props.message.isLoading || this.props.message.isError)\r\n                        return\r\n\r\n                    if(this.props.selected) {\r\n                        this.props.unSelect(this.props.message._id)\r\n                    } else {\r\n                        this.props.onSelect(this.props.message)\r\n                    }\r\n                }}\r\n                style={{\r\n                    background: this.props.isRecent ? 'none' : (this.props.message.isLoading || this.props.message.isError) ? '#fff' : (this.props.message.user._id !== this.props.user._id && !this.props.message.isRead) ? '#EFF4F8' : '', \r\n                    cursor: (this.props.message.isLoading || this.props.message.isError) ? 'default' : '',\r\n                    padding: this.props.isRecent ? '8px 14px 8px 6px' : ''\r\n                }}\r\n            >\r\n                {\r\n                    (isFirst || isHistoryDate) && !this.props.isRecent && \r\n                    <span style={{height: 'max-content'}} onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        this.props.history.push({\r\n                            search: `?user=${this.props.message.user._id}`\r\n                        })\r\n                    }}>\r\n                        <Avatar \r\n                            style={{width: 32, height: 32, fontSize: 14, lineHeight: '14px', fontWeight: 600, backgroundColor: `rgb(${this.props.message.user.color})`}} \r\n                            name={this.props.message.user.name.first.charAt(0)+this.props.message.user.name.last.charAt(0)} \r\n                            avatar={this.props.user._id === this.props.message.user._id ? this.props.user.avatar ? this.props.user.avatar : false : this.props.message.user.avatar ? this.props.message.user.avatar : false}\r\n                        />\r\n                    </span>\r\n                }\r\n\r\n                {\r\n                    (!isFirst && !isHistoryDate && !this.props.isRecent) &&\r\n                    <div style={{width: 46}} />\r\n                }\r\n                \r\n                {(!this.props.message.isLoading && !this.props.message.isError) && this.props.canSelect && <span className={`select-indicator ${this.props.selected ? 'active' : ''}`}>\r\n                <CSSTransitionGroup \r\n                    transitionName=\"message-status-transition\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {this.props.selected && <CheckIcon style={{\r\n                        color: '#fff', \r\n                        fontSize: 16,\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        margin: 'auto'\r\n                    }} />}\r\n                    </CSSTransitionGroup>\r\n                </span>}\r\n                \r\n                \r\n                <div className=\"content col\">\r\n                    {\r\n                        (isFirst || isHistoryDate) &&\r\n                        <h3 onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            this.props.history.push({\r\n                                search: `?user=${this.props.message.user._id}`\r\n                            })\r\n                        }} className=\"user-name\" style={{color: this.props.message.user._id === this.props.user._id ? '#FF3333' : ''}}>\r\n                            {this.props.message.user._id !== this.props.user._id && <>{`${this.props.message.user.name.first} ${this.props.message.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}\r\n                            {this.props.message.user._id === this.props.user._id && <>{`${this.props.user.name.first} ${this.props.user.name.last}`} <span className=\"time-at\">{getHM(this.props.message.createdAt)}</span></>}                            \r\n                        </h3>\r\n                    }\r\n\r\n                    {this.props.message.text && <p className=\"message-text\">\r\n                        <Linkify componentDecorator={componentDecorator}>\r\n                            {this.props.message.type === 'message' && <>\r\n                                {this.props.message.text.replace(/&nbsp;/g, '')\r\n                                    .replace(/&amp;/g, '&')\r\n                                    .replace(/&gt;/g, '>')\r\n                                    .replace(/&lt;/g, '<')\r\n                                    // .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\r\n                                    .replace(/(^\\s*(?!.+)\\n+)|(\\n+\\s+(?!.+)$)/g, \"\")\r\n                                    .replace(/(\\r\\n|\\r|\\n){2,}/g, '$1\\n')\r\n                                }\r\n                            </>}\r\n\r\n                            {this.props.message.type === 'call' && <>\r\n                                {this.props.message.user._id === this.props.user._id && <CallMadeIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.message.user._id !== this.props.user._id && <CallReceivedIcon style={{color: '#008FF7', fontSize: 20, marginRight: 8}} />}\r\n                                {this.props.langProps[this.props.message.text]}\r\n                            </>}\r\n                        </Linkify>\r\n                    </p>}\r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent > 1 && <p className=\"message-text\">\r\n                        {`Attachmend messages [${this.props.message.recentMessages.length}]`}    \r\n                    </p>}\r\n\r\n                    {!!this.props.message.images.length && <div className=\"message-images\">\r\n                        {this.props.message.images.map((image, index, images) => {\r\n                            let width\r\n                            let isBlur = false\r\n\r\n                            if(images.length <= 3 && images.length !== 2) {\r\n                                width = index === 0 ? '100%' : '50%' \r\n                            } else {\r\n                                width = '50%'\r\n                            }\r\n\r\n                            if(images.length > 4 && index === 3)\r\n                                isBlur = true\r\n                            \r\n                            if(index > 3)\r\n                                return null\r\n\r\n                            if(isBlur)\r\n                                return <div key={index} className=\"image\" style={{width}}>\r\n                                    <div className=\"image-blur\" onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        this.props.history.push({\r\n                                            search: `?modal=slider`\r\n                                        })\r\n                                        store.dispatch({\r\n                                            type: SLIDER_SET,\r\n                                            payload: {\r\n                                                images,\r\n                                                index: 0\r\n                                            }\r\n                                        })\r\n                                    }}>\r\n                                        <span>{`+${images.length-3}`}</span>\r\n                                        <img draggable=\"false\" key={index} src={image.path} alt={image.name} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            return  <div key={index} className=\"image\" style={{width}}>\r\n                                <img draggable=\"false\" onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    this.props.history.push({\r\n                                        search: `?modal=slider`\r\n                                    })\r\n                                    store.dispatch({\r\n                                        type: SLIDER_SET,\r\n                                        payload: {\r\n                                            images,\r\n                                            index\r\n                                        }\r\n                                    })\r\n                                }} src={image.path} alt={image.name} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n\r\n                    {!!this.props.message.sounds.length && <div className=\"message-sounds\">\r\n                        {this.props.message.sounds.map((sound, index, images) => {\r\n                            return <Audio\r\n                                key={index}\r\n                                fileName={sound.name}\r\n                                src={sound.path}\r\n                            />\r\n                        })}\r\n                    </div>}\r\n                    \r\n                    \r\n                    {!!this.props.message.files.length && <div className=\"message-files\">\r\n                        {this.props.message.files.map((file, index, images) => {\r\n                            return <div className=\"message-file\" key={index} onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                window.open(file.path, '_self');\r\n                            }}>\r\n                                <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                                <div className=\"message-file-info\">\r\n                                    <p className=\"message-file-name\">{file.name}</p>\r\n                                    <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                                </div>\r\n                                <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                            </div>\r\n                        })}\r\n                    </div>}\r\n                    \r\n\r\n                    {!!this.props.message.recentMessages.length && this.props.countRecent < 2 && <div className=\"message-recent\">\r\n                        {this.props.message.recentMessages.map((message, index, messages) => {\r\n                            return <MessageComponent countRecent={this.props.countRecent+1} isRecent={true} onSelect={() => {}} openSlider={(sliderImages) => {this.props.openSlider(sliderImages)}} key={index} message={message} messages={messages} index={index} />\r\n                        })}\r\n                    </div>}\r\n                </div>\r\n                \r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                        {!this.props.canSelect && !this.props.message.isLoading && !this.props.message.isError && this.props.message.isEdit && <EditOutlinedIcon style={{color: '#B8C3CF'}} />}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n                {!this.props.isRecent && <div className=\"message-status\">\r\n                    <CSSTransitionGroup \r\n                        transitionName=\"message-status-transition\"\r\n                        transitionEnterTimeout={100}\r\n                        transitionLeaveTimeout={100}>\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && this.props.message.isLoading && <QueryBuilderIcon style={{color: '#B8C3CF'}} />}\r\n                            \r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id && !this.props.message.isLoading && !this.props.message.isError && !this.props.message.isRead && <DoneIcon style={{color: '#B8C3CF'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && !this.props.message.isError && this.props.message.isRead && <DoneAllIcon style={{color: '#008FF7'}} />}\r\n                            {!this.props.canSelect && this.props.message.user._id === this.props.user._id &&!this.props.message.isLoading && this.props.message.isError &&<>\r\n                            <ActionMenu event=\"hover\" actions={[\r\n                                {text: 'Retry', action: () => {\r\n                                    this.props.retrySendMessage(this.props.message)\r\n                                }},\r\n                                {text: 'Delete', action: () => {\r\n                                    this.props.deleteLocalMessage(this.props.message._id)\r\n                                }},\r\n                            ]} from={'message-error-actions-'+this.state.randomId} />\r\n                            <ErrorOutlineIcon className='error' id={'message-error-actions-'+this.state.randomId} style={{color: '#FF3333'}} />\r\n                        </>}\r\n                    </CSSTransitionGroup>\r\n                </div>}\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Message)))","// App\r\nimport React from 'react'\r\nimport Message from './Message'\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { withStyles, CircularProgress } from '@material-ui/core'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\n// Internet Explorer 6-11\r\nconst isIE = /*@cc_on!@*/false || !!document.documentMode;\r\n\r\n// Edge 20+\r\nconst isEdge = !isIE && !!window.StyleMedia;\r\n\r\nlet waitActiveUser = false\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        position: 'absolute',\r\n        color: '#008FF7',\r\n        bottom: 20,\r\n        right: 20,\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass Dialog extends React.Component {\r\n    state = {\r\n        showFabToBottom: false,\r\n        activePage: false,\r\n        scrollTop: 0\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if(this.messagesBlock) {\r\n            if(isEdge || isIE)\r\n                this.messagesBlock.view.scrollTop = 100000\r\n            else {\r\n                this.messagesBlock.view.scroll({\r\n                    top: 100000,\r\n                    left: 0,\r\n                    behavior: 'smooth'\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('blur', this.blurPage.bind(this));\r\n        window.removeEventListener('mousemove', this.focusPage.bind(this));\r\n    }\r\n\r\n    focusPage() {\r\n        let active\r\n        if(this.messagesBlock && this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight()) {\r\n            active = false\r\n        } else {\r\n            active = true\r\n        }\r\n\r\n        if(!this.state.activePage && active && !!this.props.unRead.length) {\r\n            if(waitActiveUser)\r\n                clearTimeout(waitActiveUser)\r\n\r\n            this.props.readMessages()\r\n            this.setState({activePage: true})\r\n\r\n            waitActiveUser = setTimeout(() => {\r\n                this.setState({activePage: false})\r\n            }, 3000)\r\n        } \r\n    }\r\n\r\n    blurPage() {\r\n        this.setState({activePage: false})\r\n    }\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('blur', this.blurPage.bind(this));\r\n        window.addEventListener('mousemove', this.focusPage.bind(this));\r\n\r\n        if(this.messagesBlock) {\r\n            this.messagesBlock.view.scrollTop = 100000\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(\r\n            prevProps.messages.length < this.props.messages.length && \r\n            JSON.stringify(prevProps.messages[0]) === JSON.stringify(this.props.messages[0]) &&\r\n            ((this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()) < this.messagesBlock.getClientHeight() + 100 ||\r\n            prevProps.messages[prevProps.messages.length-1].user._id === this.props.user._id)\r\n        ) {\r\n            if(this.state.activePage) {\r\n                this.props.readMessages()\r\n            }\r\n            \r\n            this.scrollToBottom()\r\n\r\n            if(this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: false})\r\n        }\r\n\r\n        if(JSON.stringify(prevProps.messages[0]) !== JSON.stringify(this.props.messages[0])) {\r\n            this.messagesBlock.scrollTop(this.messagesBlock.getScrollHeight() - this.state.scrollTop)\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(nextState.scrollTop !== this.state.scrollTop) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    onScroll() {\r\n        this.setState({scrollTop: this.messagesBlock.getScrollHeight() - this.messagesBlock.getScrollTop()})\r\n        if(this.messagesBlock.getScrollTop() + this.messagesBlock.getClientHeight() < this.messagesBlock.getScrollHeight() - 100) {\r\n            if(!this.state.showFabToBottom)\r\n                this.setState({showFabToBottom: true})\r\n        } else {\r\n            if(this.state.showFabToBottom) {\r\n                this.setState({showFabToBottom: false})\r\n                if(!!this.props.unRead.length) {\r\n                    this.props.readMessages()\r\n                }\r\n            }\r\n        }\r\n\r\n        if(this.props.type === 'room' && this.props.rooms.activeRoom.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n        \r\n        if(this.props.type === 'dialog' && this.props.dialog.canLoad && this.messagesBlock.getScrollTop() < 100) {\r\n            this.props.loadMessages()\r\n        }\r\n            \r\n\r\n    }\r\n\r\n    viewTypers() {\r\n        if(this.props.rooms.activeRoom.typers.length === 1) {\r\n            return this.props.rooms.activeRoom.typers[0].name.first\r\n        }\r\n\r\n        if(this.props.rooms.activeRoom.typers.length === 2) {\r\n            return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers[1].name.first}`\r\n        }\r\n\r\n        return `${this.props.rooms.activeRoom.typers[0].name.first} и ${this.props.rooms.activeRoom.typers.length-1}`\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"dialog-wrap\">\r\n                <Scrollbars\r\n                    onScroll={() => {this.onScroll()}}\r\n                    ref={(ref) => {this.messagesBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"dialog scroll\"\r\n                    autoHide\r\n                >\r\n                    {((this.props.type === 'room' && this.props.rooms.activeRoom.isLoading) || (this.props.type === 'dialog' && this.props.dialog.isLoading)) && <div className=\"dialog-loading\">\r\n                        <CircularProgress style={{\r\n                            color: '#008FF7',\r\n                        }} />\r\n                    </div>}\r\n                    {this.props.messages.map((message, index, messages) => {\r\n                        return <Message \r\n                            countRecent={0}\r\n                            isRecent={false}\r\n                            selected={this.props.recentMessages.find(x => x._id === message._id)}\r\n                            canSelect={!!this.props.recentMessages.length}\r\n                            key={index} \r\n                            deleteLocalMessage={(_id) => {this.props.deleteLocalMessage(_id)}}\r\n                            retrySendMessage={(message) => {this.props.retrySendMessage(message)}}\r\n                            index={index}\r\n                            message={message} \r\n                            messages={messages} \r\n                            onSelect={(message) => {this.props.onSelect(message)}} \r\n                            unSelect={(id) => {this.props.unSelect(id)}}\r\n                        />\r\n                    })}\r\n\r\n                    {this.props.type === 'room' && <div className=\"dialog-typers\">\r\n                        {!!this.props.rooms.activeRoom.typers.length && <p className=\"typing\">{this.viewTypers()} {this.props.langProps.typing}</p>}\r\n                        {!this.props.rooms.activeRoom.typers.length && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n\r\n                    {this.props.type === 'dialog' && <div className=\"dialog-typers\">\r\n                        {this.props.typing && <p className=\"typing\">{this.props.userName} {this.props.langProps.typing}</p>}\r\n                        {!this.props.typing && <p style={{height: 18}}></p>}\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                <CustomFab className={`scroll-to-bottom ${this.state.showFabToBottom ? 'active' : ''}`} color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {this.scrollToBottom()}}>\r\n                    {!!this.props.unRead.length && <span className=\"unread-messages-count\">{this.props.unRead.length}</span>}\r\n                    <ExpandMoreIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n\r\n                {this.props.type === 'dialog' && this.props.loading && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n\r\n                {(!this.props.messages.length && !this.props.loading) && <div className=\"data-empty\">\r\n                    <SendIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.write_your_first_message} {this.props.to}</p>\r\n                </div>}\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(Dialog))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { getHM } from '../../Controllers/TimeController';\r\nimport Linkify from 'react-linkify';\r\nimport Button from '@material-ui/core/Button';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst componentDecorator = (href, text, key) => (\r\n    <a href={href} onClick={(e) => {e.stopPropagation()}} key={key} target=\"_blank\" rel=\"noopener noreferrer\">\r\n      {text}\r\n    </a>\r\n);\r\n\r\nclass Attachment extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-attachment\">\r\n                {!!this.props.recentMessages.length && <div className=\"message-attachment\">\r\n                    <Button className=\"btn-cancel-select\" style={{width: 60}} onClick={() => {this.props.unSelectRecentMessages()}}>\r\n                        <CloseIcon style={{color: '#99AABB'}} />\r\n                    </Button>\r\n\r\n                    {this.props.recentMessages.length === 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{`${this.props.recentMessages[0].user.name.first} ${this.props.recentMessages[0].user.name.last}`} <span className=\"time-at\">{getHM(this.props.recentMessages[0].createdAt)}</span></h3>\r\n                        <p className=\"message-text\"><Linkify componentDecorator={componentDecorator}>{\r\n                            this.props.recentMessages[0].text ? \r\n                            this.props.recentMessages[0].text : `${this.props.langProps.investments} [${\r\n                                this.props.recentMessages[0].images.length+\r\n                                this.props.recentMessages[0].files.length+\r\n                                this.props.recentMessages[0].sounds.length+\r\n                                this.props.recentMessages[0].recentMessages.length\r\n                            }]`\r\n                        }</Linkify></p>\r\n                    </div>}\r\n\r\n                    {this.props.recentMessages.length > 1 &&<div className=\"col message-recent\">\r\n                        <h3 className=\"user-name\">{this.props.langProps.attachment_messages}</h3>\r\n                        <p className=\"message-text\">{`${this.props.langProps.messages} [${this.props.recentMessages.length}]`}</p>\r\n                    </div>}\r\n                </div>}\r\n\r\n                {!!this.props.images.length && <div className=\"image-attachment\">\r\n                    {this.props.images.map((image, index, images) => {\r\n                        return <div key={index} className=\"image-container\" style={{marginRight: images[index+1] ? 5 : 0}}>\r\n                            <span className=\"btn-delete-image\" onClick={() => {this.props.removeImage(image.id)}}>\r\n                                <CloseIcon style={{color: '#fff'}} />\r\n                            </span>\r\n                            <img src={image.path} alt=\"Attach\" />\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.sounds.length && <div className=\"sound-attachment\">\r\n                    {this.props.sounds.map((sound, index, sounds) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeSound(sound.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <MusicNoteIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{sound.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n\r\n                {!!this.props.files.length && <div className=\"sound-attachment\">\r\n                    {this.props.files.map((file, index, files) => {\r\n                        return <div key={index} className=\"sound-container\">\r\n                            <Button className=\"btn-cancel-select\" style={{minWidth: 60}} onClick={() => {this.props.removeFile(file.id)}}>\r\n                                <CloseIcon style={{color: '#99AABB'}} />\r\n                            </Button>\r\n\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#008FF7'}} />\r\n\r\n                            <p className=\"sound-attachment-name\">{file.name}</p>\r\n                        </div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(Attachment)","// App\r\nimport React from 'react'\r\nimport ReactResizeDetector from 'react-resize-detector'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\n\r\n// Material\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst PlaceHolder = withLang(languages)((props) => {\r\n    return <div className=\"placeholder\">{props.langProps.write_message}</div>\r\n})\r\n\r\nclass InputMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0,\r\n        text: ''\r\n    }\r\n\r\n    setText(text) {\r\n        this.setState({text})\r\n    }\r\n\r\n    onPaste(event) {\r\n        let items = (event.clipboardData || event.originalEvent.clipboardData).items\r\n        \r\n        for (let index = 0; index < items.length; index++) {\r\n            if (items[index].kind === 'file') {\r\n                let file = items[index].getAsFile()\r\n\r\n                this.props.addFile(file, true)\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isEdit) {\r\n            if(!/\\S/.test(this.state.text) && !this.props.attachedRecentMessages.length && !this.props.images.length && !this.props.files.length && !this.props.sounds.length) {\r\n                this.props.cancelEditMessage()\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`dialog-input ${this.props.isShow ? '': 'd-none'}`}>\r\n                <IconButton component={'label'} className=\"btn-add-files\">\r\n                    <AttachFileIcon style={{transform: 'rotate(45deg)', color: '#008FF7'}} />\r\n\r\n                    <input \r\n                        type=\"file\" \r\n                        multiple \r\n                        onChange={(e) => {this.props.addFile(e)}}\r\n                        id=\"uploadFile\" \r\n                        style={{display: 'none'}} \r\n                        accept=\"image/jpeg,image/gif,image/jpeg,image/png,application/pdf,text/plain,application/x-zip-compressed,application/zip,application/msword,audio/mpeg\" \r\n                    />\r\n                </IconButton>\r\n\r\n                <textarea className=\"col input-message\" id=\"input-message\" onPaste={(e) => {this.onPaste(e)}}\r\n                    onKeyDown={(e) => {\r\n                        if(e.keyCode === 38 && !this.props.isEdit && !this.state.text.length) {\r\n                            this.props.setLastEditMessage()\r\n                        }\r\n\r\n                        if (e.keyCode === 13 && !e.shiftKey) {\r\n                            e.preventDefault()\r\n                            if(/\\S/.test(this.state.text) || !!this.props.attachedRecentMessages.length  || !!this.props.images.length || !!this.props.files.length || !!this.props.sounds.length) {\r\n                                if(!this.props.isEdit) {\r\n                                    this.props.sendMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                else {\r\n                                    this.props.sendEditMessage(this.state.text)\r\n                                    this.setState({text: ''})\r\n                                }\r\n                                let inputMessage = document.getElementById('input-message')\r\n                                inputMessage.style.maxHeight = \"60px\";\r\n                            }\r\n                        }\r\n                    }}\r\n                    onInput={() => {\r\n                        let inputMessage = document.getElementById('input-message')\r\n                        inputMessage.style.height = \"5px\";\r\n                        inputMessage.style.height = (inputMessage.scrollHeight)+\"px\";\r\n\r\n                        if(inputMessage.scrollHeight > 179) {\r\n                            inputMessage.style.maxHeight = '179px'\r\n                        } else {\r\n                            inputMessage.style.maxHeight = (inputMessage.scrollHeight)+\"px\";\r\n                        }\r\n                    }}\r\n                    onChange={(e) => {\r\n                        this.props.typing(e.target.value, this.state.text)\r\n                        this.setState({text: e.target.value})\r\n                    }}\r\n                    value={this.state.text}\r\n                ></textarea>\r\n\r\n                {!this.state.text && <PlaceHolder />}\r\n\r\n                {!this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(/\\S/.test(this.state.text) || !!this.props.files.length || !!this.props.images.length|| !!this.props.sounds.length || !!this.props.attachedRecentMessages.length) && <IconButton onClick={() => {\r\n                            this.props.sendMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <SendIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n                </CSSTransitionGroup>}\r\n\r\n                {this.props.isEdit && <CSSTransitionGroup \r\n                    transitionName=\"btn-send-message\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                     {(\r\n                        JSON.stringify({\r\n                            text: this.props.editMessage.text,\r\n                            images: this.props.editMessage.images,\r\n                            sounds: this.props.editMessage.sounds,\r\n                            files: this.props.editMessage.files,\r\n                            attachedRecentMessages: this.props.editMessage.recentMessages,\r\n                        }) !== \r\n                        JSON.stringify({\r\n                            text: this.state.text,\r\n                            images: this.props.images,\r\n                            sounds: this.props.sounds,\r\n                            files: this.props.files,\r\n                            attachedRecentMessages: this.props.attachedRecentMessages\r\n                        })) && <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-right\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.sendEditMessage(this.state.text)\r\n                            this.setState({text: ''})\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <EditOutlinedIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>}\r\n\r\n                    <IconButton ref={(node) => {\r\n                        if (node) {\r\n                            node.style.setProperty(\"margin-left\", \"0\", \"important\");\r\n                        }\r\n                        }} \r\n                        onClick={() => {\r\n                            this.props.cancelEditMessage()\r\n                            let inputMessage = document.getElementById('input-message')\r\n                            inputMessage.style.maxHeight = \"60px\";\r\n                        }} className=\"btn-send-message\">\r\n                        <CloseIcon style={{color: '#008FF7'}} />\r\n                    </IconButton>\r\n                </CSSTransitionGroup>}\r\n\r\n                <ReactResizeDetector handleHeight onResize={(width, inputMessageHeight) => {\r\n                    this.setState({inputMessageHeight})\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputMessage","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport Button from '@material-ui/core/Button';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass ToolbarMessage extends React.Component {\r\n    state = {\r\n        inputMessageHeight: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dialog-input\">\r\n                <Button className=\"btn-reply\" onClick={() => {this.props.addAttachmentRecentMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n\r\n                <Button className=\"btn-forward\" onClick={() => {this.props.addAttachmentForwardMessage()}}>\r\n                    <ReplyIcon style={{color: '#99AABB', transform: 'scaleX(-1)'}} />\r\n                </Button>\r\n\r\n                <div className=\"col\"></div>\r\n\r\n                {(this.props.recentMessages[0].user._id === this.props.user._id && this.props.recentMessages[0].type !== 'call' && this.props.recentMessages.length === 1) && <Button className=\"btn-edit-message\" onClick={() => {\r\n                    this.props.setEditMessage()\r\n                }}>\r\n                    <EditOutlinedIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                {!this.props.recentMessages.find(message => message.user._id !== this.props.user._id) && <Button className=\"btn-delete-message\" onClick={() => {\r\n                    this.props.deleteMessage()\r\n                }}>\r\n                    <DeleteOutlineIcon style={{color: '#99AABB'}} />\r\n                </Button>}\r\n\r\n                <Button className=\"btn-cancel-select\" onClick={() => {\r\n                    this.props.cancelAttachmentRecentMessage()\r\n                }}>\r\n                    <CloseIcon style={{color: '#99AABB'}} />\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToolbarMessage)","// App\r\nimport React from 'react'\r\nimport Dialog from './Dialog'\r\nimport {CSSTransitionGroup} from 'react-transition-group'\r\nimport { toast } from 'react-toastify';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Attachment from './Attachment';\r\nimport InputMessage from './InputMessage'\r\nimport ToolbarMessage from './ToolbarMessage'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\n\r\nlet waitFastRead = false\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.inputMessage = React.createRef()\r\n    }\r\n\r\n    state = {\r\n        recentMessages: [],\r\n        attachedRecentMessages: this.props.dialogs.forwardMessages,\r\n        sounds: [],\r\n        files: [],\r\n        images: [],\r\n        inputMessageHeight: 0,\r\n        isEdit: false,\r\n        editMessage: {},\r\n        canTyping: true,\r\n        drag: false\r\n    }\r\n\r\n    dropRef = React.createRef()\r\n    dragCounter = 0\r\n\r\n    componentDidMount() {\r\n        if(!!this.props.dialogs.forwardMessages.length) {\r\n            this.props.dialogsActions.setForward([])\r\n        }\r\n\r\n        let div = this.dropRef.current\r\n        div.addEventListener('dragenter', this.handleDragIn)\r\n        div.addEventListener('dragleave', this.handleDragOut)\r\n        div.addEventListener('dragover', this.handleDrag)\r\n        div.addEventListener('drop', this.handleDrop)\r\n\r\n        let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n        \r\n        if(drafts['draft-'+this.props.dialogId])\r\n            this.inputMessage.current.setText(drafts['draft-'+this.props.dialogId])\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let div = this.dropRef.current\r\n        div.removeEventListener('dragenter', this.handleDragIn)\r\n        div.removeEventListener('dragleave', this.handleDragOut)\r\n        div.removeEventListener('dragover', this.handleDrag)\r\n        div.removeEventListener('drop', this.handleDrop)\r\n    }\r\n\r\n    handleDrag = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    handleDragIn = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter++\r\n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n            this.setState({drag: true})\r\n        }\r\n    }\r\n\r\n    handleDragOut = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.dragCounter--\r\n        if (this.dragCounter === 0) {\r\n            this.setState({drag: false})\r\n        }\r\n    }\r\n\r\n    handleDrop = (e) => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        this.setState({drag: false})\r\n        if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n          this.handleDropFiles(e.dataTransfer.files)\r\n          e.dataTransfer.clearData()\r\n          this.dragCounter = 0    \r\n        }\r\n      }\r\n\r\n    handleDropFiles = (files) => {\r\n        for (var i = 0; i < files.length; i++) {\r\n            this.addFile(files, false, true)\r\n        }\r\n    }\r\n\r\n    sendMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.files.length|| !!this.state.sounds.length) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.sendMessage({\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.sendMessage({\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            this.setState({attachedRecentMessages: [], images: [], sounds: [], files: []})\r\n            this.inputMessage.current.setText('')\r\n        }\r\n    }\r\n\r\n    sendEditMessage(text) {\r\n        if(/\\S/.test(text) || !!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) {\r\n            switch (this.props.type) {\r\n                case 'room': \r\n                    this.props.roomsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        roomId: this.props.roomId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                case 'dialog': \r\n                    this.props.dialogsActions.editMessage({\r\n                        _id: this.state.editMessage._id,\r\n                        text: text,\r\n                        userId: this.props.userId,\r\n                        images: this.state.images,\r\n                        files: this.state.files,\r\n                        sounds: this.state.sounds,\r\n                        dialogId: this.props.dialogId,\r\n                        recentMessages: this.state.attachedRecentMessages\r\n                    }, this.props.user.apiToken)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n           this.cancelEditMessage()\r\n        }\r\n    }\r\n\r\n    deleteMessage() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteMessage({\r\n                    roomId: this.props.roomId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteMessage({\r\n                    otherId: this.props.userId,\r\n                    dialogId: this.props.dialogId,\r\n                    deleteMessages: this.state.recentMessages\r\n                }, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({recentMessages: []})\r\n    }\r\n\r\n    retrySendMessage(message) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                message.roomId = this.props.rooms.activeRoom._id\r\n                message.dialogId = this.props.dialogId\r\n                this.props.roomsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                message.userId = this.props.userId\r\n                message.dialogId = this.props.dialogId\r\n                this.props.dialogsActions.retrySendMessage(message, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    deleteLocalMessage(_id) {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.deleteLocalMessage(_id)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.deleteLocalMessage(_id, this.props.dialogId)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addAttachmentRecentMessage() {\r\n        this.setState({\r\n            attachedRecentMessages: this.state.recentMessages,\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    addAttachmentForwardMessage() {\r\n        this.props.dialogsActions.setForward(this.state.recentMessages)\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    cancelAttachmentRecentMessage() {\r\n        this.setState({\r\n            recentMessages: []\r\n        })\r\n    }\r\n\r\n    setEditMessage() {\r\n        this.inputMessage.current.setText(this.state.recentMessages[0].text)\r\n\r\n        this.state.recentMessages[0].images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        this.state.recentMessages[0].files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        this.setState({\r\n            images: this.state.recentMessages[0].images,\r\n            sounds: this.state.recentMessages[0].sounds,\r\n            files: this.state.recentMessages[0].files,\r\n            recentMessages: [],\r\n            attachedRecentMessages: this.state.recentMessages[0].recentMessages,\r\n            isEdit: true,\r\n            editMessage: this.state.recentMessages[0]\r\n        })\r\n    }\r\n\r\n    setLastEditMessage() {\r\n        let lastMyMessage = this.props.messages.slice().reverse().find(x => x.user._id === this.props.user._id)\r\n\r\n        lastMyMessage.images.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.sounds.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n        lastMyMessage.files.map((x, i) => {\r\n            x.id = i\r\n            return 1\r\n        })\r\n\r\n        if(lastMyMessage) {\r\n            this.inputMessage.current.setText(lastMyMessage.text)\r\n            this.setState({\r\n                images: lastMyMessage.images,\r\n                sounds: lastMyMessage.sounds,\r\n                files: lastMyMessage.files,\r\n                recentMessages: [],\r\n                attachedRecentMessages: lastMyMessage.recentMessages,\r\n                isEdit: true,\r\n                editMessage: lastMyMessage\r\n            })\r\n        }\r\n    }\r\n\r\n    cancelEditMessage() {\r\n        this.inputMessage.current.setText('')\r\n        this.setState({\r\n            images: [],\r\n            sounds: [],\r\n            files: [],\r\n            recentMessages: [],\r\n            attachedRecentMessages: [],\r\n            isEdit: false,\r\n            editMessage: {}\r\n        })\r\n    }\r\n\r\n    readMessages() {\r\n        if(waitFastRead)\r\n            clearTimeout(waitFastRead)\r\n\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.roomsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        roomId: this.props.roomId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            case 'dialog': \r\n                waitFastRead = setTimeout(() => {\r\n                    this.props.dialogsActions.readMessages({\r\n                        dialogId: this.props.dialogId, \r\n                        otherId: this.props.userId, \r\n                        userId: this.props.user._id\r\n                    }, this.props.user.apiToken)\r\n                }, 100)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    loadMessages() {\r\n        switch (this.props.type) {\r\n            case 'room': \r\n                this.props.roomsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            case 'dialog': \r\n                this.props.dialogsActions.loadMessages({dialogId: this.props.dialogId}, this.props.user.apiToken)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFile(e, paste = false, drag = false) {\r\n        let sounds = [...this.state.sounds]\r\n        let files = [...this.state.files]\r\n        let images = [...this.state.images]\r\n\r\n        let counter = sounds.length + files.length + images.length\r\n        \r\n        if(!paste && !drag) {\r\n            for (let i = 0; i < e.target.files.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachments!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e.target.files[i]], {type: e.target.files[i].type})), \r\n                    file: e.target.files[i], \r\n                    name: e.target.files[i].name, \r\n                    type: e.target.files[i].name.split('.').pop(),\r\n                    size: e.target.files[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n\r\n            e.target.value = null;\r\n        }\r\n\r\n        if(paste) {\r\n            if(counter > 9) {\r\n                toast.error(\"Max upload 10 attachment!\", {\r\n                    position: toast.POSITION.TOP_CENTER\r\n                });\r\n            } else {\r\n                let file = {\r\n                    id: images.length,\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e], {type: e.type})), \r\n                    file: e, \r\n                    name: e.name, \r\n                    type: e.name.split('.').pop()\r\n                }\r\n\r\n                images.push(file)\r\n            }\r\n        }\r\n\r\n        if(drag) {\r\n            for (let i = 0; i < e.length; i++) {\r\n                if(counter > 9) {\r\n                    toast.error(\"Max upload 10 attachment!\", {\r\n                        position: toast.POSITION.TOP_CENTER\r\n                    });\r\n                    break\r\n                }\r\n\r\n                let file = {\r\n                    path: (window.URL || window.webkitURL).createObjectURL(new Blob([e[i]], {type: e[i].type})), \r\n                    file: e[i], \r\n                    name: e[i].name, \r\n                    type: e[i].name.split('.').pop(),\r\n                    size: e[i].size / 1000\r\n                }\r\n                \r\n                if(file.type === 'png' || file.type === 'jpg' || file.type === 'jpeg' || file.type === 'gif') {\r\n                    file.id = images.length\r\n                    images.push(file)\r\n                }\r\n\r\n                if(file.type === 'txt' || file.type === 'pdf' || file.type === 'docx' || file.type === 'zip' || file.type === 'doc') {\r\n                    file.id = files.length\r\n                    files.push(file)\r\n                }\r\n\r\n                if(file.type === 'mp3') {\r\n                    file.id = sounds.length\r\n                    sounds.push(file)\r\n                }\r\n\r\n                counter++\r\n            }\r\n        }\r\n\r\n        this.setState({sounds, files, images})\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(this.state.canTyping !== nextState.canTyping) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    typing(newText, prevText) {\r\n        if(newText > prevText && !this.state.isEdit) {\r\n            if(this.state.canTyping) {\r\n                this.setState({canTyping: false})\r\n\r\n                switch (this.props.type) {\r\n                    case 'room': \r\n                        SocketController.typingRoom(this.props.rooms.activeRoom._id)\r\n                        break;\r\n                    case 'dialog': \r\n                        SocketController.typingDialog(this.props.userId, this.props.user._id)\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                \r\n                setTimeout(() => {\r\n                    this.setState({canTyping: true})\r\n                }, 2500)\r\n            }\r\n        }\r\n\r\n        if(!this.state.isEdit) {\r\n            let drafts = {...JSON.parse(localStorage.getItem('drafts'))}\r\n            drafts['draft-'+this.props.dialogId] = newText\r\n            if(!drafts['draft-'+this.props.dialogId] || !/\\S/.test(drafts['draft-'+this.props.dialogId]))\r\n                delete drafts['draft-'+this.props.dialogId]\r\n            localStorage.setItem('drafts', JSON.stringify(drafts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <>\r\n            <div className=\"dialog-container\" ref={this.dropRef}>\r\n                {this.state.drag &&\r\n                    <div className=\"drag-and-drop-container\">\r\n                        <div className=\"data-empty\">\r\n                            <InsertDriveFileOutlinedIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>Drag & drop files here to attach</p>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                <Dialog \r\n                    loadMessages={() => {this.loadMessages()}}\r\n                    retrySendMessage={(message) => {this.retrySendMessage(message)}}\r\n                    deleteLocalMessage={(_id) => {this.deleteLocalMessage(_id)}}\r\n                    messages={this.props.messages}\r\n                    to={this.props.to}\r\n                    dialog={this.props.dialog}\r\n                    userName={this.props.userName}\r\n                    typing={this.props.typing}\r\n                    loading={this.props.loading}\r\n                    type={this.props.type}\r\n                    unRead={this.props.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id)}\r\n                    recentMessages={this.state.recentMessages}\r\n                    onSelect={(message) => {\r\n                        this.setState({recentMessages: [...this.state.recentMessages, message]})\r\n                    }} \r\n                    unSelect={(id) => {\r\n                        this.setState({recentMessages: [\r\n                            ...this.state.recentMessages.filter(message => {                        \r\n                                return message._id !== id\r\n                            })\r\n                        ]})\r\n                    }}\r\n                    readMessages={() => {\r\n                        this.readMessages()\r\n                    }}\r\n                />\r\n\r\n                <CSSTransitionGroup \r\n                    transitionName=\"scroll-to-bottom\"\r\n                    transitionEnterTimeout={100}\r\n                    transitionLeaveTimeout={100}>\r\n                    {(!!this.state.attachedRecentMessages.length || !!this.state.images.length || !!this.state.sounds.length || !!this.state.files.length) && \r\n                        <Attachment \r\n                            images={this.state.images} \r\n                            recentMessages={this.state.attachedRecentMessages} \r\n                            files={this.state.files} \r\n                            sounds={this.state.sounds}\r\n                            unSelectRecentMessages={() => {\r\n                                this.setState({attachedRecentMessages: []})\r\n                            }}\r\n                            removeImage={(id) => {\r\n                                this.setState({images: [\r\n                                    ...this.state.images.filter(image => {                        \r\n                                        return image.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeSound={(id) => {\r\n                                this.setState({sounds: [\r\n                                    ...this.state.sounds.filter(sound => {                        \r\n                                        return sound.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                            removeFile={(id) => {\r\n                                this.setState({files: [\r\n                                    ...this.state.files.filter(file => {                        \r\n                                        return file.id !== id\r\n                                    })\r\n                                ]})\r\n                            }}\r\n                        />\r\n                    }\r\n                </CSSTransitionGroup>\r\n\r\n                <InputMessage \r\n                    isShow={!this.state.recentMessages.length}\r\n                    ref={this.inputMessage}\r\n                    cancelEditMessage={() => {this.cancelEditMessage()}}\r\n                    isEdit={this.state.isEdit}\r\n                    editMessage={this.state.editMessage}\r\n                    sendEditMessage={(text) => {this.sendEditMessage(text)}}\r\n                    images={this.state.images} \r\n                    sounds={this.state.sounds} \r\n                    files={this.state.files} \r\n                    attachedRecentMessages={this.state.attachedRecentMessages} \r\n                    sendMessage={(text) => {this.sendMessage(text)}}\r\n                    typing={(newText, prevText) => {this.typing(newText, prevText)}}\r\n                    addFile={(e, paste) => {this.addFile(e, paste)}} \r\n                    setLastEditMessage={() => {this.setLastEditMessage()}}\r\n                />\r\n\r\n                {!!this.state.recentMessages.length && \r\n                    <ToolbarMessage \r\n                        addAttachmentRecentMessage={() => {this.addAttachmentRecentMessage()}}\r\n                        cancelAttachmentRecentMessage={() => {this.cancelAttachmentRecentMessage()}}\r\n                        addAttachmentForwardMessage={() => {this.addAttachmentForwardMessage()}} \r\n                        deleteMessage={() => {this.deleteMessage()}}\r\n                        recentMessages={this.state.recentMessages}\r\n                        setEditMessage={() => {this.setEditMessage()}}\r\n                    />\r\n                }\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat)","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)'\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass RoomJoinError extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Error join room\"\r\n        >  \r\n            {this.props.rooms.activeRoom.error.msg === 'dont_have_payment' && <Redirect to=\"/payment\" />}\r\n            <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n            <h2 className=\"modal-title\">Error</h2>\r\n            <p className=\"modal-text\" style={{marginBottom: !!this.props.rooms.activeRoom.error.ban ? 0 : ''}}>{this.props.rooms.activeRoom.error.msg}</p>\r\n            {!!this.props.rooms.activeRoom.error.ban && <p className=\"modal-text\">to <span style={{color: '#008FF7'}}>{new Date(this.props.rooms.activeRoom.error.ban.date).toLocaleString()}</span></p>}\r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                this.props.history.push('/')\r\n            }}>Back</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(RoomJoinError))","// App\r\nimport React from 'react'\r\nimport {PageSettings} from '../PageSettings'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport qs from 'qs'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Material\r\nimport { withRouter } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Chat from '../../Partials/Chat/Chat'\r\nimport RoomJoinError from '../../Modals/RoomJoinError'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\n\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles, Tooltip } from '@material-ui/core'\r\nimport WebRtcController from '../../Controllers/WebRtcController'\r\nimport SocketController from '../../Controllers/SocketController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport ActionMenu from '../../Partials/ActionMenu';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        minWidth: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginLeft: 'auto',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab2 = withStyles(fabStylesCustom)(Fab);\r\n\r\nconst Members = withRouter((props) => {\r\n    return <Scrollbars\r\n        renderTrackVertical={() => <div className=\"track-vertical\"/>}\r\n        renderThumbVertical={() => <div className=\"thumb-vertical\"/>}\r\n        className=\"theme-members scroll\"\r\n        autoHide\r\n    >\r\n        {props.users.map((user, index) => \r\n            <div key={index} style={{cursor: 'pointer'}} className=\"member\" onClick={() => {\r\n                props.history.push({\r\n                    search: `?user=${user._id}`\r\n                })\r\n            }}>\r\n                <Avatar avatarStyle={{borderRadius: 0}} avatar={user.avatar ? user.avatar : false} name={user.name.first.charAt(0)+user.name.last.charAt(0)} style={{fontSize: 30, borderRadius: 0, width: '100%', height: '100%', backgroundColor: `rgb(${user.color})`}}  />\r\n                {user.speaking && <span className=\"speaking\"></span>}\r\n                <span className=\"user-name\">{user.name.first} {user.name.last}</span>\r\n            </div>\r\n        )}\r\n    </Scrollbars>\r\n})\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n    }\r\n}\r\n\r\nclass Room extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        let waitSocket = setInterval(() => {\r\n            if(SocketController.getSocketId()) {\r\n                this.props.roomsActions.joinRoom({id: this.props.match.params.id, apiToken: this.props.user.apiToken})\r\n                clearInterval(waitSocket)\r\n            }\r\n        }, 100);\r\n        \r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.roomsActions.leaveRoom(this.props.rooms.activeRoom._id, this.props.rooms.activeRoom.lang)\r\n    }\r\n\r\n    render() {\r\n        if(this.props.rooms.activeRoom && this.props.rooms.activeRoom.error) {\r\n            return <RoomJoinError isOpen={true} />\r\n        }\r\n\r\n        return this.props.rooms.activeRoom && (\r\n            <>  \r\n                {this.props.rooms.activeRoom.remoteStream && <MediaStream stream={this.props.rooms.activeRoom.remoteStream} />}\r\n                <div className={`col-xl-3 col-lg-6 col-md-6 theme-first-block ${this.state.act === 'chat' ? 'active' : 'hide'}`}>\r\n                    <div className=\"theme-header\">\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            if(this.state.act === 'chat') {\r\n                                this.props.history.push({\r\n                                    search: ``\r\n                                })\r\n                            } else {\r\n                                this.props.history.push('/')\r\n                            }                           \r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                        \r\n                        <div className=\"theme-info\">\r\n                            <h2 className=\"theme-title\">{this.props.rooms.activeRoom.title}</h2>\r\n                            <h3 className=\"theme-online-counter\">{this.props.rooms.activeRoom.users.length + 1} {this.props.langProps.online}</h3>\r\n                        </div>\r\n\r\n                        <CustomFab2 id={'dialog-more-actions-'+this.props.rooms.activeRoom._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab2>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={\r\n                        this.props.rooms.activeRoom.ownerId === this.props.user._id ? [\r\n                            {text: this.props.langProps.invite_friends, action: () => {\r\n                                this.props.history.push({\r\n                                    search: '?act=invite'\r\n                                })\r\n                            }},\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                            {\r\n                                text: this.props.langProps.edit_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=editRoom'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {\r\n                                text: this.props.langProps.delete_room,\r\n                                action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=deleteRoom'\r\n                                    })\r\n                                }\r\n                            }\r\n                        ] : [\r\n                            {\r\n                                text: this.props.langProps.invite_friends, action: () => {\r\n                                    this.props.history.push({\r\n                                        search: '?act=invite'\r\n                                    })\r\n                                }\r\n                            },\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }}\r\n                        ]} from={'dialog-more-actions-'+this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"theme-sidebar\">\r\n                        <Chat \r\n                        messages={this.props.rooms.activeRoom.dialog.messages} \r\n                        type=\"room\" \r\n                        to={this.props.rooms.activeRoom.title} \r\n                        dialogId={this.props.rooms.activeRoom.dialog._id} \r\n                        roomId={this.props.rooms.activeRoom._id} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className={`col-xl-9 col-lg-6 col-md-6 theme-screen ${this.state.act === 'chat' ? 'hide' : 'active'}`}>\r\n                    {this.props.rooms.activeRoom && <Members users={this.props.rooms.activeRoom.users} />}\r\n\r\n                    <div className=\"media-options\">\r\n                        <CustomFab className={`media-option mobile-option`} onClick={() => {this.props.history.push({\r\n                            search: `?act=chat`\r\n                        })}}>\r\n                            {!!this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length && <span style={{right: 0}} className=\"unread-messages-count\">{this.props.rooms.activeRoom.dialog.messages.filter(x => !x.isRead && x.user._id !== this.props.user._id).length}</span>}\r\n                            <ChatBubbleOutlineIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        {!!this.props.rooms.activeRoom.muted && <Tooltip title={`Blocked to ${new Date(this.props.rooms.activeRoom.muted.date).toLocaleString()}`} placement=\"top\"><CustomFab className={`media-option reject`}>\r\n                            <MicOffIcon style={{color: '#fff'}} />\r\n                        </CustomFab></Tooltip>}\r\n                        {!this.props.rooms.activeRoom.muted && <CustomFab className={`media-option ${this.props.media.micOn ? 'active' : ''}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicIcon style={{color: this.props.media.micOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>}\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option reject`} onClick={() => {this.props.history.push('/')}}>\r\n                            <CallEndIcon style={{color: '#fff'}} />\r\n                        </CustomFab>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Room)))","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nclass Main extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"col-md-9\" style={{order: 2}}></div>\r\n                <div className=\"col-md-9\" style={{order: 4}}></div>            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms,\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Main)\r\n","import { CALL_SET_USER, CALL_SET_STATUS } from \"../constants\"\r\nimport { urlApi } from \"../../config\"\r\nimport SocketController from \"../../Controllers/SocketController\"\r\nimport WebRtcController from \"../../Controllers/WebRtcController\"\r\nimport store from \"../store\"\r\n\r\nexport const call = (user, apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user, status: 'outcoming'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/call`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            id: user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((call) => {\r\n        if(call.error) {\r\n            dispatch({\r\n                type: CALL_SET_STATUS,\r\n                payload: call.error\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nexport const accept = (apiToken) => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_STATUS,\r\n        payload: 'active'\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/accept`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            userId: store.getState().call.user._id,\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    .then((response) => response.json())\r\n    .then((call) => {\r\n        if(call.error) {\r\n            dispatch({\r\n                type: CALL_SET_STATUS,\r\n                payload: call.error\r\n            })\r\n        } else {\r\n            WebRtcController.call(store.getState().call.user._id)\r\n        }\r\n    })\r\n}\r\n\r\nexport const stop = (user, apiToken) => (dispatch) => {\r\n    WebRtcController.stopCall()\r\n\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n\r\n    fetch(`${urlApi}/api/call/stop`, {\r\n        method: \"post\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${apiToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n            socketId: SocketController.getSocketId()\r\n        })\r\n    })\r\n    // .then((response) => response.json())\r\n    .then((call) => {\r\n        // console.log(call)\r\n    })\r\n}\r\n\r\nexport const clear = () => (dispatch) => {\r\n    dispatch({\r\n        type: CALL_SET_USER,\r\n        payload: {user: false, status: 'none'}\r\n    })\r\n}","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport {PageSettings} from '../PageSettings'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as dialogsActions from '../../Redux/actions/dialogs'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// Material\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport Chat from '../../Partials/Chat/Chat';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { withStyles } from '@material-ui/core'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ActionMenu from '../../Partials/ActionMenu'\r\nimport { withLang } from 'react-multi-language'\r\nimport languages from '../../languages'\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst fabStylesCustom = theme => ({\r\n    root: {\r\n        backgroundColor: '#fff',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        width: 36,\r\n        height: 36,\r\n        boxShadow: 'none!important',\r\n        marginRight: '14px',\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabStyles)(Fab);\r\nconst CustomFab = withStyles(fabStylesCustom)(Fab);\r\n\r\nclass Dialog extends React.PureComponent {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        showBtnAdd: true,\r\n        scrollTop: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(true)\r\n        \r\n        if(window.innerWidth < 769)\r\n            this.context.toggleHeader(false)\r\n\r\n        if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)) {\r\n            this.props.dialogsActions.dialogGet(this.props.match.params.id, this.props.user.apiToken)\r\n        } else {\r\n            this.props.dialogsActions.updateOnline(this.props.match.params.id, this.props.user.apiToken)\r\n            if(!this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id).getted)\r\n                this.props.dialogsActions.dialogLoad(this.props.match.params.id, this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    render() {    \r\n        let dialog = this.props.dialogs.dialogs.find(dialog => dialog.user._id === this.props.match.params.id)\r\n\r\n        return (\r\n            <> \r\n                {dialog && !dialog.isNotFound && <><div className=\"col-xl-9 col-lg-6 col-md-6 dialog-header\" style={{order: 2}}>\r\n                        <IconButton className=\"back-btn\" onClick={() => {\r\n                            this.props.history.push('/')\r\n                        }}>\r\n                            <ArrowBackIcon fontSize=\"small\" style={{color: '#008FF7'}} />\r\n                        </IconButton>\r\n                     <><div style={{display: 'contents'}} onClick={() => {\r\n                         this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                         })\r\n                     }}><Avatar style={{\r\n                        width: 36, \r\n                        height: 36, \r\n                        fontSize: 14, \r\n                        fontWeight: 600, \r\n                        backgroundColor: `rgb(${dialog.user.color})`\r\n                    }} \r\n                    name={dialog.user.name.first.charAt(0) + dialog.user.name.last.charAt(0)} \r\n                    avatar={dialog.user.avatar ? dialog.user.avatar : false}\r\n                    /></div>\r\n                    <div className=\"user-info col\" onClick={() => {\r\n                        this.props.history.push({\r\n                            search: `?user=${dialog.user._id}`\r\n                        })\r\n                    }}>\r\n                        <p className=\"user-name\">{`${dialog.user.name.first} ${dialog.user.name.last}`}</p>\r\n                        {!dialog.user.online && <p className=\"last-message\">{OnlineDate(dialog.user.onlineAt)}</p>}\r\n                        {dialog.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>{this.props.langProps.online}</p>}\r\n                    </div></>\r\n\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        {dialog.user._id !== this.props.user._id && this.props.call.status === 'none' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                            this.props.callActions.call(dialog.user, this.props.user.apiToken)\r\n                        }}>\r\n                            <CallIcon style={{color: '#fff'}} />\r\n                        </CallFab>}\r\n                        \r\n                        <CustomFab id={'dialog-more-actions-'+dialog._id} color=\"primary\" size=\"small\" aria-label=\"more\">\r\n                            <MoreVertIcon style={{color: '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <ActionMenu event=\"click\" bottom={true} right={true} actions={[\r\n                            {text: this.props.langProps.show_investments, action: () => {\r\n                                this.props.history.push({\r\n                                    search: `?modal=investments`\r\n                                })\r\n                            }},\r\n                        ]} from={'dialog-more-actions-'+dialog._id} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                    <Chat \r\n                        messages={dialog.messages}\r\n                        loading={dialog && !dialog.getted} \r\n                        type=\"dialog\" \r\n                        userName={dialog.user.name.first}\r\n                        typing={dialog.typing}\r\n                        userId={dialog.user._id}\r\n                        to={dialog.user.name.first} \r\n                        dialogId={dialog._id}\r\n                        dialog={dialog}\r\n                    />\r\n                </div></>}\r\n\r\n                {dialog && dialog.isNotFound && <>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 2}}></div>\r\n                    <div className=\"col-xl-9 col-lg-6 col-md-6\" style={{order: 4}}>\r\n                        <div className=\"data-empty\">\r\n                            <SearchIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                            <p>{this.props.langProps.user_not_found}</p>\r\n                        </div>\r\n                    </div>\r\n                </>}     \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        dialogsActions: bindActionCreators(dialogsActions, dispatch),\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Dialog)))\r\n","// App\r\nimport React from 'react'\r\n\r\nimport {PageSettings} from '../PageSettings'\r\nimport '../../Css/Partials/Payment.css'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport { urlApi } from '../../config';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Payment extends React.Component {\r\n    static contextType = PageSettings;\r\n\r\n    state = {\r\n        isFetching: true,\r\n        tariffs: [],\r\n        redirect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.context.toggleHeader(false)\r\n\r\n        fetch(`${urlApi}/api/payment/get-all`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((tariffs) => {\r\n            this.setState({isFetching: false, tariffs})\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.context.toggleHeader(false)\r\n    }\r\n\r\n    buy(tariffId) {\r\n        this.setState({isFetching: true})\r\n        fetch(`${urlApi}/api/payment/buy`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                tariffId\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((answer) => {\r\n            if(!answer.error) {\r\n                this.setState({isFetching: false})\r\n                this.props.history.push('/')\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <> \r\n                <div className=\"payment-page\">\r\n                    <h2 className=\"payment-title\">Hi {this.props.user.name.first}</h2>\r\n                    <p className=\"payment-subtitle\">Pick a plan to continue</p>\r\n\r\n                    <div className=\"payment-tariffs\">\r\n                        {this.state.isFetching && <CircularProgress style={{\r\n                            color: '#fff',\r\n                            position: 'absolute',\r\n                            left: 0,\r\n                            right: 0,\r\n                            margin: 'auto',\r\n                            top: 'calc(50% - 20px)'\r\n                        }} />}\r\n\r\n                        {!this.state.isFetching && <div className=\"row\">\r\n                            {this.state.tariffs.map(tariff => {\r\n                                return <div className=\"col-12 col-md-6 col-lg-3 col-xl-2 payment-tariff-container\">\r\n                                    <div className=\"payment-tariff\">\r\n                                        <p className=\"payment-tariff-title\">{tariff.title}</p>\r\n                                        <p className=\"payment-tariff-price\">{tariff.price === 0 ? \"Free\" : tariff.price}</p>\r\n\r\n                                        <button className=\"button-gray\" onClick={() => {\r\n                                            this.buy(tariff._id)\r\n                                        }} style={{width: '80%', margin: '0 10% 0 10%'}}>Buy</button>\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                        </div>}\r\n                    </div>\r\n                </div>        \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Payment))\r\n","import React from 'react'\r\n\r\nimport Login from '../Pages/Auth/Login'\r\nimport Register from '../Pages/Auth/Register'\r\n\r\nimport Languages from '../Sidebar/Languages'\r\nimport Room from '../Pages/User/Room';\r\nimport Main from '../Pages/User/Main';\r\nimport Dialog from '../Pages/User/Dialog';\r\nimport Payment from '../Pages/User/Payment';\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Авторизация',\r\n        component: () => <Login />\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        type: 'auth',\r\n        title: 'Регистрация',\r\n        component: () => <Register />\r\n    },\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Home',\r\n        component: () => <Main />\r\n    },\r\n    {\r\n        path: '/languages',\r\n        exact: true,\r\n        type: 'user',\r\n        title: 'Languages',\r\n        component: () => <Languages />\r\n    },\r\n    {\r\n        path: '/chats/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Dialog key={window.location.pathname} />\r\n    },\r\n    {\r\n        path: '/rooms/:id',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Room />\r\n    },\r\n    {\r\n        path: '/payment',\r\n        exact: true,\r\n        type: 'user',\r\n        title: '',\r\n        component: () => <Payment />\r\n    },\r\n]\r\n\r\nexport default routes","// App\r\nimport React from 'react'\r\n\r\n// Router\r\n// import {\r\n//     BrowserRouter as Router,\r\n// } from \"react-router-dom\"\r\n\r\nclass NoMatch extends React.Component {\r\n    render() {\r\n        return (\r\n            404\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch\r\n","// App\r\nimport React from 'react'\r\n\r\nimport Avatar from '../User/Avatar'\r\nimport '../../Css/Partials/RoomItem.css'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// Material\r\nimport Button from '@material-ui/core/Button';\r\nimport { OnlineDate } from '../../Controllers/TimeController';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles, Checkbox } from '@material-ui/core';\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass UserItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <Button className={`user-item`} onClick={() => {this.props.onClick(this.props.user._id)}}>\r\n                <Avatar \r\n                avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                style={{minWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                name={this.props.user.name.first.charAt(0) + this.props.user.name.last.charAt(0)} />\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap', width: 'calc(100% - 82px)'}}>\r\n                    <p className=\"user-name\">{`${this.props.user.name.first} ${this.props.user.name.last}`}</p>\r\n                    {!this.props.user.online && <p className=\"last-message\">{OnlineDate(this.props.user.onlineAt)}</p>}\r\n                    {this.props.user.online && <p className=\"last-message\" style={{color: '#35E551'}}>online</p>}\r\n                </div>\r\n\r\n                {this.props.type === 'select' && <CustomCheckbox checked={this.props.selected} />}\r\n            </Button>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        myUser: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(UserItem))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport languages from '../../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nlet waitSearch = false\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        q: '',\r\n        searchResult: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.users.friends.getted) {\r\n            this.props.usersActions.friendsGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/user/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(searchResult => {\r\n                    this.setState({searchResult})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({searchResult: []})\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n            {!this.state.searchResult.length && !this.state.q.length && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                {this.props.users.friends.users.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.props.users.friends.users.length && !this.props.users.friends.isFetching) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.you_dont_have_friends}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n\r\n            {(!!this.state.searchResult.length || !!this.state.q.length) && <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                onScroll={() => {this.onScroll()}}\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {/* {this.props.users.friends.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />} */}\r\n                {this.state.searchResult.map((user, index) => {\r\n                    return (\r\n                        <UserItem key={index} type={this.props.type} selected={this.props.type === 'select' ? !!this.props.selectUsers.find(x => x === user._id) : false} onClick={(id) => {this.props.onClick(id)}} user={user} />\r\n                    )\r\n                })}\r\n                {(!this.state.searchResult.length) && <div className=\"data-empty\">\r\n                    <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                    <p>{this.props.langProps.users_not_found}</p>\r\n                </div>}\r\n            </Scrollbars>}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport SocketController from '../Controllers/SocketController';\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: '',\r\n        isPrivate: false,\r\n        step: 'create',\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/create`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n                lang: this.props.user.roomLang,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors, step: 'create'})\r\n            } else {\r\n                this.props.roomsActions.roomsAdd(room)\r\n                SocketController.createRoom({room, lang: this.props.user.roomLang})\r\n                this.props.history.push(`/rooms/${room._id}`)\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={this.state.step === 'create' ? customStylesModalCreate : customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            {this.state.step === 'create' && <h2 className=\"modal-title\">{this.props.langProps.new_room}</h2>}\r\n            {this.state.step === 'invite' && <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>}\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                {this.state.step === 'create' && <>\r\n                    <input \r\n                        value={this.state.title} \r\n                        onChange={(e) => {this.setState({title: e.target.value})}} \r\n                        className=\"input-field\" \r\n                        type=\"text\"\r\n                        style={{marginBottom: 10}} \r\n                        placeholder={this.props.langProps.title}\r\n                        maxLength={50}\r\n                    />\r\n                    {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                        {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                    </span>}\r\n\r\n                    <FormControlLabel \r\n                        control={\r\n                            <CustomCheckbox\r\n                                checked={this.state.isPrivate}\r\n                                onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                            />\r\n                        }\r\n                        style={{color: '#667788'}}\r\n                        label={this.props.langProps.private_room}\r\n                    />\r\n\r\n                    <button className=\"button-blue\" onClick={() => {this.setState({step: 'invite'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.next}</button>\r\n                </>}\r\n\r\n                {this.state.step === 'invite' && <>\r\n                    <Friends onClick={(id) => {\r\n                        if(!this.state.selectUsers.find(x => x === id))\r\n                            this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                        else \r\n                            this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                    }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                    <button className=\"button-gray\" onClick={() => {this.setState({step: 'create'})}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n                    <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.start}</button>\r\n                </>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { withStyles } from '@material-ui/core'\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as callActions from '../../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport CheckOutlinedIcon from '@material-ui/icons/CheckOutlined';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport store from '../../Redux/store';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass OtherUser extends React.Component {\r\n    render() {\r\n        return <>\r\n                <span style={{cursor: 'pointer'}} onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=slider`\r\n                    })\r\n                    store.dispatch({\r\n                        type: SLIDER_SET,\r\n                        payload: {\r\n                            images: [{path: this.props.user.avatar.original}],\r\n                            index: 0\r\n                        }\r\n                    })\r\n                }}><Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)} \r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                /></span>\r\n\r\n                <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n                <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n                \r\n                <>\r\n                    <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            if(`/chats/${this.props.user._id}` === this.props.history.location.pathname)\r\n                                e.preventDefault()\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <ChatBubbleOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.message}</p>\r\n                    </div>    \r\n\r\n                    {this.props.call.status === 'none' && <div className=\"user-btn\">\r\n                        <NavLink style={{textDecoration: 'none'}} onClick={(e) => {\r\n                            this.props.callActions.call(this.props.user, this.props.myUser.apiToken)\r\n                        }} className=\"dialog-link\" to={`/chats/${this.props.user._id}`}>\r\n                            <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {}}>\r\n                                <CallIcon style={{color: '#99AABB'}} />\r\n                            </CustomFab>\r\n                        </NavLink>\r\n                        <p>{this.props.langProps.call}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 0 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.sendRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <PersonAddOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.plus_friend}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 2 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.acceptRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CheckOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.accept}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.user.friendStatus === 2 || this.props.user.friendStatus === 1) && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <CloseOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.decline}</p>\r\n                    </div>}\r\n\r\n                    {this.props.user.friendStatus === 3 && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.usersActions.removeRequest(this.props.userId, this.props.myUser.apiToken)\r\n                        }}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>{this.props.langProps.remove}</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?mute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicOffIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Mute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unmute=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <MicIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unmute</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?banroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOutlinedIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Ban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?unbanroom=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <LockOpenIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Unban room</p>\r\n                    </div>}\r\n\r\n                    {(this.props.myUser.role === 'moder' || this.props.myUser.role === 'admin') && <div className=\"user-btn\">\r\n                        <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?sendwarning=${this.props.user._id}`\r\n                            })\r\n                        }}>\r\n                            <WarningIcon style={{color: '#99AABB'}} />\r\n                        </CustomFab>\r\n                        <p>Send warning</p>\r\n                    </div>}\r\n                </>\r\n            </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        myUser: state.user,\r\n        call: state.call,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        callActions: bindActionCreators(callActions, dispatch)\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(OtherUser)))","// App\r\nimport React from 'react'\r\n\r\n// Material\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BookOutlinedIcon from '@material-ui/icons/BookOutlined';\r\nimport { withStyles } from '@material-ui/core'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport * as userActions from '../../Redux/actions/user'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Avatar from '../../Partials/User/Avatar';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\r\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../../languages';\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        boxShadow: 'none!important',\r\n        '&:hover': {\r\n            backgroundColor: '#008FF7',\r\n        },\r\n        '&:hover svg': {\r\n            color: '#fff!important'\r\n        },\r\n        '& svg': {\r\n            transition: 'all 0.25s'\r\n        },\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nclass MyUser extends React.Component {\r\n    state = {\r\n        activeTab: 'main'\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <label style={{cursor: 'pointer'}} className=\"upload-avatar\">\r\n                <Avatar \r\n                    style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.user.color})`}} \r\n                    name={this.props.user.name.first.charAt(0)+this.props.user.name.last.charAt(0)}\r\n                    avatar={this.props.user.avatar ? this.props.user.avatar : false}\r\n                />\r\n                <AddAPhotoIcon className=\"upload-avatar-icon\" style={{color: '#fff'}} />\r\n                <div className=\"upload-avatar-background\"></div>\r\n                <input \r\n                    type=\"file\"\r\n                    onChange={(e) => {this.props.userActions.uploadAvatar(e, this.props.user.apiToken)}}\r\n                    id=\"uploadAvatar\" \r\n                    style={{display: 'none'}} \r\n                    accept=\"image/jpeg,image/png\" \r\n                />\r\n            </label>\r\n\r\n            <p className=\"user-profile-name\">{this.props.user.name.first} {this.props.user.name.last}</p>\r\n            <p className=\"user-profile-city\">{this.props.user.city ? this.props.user.city : this.props.langProps.not_indicated}</p>\r\n            \r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=settings`\r\n                    })\r\n                }}>\r\n                    <SettingsOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.settings}</p>\r\n            </div>\r\n\r\n            <div className=\"user-btn\">\r\n                <CustomFab color=\"primary\" size=\"small\" aria-label=\"add\" onClick={() => {\r\n                    this.props.history.push({\r\n                        search: `?modal=contacts`\r\n                    })\r\n                }}>\r\n                    <BookOutlinedIcon style={{color: '#99AABB'}} />\r\n                </CustomFab>\r\n                <p>{this.props.langProps.contacts}</p>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(MyUser)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport OtherUser from './userPartials/otherUser';\r\nimport MyUser from './userPartials/myUser';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : '300px',\r\n        minHeight: 100\r\n    }\r\n};\r\n\r\nclass User extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.users.find(user => user._id === this.props.userId) && this.props.user._id !== this.props.userId) {\r\n            this.props.usersActions.userGet(this.props.userId, this.props.user.apiToken)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let user = this.props.users.users.find(user => user._id === this.props.userId)\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"User\"\r\n        >\r\n            {user && \r\n                <OtherUser userId={this.props.userId} user={user} />\r\n            }\r\n\r\n            {!user && this.props.user._id !== this.props.userId && <CircularProgress style={{\r\n                color: '#008FF7',\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                margin: 'auto',\r\n                top: 'calc(50% - 20px)'\r\n            }} />}\r\n\r\n            {this.props.user._id === this.props.userId && \r\n                <MyUser />\r\n            }\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(User))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.requested.getted) {\r\n            this.props.usersActions.requestedGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.requested.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.requested.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.requested.users.length && !this.props.users.requested.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Incoming requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport UserItem from '../../Partials/User/UserItem';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nclass Contacts extends React.Component {\r\n    componentDidMount() {\r\n        if(!this.props.users.pending.getted) {\r\n            this.props.usersActions.pendingGet(this.props.user.apiToken)\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.props.users.pending.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.props.users.pending.users.map((user, index) => {\r\n                return (\r\n                    <UserItem key={index} user={user} onClick={(id) => {this.props.onClick(id)}} />\r\n                )\r\n            })}\r\n            {(!this.props.users.pending.users.length && !this.props.users.pending.isFetching) && <div className=\"data-empty\">\r\n                <GroupIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Outgoing requests will be displayed here</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Friends from './contactsPartials/Friends';\r\nimport Inbox from './contactsPartials/Inbox';\r\nimport Outbox from './contactsPartials/Outbox';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'friends'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.contacts}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'friends' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'friends'})}}>{this.props.langProps.friends}</span>\r\n                <span className={this.state.activeTab === 'inbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'inbox'})}}>{this.props.langProps.inbox}</span>\r\n                <span className={this.state.activeTab === 'outbox' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'outbox'})}}>{this.props.langProps.outbox}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'friends' && <Friends onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} type={'normal'} />}\r\n            {this.state.activeTab === 'inbox' && <Inbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n            {this.state.activeTab === 'outbox' && <Outbox onClick={(id) => {\r\n                this.props.history.push({\r\n                    search: `?user=${id}`\r\n                 })\r\n            }} />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateDialog extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.new_chat}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        selectUsers: [],\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/invite`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                selectUsers: this.state.selectUsers\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.setState({selectUsers: []})\r\n            toast(\"Invited sents!\", {\r\n                position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Create room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_users}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <Friends onClick={(id) => {\r\n                    if(!this.state.selectUsers.find(x => x === id))\r\n                        this.setState({selectUsers: [id, ...this.state.selectUsers]})\r\n                    else \r\n                        this.setState({selectUsers: [...this.state.selectUsers.filter(x => x !== id)]})\r\n                }} type={'select'} selectUsers={this.state.selectUsers} />\r\n\r\n                {!this.state.selectUsers.length && <button className=\"button-gray\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n                {!!this.state.selectUsers.length && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.invite}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)'\r\n    }\r\n};\r\n\r\nconst checkBoxStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomCheckbox = withStyles(checkBoxStyles)(Checkbox);\r\n\r\nclass CreateRoom extends React.Component {\r\n    state = {\r\n        title: this.props.rooms.activeRoom.title,\r\n        isPrivate: this.props.rooms.activeRoom.isPrivate,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/room/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id,\r\n                title: this.state.title,\r\n                isPrivate: this.state.isPrivate,\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((room) => {\r\n            if(room.error) {\r\n                this.setState({error: true, errors: room.errors})\r\n            } else {\r\n                this.props.close()\r\n            }\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Edit room\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.edit_room}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.title} \r\n                    onChange={(e) => {this.setState({title: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 10}} \r\n                    placeholder={this.props.langProps.title}\r\n                    maxLength={50}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'title') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'title').msg]} \r\n                </span>}\r\n\r\n                <FormControlLabel \r\n                    control={\r\n                        <CustomCheckbox\r\n                            checked={this.state.isPrivate}\r\n                            onChange={() => {this.setState({isPrivate: !this.state.isPrivate})}} \r\n                        />\r\n                    }\r\n                    style={{color: '#667788'}}\r\n                    label={this.props.langProps.private_room}\r\n                />\r\n\r\n                {this.state.title === this.props.rooms.activeRoom.title && this.state.isPrivate === this.props.rooms.activeRoom.isPrivate && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.close()\r\n                }} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>}\r\n\r\n                {(this.state.title !== this.props.rooms.activeRoom.title || this.state.isPrivate !== this.props.rooms.activeRoom.isPrivate) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.save}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport {urlApi} from '../config'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalCreate = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        flexWrap              : 'wrap'\r\n    }\r\n};\r\n\r\nclass DeleteRoom extends React.Component {\r\n    onSubmit() {\r\n        fetch(`${urlApi}/api/room/delete`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.rooms.activeRoom._id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.close()\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalCreate}\r\n            contentLabel=\"Delete room\"\r\n        >\r\n            <h2 className=\"modal-title\" style={{width: '100%'}}>{this.props.langProps.you_sure}</h2>\r\n            \r\n            <button className=\"button-blue\" onClick={() => {this.props.close()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.back}</button>\r\n            <button className=\"button-gray\" onClick={() => {this.onSubmit()}} style={{width: 'max-content', marginTop: 5}}>{this.props.langProps.delete}</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps)(withRouter(DeleteRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport Friends from './contactsPartials/Friends';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModalInvite = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass CreateRoom extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModalInvite}\r\n            contentLabel=\"Forward messages\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.forward}</h2>\r\n\r\n            <Friends onClick={(id) => {\r\n                this.props.history.push(`/chats/${id}`)\r\n            }} />\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateRoom)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as callActions from '../Redux/actions/call'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CallEndIcon from '@material-ui/icons/CallEnd';\r\nimport MicOffIcon from '@material-ui/icons/MicOff';\r\nimport WebRtcController from '../Controllers/WebRtcController'\r\nimport MusicOffIcon from '@material-ui/icons/MusicOff';\r\nimport VideocamOutlinedIcon from '@material-ui/icons/VideocamOutlined';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst fabCallStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#25D441',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#25D441',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\nconst fabRejectStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#FF4444',\r\n        color: '#fff',\r\n        zIndex: 2,\r\n        width: 40,\r\n        height: 40,\r\n        boxShadow: 'none!important',\r\n        margin: '0 9px',\r\n        '&:hover': {\r\n            backgroundColor: '#FF4444',\r\n            boxShadow: 'none',\r\n        }\r\n    }\r\n})\r\n\r\nconst CallFab = withStyles(fabCallStyles)(Fab);\r\nconst RejectFab = withStyles(fabRejectStyles)(Fab);\r\n\r\nconst fabStyles = theme => ({\r\n    root: {\r\n        backgroundColor: '#EDF0F3',\r\n        color: '#008FF7',\r\n        zIndex: 2,\r\n        margin: '0 9px!important',\r\n        '&:hover': {\r\n            backgroundColor: '#EDF0F3',\r\n        }\r\n    }\r\n})\r\n\r\nconst CustomFab = withStyles(fabStyles)(Fab);\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '260px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst customStylesModalActive = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: 'max-content',\r\n        height: 'max-content',\r\n        top: 70,\r\n        left: 'unset',\r\n        right: 40,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '320px',\r\n        height: 'max-content',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset'\r\n    }\r\n};\r\n\r\nconst customStylesModalActiveFullScreen = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '100vh',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        border: 'none',\r\n        minWidth              : '100%',\r\n        height: '100vh',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '260px',\r\n        padding               : '20px 0',\r\n        position: 'unset',\r\n        alignItems: 'center',\r\n        justifyItems: 'center',\r\n        alignContent: 'center',\r\n    }\r\n};\r\n\r\nclass MediaStream extends React.PureComponent {\r\n    componentDidMount() {\r\n        this.audio.srcObject = this.props.stream\r\n        if(this.props.media === 'video')\r\n            this.video.srcObject = this.props.stream\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <audio ref={ref => {this.audio = ref}} style={{display: 'none'}} autoPlay controls></audio>\r\n            {this.props.media === 'video' && <video className=\"other-video\" ref={ref => {this.video = ref}} autoPlay muted></video>}\r\n        </>\r\n    }\r\n}\r\n\r\nclass CreateDialog extends React.Component {\r\n    state = {\r\n        fullScreen: false\r\n    }\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {\r\n                if(this.props.call.status !== 'outcoming' && this.props.call.status !== 'incoming') {\r\n                    this.props.callActions.clear()\r\n                }\r\n            }}\r\n            style={this.props.call.status === 'active' ? this.state.fullScreen ? customStylesModalActiveFullScreen : customStylesModalActive : customStylesModal}\r\n            contentLabel=\"Call\"\r\n            overlayClassName=\"call-modal\"\r\n        >\r\n            {this.props.call.remoteStream && <MediaStream media={this.props.call.media} key={this.props.call.remoteStream.id+this.props.call.media} stream={this.props.call.remoteStream} />}\r\n            {this.props.call.status !== 'exist' && <>\r\n                {(this.props.call.status === 'outcoming' || this.props.call.status === 'busy' || this.props.call.status === 'canceled') && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.outcoming_call}</h2>}\r\n                {this.props.call.status === 'incoming' && <h2 style={{width: '100%'}} className=\"modal-title\">{this.props.langProps.incoming_call}</h2>}\r\n\r\n                {this.props.call.media === 'audio' && <>\r\n                    <Avatar \r\n                        style={{width: 80, height: 80, fontSize: 28, lineHeight: '28px', fontWeight: 600, backgroundColor: `rgb(${this.props.call.user.color})`}} \r\n                        name={this.props.call.user.name.first.charAt(0)+this.props.call.user.name.last.charAt(0)}\r\n                        avatar={this.props.call.user.avatar ? this.props.call.user.avatar : false}\r\n                    />\r\n\r\n                    <p className=\"user-profile-name\">{this.props.call.user.name.first} {this.props.call.user.name.last}</p>\r\n                    <p className=\"user-profile-city\">{this.props.call.user.city ? this.props.call.user.city : this.props.langProps.not_indicated}</p>\r\n                </>}\r\n\r\n                {this.props.call.media === 'video' && <>\r\n                    <div style={{height: this.state.fullScreen ? 'calc(100% - 80px)' : 200, width: '100%'}}></div>\r\n                </>}\r\n\r\n                {this.props.call.status !== 'busy' && this.props.call.status !== 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20}}>\r\n                    {this.props.call.status === 'active' && <>\r\n                        <CustomFab className={`media-option ${this.props.media.micOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMicrophone()}}>\r\n                            <MicOffIcon style={{color: this.props.media.micOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.musicOn ? '' : 'active'}`} onClick={() => {WebRtcController.toggleMusic()}}>\r\n                            <MusicOffIcon style={{color: this.props.media.musicOn ? '#008FF7' : '#fff'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.props.media.cameraOn ? 'active' : ''}`} onClick={() => {WebRtcController.callToggleCamera()}}>\r\n                            <VideocamOutlinedIcon style={{color: this.props.media.cameraOn ? '#fff' : '#008FF7'}} />\r\n                        </CustomFab>\r\n                        <CustomFab className={`media-option ${this.state.fullScreen ? 'active' : ''}`} onClick={() => {this.setState({fullScreen: !this.state.fullScreen})}}>\r\n                            {!this.state.fullScreen && <FullscreenIcon style={{color: '#008FF7'}} />}\r\n                            {this.state.fullScreen && <FullscreenExitIcon style={{color: '#fff'}} />}\r\n                        </CustomFab>\r\n                    </>}\r\n\r\n                    {this.props.call.status === 'incoming' && <CallFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.accept(this.props.user.apiToken)\r\n                    }}>\r\n                        <CallIcon style={{color: '#fff'}} />\r\n                    </CallFab>}\r\n\r\n                    <RejectFab color=\"primary\" size=\"small\" aria-label=\"call\" onClick={() => {\r\n                        this.props.callActions.stop(this.props.call.user, this.props.user.apiToken)\r\n                    }}>\r\n                        <CallEndIcon style={{color: '#fff'}} />\r\n                    </RejectFab>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'busy' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    The user is busy... <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n\r\n                {this.props.call.status === 'canceled' && <div style={{width: '100%', textAlign: 'center', marginTop: 20, marginBottom: 20, color: '#999999', fontSize: 14}}>\r\n                    {this.props.call.user.name.first} canceled your call <br></br><a style={{color: '#008FF7', cursor: 'pointer'}} onClick={() => {this.props.callActions.clear()}}>Close</a>\r\n                </div>}\r\n            </>}\r\n            {this.props.call.status === 'dont_have_payment' && <>\r\n                {this.props.callActions.clear()}\r\n                <Redirect to=\"/payment\" />\r\n            </>}\r\n            {this.props.call.status === 'exist' && <>\r\n                \r\n                <ErrorOutlineIcon style={{color: '#FF3333', fontSize: 60}} />\r\n                <h2 className=\"modal-title\" style={{width: '100%'}}>Error</h2>\r\n                <p className=\"modal-text\" style={{width: '100%', textAlign: 'center'}}>have_active_call</p>\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user,\r\n        call: state.call,\r\n        media: state.media\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        callActions: bindActionCreators(callActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(CreateDialog)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport '../../Css/Partials/Slider.css'\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        padding               : '0',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        background            : 'rgba(0, 0, 0, 0.5);',\r\n        border                : 'none',\r\n        width: '100%',\r\n        height: '100vh'\r\n    }\r\n};\r\n\r\n\r\nclass Slider extends React.Component {\r\n    state = {\r\n        index: this.props.index\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Slider\"\r\n        >\r\n            <div className=\"slider-close\" onClick={() => {\r\n                this.props.close()\r\n            }}>\r\n                <CloseIcon style={{color: '#fff', fontSize: 30, opacity: 0.5}} />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index-1] && <div className=\"slider-prev\" onClick={() => {\r\n                this.setState({index: this.state.index-1})\r\n            }}>\r\n                <NavigateBeforeIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n\r\n            <div className=\"slider-image-container\" onClick={() => {this.props.close()}}>\r\n                <img className=\"slider-image\" src={this.props.images[this.state.index].path} alt=\"Media from user\" />\r\n            </div>\r\n\r\n            {this.props.images[this.state.index+1] && <div className=\"slider-next\" onClick={() => {\r\n                this.setState({index: this.state.index+1})\r\n            }}>\r\n                <NavigateNextIcon style={{color: '#fff', fontSize: 45, opacity: 0.5}} />\r\n            </div>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nexport default Slider","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport { SLIDER_SET } from '../../Redux/constants';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        images: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'image'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(images => {\r\n                if(!images.error) {\r\n                    images = images.map(x => x.data)\r\n                    \r\n                    this.setState({images, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.images.map((image, index) => {\r\n                return (\r\n                    <div className=\"investment-image\">\r\n                        <img key={index} alt={image.name} style={{cursor: 'pointer'}} onClick={() => {\r\n                            this.props.history.push({\r\n                                search: `?modal=slider`\r\n                            })\r\n                            this.props.dispatch({\r\n                                type: SLIDER_SET,\r\n                                payload: {\r\n                                    images: this.state.images,\r\n                                    index\r\n                                }\r\n                            })\r\n                        }} src={image.path} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.images.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <PhotoLibraryIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed images from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport Audio from '../../Partials/Chat/Audio';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        sounds: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'sound'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(sounds => {\r\n                if(!sounds.error) {\r\n                    sounds = sounds.map(x => x.data)\r\n                    \r\n                    this.setState({sounds, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n            {this.state.sounds.map((sound, index) => {\r\n                return (\r\n                    <Audio\r\n                        key={index}\r\n                        fileName={sound.name}\r\n                        src={sound.path}\r\n                    />\r\n                )\r\n            })}\r\n            {(!this.state.sounds.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <AudiotrackIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed sounds from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Material\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { urlApi } from '../../config';\r\nimport InsertDriveFileOutlinedIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nclass Images extends React.Component {\r\n    state = {\r\n        isFetching: true,\r\n        files: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id) {\r\n            let type = this.props.history.location.pathname.substring(1,5)\r\n            this.setState({isFetching: true})\r\n            let body\r\n            if(type === 'chat') {\r\n                body = {\r\n                    userId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            } else {\r\n                body = {\r\n                    roomId: this.props.match.params.id,\r\n                    type: 'file'\r\n                }\r\n            }\r\n            fetch(`${urlApi}/api/${type === 'chat' ? 'dialog' : 'room'}/get-investments`, {\r\n                method: \"post\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            .then(response => response.json())\r\n            .then(files => {\r\n                if(!files.error) {\r\n                    files = files.map(x => x.data)\r\n                    \r\n                    this.setState({files, isFetching: false})\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onScroll() {\r\n\r\n    }\r\n    \r\n    render() {\r\n        return <Scrollbars\r\n            ref={(ref) => {this.roomsBlock = ref}}\r\n            renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n            renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n            className=\"scroll investment-images\"\r\n            onScroll={() => {this.onScroll()}}\r\n            style={{height: 340, marginLeft: 15}}\r\n            autoHide\r\n        >\r\n            {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)',\r\n                }} />}\r\n            {this.state.files.map((file, index) => {\r\n                return (\r\n                    <div className=\"message-file\" style={{cursor: 'pointer'}} key={index} onClick={(e) => {\r\n                        window.open(file.path, '_self');\r\n                    }}>\r\n                        <InsertDriveFileOutlinedIcon className=\"file-icon\" style={{color: '#008FF7'}} />\r\n                        <div className=\"message-file-info\">\r\n                            <p className=\"message-file-name\">{file.name}</p>\r\n                            <p className=\"message-file-size\">{file.size > 999 ? (file.size / 1000).toFixed(1) + ' mb' : Math.ceil(file.size) + ' kb'}</p>\r\n                        </div>\r\n                        <GetAppIcon className=\"download-icon\" style={{color: '#008FF7'}} />\r\n                    </div>\r\n                )\r\n            })}\r\n            {(!this.state.files.length && !this.state.isFetching) && <div className=\"data-empty\">\r\n                <FileCopyIcon style={{color: '#B8C3CF', fontSize: 54, margin: '0 auto', display: 'block'}} />\r\n\r\n                <p>Here will placed files from this dialog</p>\r\n            </div>}\r\n        </Scrollbars>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Images))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport Images from './investmentsPartials/Images';\r\nimport Sounds from './investmentsPartials/Sounds';\r\nimport Files from './investmentsPartials/Files';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Contacts extends React.Component {\r\n    state = {\r\n        activeTab: 'images'\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.investments}</h2>\r\n\r\n            <div className=\"contacts-tabs\">\r\n                <span className={this.state.activeTab === 'images' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'images'})}}>{this.props.langProps.photos}</span>\r\n                <span className={this.state.activeTab === 'sounds' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'sounds'})}}>{this.props.langProps.sounds}</span>\r\n                <span className={this.state.activeTab === 'files' ? 'active' : ''} onClick={() => {this.setState({activeTab: 'files'})}}>{this.props.langProps.files}</span>\r\n            </div>\r\n\r\n            {this.state.activeTab === 'images' && <Images />}\r\n            {this.state.activeTab === 'sounds' && <Sounds />}\r\n            {this.state.activeTab === 'files' && <Files />}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(Contacts)))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Settings\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.settings}</h2>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=profile'\r\n                })\r\n            }}>{this.props.langProps.change_profile}</p>\r\n            <p className=\"settings-item\" onClick={() => {\r\n                this.props.history.push({\r\n                    search: '?modal=language'\r\n                })\r\n            }}>{this.props.langProps.language}</p>\r\n\r\n            <p className=\"settings-item\" onClick={() => {\r\n                const { cookies } = this.props;\r\n                cookies.remove(\"apiToken\", { path: \"/\" });\r\n                window.location.reload()\r\n            }}>{this.props.langProps.logout}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport store from '../Redux/store';\r\nimport { USER_EDIT } from '../Redux/constants';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        firstName: this.props.user.name.first,\r\n        lastName: this.props.user.name.last,\r\n        city: this.props.user.city,\r\n        error: false,\r\n        errors: []\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n        e.preventDefault()\r\n\r\n        fetch(`${urlApi}/api/user/edit`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName\r\n            })\r\n        })\r\n        .then((response) => response.json())\r\n        .then((user) => {\r\n            if(user.error) {\r\n                this.setState({error: true, errors: user.errors})\r\n            } else {\r\n                store.dispatch({\r\n                    type: USER_EDIT,\r\n                    payload: {\r\n                        firstName: this.state.firstName,\r\n                        lastName: this.state.lastName,\r\n                        city: this.state.city\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.change_profile}</h2>\r\n\r\n            <form style={{display: 'contents'}} onSubmit={(e) => {this.onSubmit(e)}}>\r\n                <input \r\n                    value={this.state.firstName} \r\n                    onChange={(e) => {this.setState({firstName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.firstName}\r\n                    style={{marginTop: 0}} \r\n                />\r\n                {this.state.errors.find(value => value.param === 'firstName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'firstName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.lastName} \r\n                    onChange={(e) => {this.setState({lastName: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    style={{marginBottom: 0}} \r\n                    placeholder={this.props.langProps.lastName}\r\n                />\r\n                {this.state.errors.find(value => value.param === 'lastName') && <span className=\"input-error-label\">\r\n                    {this.props.langProps[this.state.errors.find(value => value.param === 'lastName').msg]} \r\n                </span>}\r\n\r\n                <input \r\n                    value={this.state.city} \r\n                    onChange={(e) => {this.setState({city: e.target.value})}} \r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    placeholder={this.props.langProps.city}\r\n                />\r\n\r\n                {(this.state.firstName !== this.props.user.name.first || this.state.lastName !== this.props.user.name.last || this.state.city !== this.props.user.city) && <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.save}</button>}\r\n                {(this.state.firstName === this.props.user.name.first && this.state.lastName === this.props.user.name.last && this.state.city === this.props.user.city) && <button className=\"button-gray\" onClick={() => {\r\n                        this.props.history.goBack()\r\n                    }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </form>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_LANG } from '../Redux/constants';\r\nimport { urlApi } from '../config';\r\nimport { withLang } from 'react-multi-language';\r\nimport languages from '../languages';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nclass Settings extends React.Component {\r\n    setLang(lang) {\r\n        store.dispatch({\r\n            type: USER_SET_LANG,\r\n            payload: lang\r\n        })\r\n\r\n        fetch(`${urlApi}/api/user/set-lang`, {\r\n            method: \"post\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                lang\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >\r\n            <h2 className=\"modal-title\">{this.props.langProps.select_language}</h2>\r\n\r\n            <p className={`settings-item ${this.props.user.lang === 'en' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'en')\r\n                this.setLang('en')\r\n            }}>{this.props.langProps.english}</p>\r\n            <p className={`settings-item ${this.props.user.lang === 'ru' ? 'active' : ''}`} onClick={() => {\r\n                if(this.props.user.lang !== 'ru')\r\n                this.setLang('ru')\r\n            }}>{this.props.langProps.russian}</p>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Mute</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Mute</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-mute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unmute`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unmute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unmute</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have mutes rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unmute</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n        time: 0,\r\n        q: '',\r\n        step: 'room', // room, time\r\n    }\r\n\r\n    onSearch(e) {\r\n        let q = e.target.value\r\n        this.setState({q})\r\n\r\n        if(waitSearch)\r\n            clearTimeout(waitSearch)\r\n\r\n        if(!!q.length && /\\S/.test(q)) {\r\n            this.setState({isFetching: true})\r\n            waitSearch = setTimeout(() => {\r\n                fetch(`${urlApi}/api/room/search`, {\r\n                    method: \"post\",\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        Authorization: `Bearer ${this.props.user.apiToken}`,\r\n                    },\r\n                    body: JSON.stringify({\r\n                        q: this.state.q\r\n                    })\r\n                })\r\n                .then(response => response.json())\r\n                .then(rooms => {\r\n                    this.setState({isFetching: false})\r\n                    this.setState({rooms})\r\n                })\r\n            }, 500);\r\n        }\r\n\r\n        if(!q.length)\r\n            this.setState({rooms: []})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/ban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId,\r\n                time: this.state.time\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Mute sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Ban room</h2>\r\n\r\n            {this.state.step === 'room' && <>\r\n                <input type=\"text\" value={this.state.q} onChange={(e) => {this.onSearch(e)}} className=\"friends-search-input\" placeholder={this.props.langProps.search} />\r\n\r\n                <Scrollbars\r\n                    ref={(ref) => {this.roomsBlock = ref}}\r\n                    renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                    renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                    className=\"scroll\"\r\n                    style={{height: 340}}\r\n                    autoHide\r\n                >\r\n                    {this.state.isFetching && <CircularProgress style={{\r\n                        color: '#008FF7',\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        margin: 'auto',\r\n                        top: 'calc(50% - 20px)'\r\n                    }} />}\r\n                    {!!this.state.q.length && !this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                        return (\r\n                            <RoomItem selectRoom={(id) => {\r\n                                this.setState({selectRoomId: id})\r\n                            }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                        )\r\n                    })}\r\n                    {!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Start typing room name</p>\r\n                    </div>}\r\n\r\n                    {!!this.state.q.length && !this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                        <p>Rooms not find</p>\r\n                    </div>}\r\n                </Scrollbars>\r\n\r\n                {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                    this.setState({step: 'time'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.next}</button>}\r\n                {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                    this.props.history.goBack()\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n            \r\n\r\n            {this.state.step === 'time' && <>\r\n                {timeStamps.map((time, index) => \r\n                        <Button key={index} className=\"room-item\" style={{height: 40}} onClick={() => {\r\n                            this.setState({time: time.time})\r\n                        }}>\r\n                            <div style={{\r\n                                flexGrow: 1,\r\n                                minWidth: 0,\r\n                                maxWidth: '100%',\r\n                                paddingRight: 10\r\n                            }}>\r\n                                <p><span>{time.label}</span></p>\r\n                            </div>\r\n                            <CustomRadio\r\n                                checked={this.state.time === time.time}\r\n                            />\r\n                        </Button>\r\n                )}\r\n                {!!this.state.time && <button className=\"button-blue\" onClick={() => {\r\n                    this.onSubmit()\r\n                }} style={{width: 'max-content', marginTop: 25}}>Ban</button>}\r\n                {!this.state.time && <button className=\"button-gray\" onClick={() => {\r\n                    this.setState({step: 'room'})\r\n                }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n            </>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: true,\r\n        rooms: [],\r\n        selectRoomId: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${urlApi}/api/user/get-roomban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(limits => {\r\n            let rooms = limits.map(x => x.room)\r\n            \r\n            this.setState({isFetching: false, rooms})\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/room/unban`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                roomId: this.state.selectRoomId,\r\n                userId: this.props.userId\r\n            })\r\n        })\r\n        .then(() => {\r\n            toast.success(\"Unban room sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n            this.setState({rooms: [...this.state.rooms.filter(x => x._id !== this.state.selectRoomId)], selectRoomId: 0})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Unban room</h2>\r\n\r\n            <Scrollbars\r\n                ref={(ref) => {this.roomsBlock = ref}}\r\n                renderTrackVertical={props => <div className=\"track-vertical\"/>}\r\n                renderThumbVertical={props => <div className=\"thumb-vertical\"/>}\r\n                className=\"scroll\"\r\n                style={{height: 340}}\r\n                autoHide\r\n            >\r\n                {this.state.isFetching && <CircularProgress style={{\r\n                    color: '#008FF7',\r\n                    position: 'absolute',\r\n                    left: 0,\r\n                    right: 0,\r\n                    margin: 'auto',\r\n                    top: 'calc(50% - 20px)'\r\n                }} />}\r\n                {!this.state.isFetching && this.state.rooms.map((room, index) => {\r\n                    return (\r\n                        <RoomItem selectRoom={(id) => {\r\n                            this.setState({selectRoomId: id})\r\n                        }} key={index} room={room} selectRoomId={this.state.selectRoomId} />\r\n                    )\r\n                })}\r\n                {!this.state.isFetching && !this.state.rooms.length && <div className=\"data-empty\">\r\n                    <p>This user dont have ban rooms</p>\r\n                </div>}\r\n            </Scrollbars>\r\n\r\n            {!!this.state.selectRoomId && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Unban</button>}\r\n            {!this.state.selectRoomId && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Material\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../Redux/actions/users'\r\nimport * as roomsActions from '../Redux/actions/rooms'\r\nimport { bindActionCreators } from 'redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport { CircularProgress, Button, Radio, withStyles } from '@material-ui/core'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { urlApi, timeStamps } from '../config';\r\nimport languages from '../languages';\r\nimport { withLang } from 'react-multi-language';\r\nimport Avatar from '../Partials/User/Avatar';\r\nimport { toast } from 'react-toastify';\r\n\r\nlet waitSearch = false\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 4\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        display               : 'flex',\r\n        justifyContent        : 'center',\r\n        flexWrap              : 'wrap',\r\n        width                 : 'max-content',\r\n        maxWidth              : '320px',\r\n        padding               : '20px 0'\r\n    }\r\n};\r\n\r\nconst radioStyles = theme => ({\r\n    root: {\r\n        color: '#CCD1D6',\r\n        display: 'flex',\r\n        '&$checked': {\r\n            color: '#008FF7',\r\n            border: 'none'\r\n        },\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        }\r\n    },\r\n    checked: {},\r\n})\r\n\r\nconst CustomRadio = withStyles(radioStyles)(Radio);\r\n\r\nclass RoomItem extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Button className=\"room-item\" title={`Room ${this.props.room.title}`} onClick={() => {\r\n                this.props.selectRoom(this.props.room._id)\r\n            }}>\r\n                <Avatar style={{minWidth: 40, maxWidth: 40, height: 40, fontSize: 14, fontWeight: 600, backgroundColor: `rgb(${this.props.room.color})`}} name={this.props.room.title.charAt(0)} />\r\n                <div style={{\r\n                    flexGrow: 1,\r\n                    minWidth: 0,\r\n                    maxWidth: '100%',\r\n                    paddingRight: 10\r\n                }}>\r\n                    <p>{this.props.room.isPrivate && <LockOutlinedIcon />}<span>{this.props.room.title}</span></p>\r\n                </div>\r\n                <CustomRadio\r\n                    checked={this.props.selectRoomId === this.props.room._id}\r\n                />\r\n            </Button>\r\n        </>\r\n    }\r\n}\r\n\r\nclass Settings extends React.Component {\r\n    state = {\r\n        error: false,\r\n        errors: [],\r\n        isFetching: false,\r\n        warning: ''\r\n    }\r\n\r\n    onSubmit(e) {\r\n        this.setState({error: false, errors: []})\r\n\r\n        fetch(`${urlApi}/api/user/send-warning`, {\r\n            method: \"post\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.props.user.apiToken}`,\r\n            },\r\n            body: JSON.stringify({\r\n                warning: this.state.warning,\r\n                userId: this.props.userId,\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.history.push({\r\n                search: `?user=${this.props.userId}`\r\n            })\r\n            toast.success(\"Warning sent\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Modal\r\n            isOpen={true}\r\n            onRequestClose={() => {this.props.close()}}\r\n            style={customStylesModal}\r\n            contentLabel=\"Contacts\"\r\n        >   \r\n            <h2 className=\"modal-title\">Send warning</h2>\r\n\r\n            <textarea \r\n                className=\"input-field\"\r\n                onChange={(e) => {\r\n                    this.setState({warning: e.target.value})\r\n                }}\r\n                value={this.state.warning}\r\n            ></textarea>\r\n\r\n            {!!this.state.warning && <button className=\"button-blue\" onClick={() => {\r\n                this.onSubmit()\r\n            }} style={{width: 'max-content', marginTop: 25}}>Send</button>}\r\n            {!this.state.warning && <button className=\"button-gray\" onClick={() => {\r\n                this.props.history.goBack()\r\n            }} style={{width: 'max-content', marginTop: 25}}>{this.props.langProps.back}</button>}\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users,\r\n        user: state.user,\r\n        rooms: state.rooms\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        usersActions: bindActionCreators(usersActions, dispatch),\r\n        roomsActions: bindActionCreators(roomsActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default withLang(languages)(connect(mapStateToProps, mapDispatchToProps)(withRouter(withCookies(Settings))))","// App\r\nimport React from 'react'\r\nimport Modal from 'react-modal';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from '../Redux/store';\r\nimport { USER_SET_WARNING } from '../Redux/constants';\r\n\r\nconst customStylesModal = {\r\n    overlay: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.25)',\r\n        zIndex: 999\r\n    },\r\n    content : {\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        minWidth              : '300px',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)',\r\n        borderRadius          : '10px',\r\n        boxShadow             : '0px 5px 30px rgba(0, 0, 0, 0.16)',\r\n        textAlign             : 'center'\r\n    }\r\n};\r\n\r\nclass Warning extends React.Component {\r\n    render() {\r\n        return <Modal\r\n            isOpen={this.props.isOpen}\r\n            style={customStylesModal}\r\n            contentLabel=\"Warning\"\r\n        >\r\n            <ReportProblemOutlinedIcon style={{color: '#FF3333', fontSize: 60}} />\r\n\r\n            <h2 className=\"modal-title\">Warning</h2>\r\n\r\n            <p className=\"modal-text\">{this.props.user.warning}</p>\r\n            \r\n            <button className=\"button-blue\" type=\"submit\" style={{width: 'max-content'}} onClick={() => {\r\n                store.dispatch({\r\n                    type: USER_SET_WARNING,\r\n                    payload: false\r\n                })\r\n            }}>Close</button>\r\n        </Modal>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Warning))","// App\r\nimport React from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport CreateRoom from './CreateRoom';\r\nimport qs from 'qs'\r\nimport User from './User';\r\nimport Contacts from './Contacts';\r\nimport CreateDialog from './CreateDialog';\r\nimport { connect } from 'react-redux';\r\nimport Invite from './Invite';\r\nimport EditRoom from './EditRoom';\r\nimport DeleteRoom from './DeleteRoom';\r\nimport Forward from './Forward';\r\nimport { DIALOGS_SET_FORWARD, SLIDER_SET } from '../Redux/constants';\r\nimport Call from './Call';\r\nimport Slider from '../Partials/Chat/Slider';\r\nimport Investments from './Investments';\r\nimport Settings from './Settings';\r\nimport Profile from './Profile';\r\nimport Language from './Language';\r\nimport Mute from './Mute';\r\nimport Unmute from './Unmute';\r\nimport Banroom from './Banroom';\r\nimport Unbanroom from './Unbanroom';\r\nimport SendWaning from './SendWaning';\r\nimport Warning from './Warning';\r\n\r\nclass MainModal extends React.Component {\r\n    state = {\r\n        act: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).act,\r\n        user: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).user,\r\n        modal: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).modal,\r\n        mute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).mute,\r\n        unmute: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unmute,\r\n        banroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).banroom,\r\n        unbanroom: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n        sendwarning: qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.history.listen((location) => {\r\n            this.setState({\r\n                act: qs.parse(location.search, { ignoreQueryPrefix: true }).act,\r\n                user: qs.parse(location.search, { ignoreQueryPrefix: true }).user,\r\n                modal: qs.parse(location.search, { ignoreQueryPrefix: true }).modal,\r\n                mute: qs.parse(location.search, { ignoreQueryPrefix: true }).mute,\r\n                unmute: qs.parse(location.search, { ignoreQueryPrefix: true }).unmute,\r\n                banroom: qs.parse(location.search, { ignoreQueryPrefix: true }).banroom,\r\n                unbanroom: qs.parse(location.search, { ignoreQueryPrefix: true }).unbanroom,\r\n                sendwarning: qs.parse(location.search, { ignoreQueryPrefix: true }).sendwarning,\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return <>\r\n            <CreateRoom isOpen={this.state.act === 'newRoom'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <CreateDialog isOpen={this.state.act === 'newChat'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.user && <User userId={this.state.user} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {!!this.props.user.warning && <Warning isOpen={!!this.props.user.warning} />}\r\n\r\n            {this.state.mute && this.props.user.role !== 'user' && <Mute userId={this.state.mute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unmute && this.props.user.role !== 'user' && <Unmute userId={this.state.unmute} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.banroom && this.props.user.role !== 'user' && <Banroom userId={this.state.banroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.unbanroom && this.props.user.role !== 'user' && <Unbanroom userId={this.state.unbanroom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.sendwarning && this.props.user.role !== 'user' && <SendWaning userId={this.state.sendwarning} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Contacts isOpen={this.state.modal === 'contacts'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            <Settings isOpen={this.state.modal === 'settings'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n            \r\n            {this.state.modal === 'profile' && <Profile isOpen={this.state.modal === 'profile'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.modal === 'language' && <Language isOpen={this.state.modal === 'language'} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Invite isOpen={this.state.act === 'invite' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />\r\n\r\n            {this.state.act === 'editRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <EditRoom isOpen={this.state.act === 'editRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            {this.state.act === 'deleteRoom' && this.props.rooms.activeRoom && (this.props.user._id === this.props.rooms.activeRoom.ownerId) && <DeleteRoom isOpen={this.state.act === 'deleteRoom' && this.props.rooms.activeRoom} close={() => {\r\n                this.props.history.push({\r\n                    search: \"\"\r\n                })\r\n            }} />}\r\n\r\n            <Forward isOpen={!!this.props.dialogs.forwardMessages.length} close={(status) => {\r\n                this.props.dispatch({\r\n                    type: DIALOGS_SET_FORWARD,\r\n                    payload: []\r\n                })\r\n            }} />\r\n\r\n            {this.state.modal === 'slider' && !!this.props.slider.images.length && <Slider index={this.props.slider.index} images={this.props.slider.images} close={() => {\r\n                this.props.dispatch({\r\n                    type: SLIDER_SET,\r\n                    payload: {\r\n                        images: [],\r\n                        index: 0\r\n                    }\r\n                })\r\n                this.props.history.goBack()\r\n            }} />}\r\n            \r\n            {this.props.match.params.id && this.state.modal === 'investments' && <Investments \r\n                isOpen={this.props.match.params.id && this.state.modal === 'investments'} \r\n                dialogId={this.props.match.params.id} \r\n                close={() => {\r\n                    this.props.history.push({\r\n                        search: \"\"\r\n                    })\r\n                }}\r\n            />}\r\n\r\n            {this.props.call.user && <Call isOpen={true} />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rooms: state.rooms,\r\n        user: state.user,\r\n        dialogs: state.dialogs,\r\n        call: state.call,\r\n        slider: state.slider\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(MainModal))","// App\r\nimport React from \"react\";\r\nimport { withCookies } from \"react-cookie\";\r\nimport SocketController from '../Controllers/SocketController'\r\n\r\n// Router\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport routes from './config'\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport * as userActions from \"../Redux/actions/user\";\r\nimport * as usersActions from \"../Redux/actions/users\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nimport NoMatch from '../Pages/NoMatch'\r\nimport { setTitle } from \"../Controllers/FunctionsController\";\r\nimport {urlApi} from '../config'\r\nimport MainModal from \"../Modals/MainModal\";\r\nclass AppRouter extends React.Component {\r\n  state = {\r\n    isRender: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      setTitle(this.props.history.location.pathname, routes);\r\n    });\r\n    \r\n    setTitle(this.props.history.location.pathname, routes);\r\n    \r\n    const { cookies } = this.props;\r\n    let apiToken = cookies.get(\"apiToken\");\r\n\r\n    if (apiToken) {\r\n      fetch(`${urlApi}/api/user/me`, {\r\n        method: \"get\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${apiToken}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then(({user, dialogs, noReadCount, noReadNotifications}) => {\r\n          SocketController.init(apiToken)\r\n          this.props.userActions.loginUser(user, dialogs, noReadCount, noReadNotifications, apiToken);\r\n          this.setState({isRender: true})\r\n        })\r\n        .catch(() => {\r\n          localStorage.setItem('drafts', JSON.stringify([]));\r\n          this.setState({isRender: true})\r\n        })\r\n    } else {\r\n      localStorage.setItem('drafts', JSON.stringify([]));\r\n      this.setState({isRender: true})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.state.isRender && (<>\r\n      <Switch>\r\n          {routes.map((route, index) => {\r\n              switch (route.type) {\r\n                  case 'auth':\r\n                      return <this.AuthRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.AuthRoute>\r\n\r\n                  case 'user':\r\n                      return <this.PrivateRoute\r\n                          key={index}\r\n                          path={route.path}\r\n                          exact={route.exact}\r\n                      >\r\n                          <route.component />\r\n                      </this.PrivateRoute>\r\n              \r\n                  default:\r\n                      return false\r\n              }            \r\n          })}\r\n\r\n          {/* Auth routes */}\r\n          {/* <this.AuthRoute exact path=\"/reset/:token\" component={Reset}/> */}\r\n          {/* Auth routes end */}\r\n\r\n          <Route component={NoMatch} />\r\n      </Switch></>\r\n    );\r\n  }\r\n\r\n  PrivateRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          this.props.user.isAuth ? (\r\n            (<>\r\n              {children}\r\n              <MainModal />\r\n            </>)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  AuthRoute = ({ children, ...rest }) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          !this.props.user.isAuth ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    userActions: bindActionCreators(userActions, dispatch),\r\n    usersActions: bindActionCreators(usersActions, dispatch),\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withCookies(withRouter(AppRouter)));\r\n","// App\nimport React from 'react'\nimport './App.css'\nimport {PageSettings} from './Pages/PageSettings'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MultiLang } from \"react-multi-language\";\n\n// Partials\nimport UserSidebar from './Partials/UserSidebar'\n\n// Router\nimport AppRouter from './Router'\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggleHeader = (value) => {\n            this.setState({userHeader: value})\n        }\n\n        this.state = {\n            userHeader: false,\n            toggleHeader: this.toggleHeader\n        }\n    }\n\n    \n\n    render() {\n        return (\n            <PageSettings.Provider value={this.state}>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        {this.props.user.isAuth && <UserSidebar show={this.state.userHeader} />}\n                        <AppRouter />\n                        <MultiLang lang={this.props.user.isAuth ? this.props.user.lang : 'en'}/>\n                    </div>\n                </div>\n            </PageSettings.Provider>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// App\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js/features/array/find';\nimport 'core-js/features/array/includes';\nimport 'core-js/features/number/is-nan';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { CookiesProvider } from 'react-cookie'\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\"\nimport Modal from \"react-modal\";\nimport { ToastContainer } from 'react-toastify';\n\n\n// Redux\nimport store from './Redux/store'\nimport { Provider } from 'react-redux'\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <Router>\n                <App />\n                <ToastContainer />\n            </Router>\n        </Provider>\n    </CookiesProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}